{"version":3,"sources":["../../../../src/backward/Widgets/Container.js"],"names":["Container","Array","isArray","props","children","find","item","type","displayName","filter","flex","defaultProps","style","_root","c","prepareRootProps","renderHeader","renderContent","renderFooter","propTypes","PropTypes","object","StyledContainer"],"mappings":"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","file":"Container.js","sourcesContent":["/* @flow */\n\nimport React from 'react';\nimport { View, Image, ScrollView } from 'react-native';\nimport { connectStyle } from '@shoutem/theme';\nimport { Footer } from '../../basic/Footer';\nimport { Fab } from '../../basic/Fab';\nimport _ from 'lodash';\nimport mapPropsToStyleNames from '../../Utils/mapPropsToStyleNames';\nimport { ViewNB } from './View';\nimport { Header } from './Header';\nimport { Content } from './Content';\nimport NativeBaseComponent from '../Base/NativeBaseComponent';\nimport computeProps from '../../Utils/computeProps';\n\nclass Container extends NativeBaseComponent {\n\n  propTypes: {\n        style : React.PropTypes.object\n    }\n\n  renderHeader() {\n    if (Array.isArray(this.props.children)) {\n      return _.find(this.props.children, (item) => {\n        if (item && (item.type.displayName === 'Styled(Header)' || item.type.displayName === 'Styled(SHeader)')) {\n          return true;\n        }\n      });\n    } else if (this.props.children && (this.props.children.type.displayName === 'Styled(Header)' || this.props.children.type.displayName === 'Styled(SHeader)')) {\n      return this.props.children;\n    }\n  }\n  renderContent() {\n    if (Array.isArray(this.props.children)) {\n      return _.filter(this.props.children, (item) => {\n        if (item && (item.type.displayName === 'Styled(ViewNB)' || item.type.displayName ===\n          'Styled(Content)' || item.type === Image || item.type === View ||\n          item.type === ScrollView || item.type.displayName === 'Styled(Fab)')) {\n          return true;\n        }\n      });\n    } else if (this.props.children && (this.props.children.type.displayName === 'Styled(Content)' ||\n       this.props.children.type.displayName === 'Styled(ViewNB)' ||\n       this.props.children.type === View || this.props.children.type === Image ||\n       this.props.children.type === ScrollView)) {\n      return this.props.children;\n    }\n  }\n  renderFooter() {\n    if (Array.isArray(this.props.children)) {\n      return _.find(this.props.children, (item) => {\n        if (item && item.type.displayName === 'Styled(Footer)') {\n          return true;\n        }\n      });\n    } else if (this.props.children && this.props.children.type.displayName === 'Styled(Footer)') {\n      return this.props.children;\n    }\n  }\n  prepareRootProps() {\n    const type = {\n      flex: 1,\n    };\n\n    const defaultProps = {\n      style: type,\n    };\n\n    return computeProps(this.props, defaultProps);\n  }\n  render() {\n    return (\n      <View ref={c => this._root = c} {...this.prepareRootProps()}>\n\n        {this.renderHeader()}\n\n        {this.renderContent()}\n\n        {this.renderFooter()}\n\n      </View>\n    );\n  }\n\n}\n\nContainer.propTypes = {\n  ...View.propTypes,\n  style: React.PropTypes.object,\n};\n\nconst StyledContainer = connectStyle('NativeBase.Container', {}, mapPropsToStyleNames)(Container);\n\nexport {\n  StyledContainer as Container,\n};\n"]}