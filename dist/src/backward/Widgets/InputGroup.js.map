{"version":3,"sources":["../../../../src/backward/Widgets/InputGroup.js"],"names":["InputGroup","newChildren","childrenArray","Children","toArray","props","children","iconElement","remove","item","type","displayName","buttonElement","inp","find","inputProps","clonedInp","cloneElement","key","toolbar","OS","undefined","editable","disabled","Array","isArray","iconRight","length","push","_root","c","renderChildren","propTypes","mapPropsToStyleNames","styleNames","keys","values","forEach","index","border","borderType","StyledInputGroup"],"mappings":"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","file":"InputGroup.js","sourcesContent":["/* @flow */\n\nimport React from 'react';\nimport { View, Platform } from 'react-native';\nimport { connectStyle } from '@shoutem/theme';\nimport _ from 'lodash';\nimport NativeBaseComponent from '../Base/NativeBaseComponent';\n\nclass InputGroup extends NativeBaseComponent {\n\n  propTypes: {\n        borderType : React.PropTypes.string,\n        toolbar : React.PropTypes.bool,\n        atoolbar : React.PropTypes.bool,\n        iconRight : React.PropTypes.bool,\n        success : React.PropTypes.bool,\n        disabled : React.PropTypes.bool,\n        error : React.PropTypes.bool,\n        style : React.PropTypes.object\n    }\n\n\n  renderChildren() {\n    const newChildren = [];\n    const childrenArray = React.Children.toArray(this.props.children);\n\n    let iconElement = [];\n    iconElement = _.remove(childrenArray, (item) => {\n      if (item.type.displayName === 'Styled(Icon)') {\n        return true;\n      }\n    });\n\n    let buttonElement = [];\n\n    buttonElement = _.remove(childrenArray, (item) => {\n      if (item.type.displayName === 'Styled(Button)') {\n        return true;\n      }\n    });\n\n    const inp = _.find(childrenArray, (item) => {\n      if (item && (item.type.displayName === 'Styled(Input)' || item.type.displayName === 'Styled(Picker)')) {\n        return true;\n      }\n    });\n\n    if (inp) {\n      let inputProps = {};\n      inputProps = inp.props;\n      var clonedInp = React.cloneElement(\n         inp,\n        {\n          ...this.inputProps,\n          key: 'inp',\n          toolbar: (this.props.toolbar && Platform.OS === 'ios') ? true : undefined,\n          editable: this.props.disabled ? false : undefined,\n        }\n       );\n    }\n\n    if (Array.isArray(this.props.children)) {\n      if (this.props.iconRight && iconElement.length > 0) {\n        if (clonedInp) {\n          newChildren.push(clonedInp);\n        }\n        newChildren.push(React.cloneElement(iconElement[0]));\n      } else if (buttonElement.length > 0) {\n        if (iconElement.length > 0) {\n          newChildren.push(React.cloneElement(\n            iconElement[0],\n            {\n              key: 'icon0',\n            }\n          ));\n        }\n\n        if (clonedInp) {\n          newChildren.push(clonedInp);\n        }\n        newChildren.push(React.cloneElement(\n          buttonElement[0],\n          {\n            key: 'button1',\n          }\n        ));\n      } else if (iconElement.length > 1) {\n        newChildren.push(React.cloneElement(\n            iconElement[0],\n          {\n            key: 'icon0',\n          }\n          ));\n        if (clonedInp) {\n          newChildren.push(clonedInp);\n        }\n        newChildren.push(React.cloneElement(\n            iconElement[1],\n          {\n            key: 'icon1',\n          }\n          ));\n      } else {\n        if (iconElement.length > 0) {\n          newChildren.push(React.cloneElement(iconElement[0]));\n        }\n        if (clonedInp) {\n          newChildren.push(clonedInp);\n        }\n      }\n    } else if (clonedInp) {\n      newChildren.push(clonedInp);\n    }\n\n    return newChildren;\n  }\n\n  render() {\n    return (\n      <View ref={c => this._root = c} {...this.props} >\n        {this.renderChildren()}\n      </View>\n    );\n  }\n}\n\nInputGroup.propTypes = {\n  ...View.propTypes,\n};\n\n\nmapPropsToStyleNames = (styleNames, props) => {\n  const keys = _.keys(props);\n  const values = _.values(props);\n\n  _.forEach(keys, (key, index) => {\n    if (values[index]) { styleNames.push(key); }\n  });\n  const border = (props.borderType ? props.borderType : 'underline');\n  styleNames.push(border);\n\n  return styleNames;\n};\n\n\nconst StyledInputGroup = connectStyle('NativeBase.InputGroup', {}, mapPropsToStyleNames)(InputGroup);\n\nexport {\n  StyledInputGroup as InputGroup,\n};\n"]}