{"version":3,"sources":["../../../../src/backward/Widgets/CardItem.js"],"names":["CardItem1","listItem","flexDirection","thumbnailPresent","gravatarPresent","iconPresent","notePresent","ifShowCase","fullImage","alignSelf","height","right","flex","paddingLeft","backgroundColor","right2","alignItems","justifyContent","right3","thumbnailComponentPresent","Children","forEach","props","children","child","type","displayName","gravatarComponentPresent","imagePresent","iconComponentPresent","buttonComponentPresent","cardBody","note","squareThumbs","square","defaultProps","style","getInitialStyle","newChildren","childrenArray","toArray","filter","Array","isArray","push","margin","OS","map","i","cloneElement","getChildProps","key","getRightStyle","slice","c","_root","prepareRootProps","button","renderChildren","propTypes","PropTypes","object","header","bool","footer","StyledCardItem1"],"mappings":"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","file":"CardItem.js","sourcesContent":["/* @flow */\n\nimport React from 'react';\nimport { TouchableOpacity, View, Platform, Image } from 'react-native';\nimport { connectStyle } from '@shoutem/theme';\nimport mapPropsToStyleNames from '../../Utils/mapPropsToStyleNames';\nimport NativeBaseComponent from '../Base/NativeBaseComponent';\nimport computeProps from '../../Utils/computeProps';\n\nclass CardItem1 extends NativeBaseComponent {\n\n    getInitialStyle() {\n        return {\n            listItem: {\n                flexDirection: (this.thumbnailPresent() || this.gravatarPresent() || this.iconPresent() || (this.notePresent() && this.ifShowCase())) ? 'row' : 'column',\n            },\n            fullImage: {\n                alignSelf: 'stretch',\n                height: this.ifShowCase() ? 120 : 300\n            },\n        };\n    }\n  getRightStyle() {\n    return {\n      right: {\n        flex: 1,\n        paddingLeft: 10,\n        backgroundColor: 'transparent',\n      },\n      right2: {\n        flex: 1,\n        flexDirection: 'row',\n        paddingLeft: 10,\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        backgroundColor: 'transparent',\n      },\n      right3: {\n        flex: 1,\n        flexDirection: 'column',\n        paddingLeft: 10,\n        justifyContent: 'flex-start',\n        backgroundColor: 'transparent',\n      },\n    };\n  }\n\n  thumbnailPresent() {\n    let thumbnailComponentPresent = false;\n    React.Children.forEach(this.props.children, (child) => {\n      if (child && child.type.displayName === 'Styled(Thumbnail)') {\n        thumbnailComponentPresent = true;\n      }\n    });\n    return thumbnailComponentPresent;\n  }\n\n  gravatarPresent() {\n    let gravatarComponentPresent = false;\n    React.Children.forEach(this.props.children, (child) => {\n      if (child.type.displayName === 'Styled(Gravatar)') { gravatarComponentPresent = true; }\n    });\n\n    return gravatarComponentPresent;\n  }\n\n  imagePresent() {\n    let imagePresent = false;\n    React.Children.forEach(this.props.children, (child) => {\n      if (child && child.type === Image) {\n        imagePresent = true;\n      }\n    });\n\n    return imagePresent;\n  }\n\n  iconPresent() {\n    let iconComponentPresent = false;\n    React.Children.forEach(this.props.children, (child) => {\n      if (child && child.type.displayName === 'Styled(Icon)') {\n        iconComponentPresent = true;\n      }\n    });\n\n    return iconComponentPresent;\n  }\n\n  buttonPresent() {\n    let buttonComponentPresent = false;\n    React.Children.forEach(this.props.children, (child) => {\n      if (child && child.type.displayName === 'Styled(Button)') {\n        buttonComponentPresent = true;\n      }\n    });\n\n    return buttonComponentPresent;\n  }\n\n  ifShowCase() {\n    return !!this.props.cardBody;\n  }\n\n  notePresent() {\n    let notePresent = false;\n\n    React.Children.forEach(this.props.children, (child) => {\n      if (child && (child.type.displayName === 'Styled(Text)') && child.props.note) {\n        notePresent = true;\n      }\n    });\n\n    return notePresent;\n  }\n\n  squareThumbs() {\n    let squareThumbs = false;\n    if (this.thumbnailPresent() || this.gravatarPresent()) {\n      React.Children.forEach(this.props.children, (child) => {\n        if (child && child.props.square) {\n          squareThumbs = true;\n        }\n      });\n    }\n\n    return squareThumbs;\n  }\n\n  getChildProps(child) {\n    let defaultProps = {};\n      if(child.type === Image)\n      defaultProps = {\n        style: this.getInitialStyle().fullImage\n      };\n    return computeProps(child.props, defaultProps);\n  }\n\n\n  renderChildren() {\n    let newChildren = [];\n    let childrenArray = React.Children.toArray(this.props.children);\n    childrenArray = childrenArray.filter(child => !!child);\n    if ((!this.thumbnailPresent()) && !this.iconPresent()) {\n      if (this.imagePresent() && !Array.isArray(this.props.children)) {\n        newChildren.push(<View key=\"img\" style={{ flex: 1, margin: (Platform.OS === 'ios') ? -10 : -12 }}>\n          {childrenArray.map((child, i) =>\n                React.cloneElement(child, { ...this.getChildProps(child), key: i })\n            )}\n        </View>\n          );\n      } else {\n        newChildren.push(\n              childrenArray.map((child, i) =>\n                  React.cloneElement(child, { ...this.getChildProps(child), key: i })\n              )\n            );\n      }\n    } else {\n      newChildren = [];\n      if (!Array.isArray(this.props.children)) {\n        newChildren.push(\n          <View key=\"cardItem1\" style={{ justifyContent: 'flex-start' }}>\n            {React.cloneElement(childrenArray)}\n          </View>\n                );\n      } else {\n        newChildren.push(\n                    React.cloneElement(childrenArray[0], this.getChildProps(childrenArray[0])));\n        newChildren.push(\n          <View key=\"cardItem1\" style={this.notePresent() ? this.getRightStyle().right : this.squareThumbs() ? this.getRightStyle().right3 : this.getRightStyle().right2}>\n            {childrenArray.slice(1).map((child, i) =>\n                            React.cloneElement(child, { key: i })\n                        )}\n          </View>\n                );\n      }\n    }\n\n    return newChildren;\n  }\n  prepareRootProps() {\n    let defaultProps = {};\n\n    defaultProps = {\n      style: this.getInitialStyle().listItem\n    };\n\n    return computeProps(this.props, defaultProps);\n  }\n\n\n  render() {\n    return (\n      <TouchableOpacity\n        ref={(c) => { this._root = c; }} {...this.prepareRootProps()}\n        activeOpacity={(this.props.button) ? 0.2 : 1}\n      >\n        {this.renderChildren()}\n      </TouchableOpacity>\n    );\n  }\n}\n\nCardItem1.propTypes = {\n  ...TouchableOpacity.propTypes,\n  style: React.PropTypes.object,\n  header: React.PropTypes.bool,\n  cardBody: React.PropTypes.bool,\n  footer: React.PropTypes.bool,\n  button: React.PropTypes.bool,\n};\n\nconst StyledCardItem1 = connectStyle('NativeBase.CardItem1', {}, mapPropsToStyleNames)(CardItem1);\n\nexport {\n  StyledCardItem1 as CardItem1,\n};\n"]}