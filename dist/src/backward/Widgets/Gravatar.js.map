{"version":3,"sources":["../../../../src/backward/Widgets/Gravatar.js"],"names":["GRAVATAR_URI","Gravatar","gravatar","borderRadius","props","size","width","height","resizeMode","contain","undefined","gravatarStyle","circular","square","defaultProps","style","merge","getInitialStyle","prepareRootProps","uri","email","_root","c","propTypes","PropTypes","string","isRequired","object","number","bool","StyledGravatar"],"mappings":";;AAEA,4B;AACA;AACA;AACA,8B;AACA,sC;AACA,sE;AACA,iE;AACA,sD;;AAEA,GAAMA,cAAe,kCAArB,C;;AAEMC,Q;;;AAGc;AAChB,MAAO;AACLC,SAAU;AACRC,aAAc,KAAKC,KAAL,CAAWC,IAAX,CAAkB,KAAKD,KAAL,CAAWC,IAAX,CAAkB,CAApC,CAAwC,EAD9C;AAERC,MAAO,KAAKF,KAAL,CAAWC,IAAX,CAAkB,KAAKD,KAAL,CAAWC,IAA7B,CAAoC,EAFnC;AAGRE,OAAQ,KAAKH,KAAL,CAAWC,IAAX,CAAkB,KAAKD,KAAL,CAAWC,IAA7B,CAAoC,EAHpC;AAIRG,WAAY,KAAKJ,KAAL,CAAWK,OAAX,CAAqB,SAArB,CAAiCC,SAJrC,CADL,CAAP;;;AAQD,C;;AAEkB;AACjB,GAAMC,eAAgB,EAAtB;AACA,GAAI,KAAKP,KAAL,CAAWQ,QAAf,CAAyB;AACvBD,cAAcL,KAAd,CAAsB,KAAKF,KAAL,CAAWC,IAAjC;AACAM,cAAcJ,MAAd,CAAuB,KAAKH,KAAL,CAAWC,IAAlC;AACAM,cAAcR,YAAd,CAA6B,KAAKC,KAAL,CAAWC,IAAX,CAAkB,CAA/C;AACD,CAJD,IAIO,IAAI,KAAKD,KAAL,CAAWS,MAAf,CAAuB;AAC5BF,cAAcL,KAAd,CAAsB,KAAKF,KAAL,CAAWC,IAAjC;AACAM,cAAcJ,MAAd,CAAuB,KAAKH,KAAL,CAAWC,IAAlC;AACAM,cAAcR,YAAd,CAA6B,CAA7B;AACD;;AAED,GAAMW,cAAe;AACnBC,MAAO,iBAAEC,KAAF,CAAQ,KAAKC,eAAL,GAAuBf,QAA/B,CAAyCS,aAAzC,CADY,CAArB;;;AAIA,MAAO,2BAAa,KAAKP,KAAlB,CAAyBU,YAAzB,CAAP;AACD,C;;AAEQ;AACP,GAAMV,OAAQ,KAAKc,gBAAL,EAAd;;AAEA,GAAMC,KAASnB,aAAe,wBAAI,KAAKI,KAAL,CAAWgB,KAAf,CAAxB,OAAmDhB,MAAMW,KAAN,CAAYR,MAArE;AACA;AACE,2DAAO,IAAK,sBAAK,QAAKc,KAAL,CAAaC,CAAlB,EAAZ,EAAqClB,KAArC,EAA4C,OAAQ,CAAEe,OAAF,CAApD,GADF;;AAGD,C;;;AAGHlB,SAASsB,SAAT;AACK,mBAAMA,SADX;AAEEH,MAAO,gBAAMI,SAAN,CAAgBC,MAAhB,CAAuBC,UAFhC;AAGEX,MAAO,gBAAMS,SAAN,CAAgBG,MAHzB;AAIEtB,KAAM,gBAAMmB,SAAN,CAAgBI,MAJxB;AAKEhB,SAAU,gBAAMY,SAAN,CAAgBK,IAL5B;AAMEhB,OAAQ,gBAAMW,SAAN,CAAgBK,IAN1B;;;AASA,GAAMC,gBAAiB,wBAAa,qBAAb,CAAoC,EAApC,iCAA8D7B,QAA9D,CAAvB,C;;AAEoBA,Q,CAAlB6B,c","file":"Gravatar.js","sourcesContent":["/* @flow */\n\nimport React from 'react';\nimport { Image } from 'react-native';\nimport { connectStyle } from '@shoutem/theme';\nimport _ from 'lodash';\nimport md5 from 'blueimp-md5';\nimport mapPropsToStyleNames from '../../Utils/mapPropsToStyleNames';\nimport NativeBaseComponent from '../Base/NativeBaseComponent';\nimport computeProps from '../../Utils/computeProps';\n\nconst GRAVATAR_URI = 'https://www.gravatar.com/avatar/';\n\nclass Gravatar extends NativeBaseComponent {\n\n\n  getInitialStyle() {\n    return {\n      gravatar: {\n        borderRadius: this.props.size ? this.props.size / 2 : 15,\n        width: this.props.size ? this.props.size : 30,\n        height: this.props.size ? this.props.size : 30,\n        resizeMode: this.props.contain ? 'contain' : undefined,\n      },\n    };\n  }\n\n  prepareRootProps() {\n    const gravatarStyle = {};\n    if (this.props.circular) {\n      gravatarStyle.width = this.props.size;\n      gravatarStyle.height = this.props.size;\n      gravatarStyle.borderRadius = this.props.size / 2;\n    } else if (this.props.square) {\n      gravatarStyle.width = this.props.size;\n      gravatarStyle.height = this.props.size;\n      gravatarStyle.borderRadius = 0;\n    }\n\n    const defaultProps = {\n      style: _.merge(this.getInitialStyle().gravatar, gravatarStyle),\n    };\n\n    return computeProps(this.props, defaultProps);\n  }\n\n  render() {\n    const props = this.prepareRootProps();\n\n    const uri = `${GRAVATAR_URI + md5(this.props.email)}?s=${props.style.height}`;\n    return (\n      <Image ref={c => this._root = c} {...props} source={{ uri }} />\n    );\n  }\n}\n\nGravatar.propTypes = {\n  ...Image.propTypes,\n  email: React.PropTypes.string.isRequired,\n  style: React.PropTypes.object,\n  size: React.PropTypes.number,\n  circular: React.PropTypes.bool,\n  square: React.PropTypes.bool,\n};\n\nconst StyledGravatar = connectStyle('NativeBase.Gravatar', {}, mapPropsToStyleNames)(Gravatar);\nexport {\n  StyledGravatar as Gravatar,\n};\n"]}