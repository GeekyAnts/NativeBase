{"version":3,"sources":["../../../src/basic/ToastContainer.js"],"names":["ToastContainer","props","state","modalVisible","config","setState","text","buttonText","type","position","supportedOrientations","duration","setTimeout","autoHide","console","warn","margin","OS","flex","justifyContent","toastInstance","_root","showToast","propTypes","style","PropTypes","object","StyledToastContainer"],"mappings":";;;AAGA,4B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mE;;;AAGMA,c;AACJ,wBAAYC,KAAZ,CAAmB;AACXA,KADW;AAEjB,MAAKC,KAAL,CAAa;AACXC,aAAc,KADH,CAAb,CAFiB;;AAKlB,C;;;;;AAKmB,oBAATC,OAAS,MAATA,MAAS;AAClB,KAAKC,QAAL,CAAc;AACZF,aAAc,IADF;AAEZG,KAAMF,OAAOE,IAFD;AAGZC,WAAYH,OAAOG,UAHP;AAIZC,KAAMJ,OAAOI,IAJD;AAKZC,SAAUL,OAAOK,QALL;AAMZC,sBAAuBN,OAAOM,qBANlB,CAAd;;AAQA,GAAIN,OAAOO,QAAP,CAAgB,CAApB,CAAuB;AACrBC,WAAW,UAAK;AACd,OAAKP,QAAL,CAAc;AACZF,aAAc,KADF,CAAd;;AAGD,CAJD,CAIGC,OAAOO,QAJV;AAKD;AACF,C;AACmB;AAClB,GAAI,CAAC,KAAKV,KAAL,CAAWY,QAAZ,EAAwB,KAAKZ,KAAL,CAAWU,QAAvC,CAAiD;AAC/CG,QAAQC,IAAR;AACD;AACF,C;AACQ;AACP;AACE;AACE,sBAAuB,KAAKb,KAAL,CAAWQ,qBAAX,EAAoC,IAD7D;AAEE,cAAgB,KAAKR,KAAL,CAAWO,QAAX,EAAqB,QAAtB,CAAkC,OAAlC,CAA4C,MAF7D;AAGE,YAAa,IAHf;AAIE,QAAS,KAAKP,KAAL,CAAWC,YAJtB;AAKE,eAAgB,yBAAM;AACpB,OAAKE,QAAL,CAAc;AACZF,aAAc,KADF,CAAd;;AAGD,CATH;;AAWE,iDAAM,MAAO;AACTa,OAAS,sBAASC,EAAT,GAAc,KAAf,CAAwB,EAAxB,CAA6B,CAD5B;AAETC,KAAM,CAFG;AAGTC,eAAiB,KAAKjB,KAAL,CAAWO,QAAX,GAAsB,KAAvB,CAAgC,YAAhC,CAAgD,KAAKP,KAAL,CAAWO,QAAX,GAAsB,QAAvB,CAAmC,UAAnC,CAAiD,KAAKP,KAAL,CAAWO,QAAX,GAAsB,QAAvB,CAAmC,QAAnC,CAA8C,YAHpJ,CAAb;AAIE;AACE,OAAS,KAAKP,KAAL,CAAWM,IAAX,EAAmB,QAApB,CAAgC,IAAhC,CAAuC,KADjD;AAEE,QAAU,KAAKN,KAAL,CAAWM,IAAX,EAAmB,SAApB,CAAiC,IAAjC,CAAwC,KAFnD;AAGE,QAAU,KAAKN,KAAL,CAAWM,IAAX,EAAmB,SAApB,CAAiC,IAAjC,CAAwC,KAHnD;AAIE,8CAAO,KAAKN,KAAL,CAAWI,IAAlB,CAJF;AAKI,KAAKJ,KAAL,CAAWK,UAAZ,EAA2B,8CAAQ,QAAS,kBAAM;AAC/C,OAAKF,QAAL,CAAc;AACZF,aAAc,KADF,CAAd;;AAGD,CAJyB;AAK1B,8CAAO,KAAKD,KAAL,CAAWK,UAAlB,CAL0B,CAL9B,CAJF,CAXF,CADF;;;;;;;AAiCD,C,0CA3DwB,IAATH,OAAS,oCACvB,KAAKgB,aAAL,CAAmBC,KAAnB,CAAyBC,SAAzB,CAAmC,CAAClB,aAAD,CAAnC,EACD,C;;;AA4DHJ,eAAeuB,SAAf;AACK,kBAAKA,SADV;AAEEC,MAAO,gBAAMC,SAAN,CAAgBC,MAFzB;;;AAKA,GAAMC,sBAAuB,yCAAa,2BAAb,CAA0C,EAA1C,iCAAoE3B,cAApE,CAA7B,C;;;AAG0BA,c,CAAxB2B,oB","file":"ToastContainer.js","sourcesContent":["/* @flow */\n\n\nimport React, { Component } from 'react';\nimport { View, Modal, Platform } from 'react-native';\nimport { connectStyle } from 'native-base-shoutem-theme';\nimport { Text } from './Text';\nimport { Button } from './Button';\nimport { ViewNB } from './View';\nimport { Toast } from './Toast';\nimport mapPropsToStyleNames from '../Utils/mapPropsToStyleNames';\n\n\nclass ToastContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalVisible: false\n    }\n  }\n  static toastInstance;\n  static show({...config}) {\n    this.toastInstance._root.showToast({config});\n  }\n  showToast({config}) {\n    this.setState({\n      modalVisible: true,\n      text: config.text,\n      buttonText: config.buttonText,\n      type: config.type,\n      position: config.position,\n      supportedOrientations: config.supportedOrientations\n    });\n    if (config.duration>0) {\n      setTimeout(()=> {\n        this.setState({\n          modalVisible: false\n        });\n      }, config.duration);\n    }\n  }\n  componentDidMount() {\n    if (!this.props.autoHide && this.props.duration) {\n      console.warn(`It's not recommended to set autoHide false with duration`);\n    }\n  }\n  render() {\n    return (\n      <Modal\n        supportedOrientations={this.state.supportedOrientations ||Â null}\n        animationType={(this.state.position=='bottom') ? \"slide\" : \"fade\"}\n        transparent={true}\n        visible={this.state.modalVisible}\n        onRequestClose={() => {\n          this.setState({\n            modalVisible: false\n          });\n        }}\n        >\n        <View style={{\n            margin: (Platform.OS==='ios') ? 20 : 0,\n            flex: 1,\n            justifyContent: (this.state.position==='top') ? 'flex-start' : (this.state.position==='bottom') ? 'flex-end' : (this.state.position==='center') ? 'center' : 'flex-start'}}>\n          <Toast\n            danger={(this.state.type == 'danger') ? true : false}\n            success={(this.state.type == 'success') ? true : false}\n            warning={(this.state.type == 'warning') ? true : false}>\n            <Text>{this.state.text}</Text>\n            {(this.state.buttonText) && <Button onPress={() => {\n                this.setState({\n                  modalVisible: false\n                });\n              }}>\n              <Text>{this.state.buttonText}</Text>\n            </Button>}\n\n          </Toast>\n        </View>\n      </Modal>\n    );\n  }\n}\n\nToastContainer.propTypes = {\n  ...View.propTypes,\n  style: React.PropTypes.object,\n};\n\nconst StyledToastContainer = connectStyle('NativeBase.ToastContainer', {}, mapPropsToStyleNames)(ToastContainer);\n\nexport {\n  StyledToastContainer as ToastContainer,\n};\n"]}