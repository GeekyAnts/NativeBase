{"version":3,"sources":["../../../src/basic/ToastContainer.js"],"names":["POSITION","ABSOLUTE","BOTTOM","TOP","ToastContainer","config","toastInstance","_root","showToast","getModalState","closeToast","props","state","fadeAnim","Animated","Value","keyboardHeight","isKeyboardVisible","modalVisible","keyboardDidHide","bind","keyboardDidShow","Keyboard","addListener","position","opacity","width","elevation","paddingHorizontal","Platform","OS","PLATFORM","IOS","top","undefined","bottom","getTop","buttonText","trim","length","setState","e","endCoordinates","height","text","getButtonText","type","supportedOrientations","style","buttonTextStyle","buttonStyle","textStyle","onClose","closeTimeout","clearTimeout","duration","setTimeout","timing","toValue","start","reason","closeModal","getToastStyle","Component","propTypes","ViewPropTypes","StyledToastContainer","mapPropsToStyleNames"],"mappings":"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","file":"ToastContainer.js","sourcesContent":["/* eslint-disable class-methods-use-this */\r\nimport React, { Component } from 'react';\r\nimport { Keyboard, Platform, Animated, ViewPropTypes } from 'react-native';\r\nimport { connectStyle } from 'native-base-shoutem-theme';\r\n\r\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\r\nimport { PLATFORM } from '../theme/variables/commonColor';\r\n\r\nimport { Text } from './Text';\r\nimport { Button } from './Button';\r\nimport { Toast } from './Toast';\r\n\r\nconst POSITION = {\r\n  ABSOLUTE: 'absolute',\r\n  BOTTOM: 'bottom',\r\n  TOP: 'top'\r\n};\r\n\r\nclass ToastContainer extends Component {\r\n  static show({ ...config }) {\r\n    this.toastInstance._root.showToast({ config });\r\n  }\r\n  static hide() {\r\n    if (this.toastInstance._root.getModalState()) {\r\n      this.toastInstance._root.closeToast('functionCall');\r\n    }\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      fadeAnim: new Animated.Value(0),\r\n      keyboardHeight: 0,\r\n      isKeyboardVisible: false,\r\n      modalVisible: false\r\n    };\r\n\r\n    this.keyboardDidHide = this.keyboardDidHide.bind(this);\r\n    this.keyboardDidShow = this.keyboardDidShow.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    Keyboard.addListener('keyboardDidShow', this.keyboardDidShow);\r\n    Keyboard.addListener('keyboardDidHide', this.keyboardDidHide);\r\n  }\r\n\r\n  getToastStyle() {\r\n    return {\r\n      position: POSITION.ABSOLUTE,\r\n      opacity: this.state.fadeAnim,\r\n      width: '100%',\r\n      elevation: 9,\r\n      paddingHorizontal: Platform.OS === PLATFORM.IOS ? 20 : 0,\r\n      top: this.state.position === POSITION.TOP ? 30 : undefined,\r\n      bottom:\r\n        this.state.position === POSITION.BOTTOM ? this.getTop() : undefined\r\n    };\r\n  }\r\n\r\n  getTop() {\r\n    if (Platform.OS === PLATFORM.IOS) {\r\n      if (this.state.isKeyboardVisible) {\r\n        return this.state.keyboardHeight;\r\n      }\r\n      return 30;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  getButtonText(buttonText) {\r\n    if (buttonText) {\r\n      if (buttonText.trim().length === 0) {\r\n        return undefined;\r\n      }\r\n      return buttonText;\r\n    }\r\n    return undefined;\r\n  }\r\n  getModalState() {\r\n    return this.state.modalVisible;\r\n  }\r\n\r\n  static toastInstance;\r\n\r\n  keyboardDidHide() {\r\n    this.setState({\r\n      keyboardHeight: 0,\r\n      isKeyboardVisible: false\r\n    });\r\n  }\r\n\r\n  keyboardDidShow(e) {\r\n    this.setState({\r\n      keyboardHeight: e.endCoordinates.height,\r\n      isKeyboardVisible: true\r\n    });\r\n  }\r\n\r\n  showToast({ config }) {\r\n    this.setState({\r\n      modalVisible: true,\r\n      text: config.text,\r\n      buttonText: this.getButtonText(config.buttonText),\r\n      type: config.type,\r\n      position: config.position ? config.position : POSITION.BOTTOM,\r\n      supportedOrientations: config.supportedOrientations,\r\n      style: config.style,\r\n      buttonTextStyle: config.buttonTextStyle,\r\n      buttonStyle: config.buttonStyle,\r\n      textStyle: config.textStyle,\r\n      onClose: config.onClose\r\n    });\r\n    // If we have a toast already open, cut off its close timeout so that it won't affect *this* toast.\r\n    if (this.closeTimeout) {\r\n      clearTimeout(this.closeTimeout);\r\n    }\r\n    // Set the toast to close after the duration.\r\n    if (config.duration !== 0) {\r\n      const duration = config.duration > 0 ? config.duration : 1500;\r\n      this.closeTimeout = setTimeout(\r\n        this.closeToast.bind(this, 'timeout'),\r\n        duration\r\n      );\r\n    }\r\n    // Fade the toast in now.\r\n    Animated.timing(this.state.fadeAnim, {\r\n      toValue: 1,\r\n      duration: 200\r\n    }).start();\r\n  }\r\n  closeModal(reason) {\r\n    this.setState({\r\n      modalVisible: false\r\n    });\r\n    const { onClose } = this.state;\r\n    if (onClose && typeof onClose === 'function') {\r\n      onClose(reason);\r\n    }\r\n  }\r\n  closeToast(reason) {\r\n    clearTimeout(this.closeTimeout);\r\n    Animated.timing(this.state.fadeAnim, {\r\n      toValue: 0,\r\n      duration: 200\r\n    }).start(this.closeModal.bind(this, reason));\r\n  }\r\n\r\n  render() {\r\n    if (this.state.modalVisible) {\r\n      return (\r\n        <Animated.View style={this.getToastStyle()}>\r\n          <Toast\r\n            style={this.state.style}\r\n            danger={this.state.type === 'danger'}\r\n            success={this.state.type === 'success'}\r\n            warning={this.state.type === 'warning'}\r\n          >\r\n            <Text style={this.state.textStyle}>{this.state.text}</Text>\r\n            {this.state.buttonText && (\r\n              <Button\r\n                style={this.state.buttonStyle}\r\n                onPress={() => this.closeToast('user')}\r\n              >\r\n                <Text style={this.state.buttonTextStyle}>\r\n                  {this.state.buttonText}\r\n                </Text>\r\n              </Button>\r\n            )}\r\n          </Toast>\r\n        </Animated.View>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nToastContainer.propTypes = {\r\n  ...ViewPropTypes\r\n};\r\n\r\nconst StyledToastContainer = connectStyle(\r\n  'NativeBase.ToastContainer',\r\n  {},\r\n  mapPropsToStyleNames\r\n)(ToastContainer);\r\n\r\nexport { StyledToastContainer as ToastContainer };\r\n"]}