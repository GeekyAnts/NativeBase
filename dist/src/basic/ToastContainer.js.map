{"version":3,"sources":["../../../src/basic/ToastContainer.js"],"names":["POSITION","ABSOLUTE","BOTTOM","TOP","ToastContainer","config","toastInstance","_root","showToast","getModalState","closeToast","props","closeModal","setState","modalVisible","onClose","state","reason","fadeAnim","Animated","Value","pan","ValueXY","x","y","keyboardHeight","isKeyboardVisible","keyboardDidHide","bind","keyboardDidShow","_panResponder","PanResponder","create","onMoveShouldSetPanResponderCapture","onPanResponderRelease","evt","dx","timing","toValue","duration","useNativeDriver","start","Keyboard","addListener","removeListener","position","opacity","width","elevation","paddingHorizontal","Platform","OS","PLATFORM","IOS","top","undefined","bottom","getTop","buttonText","trim","length","e","endCoordinates","height","text","getButtonText","type","supportedOrientations","style","buttonTextStyle","buttonStyle","textStyle","swipeDisabled","closeTimeout","clearTimeout","setTimeout","setValue","panHandlers","getToastStyle","transform","translateX","translateY","Component","propTypes","ViewPropTypes","StyledToastContainer","mapPropsToStyleNames"],"mappings":"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","file":"ToastContainer.js","sourcesContent":["/* eslint-disable class-methods-use-this */\nimport React, { Component } from 'react';\nimport { Keyboard, Platform, Animated, PanResponder } from 'react-native';\nimport { ViewPropTypes } from 'deprecated-react-native-prop-types';\nimport { connectStyle } from 'native-base-shoutem-theme';\n\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\nimport { PLATFORM } from '../theme/variables/commonColor';\n\nimport { Text } from './Text';\nimport { Button } from './Button';\nimport { Toast } from './Toast';\n\nconst POSITION = {\n  ABSOLUTE: 'absolute',\n  BOTTOM: 'bottom',\n  TOP: 'top'\n};\n\nclass ToastContainer extends Component {\n  static show({ ...config }) {\n    this.toastInstance._root.showToast({ config });\n  }\n  static hide() {\n    if (this.toastInstance._root.getModalState()) {\n      this.toastInstance._root.closeToast('functionCall');\n    }\n  }\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fadeAnim: new Animated.Value(0),\n      pan: new Animated.ValueXY({ x: 0, y: 0 }),\n      keyboardHeight: 0,\n      isKeyboardVisible: false,\n      modalVisible: false\n    };\n\n    this.keyboardDidHide = this.keyboardDidHide.bind(this);\n    this.keyboardDidShow = this.keyboardDidShow.bind(this);\n    this._panResponder = PanResponder.create({\n      onMoveShouldSetPanResponderCapture: () => true,\n      onPanResponderRelease: (evt, { dx }) => {\n        if (dx !== 0) {\n          Animated.timing(this.state.pan, {\n            toValue: { x: dx, y: 0 },\n            duration: 100,\n            useNativeDriver: false\n          }).start(() => this.closeToast('swipe'));\n        }\n      }\n    });\n  }\n\n  componentDidMount() {\n    Keyboard.addListener('keyboardDidShow', this.keyboardDidShow);\n    Keyboard.addListener('keyboardDidHide', this.keyboardDidHide);\n  }\n\n  componentWillUnmount() {\n    Keyboard.removeListener('keyboardDidShow', this.keyboardDidShow);\n    Keyboard.removeListener('keyboardDidHide', this.keyboardDidHide);\n  }\n\n  getToastStyle() {\n    return {\n      position: POSITION.ABSOLUTE,\n      opacity: this.state.fadeAnim,\n      width: '100%',\n      elevation: 9,\n      paddingHorizontal: Platform.OS === PLATFORM.IOS ? 20 : 0,\n      top: this.state.position === POSITION.TOP ? 30 : undefined,\n      bottom:\n        this.state.position === POSITION.BOTTOM ? this.getTop() : undefined\n    };\n  }\n\n  getTop() {\n    if (Platform.OS === PLATFORM.IOS) {\n      if (this.state.isKeyboardVisible) {\n        return this.state.keyboardHeight;\n      }\n      return 30;\n    }\n    return 0;\n  }\n\n  getButtonText(buttonText) {\n    if (buttonText) {\n      if (buttonText.trim().length === 0) {\n        return undefined;\n      }\n      return buttonText;\n    }\n    return undefined;\n  }\n  getModalState() {\n    return this.state.modalVisible;\n  }\n\n  static toastInstance;\n\n  keyboardDidHide() {\n    this.setState({\n      keyboardHeight: 0,\n      isKeyboardVisible: false\n    });\n  }\n\n  keyboardDidShow(e) {\n    this.setState({\n      keyboardHeight: e.endCoordinates.height,\n      isKeyboardVisible: true\n    });\n  }\n\n  showToast({ config }) {\n    this.setState({\n      modalVisible: true,\n      text: config.text,\n      buttonText: this.getButtonText(config.buttonText),\n      type: config.type,\n      position: config.position ? config.position : POSITION.BOTTOM,\n      supportedOrientations: config.supportedOrientations,\n      style: config.style,\n      buttonTextStyle: config.buttonTextStyle,\n      buttonStyle: config.buttonStyle,\n      textStyle: config.textStyle,\n      onClose: config.onClose,\n      swipeDisabled: config.swipeDisabled || false\n    });\n    // If we have a toast already open, cut off its close timeout so that it won't affect *this* toast.\n    if (this.closeTimeout) {\n      clearTimeout(this.closeTimeout);\n    }\n    // Set the toast to close after the duration.\n    if (config.duration !== 0) {\n      const duration = config.duration > 0 ? config.duration : 1500;\n      this.closeTimeout = setTimeout(\n        this.closeToast.bind(this, 'timeout'),\n        duration\n      );\n    }\n    // Fade the toast in now.\n    Animated.timing(this.state.fadeAnim, {\n      toValue: 1,\n      duration: 200,\n      useNativeDriver: false\n    }).start();\n  }\n  closeModal = reason => {\n    this.setState({\n      modalVisible: false\n    });\n    const { onClose } = this.state;\n    if (onClose && typeof onClose === 'function') {\n      onClose(reason);\n    }\n  };\n  closeToast(reason) {\n    clearTimeout(this.closeTimeout);\n    Animated.timing(this.state.fadeAnim, {\n      toValue: 0,\n      duration: 200,\n      useNativeDriver: false\n    }).start(() => {\n      this.closeModal(reason);\n      this.state.pan.setValue({ x: 0, y: 0 });\n    });\n  }\n\n  render() {\n    if (this.state.modalVisible) {\n      const { x, y } = this.state.pan;\n      return (\n        <Animated.View\n          {...(this.state.swipeDisabled ? {} : this._panResponder.panHandlers)}\n          style={[\n            this.getToastStyle(),\n            { transform: [{ translateX: x }, { translateY: y }] }\n          ]}\n        >\n          <Toast\n            style={[this.state.style]}\n            danger={this.state.type === 'danger'}\n            success={this.state.type === 'success'}\n            warning={this.state.type === 'warning'}\n          >\n            <Text style={this.state.textStyle}>{this.state.text}</Text>\n            {this.state.buttonText && (\n              <Button\n                style={this.state.buttonStyle}\n                onPress={() => this.closeToast('user')}\n              >\n                <Text style={this.state.buttonTextStyle}>\n                  {this.state.buttonText}\n                </Text>\n              </Button>\n            )}\n          </Toast>\n        </Animated.View>\n      );\n    }\n    return null;\n  }\n}\n\nToastContainer.propTypes = {\n  ...ViewPropTypes\n};\n\nconst StyledToastContainer = connectStyle(\n  'NativeBase.ToastContainer',\n  {},\n  mapPropsToStyleNames\n)(ToastContainer);\n\nexport { StyledToastContainer as ToastContainer };\n"]}