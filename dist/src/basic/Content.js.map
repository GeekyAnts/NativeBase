{"version":3,"sources":["../../../src/basic/Content.js"],"names":["Content","props","children","contentContainerStyle","disableKBDismissScroll","keyboardShouldPersistTaps","padder","style","containerStyle","flex","backgroundColor","variables","context","theme","variable","x","y","_scrollview","c","_root","padding","contentPadding","undefined","Component","contextTypes","PropTypes","object","propTypes","bool","string","oneOfType","number","array","StyledContent","mapPropsToStyleNames"],"mappings":"y1BAAA,iEACA,qC,mDACA,4B,2CACA,yCACA,mGAEA,qD,iDACA,mE,yEACA,2C,q7BAEMA,Q,mRAKK,4BAQH,KAAKC,KARF,CAELC,QAFK,QAELA,QAFK,CAGLC,qBAHK,QAGLA,qBAHK,CAILC,sBAJK,QAILA,sBAJK,CAKLC,yBALK,QAKLA,yBALK,CAMLC,MANK,QAMLA,MANK,CAOLC,KAPK,QAOLA,KAPK,CAUP,GAAMC,gBAAiB,CACrBC,KAAM,CADe,CAErBC,gBAAiB,uBAASH,KAAT,EAAgBG,eAFZ,CAAvB,CAKA,GAAMC,WAAY,KAAKC,OAAL,CAAaC,KAAb,CACd,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SADnC,CAEdG,kBAFJ,CAIA,MACE,+BAAC,yBAAD,EAAc,MAAON,cAArB,iDACE,8BAAC,2DAAD,WACE,iCAAkC,KADpC,CAEE,oBAAqBJ,uBAAyB,IAAzB,CAAgC,CAAEW,EAAG,CAAL,CAAQC,EAAG,CAAX,CAFvD,CAGE,0BAA2BX,2BAA6B,SAH1D,CAIE,IAAK,eAAK,CACR,OAAKY,WAAL,CAAmBC,CAAnB,CACA,OAAKC,KAAL,CAAaD,CAAb,CACD,CAPH,EAQM,KAAKjB,KARX,EASE,sBAAuB,CACrB,CAAEmB,QAASd,OAASK,UAAUU,cAAnB,CAAoCC,SAA/C,CADqB,CAErBnB,qBAFqB,CATzB,kDAcGD,QAdH,CADF,CADF,CAoBD,C,qBA5CmBqB,gB,EAAhBvB,O,CACGwB,Y,CAAe,CACpBX,MAAOY,oBAAUC,MADG,C,CA8CxB1B,QAAQ2B,SAAR,CAAoB,CAClBvB,uBAAwBqB,oBAAUG,IADhB,CAElBvB,0BAA2BoB,oBAAUI,MAFnB,CAGlBvB,OAAQmB,oBAAUG,IAHA,CAIlBrB,MAAOkB,oBAAUK,SAAV,CAAoB,CACzBL,oBAAUC,MADe,CAEzBD,oBAAUM,MAFe,CAGzBN,oBAAUO,KAHe,CAApB,CAJW,CAApB,CAWA,GAAMC,eAAgB,yCACpB,oBADoB,CAEpB,EAFoB,CAGpBC,8BAHoB,EAIpBlC,OAJoB,CAAtB,C,QAM0BA,O,CAAjBiC,a","file":"Content.js","sourcesContent":["import { connectStyle } from 'native-base-shoutem-theme';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { SafeAreaView } from 'react-native';\nimport { KeyboardAwareScrollView } from '@codler/react-native-keyboard-aware-scroll-view';\n\nimport variable from '../theme/variables/platform';\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\nimport getStyle from '../utils/getStyle';\n\nclass Content extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n\n  render() {\n    const {\n      children,\n      contentContainerStyle,\n      disableKBDismissScroll,\n      keyboardShouldPersistTaps,\n      padder,\n      style\n    } = this.props;\n\n    const containerStyle = {\n      flex: 1,\n      backgroundColor: getStyle(style).backgroundColor\n    };\n\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n\n    return (\n      <SafeAreaView style={containerStyle}>\n        <KeyboardAwareScrollView\n          automaticallyAdjustContentInsets={false}\n          resetScrollToCoords={disableKBDismissScroll ? null : { x: 0, y: 0 }}\n          keyboardShouldPersistTaps={keyboardShouldPersistTaps || 'handled'}\n          ref={c => {\n            this._scrollview = c;\n            this._root = c;\n          }}\n          {...this.props}\n          contentContainerStyle={[\n            { padding: padder ? variables.contentPadding : undefined },\n            contentContainerStyle\n          ]}\n        >\n          {children}\n        </KeyboardAwareScrollView>\n      </SafeAreaView>\n    );\n  }\n}\n\nContent.propTypes = {\n  disableKBDismissScroll: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.string,\n  padder: PropTypes.bool,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ])\n};\n\nconst StyledContent = connectStyle(\n  'NativeBase.Content',\n  {},\n  mapPropsToStyleNames\n)(Content);\n\nexport { StyledContent as Content };\n"]}