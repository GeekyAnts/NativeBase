{"version":3,"sources":["../../../src/basic/Content.js"],"names":["Content","props","state","orientation","val","maxComp","Math","max","variable","deviceWidth","deviceHeight","width","setState","children","contentContainerStyle","disableKBDismissScroll","keyboardShouldPersistTaps","padder","style","containerStyle","flex","variables","context","theme","isIphoneX","x","y","_scrollview","c","_root","padding","contentPadding","undefined","Component","contextTypes","PropTypes","object","propTypes","bool","string","oneOfType","number","array","StyledContent","mapPropsToStyleNames"],"mappings":"y1BAAA,iEACA,qC,mDACA,4B,2CACA,yCACA,2FAEA,qD,iDACA,mE,68BAEMA,Q,oDAKJ,iBAAYC,KAAZ,CAAmB,uIACXA,KADW,GAEjB,MAAKC,KAAL,CAAa,CACXC,YAAa,UADF,CAAb,CAFiB,aAKlB,C,sEAEYC,G,CAAK,CAChB,GAAMC,SAAUC,KAAKC,GAAL,CAASC,mBAASC,WAAlB,CAA+BD,mBAASE,YAAxC,CAAhB,CAEA,GAAIN,IAAIO,KAAJ,EAAaN,OAAjB,CAA0B,KAAKO,QAAL,CAAc,CAAET,YAAa,WAAf,CAAd,EAA1B,IACK,CACH,KAAKS,QAAL,CAAc,CAAET,YAAa,UAAf,CAAd,EACD,CACF,C,uCAEQ,4BAQH,KAAKF,KARF,CAELY,QAFK,QAELA,QAFK,CAGLC,qBAHK,QAGLA,qBAHK,CAILC,sBAJK,QAILA,sBAJK,CAKLC,yBALK,QAKLA,yBALK,CAMLC,MANK,QAMLA,MANK,CAOLC,KAPK,QAOLA,KAPK,CASP,GAAMC,gBAAiB,CAAEC,KAAM,CAAR,CAAvB,CACA,GAAMC,WAAY,KAAKC,OAAL,CAAaC,KAAb,CACd,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SADnC,CAEdb,kBAFJ,CAIA,MAAOa,WAAUG,SAAV,CACL,8BAAC,yBAAD,EAAc,MAAOL,cAArB,iDACE,8BAAC,2DAAD,WACE,iCAAkC,KADpC,CAEE,oBAAqBJ,uBAAyB,IAAzB,CAAgC,CAAEU,EAAG,CAAL,CAAQC,EAAG,CAAX,CAFvD,CAGE,0BAA2BV,2BAA6B,SAH1D,CAIE,IAAK,eAAK,CACR,OAAKW,WAAL,CAAmBC,CAAnB,CACA,OAAKC,KAAL,CAAaD,CAAb,CACD,CAPH,EAQM,KAAK3B,KARX,EASE,MAAOiB,KATT,CAUE,sBAAuB,CACrB,CAAEY,QAASb,OAASI,UAAUU,cAAnB,CAAoCC,SAA/C,CADqB,CAErBlB,qBAFqB,CAVzB,kDAeGD,QAfH,CADF,CADK,CAqBL,8BAAC,2DAAD,WACE,iCAAkC,KADpC,CAEE,oBAAqBE,uBAAyB,IAAzB,CAAgC,CAAEU,EAAG,CAAL,CAAQC,EAAG,CAAX,CAFvD,CAGE,0BAA2BV,2BAA6B,SAH1D,CAIE,IAAK,eAAK,CACR,OAAKW,WAAL,CAAmBC,CAAnB,CACA,OAAKC,KAAL,CAAaD,CAAb,CACD,CAPH,EAQM,KAAK3B,KARX,EASE,sBAAuB,CACrB,CAAE6B,QAASb,OAASI,UAAUU,cAAnB,CAAoCC,SAA/C,CADqB,CAErBlB,qBAFqB,CATzB,kDAcGD,QAdH,CArBF,CAsCD,C,qBAzEmBoB,gB,EAAhBjC,O,CACGkC,Y,CAAe,CACpBX,MAAOY,oBAAUC,MADG,C,CA2ExBpC,QAAQqC,SAAR,CAAoB,CAClBtB,uBAAwBoB,oBAAUG,IADhB,CAElBtB,0BAA2BmB,oBAAUI,MAFnB,CAGlBtB,OAAQkB,oBAAUG,IAHA,CAIlBpB,MAAOiB,oBAAUK,SAAV,CAAoB,CACzBL,oBAAUC,MADe,CAEzBD,oBAAUM,MAFe,CAGzBN,oBAAUO,KAHe,CAApB,CAJW,CAApB,CAWA,GAAMC,eAAgB,yCACpB,oBADoB,CAEpB,EAFoB,CAGpBC,8BAHoB,EAIpB5C,OAJoB,CAAtB,C,QAM0BA,O,CAAjB2C,a","file":"Content.js","sourcesContent":["import { connectStyle } from 'native-base-shoutem-theme';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { SafeAreaView } from 'react-native';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\n\nimport variable from '../theme/variables/platform';\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\n\nclass Content extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      orientation: 'portrait'\n    };\n  }\n\n  layoutChange(val) {\n    const maxComp = Math.max(variable.deviceWidth, variable.deviceHeight);\n\n    if (val.width >= maxComp) this.setState({ orientation: 'landscape' });\n    else {\n      this.setState({ orientation: 'portrait' });\n    }\n  }\n\n  render() {\n    const {\n      children,\n      contentContainerStyle,\n      disableKBDismissScroll,\n      keyboardShouldPersistTaps,\n      padder,\n      style\n    } = this.props;\n    const containerStyle = { flex: 1 };\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n\n    return variables.isIphoneX ? (\n      <SafeAreaView style={containerStyle}>\n        <KeyboardAwareScrollView\n          automaticallyAdjustContentInsets={false}\n          resetScrollToCoords={disableKBDismissScroll ? null : { x: 0, y: 0 }}\n          keyboardShouldPersistTaps={keyboardShouldPersistTaps || 'handled'}\n          ref={c => {\n            this._scrollview = c;\n            this._root = c;\n          }}\n          {...this.props}\n          style={style}\n          contentContainerStyle={[\n            { padding: padder ? variables.contentPadding : undefined },\n            contentContainerStyle\n          ]}\n        >\n          {children}\n        </KeyboardAwareScrollView>\n      </SafeAreaView>\n    ) : (\n      <KeyboardAwareScrollView\n        automaticallyAdjustContentInsets={false}\n        resetScrollToCoords={disableKBDismissScroll ? null : { x: 0, y: 0 }}\n        keyboardShouldPersistTaps={keyboardShouldPersistTaps || 'handled'}\n        ref={c => {\n          this._scrollview = c;\n          this._root = c;\n        }}\n        {...this.props}\n        contentContainerStyle={[\n          { padding: padder ? variables.contentPadding : undefined },\n          contentContainerStyle\n        ]}\n      >\n        {children}\n      </KeyboardAwareScrollView>\n    );\n  }\n}\n\nContent.propTypes = {\n  disableKBDismissScroll: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.string,\n  padder: PropTypes.bool,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ])\n};\n\nconst StyledContent = connectStyle(\n  'NativeBase.Content',\n  {},\n  mapPropsToStyleNames\n)(Content);\n\nexport { StyledContent as Content };\n"]}