{"version":3,"sources":["../../../src/basic/Actionsheet.js"],"names":["ActionSheetContainer","config","callback","actionsheetInstance","_root","showActionSheet","hideActionSheet","props","state","modalVisible","items","autoHide","duration","console","warn","Platform","OS","PLATFORM","IOS","options","filtered","map","item","text","filteredConfig","ActionSheetIOS","showActionSheetWithOptions","setState","title","message","destructiveButtonIndex","cancelButtonIndex","styles","containerTouchable","innerTouchable","touchableText","flatList","marginTop","commonColor","index","String","parseInt","listItem","height","listItemHeight","icon","iconType","color","iconColor","undefined","listItemBody","Component","propTypes","ViewPropTypes","StyleSheet","create","backgroundColor","containerTouchableBackgroundColor","flex","justifyContent","marginHorizontal","innerTouchableBackgroundColor","minHeight","maxHeight","Dimensions","get","padding","elevation","borderColor","listItemBorderColor","marginLeft","paddingLeft","touchableTextColor","StyledActionSheetContainer","mapPropsToStyleNames"],"mappings":"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","file":"Actionsheet.js","sourcesContent":["/* eslint-disable no-use-before-define */\r\n/* eslint-disable radix */\r\n\r\nimport React, { Component } from 'react';\r\nimport {\r\n  ActionSheetIOS,\r\n  Dimensions,\r\n  FlatList,\r\n  Modal,\r\n  Platform,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  ViewPropTypes\r\n} from 'react-native';\r\nimport { connectStyle } from 'native-base-shoutem-theme';\r\n\r\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\r\nimport commonColor, { PLATFORM } from '../theme/variables/commonColor';\r\n\r\nimport { Text } from './Text';\r\nimport { Icon } from './Icon';\r\nimport { Left } from './Left';\r\nimport { Right } from './Right';\r\nimport { Body } from './Body';\r\nimport { ListItem } from './ListItem';\r\n\r\nclass ActionSheetContainer extends Component {\r\n  static show(config, callback) {\r\n    this.actionsheetInstance._root.showActionSheet(config, callback);\r\n  }\r\n  static hide() {\r\n    this.actionsheetInstance._root.hideActionSheet();\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalVisible: false,\r\n      items: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.props.autoHide && this.props.duration) {\r\n      // eslint-disable-next-line no-console\r\n      console.warn(`It's not recommended to set autoHide false with duration`);\r\n    }\r\n  }\r\n\r\n  static actionsheetInstance;\r\n\r\n  showActionSheet(config, callback) {\r\n    if (Platform.OS === PLATFORM.IOS) {\r\n      if (typeof config.options[0] === 'object') {\r\n        const options = config.options;\r\n        const filtered = options.map(item => {\r\n          return item.text;\r\n        });\r\n\r\n        const filteredConfig = { ...config, options: filtered };\r\n        ActionSheetIOS.showActionSheetWithOptions(filteredConfig, callback);\r\n      } else {\r\n        ActionSheetIOS.showActionSheetWithOptions(config, callback);\r\n      }\r\n    } else {\r\n      this.setState({\r\n        items: config.options,\r\n        title: config.title,\r\n        message: config.message,\r\n        destructiveButtonIndex: config.destructiveButtonIndex,\r\n        cancelButtonIndex: config.cancelButtonIndex,\r\n        modalVisible: true,\r\n        callback\r\n      });\r\n    }\r\n  }\r\n\r\n  hideActionSheet() {\r\n    this.setState({ modalVisible: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        animationType={'fade'}\r\n        transparent\r\n        visible={this.state.modalVisible}\r\n        onRequestClose={() => {\r\n          this.state.callback(this.state.cancelButtonIndex);\r\n          this.setState({ modalVisible: false });\r\n        }}\r\n      >\r\n        <TouchableOpacity\r\n          activeOpacity={1}\r\n          onPress={() => {\r\n            this.state.callback(this.state.cancelButtonIndex);\r\n            this.setState({ modalVisible: false });\r\n          }}\r\n          style={styles.containerTouchable}\r\n        >\r\n          <TouchableOpacity activeOpacity={1} style={styles.innerTouchable}>\r\n            {this.state.title ? (\r\n              <Text style={styles.touchableText}>{this.state.title}</Text>\r\n            ) : null}\r\n            <FlatList\r\n              style={[\r\n                styles.flatList,\r\n                { marginTop: this.state.title ? commonColor.marginTop : 0 }\r\n              ]}\r\n              data={this.state.items}\r\n              keyExtractor={(item, index) => String(index)}\r\n              renderItem={({ index, item }) => {\r\n                return typeof this.state.items[0] === 'string' ? (\r\n                  <ListItem\r\n                    onPress={() => {\r\n                      this.state.callback(parseInt(index));\r\n                      this.setState({ modalVisible: false });\r\n                    }}\r\n                    style={styles.listItem}\r\n                  >\r\n                    <Text>{item}</Text>\r\n                  </ListItem>\r\n                ) : (\r\n                  <ListItem\r\n                    onPress={() => {\r\n                      this.state.callback(parseInt(index));\r\n                      this.setState({ modalVisible: false });\r\n                    }}\r\n                    style={[\r\n                      styles.listItem,\r\n                      {\r\n                        height: commonColor.listItemHeight\r\n                      }\r\n                    ]}\r\n                    icon\r\n                  >\r\n                    <Left>\r\n                      <Icon\r\n                        name={item.icon}\r\n                        type={item.iconType}\r\n                        style={{\r\n                          color: item.iconColor ? item.iconColor : undefined\r\n                        }}\r\n                      />\r\n                    </Left>\r\n                    <Body style={styles.listItemBody}>\r\n                      <Text>{item.text}</Text>\r\n                    </Body>\r\n                    <Right />\r\n                  </ListItem>\r\n                );\r\n              }}\r\n            />\r\n          </TouchableOpacity>\r\n        </TouchableOpacity>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nActionSheetContainer.propTypes = {\r\n  ...ViewPropTypes\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerTouchable: {\r\n    backgroundColor: commonColor.containerTouchableBackgroundColor,\r\n    flex: 1,\r\n    justifyContent: 'flex-end'\r\n  },\r\n  flatList: {\r\n    marginHorizontal: commonColor.marginHorizontal\r\n  },\r\n  innerTouchable: {\r\n    backgroundColor: commonColor.innerTouchableBackgroundColor,\r\n    minHeight: commonColor.minHeight,\r\n    maxHeight: Dimensions.get('window').height / 2,\r\n    padding: commonColor.padding,\r\n    elevation: commonColor.elevation\r\n  },\r\n  listItem: {\r\n    borderColor: commonColor.listItemBorderColor,\r\n    marginLeft: commonColor.marginLeft\r\n  },\r\n  listItemBody: {\r\n    borderColor: commonColor.listItemBorderColor,\r\n    paddingLeft: commonColor.marginLeft / 2\r\n  },\r\n  touchableText: {\r\n    color: commonColor.touchableTextColor\r\n  }\r\n});\r\n\r\nconst StyledActionSheetContainer = connectStyle(\r\n  'NativeBase.ActionSheetContainer',\r\n  {},\r\n  mapPropsToStyleNames\r\n)(ActionSheetContainer);\r\n\r\nexport { StyledActionSheetContainer as ActionSheetContainer };\r\n"]}