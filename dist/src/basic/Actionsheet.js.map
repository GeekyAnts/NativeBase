{"version":3,"sources":["../../../src/basic/Actionsheet.js"],"names":["ActionSheetContainer","config","callback","actionsheetInstance","_root","showActionSheet","hideActionSheet","props","state","modalVisible","items","autoHide","duration","console","warn","Platform","OS","PLATFORM","IOS","options","filtered","map","item","text","filteredConfig","ActionSheetIOS","showActionSheetWithOptions","setState","title","message","destructiveButtonIndex","cancelButtonIndex","styles","containerTouchable","innerTouchable","touchableText","flatList","marginTop","commonColor","index","String","iconType","parseInt","listItem","height","listItemHeight","icon","color","iconColor","undefined","fontSize","listItemBody","Component","propTypes","ViewPropTypes","style","PropTypes","oneOfType","object","number","array","StyleSheet","create","backgroundColor","containerTouchableBackgroundColor","flex","justifyContent","marginHorizontal","innerTouchableBackgroundColor","minHeight","maxHeight","Dimensions","get","padding","elevation","borderColor","listItemBorderColor","marginLeft","paddingLeft","touchableTextColor","StyledActionSheetContainer","mapPropsToStyleNames"],"mappings":"02BAEA,qC,mDACA,4B,2CACA,yCAUA,iEAEA,mE,yEACA,2D,uDAEA,4BACA,4BACA,4BACA,8BACA,4BACA,oC,o4BAEMA,qB,yIAEQC,M,CAAQC,Q,CAAU,CAC5B,KAAKC,mBAAL,CAAyBC,KAAzB,CAA+BC,eAA/B,CAA+CJ,MAA/C,CAAuDC,QAAvD,EACD,C,mCACa,CACZ,KAAKC,mBAAL,CAAyBC,KAAzB,CAA+BE,eAA/B,GACD,C,IAED,8BAAYC,KAAZ,CAAmB,8KACXA,KADW,GAEjB,MAAKC,KAAL,CAAa,CACXC,aAAc,KADH,CAEXC,MAAO,EAFI,CAAb,CAFiB,aAMlB,C,8FAEmB,CAClB,GAAI,CAAC,KAAKH,KAAL,CAAWI,QAAZ,EAAwB,KAAKJ,KAAL,CAAWK,QAAvC,CAAiD,CAC/CC,QAAQC,IAAR,8DACD,CACF,C,wDAEeb,M,CAAQC,Q,CAAU,CAChC,GAAIa,sBAASC,EAAT,GAAgBC,sBAASC,GAA7B,CAAkC,CAChC,GAAI,MAAOjB,QAAOkB,OAAP,CAAe,CAAf,CAAP,GAA6B,QAAjC,CAA2C,CACzC,GAAMA,SAAUlB,OAAOkB,OAAvB,CACA,GAAMC,UAAWD,QAAQE,GAAR,CAAY,cAAQ,CACnC,MAAOC,MAAKC,IAAZ,CACD,CAFgB,CAAjB,CAIA,GAAMC,4BAAsBvB,MAAtB,EAA8BkB,QAASC,QAAvC,EAAN,CACAK,4BAAeC,0BAAf,CAA0CF,cAA1C,CAA0DtB,QAA1D,EACD,CARD,IAQO,CACLuB,4BAAeC,0BAAf,CAA0CzB,MAA1C,CAAkDC,QAAlD,EACD,CACF,CAZD,IAYO,CACL,KAAKyB,QAAL,CAAc,CACZjB,MAAOT,OAAOkB,OADF,CAEZS,MAAO3B,OAAO2B,KAFF,CAGZC,QAAS5B,OAAO4B,OAHJ,CAIZC,uBAAwB7B,OAAO6B,sBAJnB,CAKZC,kBAAmB9B,OAAO8B,iBALd,CAMZtB,aAAc,IANF,CAOZP,iBAPY,CAAd,EASD,CACF,C,yDAEiB,CAChB,KAAKyB,QAAL,CAAc,CAAElB,aAAc,KAAhB,CAAd,EACD,C,uCAEQ,iBACP,MACE,+BAAC,kBAAD,EACE,cAAe,MADjB,CAEE,gBAFF,CAGE,QAAS,KAAKD,KAAL,CAAWC,YAHtB,CAIE,eAAgB,yBAAM,CACpB,OAAKD,KAAL,CAAWN,QAAX,CAAoB,OAAKM,KAAL,CAAWuB,iBAA/B,EACA,OAAKJ,QAAL,CAAc,CAAElB,aAAc,KAAhB,CAAd,EACD,CAPH,iDASE,8BAAC,6BAAD,EACE,cAAe,CADjB,CAEE,QAAS,kBAAM,CACb,OAAKD,KAAL,CAAWN,QAAX,CAAoB,OAAKM,KAAL,CAAWuB,iBAA/B,EACA,OAAKJ,QAAL,CAAc,CAAElB,aAAc,KAAhB,CAAd,EACD,CALH,CAME,MAAOuB,OAAOC,kBANhB,iDAQE,8BAAC,6BAAD,EAAkB,cAAe,CAAjC,CAAoC,MAAOD,OAAOE,cAAlD,iDACG,KAAK1B,KAAL,CAAWoB,KAAX,CACC,8BAAC,UAAD,EAAM,MAAOI,OAAOG,aAApB,kDAAoC,KAAK3B,KAAL,CAAWoB,KAA/C,CADD,CAEG,IAHN,CAIE,8BAAC,qBAAD,EACE,MAAO,CACLI,OAAOI,QADF,CAEL,CAAEC,UAAW,KAAK7B,KAAL,CAAWoB,KAAX,CAAmBU,sBAAYD,SAA/B,CAA2C,CAAxD,CAFK,CADT,CAKE,KAAM,KAAK7B,KAAL,CAAWE,KALnB,CAME,aAAc,sBAACY,IAAD,CAAOiB,KAAP,QAAiBC,QAAOD,KAAP,CAAjB,EANhB,CAOE,WAAY,yBAAqB,IAAlBA,MAAkB,MAAlBA,KAAkB,CAAXjB,IAAW,MAAXA,IAAW,CAC/B,GAAMmB,UAAWnB,KAAKmB,QAAL,CAAgBnB,KAAKmB,QAArB,CAAgC,aAAjD,CACA,MAAO,OAAO,QAAKjC,KAAL,CAAWE,KAAX,CAAiB,CAAjB,CAAP,GAA+B,QAA/B,CACL,8BAAC,kBAAD,EACE,QAAS,kBAAM,CACb,OAAKF,KAAL,CAAWN,QAAX,CAAoBwC,SAASH,KAAT,CAApB,EACA,OAAKZ,QAAL,CAAc,CAAElB,aAAc,KAAhB,CAAd,EACD,CAJH,CAKE,MAAOuB,OAAOW,QALhB,kDAOE,8BAAC,UAAD,mDAAOrB,IAAP,CAPF,CADK,CAWL,8BAAC,kBAAD,EACE,QAAS,kBAAM,CACb,OAAKd,KAAL,CAAWN,QAAX,CAAoBwC,SAASH,KAAT,CAApB,EACA,OAAKZ,QAAL,CAAc,CAAElB,aAAc,KAAhB,CAAd,EACD,CAJH,CAKE,MAAO,CACLuB,OAAOW,QADF,CAEL,CACEC,OAAQN,sBAAYO,cADtB,CAFK,CALT,CAWE,SAXF,kDAaE,8BAAC,UAAD,mDACE,8BAAC,UAAD,EACE,KAAMvB,KAAKwB,IADb,CAEE,MAAO,CACLC,MAAOzB,KAAK0B,SAAL,CAAiB1B,KAAK0B,SAAtB,CAAkCC,SADpC,CAELC,SAAU5B,KAAK4B,QAAL,CAAgB5B,KAAK4B,QAArB,CAAgC,EAFrC,CAFT,CAME,KAAMT,QANR,kDADF,CAbF,CAuBE,8BAAC,UAAD,EAAM,MAAOT,OAAOmB,YAApB,kDACE,8BAAC,UAAD,mDAAO7B,KAAKC,IAAZ,CADF,CAvBF,CA0BE,8BAAC,YAAD,mDA1BF,CAXF,CAwCD,CAjDH,kDAJF,CARF,CATF,CADF,CA6ED,C,kCAnIgC6B,gB,EAsInCpD,qBAAqBqD,SAArB,aACKC,0BADL,EAEEC,MAAOC,oBAAUC,SAAV,CAAoB,CACzBD,oBAAUE,MADe,CAEzBF,oBAAUG,MAFe,CAGzBH,oBAAUI,KAHe,CAApB,CAFT,GASA,GAAM5B,QAAS6B,wBAAWC,MAAX,CAAkB,CAC/B7B,mBAAoB,CAClB8B,gBAAiBzB,sBAAY0B,iCADX,CAElBC,KAAM,CAFY,CAGlBC,eAAgB,UAHE,CADW,CAM/B9B,SAAU,CACR+B,iBAAkB7B,sBAAY6B,gBADtB,CANqB,CAS/BjC,eAAgB,CACd6B,gBAAiBzB,sBAAY8B,6BADf,CAEdC,UAAW/B,sBAAY+B,SAFT,CAGdC,UAAWC,wBAAWC,GAAX,CAAe,QAAf,EAAyB5B,MAAzB,CAAkC,CAH/B,CAId6B,QAASnC,sBAAYmC,OAJP,CAKdC,UAAWpC,sBAAYoC,SALT,CATe,CAgB/B/B,SAAU,CACRgC,YAAarC,sBAAYsC,mBADjB,CAERC,WAAYvC,sBAAYuC,UAFhB,CAhBqB,CAoB/B1B,aAAc,CACZwB,YAAarC,sBAAYsC,mBADb,CAEZE,YAAaxC,sBAAYuC,UAAZ,CAAyB,CAF1B,CApBiB,CAwB/B1C,cAAe,CACbY,MAAOT,sBAAYyC,kBADN,CAxBgB,CAAlB,CAAf,CA6BA,GAAMC,4BAA6B,yCACjC,iCADiC,CAEjC,EAFiC,CAGjCC,8BAHiC,EAIjCjF,oBAJiC,CAAnC,C,QAMuCA,oB,CAA9BgF,0B","file":"Actionsheet.js","sourcesContent":["/* eslint-disable no-use-before-define */\n/* eslint-disable radix */\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport {\n  ActionSheetIOS,\n  Dimensions,\n  FlatList,\n  Modal,\n  Platform,\n  TouchableOpacity,\n  StyleSheet,\n  ViewPropTypes\n} from 'react-native';\nimport { connectStyle } from 'native-base-shoutem-theme';\n\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\nimport commonColor, { PLATFORM } from '../theme/variables/commonColor';\n\nimport { Text } from './Text';\nimport { Icon } from './Icon';\nimport { Left } from './Left';\nimport { Right } from './Right';\nimport { Body } from './Body';\nimport { ListItem } from './ListItem';\n\nclass ActionSheetContainer extends Component {\n  static actionsheetInstance;\n  static show(config, callback) {\n    this.actionsheetInstance._root.showActionSheet(config, callback);\n  }\n  static hide() {\n    this.actionsheetInstance._root.hideActionSheet();\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalVisible: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.autoHide && this.props.duration) {\n      console.warn(`It's not recommended to set autoHide false with duration`);\n    }\n  }\n\n  showActionSheet(config, callback) {\n    if (Platform.OS === PLATFORM.IOS) {\n      if (typeof config.options[0] === 'object') {\n        const options = config.options;\n        const filtered = options.map(item => {\n          return item.text;\n        });\n\n        const filteredConfig = { ...config, options: filtered };\n        ActionSheetIOS.showActionSheetWithOptions(filteredConfig, callback);\n      } else {\n        ActionSheetIOS.showActionSheetWithOptions(config, callback);\n      }\n    } else {\n      this.setState({\n        items: config.options,\n        title: config.title,\n        message: config.message,\n        destructiveButtonIndex: config.destructiveButtonIndex,\n        cancelButtonIndex: config.cancelButtonIndex,\n        modalVisible: true,\n        callback\n      });\n    }\n  }\n\n  hideActionSheet() {\n    this.setState({ modalVisible: false });\n  }\n\n  render() {\n    return (\n      <Modal\n        animationType={'fade'}\n        transparent\n        visible={this.state.modalVisible}\n        onRequestClose={() => {\n          this.state.callback(this.state.cancelButtonIndex);\n          this.setState({ modalVisible: false });\n        }}\n      >\n        <TouchableOpacity\n          activeOpacity={1}\n          onPress={() => {\n            this.state.callback(this.state.cancelButtonIndex);\n            this.setState({ modalVisible: false });\n          }}\n          style={styles.containerTouchable}\n        >\n          <TouchableOpacity activeOpacity={1} style={styles.innerTouchable}>\n            {this.state.title ? (\n              <Text style={styles.touchableText}>{this.state.title}</Text>\n            ) : null}\n            <FlatList\n              style={[\n                styles.flatList,\n                { marginTop: this.state.title ? commonColor.marginTop : 0 }\n              ]}\n              data={this.state.items}\n              keyExtractor={(item, index) => String(index)}\n              renderItem={({ index, item }) => {\n                const iconType = item.iconType ? item.iconType : 'FontAwesome';\n                return typeof this.state.items[0] === 'string' ? (\n                  <ListItem\n                    onPress={() => {\n                      this.state.callback(parseInt(index));\n                      this.setState({ modalVisible: false });\n                    }}\n                    style={styles.listItem}\n                  >\n                    <Text>{item}</Text>\n                  </ListItem>\n                ) : (\n                  <ListItem\n                    onPress={() => {\n                      this.state.callback(parseInt(index));\n                      this.setState({ modalVisible: false });\n                    }}\n                    style={[\n                      styles.listItem,\n                      {\n                        height: commonColor.listItemHeight\n                      }\n                    ]}\n                    icon\n                  >\n                    <Left>\n                      <Icon\n                        name={item.icon}\n                        style={{\n                          color: item.iconColor ? item.iconColor : undefined,\n                          fontSize: item.fontSize ? item.fontSize : 27,\n                        }}\n                        type={iconType}\n                      />\n                    </Left>\n                    <Body style={styles.listItemBody}>\n                      <Text>{item.text}</Text>\n                    </Body>\n                    <Right />\n                  </ListItem>\n                );\n              }}\n            />\n          </TouchableOpacity>\n        </TouchableOpacity>\n      </Modal>\n    );\n  }\n}\n\nActionSheetContainer.propTypes = {\n  ...ViewPropTypes,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ])\n};\n\nconst styles = StyleSheet.create({\n  containerTouchable: {\n    backgroundColor: commonColor.containerTouchableBackgroundColor,\n    flex: 1,\n    justifyContent: 'flex-end'\n  },\n  flatList: {\n    marginHorizontal: commonColor.marginHorizontal\n  },\n  innerTouchable: {\n    backgroundColor: commonColor.innerTouchableBackgroundColor,\n    minHeight: commonColor.minHeight,\n    maxHeight: Dimensions.get('window').height / 2,\n    padding: commonColor.padding,\n    elevation: commonColor.elevation\n  },\n  listItem: {\n    borderColor: commonColor.listItemBorderColor,\n    marginLeft: commonColor.marginLeft\n  },\n  listItemBody: {\n    borderColor: commonColor.listItemBorderColor,\n    paddingLeft: commonColor.marginLeft / 2\n  },\n  touchableText: {\n    color: commonColor.touchableTextColor\n  }\n});\n\nconst StyledActionSheetContainer = connectStyle(\n  'NativeBase.ActionSheetContainer',\n  {},\n  mapPropsToStyleNames\n)(ActionSheetContainer);\n\nexport { StyledActionSheetContainer as ActionSheetContainer };\n"]}