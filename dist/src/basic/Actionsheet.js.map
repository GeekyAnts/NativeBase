{"version":3,"sources":["../../../src/basic/Actionsheet.js"],"names":["ActionSheetContainer","props","state","modalVisible","items","config","callback","Platform","OS","options","filtered","map","item","text","ActionSheetIOS","showActionSheetWithOptions","setState","title","message","destructiveButtonIndex","cancelButtonIndex","autoHide","duration","console","warn","backgroundColor","flex","justifyContent","height","length","maxHeight","padding","elevation","color","marginHorizontal","marginTop","index","String","parseInt","borderColor","icon","iconColor","undefined","actionsheetInstance","_root","showActionSheet","Component","propTypes","ViewPropTypes","style","PropTypes","oneOfType","object","number","array","StyledActionSheetContainer","mapPropsToStyleNames"],"mappings":"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","file":"Actionsheet.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  View,\n  Modal,\n  Platform,\n  ActionSheetIOS,\n  TouchableOpacity,\n  ViewPropTypes,\n  FlatList\n} from \"react-native\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport { Text } from \"./Text\";\nimport { Button } from \"./Button\";\nimport { ViewNB } from \"./View\";\nimport { Icon } from \"./Icon\";\nimport { Left } from \"./Left\";\nimport { Right } from \"./Right\";\nimport { Body } from \"./Body\";\nimport { ListItem } from \"./ListItem\";\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\n\nclass ActionSheetContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalVisible: false,\n      items: [],\n    };\n  }\n  static actionsheetInstance;\n  static show(config, callback) {\n    this.actionsheetInstance._root.showActionSheet(config, callback);\n  }\n  showActionSheet(config, callback) {\n    if (Platform.OS === \"ios\") {\n      if (typeof config.options[0] == \"object\") {\n        let options = config.options;\n        let filtered = options.map(item => {\n          return item.text;\n        });\n        config.options = filtered;\n        ActionSheetIOS.showActionSheetWithOptions(config, callback);\n      } else {\n        ActionSheetIOS.showActionSheetWithOptions(config, callback);\n      }\n    } else {\n      this.setState({\n        items: config.options,\n        title: config.title,\n        message: config.message,\n        destructiveButtonIndex: config.destructiveButtonIndex,\n        cancelButtonIndex: config.cancelButtonIndex,\n        modalVisible: true,\n        callback: callback,\n      });\n    }\n  }\n  componentDidMount() {\n    if (!this.props.autoHide && this.props.duration) {\n      console.warn(`It's not recommended to set autoHide false with duration`);\n    }\n  }\n  render() {\n    return (\n      <Modal\n        animationType={\"fade\"}\n        transparent={true}\n        visible={this.state.modalVisible}\n        onRequestClose={() => {\n          this.state.callback(this.state.cancelButtonIndex);\n          this.setState({ modalVisible: false });\n        }}\n      >\n        <TouchableOpacity\n          activeOpacity={1}\n          onPress={() => {\n            this.state.callback(this.state.cancelButtonIndex);\n            this.setState({ modalVisible: false });\n          }}\n          style={{\n            backgroundColor: \"rgba(0,0,0,0.4)\",\n            flex: 1,\n            justifyContent: \"flex-end\"\n          }}\n        >\n          <TouchableOpacity\n            activeOpacity={1}\n            style={{\n              backgroundColor: \"#fff\",\n              height: this.state.length * 80,\n              maxHeight: \"100%\",\n              padding: 15,\n              elevation: 4\n            }}\n          >\n            <Text style={{ color: \"#757575\" }}>{this.state.title}</Text>\n            <FlatList\n              style={{ marginHorizontal: -15, marginTop: 15 }}\n              data={this.state.items}\n              keyExtractor={(item, index) => String(index)}\n              renderItem={({ index, item }) => {\n                return typeof this.state.items[0] === \"string\" ? (\n                  <ListItem\n                    onPress={() => {\n                      this.state.callback(parseInt(index));\n                      this.setState({ modalVisible: false });\n                    }}\n                    style={{ borderColor: \"transparent\" }}>\n                    <Text>{item}</Text>\n                  </ListItem>\n                ) : (\n                    <ListItem\n                      onPress={() => {\n                        this.state.callback(parseInt(index));\n                        this.setState({ modalVisible: false });\n                      }}\n                      style={{ borderColor: \"transparent\" }}\n                      icon\n                    >\n                      <Left>\n                        <Icon\n                          name={item.icon}\n                          style={{\n                            color: item.iconColor ? item.iconColor : undefined\n                          }}\n                        />\n                      </Left>\n                      <Body style={{ borderColor: \"transparent\" }}>\n                        <Text>{item.text}</Text>\n                      </Body>\n                      <Right />\n                    </ListItem>\n                  )\n              }}\n            />\n          </TouchableOpacity>\n        </TouchableOpacity>\n      </Modal>\n    );\n  }\n}\n\nActionSheetContainer.propTypes = {\n  ...ViewPropTypes,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ])\n};\n\nconst StyledActionSheetContainer = connectStyle(\n  \"NativeBase.ActionSheetContainer\",\n  {},\n  mapPropsToStyleNames\n)(ActionSheetContainer);\n\nexport { StyledActionSheetContainer as ActionSheetContainer };"]}