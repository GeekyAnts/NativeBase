{"version":3,"sources":["../../../src/basic/SnackbarContainer.js"],"names":["POSITION","ABSOLUTE","BOTTOM","TOP","SnackbarContainer","config","snackbarInstance","_root","showSnackbar","getModalState","closeSnackbar","props","closeModal","reason","setState","modalVisible","onClose","state","fadeAnim","Animated","Value","pan","ValueXY","x","y","keyboardHeight","isKeyboardVisible","keyboardDidHide","bind","keyboardDidShow","_panResponder","PanResponder","create","onMoveShouldSetPanResponderCapture","onPanResponderRelease","evt","dx","timing","toValue","duration","useNativeDriver","start","Keyboard","addListener","removeListener","position","opacity","width","elevation","padding","top","undefined","bottom","getTop","Platform","OS","PLATFORM","IOS","buttonText","trim","length","e","endCoordinates","height","text","getButtonText","type","supportedOrientations","style","buttonTextStyle","fontWeight","color","buttonStyle","textStyle","paddingLeft","swipeDisabled","closeTimeout","clearTimeout","setTimeout","setValue","panHandlers","getSnackbarStyle","transform","translateX","translateY","borderRadius","toUpperCase","Component","propTypes","ViewPropTypes","StyledSnackbarContainer","mapPropsToStyleNames"],"mappings":"62BACA,4B,2CACA,yCAOA,iEAEA,mE,yEACA,2DAEA,4BACA,gCACA,8B,skCAEA,GAAMA,UAAW,CACfC,SAAU,UADK,CAEfC,OAAQ,QAFO,CAGfC,IAAK,KAHU,CAAjB,C,GAMMC,kB,wIACuB,IAAVC,OAAU,mCACzB,KAAKC,gBAAL,CAAsBC,KAAtB,CAA4BC,YAA5B,CAAyC,CAAEH,aAAF,CAAzC,EACD,C,mCACa,CACZ,GAAI,KAAKC,gBAAL,CAAsBC,KAAtB,CAA4BE,aAA5B,EAAJ,CAAiD,CAC/C,KAAKH,gBAAL,CAAsBC,KAAtB,CAA4BG,aAA5B,CAA0C,cAA1C,EACD,CACF,C,IACD,2BAAYC,KAAZ,CAAmB,qKACXA,KADW,SAgInBC,UAhImB,CAgIN,SAACC,MAAD,CAAY,CACvB,MAAKC,QAAL,CAAc,CACZC,aAAc,KADF,CAAd,EADuB,GAIfC,QAJe,CAIH,MAAKC,KAJF,CAIfD,OAJe,CAKvB,GAAIA,SAAW,MAAOA,QAAP,GAAmB,UAAlC,CAA8C,CAC5CA,QAAQH,MAAR,EACD,CACF,CAxIkB,CAGjB,MAAKI,KAAL,CAAa,CACXC,SAAU,GAAIC,uBAASC,KAAb,CAAmB,CAAnB,CADC,CAEXC,IAAK,GAAIF,uBAASG,OAAb,CAAqB,CAAEC,EAAG,CAAL,CAAQC,EAAG,CAAX,CAArB,CAFM,CAGXC,eAAgB,CAHL,CAIXC,kBAAmB,KAJR,CAKXX,aAAc,KALH,CAAb,CAQA,MAAKY,eAAL,CAAuB,MAAKA,eAAL,CAAqBC,IAArB,OAAvB,CACA,MAAKC,eAAL,CAAuB,MAAKA,eAAL,CAAqBD,IAArB,OAAvB,CACA,MAAKE,aAAL,CAAqBC,0BAAaC,MAAb,CAAoB,CACvCC,mCAAoC,oDAAM,KAAN,EADG,CAEvCC,sBAAuB,+BAACC,GAAD,OAAiB,IAATC,GAAS,OAATA,EAAS,CACtC,GAAIA,KAAO,CAAX,CAAc,CACZjB,sBAASkB,MAAT,CAAgB,MAAKpB,KAAL,CAAWI,GAA3B,CAAgC,CAC9BiB,QAAS,CAAEf,EAAGa,EAAL,CAASZ,EAAG,CAAZ,CADqB,CAE9Be,SAAU,GAFoB,CAG9BC,gBAAiB,KAHa,CAAhC,EAIGC,KAJH,CAIS,iBAAM,OAAK/B,aAAL,CAAmB,OAAnB,CAAN,EAJT,EAKD,CACF,CAVsC,CAApB,CAArB,CAbiB,aAyBlB,C,2FAEmB,CAClBgC,sBAASC,WAAT,CAAqB,iBAArB,CAAwC,KAAKd,eAA7C,EACAa,sBAASC,WAAT,CAAqB,iBAArB,CAAwC,KAAKhB,eAA7C,EACD,C,mEAEsB,CACrBe,sBAASE,cAAT,CAAwB,iBAAxB,CAA2C,KAAKf,eAAhD,EACAa,sBAASE,cAAT,CAAwB,iBAAxB,CAA2C,KAAKjB,eAAhD,EACD,C,2DAEkB,CACjB,MAAO,CACLkB,SAAU7C,SAASC,QADd,CAEL6C,QAAS,KAAK7B,KAAL,CAAWC,QAFf,CAGL6B,MAAO,MAHF,CAILC,UAAW,CAJN,CAKLC,QAAS,EALJ,CAMLC,IAAK,KAAKjC,KAAL,CAAW4B,QAAX,GAAwB7C,SAASG,GAAjC,CAAuC,EAAvC,CAA4CgD,SAN5C,CAOLC,OACE,KAAKnC,KAAL,CAAW4B,QAAX,GAAwB7C,SAASE,MAAjC,CAA0C,KAAKmD,MAAL,EAA1C,CAA0DF,SARvD,CAAP,CAUD,C,uCAEQ,CACP,GAAIG,sBAASC,EAAT,GAAgBC,sBAASC,GAA7B,CAAkC,CAChC,GAAI,KAAKxC,KAAL,CAAWS,iBAAf,CAAkC,CAChC,MAAO,MAAKT,KAAL,CAAWQ,cAAlB,CACD,CACD,MAAO,GAAP,CACD,CACD,MAAO,EAAP,CACD,C,oDAEaiC,U,CAAY,CACxB,GAAIA,UAAJ,CAAgB,CACd,GAAIA,WAAWC,IAAX,GAAkBC,MAAlB,GAA6B,CAAjC,CAAoC,CAClC,MAAOT,UAAP,CACD,CACD,MAAOO,WAAP,CACD,CACD,MAAOP,UAAP,CACD,C,qDACe,CACd,MAAO,MAAKlC,KAAL,CAAWF,YAAlB,CACD,C,yDAIiB,CAChB,KAAKD,QAAL,CAAc,CACZW,eAAgB,CADJ,CAEZC,kBAAmB,KAFP,CAAd,EAID,C,wDAEemC,C,CAAG,CACjB,KAAK/C,QAAL,CAAc,CACZW,eAAgBoC,EAAEC,cAAF,CAAiBC,MADrB,CAEZrC,kBAAmB,IAFP,CAAd,EAID,C,wDAEwB,IAAVrB,OAAU,OAAVA,MAAU,CACvB,KAAKS,QAAL,CAAc,CACZC,aAAc,IADF,CAEZiD,KAAM3D,OAAO2D,IAFD,CAGZN,WAAY,KAAKO,aAAL,CAAmB5D,OAAOqD,UAA1B,CAHA,CAIZQ,KAAM7D,OAAO6D,IAJD,CAKZrB,SAAUxC,OAAOwC,QAAP,CAAkBxC,OAAOwC,QAAzB,CAAoC7C,SAASE,MAL3C,CAMZiE,sBAAuB9D,OAAO8D,qBANlB,CAOZC,MAAO/D,OAAO+D,KAPF,CAQZC,gBAAiBhE,OAAOgE,eAAP,EAA0B,CACzCC,WAAY,MAD6B,CAEzCC,MAAO,SAFkC,CAR/B,CAYZC,YAAanE,OAAOmE,WAZR,CAaZC,UAAWpE,OAAOoE,SAAP,EAAoB,CAC7BC,YAAa,EADgB,CAbnB,CAgBZ1D,QAASX,OAAOW,OAhBJ,CAiBZ2D,cAAetE,OAAOsE,aAAP,EAAwB,KAjB3B,CAAd,EAoBA,GAAI,KAAKC,YAAT,CAAuB,CACrBC,aAAa,KAAKD,YAAlB,EACD,CAED,GAAIvE,OAAOkC,QAAP,GAAoB,CAAxB,CAA2B,CACzB,GAAMA,UAAWlC,OAAOkC,QAAP,CAAkB,CAAlB,CAAsBlC,OAAOkC,QAA7B,CAAwC,IAAzD,CACA,KAAKqC,YAAL,CAAoBE,WAClB,KAAKpE,aAAL,CAAmBkB,IAAnB,CAAwB,IAAxB,CAA8B,SAA9B,CADkB,CAElBW,QAFkB,CAApB,CAID,CAEDpB,sBAASkB,MAAT,CAAgB,KAAKpB,KAAL,CAAWC,QAA3B,CAAqC,CACnCoB,QAAS,CAD0B,CAEnCC,SAAU,GAFyB,CAGnCC,gBAAiB,KAHkB,CAArC,EAIGC,KAJH,GAKD,C,oDAUa5B,M,CAAQ,iBACpBgE,aAAa,KAAKD,YAAlB,EACAzD,sBAASkB,MAAT,CAAgB,KAAKpB,KAAL,CAAWC,QAA3B,CAAqC,CACnCoB,QAAS,CAD0B,CAEnCC,SAAU,GAFyB,CAGnCC,gBAAiB,KAHkB,CAArC,EAIGC,KAJH,CAIS,UAAM,CACb,OAAK7B,UAAL,CAAgBC,MAAhB,EACA,OAAKI,KAAL,CAAWI,GAAX,CAAe0D,QAAf,CAAwB,CAAExD,EAAG,CAAL,CAAQC,EAAG,CAAX,CAAxB,EACD,CAPD,EAQD,C,uCAEQ,iBACP,GAAI,KAAKP,KAAL,CAAWF,YAAf,CAA6B,gBACV,KAAKE,KAAL,CAAWI,GADD,CACnBE,CADmB,YACnBA,CADmB,CAChBC,CADgB,YAChBA,CADgB,CAE3B,MACE,+BAAC,qBAAD,CAAU,IAAV,aACM,KAAKP,KAAL,CAAW0D,aAAX,CAA2B,EAA3B,CAAgC,KAAK7C,aAAL,CAAmBkD,WADzD,EAEE,MAAO,CACL,KAAKC,gBAAL,EADK,CAEL,CAAEC,UAAW,CAAC,CAAEC,WAAY5D,CAAd,CAAD,CAAoB,CAAE6D,WAAY5D,CAAd,CAApB,CAAb,CAFK,CAFT,mDAOE,8BAAC,YAAD,EACE,MAAO,CAAC,KAAKP,KAAL,CAAWmD,KAAZ,CAAmB,CACxBiB,aAAc,CADU,CAAnB,CADT,CAIE,OAAQ,KAAKpE,KAAL,CAAWiD,IAAX,GAAoB,QAJ9B,CAKE,QAAS,KAAKjD,KAAL,CAAWiD,IAAX,GAAoB,SAL/B,CAME,QAAS,KAAKjD,KAAL,CAAWiD,IAAX,GAAoB,SAN/B,kDAQE,8BAAC,UAAD,EAAM,MAAO,KAAKjD,KAAL,CAAWwD,SAAxB,kDAAoC,KAAKxD,KAAL,CAAW+C,IAA/C,CARF,CASG,KAAK/C,KAAL,CAAWyC,UAAX,EACC,8BAAC,cAAD,EACE,MAAO,KAAKzC,KAAL,CAAWuD,WADpB,CAEE,QAAS,yBAAM,QAAK9D,aAAL,CAAmB,MAAnB,CAAN,EAFX,kDAIE,8BAAC,UAAD,EAAM,MAAO,KAAKO,KAAL,CAAWoD,eAAxB,kDACG,KAAKpD,KAAL,CAAWyC,UAAX,CAAsB4B,WAAtB,EADH,CAJF,CAVJ,CAPF,CADF,CA8BD,CACD,MAAO,KAAP,CACD,C,+BAjM6BC,gB,EAoMhCnF,kBAAkBoF,SAAlB,aACKC,0BADL,EAIA,GAAMC,yBAA0B,yCAC9B,2BAD8B,CAE9B,EAF8B,CAG9BC,8BAH8B,EAI9BvF,iBAJ8B,CAAhC,C,QAMoCA,iB,CAA3BsF,uB","file":"SnackbarContainer.js","sourcesContent":["/* eslint-disable class-methods-use-this */\nimport React, { Component } from 'react';\nimport {\n  Keyboard,\n  Platform,\n  Animated,\n  ViewPropTypes,\n  PanResponder,\n} from 'react-native';\nimport { connectStyle } from 'native-base-shoutem-theme';\n\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\nimport { PLATFORM } from '../theme/variables/commonColor';\n\nimport { Text } from './Text';\nimport { Button } from './Button';\nimport { Toast } from './Toast';\n\nconst POSITION = {\n  ABSOLUTE: 'absolute',\n  BOTTOM: 'bottom',\n  TOP: 'top',\n};\n\nclass SnackbarContainer extends Component {\n  static show({ ...config }) {\n    this.snackbarInstance._root.showSnackbar({ config });\n  }\n  static hide() {\n    if (this.snackbarInstance._root.getModalState()) {\n      this.snackbarInstance._root.closeSnackbar('functionCall');\n    }\n  }\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fadeAnim: new Animated.Value(0),\n      pan: new Animated.ValueXY({ x: 0, y: 0 }),\n      keyboardHeight: 0,\n      isKeyboardVisible: false,\n      modalVisible: false,\n    };\n\n    this.keyboardDidHide = this.keyboardDidHide.bind(this);\n    this.keyboardDidShow = this.keyboardDidShow.bind(this);\n    this._panResponder = PanResponder.create({\n      onMoveShouldSetPanResponderCapture: () => true,\n      onPanResponderRelease: (evt, { dx }) => {\n        if (dx !== 0) {\n          Animated.timing(this.state.pan, {\n            toValue: { x: dx, y: 0 },\n            duration: 100,\n            useNativeDriver: false\n          }).start(() => this.closeSnackbar('swipe'));\n        }\n      },\n    });\n  }\n\n  componentDidMount() {\n    Keyboard.addListener('keyboardDidShow', this.keyboardDidShow);\n    Keyboard.addListener('keyboardDidHide', this.keyboardDidHide);\n  }\n\n  componentWillUnmount() {\n    Keyboard.removeListener('keyboardDidShow', this.keyboardDidShow);\n    Keyboard.removeListener('keyboardDidHide', this.keyboardDidHide);\n  }\n\n  getSnackbarStyle() {\n    return {\n      position: POSITION.ABSOLUTE,\n      opacity: this.state.fadeAnim,\n      width: '100%',\n      elevation: 9,\n      padding: 20,\n      top: this.state.position === POSITION.TOP ? 30 : undefined,\n      bottom:\n        this.state.position === POSITION.BOTTOM ? this.getTop() : undefined,\n    };\n  }\n\n  getTop() {\n    if (Platform.OS === PLATFORM.IOS) {\n      if (this.state.isKeyboardVisible) {\n        return this.state.keyboardHeight;\n      }\n      return 30;\n    }\n    return 0;\n  }\n\n  getButtonText(buttonText) {\n    if (buttonText) {\n      if (buttonText.trim().length === 0) {\n        return undefined;\n      }\n      return buttonText;\n    }\n    return undefined;\n  }\n  getModalState() {\n    return this.state.modalVisible;\n  }\n\n  static snackbarInstance;\n\n  keyboardDidHide() {\n    this.setState({\n      keyboardHeight: 0,\n      isKeyboardVisible: false,\n    });\n  }\n\n  keyboardDidShow(e) {\n    this.setState({\n      keyboardHeight: e.endCoordinates.height,\n      isKeyboardVisible: true,\n    });\n  }\n\n  showSnackbar({ config }) {\n    this.setState({\n      modalVisible: true,\n      text: config.text,\n      buttonText: this.getButtonText(config.buttonText),\n      type: config.type,\n      position: config.position ? config.position : POSITION.BOTTOM,\n      supportedOrientations: config.supportedOrientations,\n      style: config.style,\n      buttonTextStyle: config.buttonTextStyle || {\n        fontWeight: 'bold', \n        color: '#BF88FC'\n      },\n      buttonStyle: config.buttonStyle,\n      textStyle: config.textStyle || {\n        paddingLeft: 10\n      },\n      onClose: config.onClose,\n      swipeDisabled: config.swipeDisabled || false\n    });\n    // If we have a snackbar already open, cut off its close timeout so that it won't affect *this* snackbar.\n    if (this.closeTimeout) {\n      clearTimeout(this.closeTimeout);\n    }\n    // Set the snackbar to close after the duration.\n    if (config.duration !== 0) {\n      const duration = config.duration > 0 ? config.duration : 2000;\n      this.closeTimeout = setTimeout(\n        this.closeSnackbar.bind(this, 'timeout'),\n        duration\n      );\n    }\n    // Fade the snackbar in now.\n    Animated.timing(this.state.fadeAnim, {\n      toValue: 1,\n      duration: 200,\n      useNativeDriver: false,\n    }).start();\n  }\n  closeModal = (reason) => {\n    this.setState({\n      modalVisible: false,\n    });\n    const { onClose } = this.state;\n    if (onClose && typeof onClose === 'function') {\n      onClose(reason);\n    }\n  };\n  closeSnackbar(reason) {\n    clearTimeout(this.closeTimeout);\n    Animated.timing(this.state.fadeAnim, {\n      toValue: 0,\n      duration: 200,\n      useNativeDriver: false,\n    }).start(() => {\n      this.closeModal(reason);\n      this.state.pan.setValue({ x: 0, y: 0 });\n    });\n  }\n\n  render() {\n    if (this.state.modalVisible) {\n      const { x, y } = this.state.pan;\n      return (\n        <Animated.View\n          {...this.state.swipeDisabled ? {} : this._panResponder.panHandlers}\n          style={[\n            this.getSnackbarStyle(),\n            { transform: [{ translateX: x }, { translateY: y }] },\n          ]}\n        >\n          <Toast\n            style={[this.state.style, {\n              borderRadius: 5\n            }]}\n            danger={this.state.type === 'danger'}\n            success={this.state.type === 'success'}\n            warning={this.state.type === 'warning'}\n          >\n            <Text style={this.state.textStyle}>{this.state.text}</Text>\n            {this.state.buttonText && (\n              <Button\n                style={this.state.buttonStyle}\n                onPress={() => this.closeSnackbar('user')}\n              >\n                <Text style={this.state.buttonTextStyle}>\n                  {this.state.buttonText.toUpperCase()}\n                </Text>\n              </Button>\n            )}\n          </Toast>\n        </Animated.View>\n      );\n    }\n    return null;\n  }\n}\n\nSnackbarContainer.propTypes = {\n  ...ViewPropTypes,\n};\n\nconst StyledSnackbarContainer = connectStyle(\n  'NativeBase.ToastContainer',\n  {},\n  mapPropsToStyleNames\n)(SnackbarContainer);\n\nexport { StyledSnackbarContainer as SnackbarContainer };"]}