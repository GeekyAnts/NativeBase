{"version":3,"sources":["../../../src/basic/Spinner.js"],"names":["Spinner","variables","context","theme","variable","_root","c","props","color","inverse","inverseSpinnerColor","defaultSpinnerColor","size","Component","contextTypes","PropTypes","object","propTypes","ActivityIndicator","string","bool","StyledSpinner","mapPropsToStyleNames"],"mappings":"21BAAA,4B,2CACA,qC,mDACA,yCACA,iEAEA,qD,iDACA,mE,68BAEMA,Q,mRAIK,iBACP,GAAMC,WAAY,KAAKC,OAAL,CAAaC,KAAb,CACd,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SADnC,CAEdG,kBAFJ,CAGA,MACE,+BAAC,8BAAD,WACE,IAAK,sBAAM,QAAKC,KAAL,CAAaC,CAAnB,EADP,EAEM,KAAKC,KAFX,EAGE,MACE,KAAKA,KAAL,CAAWC,KAAX,CACI,KAAKD,KAAL,CAAWC,KADf,CAEI,KAAKD,KAAL,CAAWE,OAAX,CACAR,UAAUS,mBADV,CAEAT,UAAUU,mBARlB,CAUE,KAAM,KAAKJ,KAAL,CAAWK,IAAX,CAAkB,KAAKL,KAAL,CAAWK,IAA7B,CAAoC,OAV5C,kDADF,CAcD,C,qBAtBmBC,gB,EAAhBb,O,CACGc,Y,CAAe,CACpBX,MAAOY,oBAAUC,MADG,C,CAwBxBhB,QAAQiB,SAAR,aACKC,+BAAkBD,SADvB,EAEET,MAAOO,oBAAUI,MAFnB,CAGEV,QAASM,oBAAUK,IAHrB,GAMA,GAAMC,eAAgB,yCACpB,oBADoB,CAEpB,EAFoB,CAGpBC,8BAHoB,EAIpBtB,OAJoB,CAAtB,C,QAM0BA,O,CAAjBqB,a","file":"Spinner.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ActivityIndicator } from 'react-native';\r\nimport { connectStyle } from 'native-base-shoutem-theme';\r\n\r\nimport variable from '../theme/variables/platform';\r\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\r\n\r\nclass Spinner extends Component {\r\n  static contextTypes = {\r\n    theme: PropTypes.object\r\n  };\r\n  render() {\r\n    const variables = this.context.theme\r\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\r\n      : variable;\r\n    return (\r\n      <ActivityIndicator\r\n        ref={c => (this._root = c)}\r\n        {...this.props}\r\n        color={\r\n          this.props.color\r\n            ? this.props.color\r\n            : this.props.inverse\r\n            ? variables.inverseSpinnerColor\r\n            : variables.defaultSpinnerColor\r\n        }\r\n        size={this.props.size ? this.props.size : 'large'}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSpinner.propTypes = {\r\n  ...ActivityIndicator.propTypes,\r\n  color: PropTypes.string,\r\n  inverse: PropTypes.bool\r\n};\r\n\r\nconst StyledSpinner = connectStyle(\r\n  'NativeBase.Spinner',\r\n  {},\r\n  mapPropsToStyleNames\r\n)(Spinner);\r\n\r\nexport { StyledSpinner as Spinner };\r\n"]}