{"version":3,"sources":["../../../src/basic/Spinner.js"],"names":["Spinner","variables","context","theme","variable","_root","c","props","color","inverse","inverseSpinnerColor","defaultSpinnerColor","size","Component","contextTypes","PropTypes","object","propTypes","ActivityIndicator","string","bool","StyledSpinner","mapPropsToStyleNames"],"mappings":"izBAAA,4B,2CACA,qC,mDACA,yCAEA,iEACA,qD,iDACA,mE,68BAEMA,Q,mRAII,iBACR,GAAMC,WAAY,KAAKC,OAAL,CAAaC,KAAb,CAAqB,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SAAtE,CAAkFG,kBAApG,CACA,MACC,+BAAC,8BAAD,WACC,IAAK,sBAAM,QAAKC,KAAL,CAAaC,CAAnB,EADN,EAEK,KAAKC,KAFV,EAGC,MACC,KAAKA,KAAL,CAAWC,KAAX,CACG,KAAKD,KAAL,CAAWC,KADd,CAEG,KAAKD,KAAL,CAAWE,OAAX,CAAqBR,UAAUS,mBAA/B,CAAqDT,UAAUU,mBANpE,CAQC,KAAM,KAAKJ,KAAL,CAAWK,IAAX,CAAkB,KAAKL,KAAL,CAAWK,IAA7B,CAAoC,OAR3C,GADD,CAYA,C,qBAlBoBC,gB,EAAhBb,O,CACEc,Y,CAAe,CACrBX,MAAOY,oBAAUC,MADI,C,CAoBvBhB,QAAQiB,SAAR,aACIC,+BAAkBD,SADtB,EAECT,MAAOO,oBAAUI,MAFlB,CAGCV,QAASM,oBAAUK,IAHpB,GAMA,GAAMC,eAAgB,yCAAa,oBAAb,CAAmC,EAAnC,CAAuCC,8BAAvC,EAA6DtB,OAA7D,CAAtB,C,QAE0BA,O,CAAjBqB,a","file":"Spinner.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ActivityIndicator } from \"react-native\";\n\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport variable from \"../theme/variables/platform\";\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\n\nclass Spinner extends Component {\n\tstatic contextTypes = {\n\t\ttheme: PropTypes.object,\n\t};\n\trender() {\n\t\tconst variables = this.context.theme ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables : variable;\n\t\treturn (\n\t\t\t<ActivityIndicator\n\t\t\t\tref={c => (this._root = c)}\n\t\t\t\t{...this.props}\n\t\t\t\tcolor={\n\t\t\t\t\tthis.props.color\n\t\t\t\t\t\t? this.props.color\n\t\t\t\t\t\t: this.props.inverse ? variables.inverseSpinnerColor : variables.defaultSpinnerColor\n\t\t\t\t}\n\t\t\t\tsize={this.props.size ? this.props.size : \"large\"}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nSpinner.propTypes = {\n\t...ActivityIndicator.propTypes,\n\tcolor: PropTypes.string,\n\tinverse: PropTypes.bool,\n};\n\nconst StyledSpinner = connectStyle(\"NativeBase.Spinner\", {}, mapPropsToStyleNames)(Spinner);\n\nexport { StyledSpinner as Spinner };\n"]}