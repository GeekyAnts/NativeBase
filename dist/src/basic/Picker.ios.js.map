{"version":3,"sources":["../../../src/basic/Picker.ios.js"],"names":["PickerNB","props","state","modalVisible","currentLabel","getLabel","dataSource","children","nextProps","nextLabel","currentDS","nextDS","setState","picker","pickerItem","visible","defaultProps","style","getInitialStyle","itemStyle","item","_","find","child","value","selectedValue","get","React","cloneElement","iosIcon","fontSize","lineHeight","color","placeholderIconColor","onPress","_setModalVisible","text","placeholder","renderButton","selectedItem","getSelectedItem","textStyle","note","placeholderStyle","undefined","renderIcon","renderHeader","headerStyle","shadowOffset","shadowColor","shadowRadius","shadowOpacity","headerBackButtonStyle","headerBackButtonTextStyle","headerBackButtonText","headerTitleStyle","iosHeader","_root","c","supportedOrientations","index","String","onValueChange","current","label","itemTextStyle","Component","Item","render","propTypes","ViewPropTypes","PropTypes","func","StyledPickerNB","mapPropsToStyleNames"],"mappings":"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","file":"Picker.ios.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport createReactClass from \"create-react-class\";\nimport { Picker, Modal, View, ViewPropTypes, FlatList } from \"react-native\";\nimport _ from \"lodash\";\nimport { Text } from \"./Text\";\nimport { List } from \"./List\";\nimport { IconNB as Icon } from \"./IconNB\";\nimport { Radio } from \"./Radio\";\nimport { Container } from \"./Container\";\nimport { ListItem } from \"./ListItem\";\nimport { Button } from \"./Button\";\nimport { Header } from \"./Header\";\nimport { Title } from \"./Title\";\nimport { Left } from \"./Left\";\nimport { Right } from \"./Right\";\nimport { Body } from \"./Body\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport computeProps from \"../utils/computeProps\";\n\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\n\nclass PickerNB extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalVisible: false,\n      currentLabel: this.getLabel(props),\n      dataSource: props.children\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const currentLabel = this.state.currentLabel;\n    const nextLabel = this.getLabel(nextProps);\n    const currentDS = this.state.dataSource;\n    const nextDS = nextProps.children;\n\n    if (currentLabel !== nextLabel) {\n      this.setState({\n        currentLabel: nextLabel\n      });\n    }\n    if (currentDS !== nextDS) {\n      this.setState({\n        dataSource: nextDS\n      });\n    }\n  }\n\n  getInitialStyle() {\n    return {\n      picker: {\n        // alignItems: 'flex-end'\n      },\n      pickerItem: {}\n    };\n  }\n  _setModalVisible(visible) {\n    this.setState({ modalVisible: visible });\n  }\n\n  prepareRootProps() {\n    const defaultProps = {\n      style: this.getInitialStyle().picker,\n      itemStyle: this.getInitialStyle().pickerItem\n    };\n\n    return computeProps(this.props, defaultProps);\n  }\n\n  getLabel(props) {\n    const item = _.find(\n      props.children,\n      child => child.props.value === props.selectedValue\n    );\n    return _.get(item, \"props.label\");\n  }\n\n  getSelectedItem() {\n    return _.find(\n      this.props.children,\n      child => child.props.value === this.props.selectedValue\n    );\n  }\n\n  renderIcon() {\n    return React.cloneElement(this.props.iosIcon, {\n      style: [{\n        fontSize: 22,\n        lineHeight: 26,\n        color: this.props.placeholderIconColor\n      }, { ...this.props.iosIcon.props.style }]\n    });\n  }\n\n  renderButton() {\n    const onPress = () => {\n      this._setModalVisible(true);\n    };\n    const text = this.state.currentLabel\n      ? this.state.currentLabel\n      : this.props.placeholder;\n    if (this.props.renderButton) {\n      return this.props.renderButton({\n        onPress,\n        text,\n        picker: this,\n        selectedItem: this.getSelectedItem()\n      });\n    }\n    return (\n      <Button\n        style={this.props.style}\n        dark\n        picker\n        transparent\n        onPress={onPress}\n      >\n        {this.state.currentLabel ? (\n          <Text style={this.props.textStyle} note={this.props.note}>\n            {this.state.currentLabel}\n          </Text>\n        ) : (\n            <Text\n              style={[this.props.textStyle, this.props.placeholderStyle]}\n              note={this.props.note === false ? false : true}\n            >\n              {this.props.placeholder}\n            </Text>\n          )}\n        {this.props.iosIcon === undefined ? null : this.renderIcon()}\n      </Button>\n    );\n  }\n\n  renderHeader() {\n    return this.props.renderHeader ? (\n      this.props.renderHeader(() => this._setModalVisible(false))\n    ) : (\n        <Header style={this.props.headerStyle}>\n          <Left>\n            <Button\n              style={{\n                shadowOffset: null,\n                shadowColor: null,\n                shadowRadius: null,\n                shadowOpacity: null,\n                ...this.props.headerBackButtonStyle\n              }}\n              transparent\n              onPress={() => {\n                this._setModalVisible(false);\n              }}\n            >\n              <Text style={this.props.headerBackButtonTextStyle}>\n                {this.props.headerBackButtonText || \"Back\"}\n              </Text>\n            </Button>\n          </Left>\n          <Body>\n            <Title style={this.props.headerTitleStyle}>\n              {this.props.iosHeader || \"Select One\"}\n            </Title>\n          </Body>\n          <Right />\n        </Header>\n      );\n  }\n\n  render() {\n    return (\n      <View ref={c => (this._root = c)}>\n        {this.renderButton()}\n        <Modal\n          supportedOrientations={this.props.supportedOrientations || null}\n          animationType=\"slide\"\n          transparent={false}\n          visible={this.state.modalVisible}\n          onRequestClose={() => {\n            this._setModalVisible(false);\n          }}\n        >\n          <Container>\n            {this.renderHeader()}\n            <FlatList\n              data={this.state.dataSource}\n              keyExtractor={(item, index) => String(index)}\n              renderItem={({ item }) => <ListItem\n                selected={item.props.value === this.props.selectedValue}\n                button\n                style={this.props.itemStyle}\n                onPress={() => {\n                  this._setModalVisible(false);\n                  this.props.onValueChange(item.props.value);\n                  this.setState({ current: item.props.label });\n                }}\n              >\n                <Text style={this.props.itemTextStyle}>\n                  {item.props.label}\n                </Text>\n                <Right>\n                  {item.props.value === this.props.selectedValue ? (\n                    <Radio selected />\n                  ) : (\n                      <Radio selected={false} />\n                    )}\n                </Right>\n              </ListItem>}\n            />\n          </Container>\n        </Modal>\n      </View >\n    );\n  }\n}\n\nPickerNB.Item = createReactClass({\n  render() {\n    return <Picker.Item {...this.props()} />;\n  }\n});\n\nPickerNB.propTypes = {\n  ...ViewPropTypes,\n  renderButton: PropTypes.func\n};\n\nconst StyledPickerNB = connectStyle(\n  \"NativeBase.PickerNB\",\n  {},\n  mapPropsToStyleNames\n)(PickerNB);\n\nexport { StyledPickerNB as PickerNB };\n"]}