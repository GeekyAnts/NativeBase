{"version":3,"sources":["../../../src/basic/Picker.ios.js"],"names":["PickerNB","props","getInitialStyle","picker","pickerItem","getChildren","children","Array","isArray","concat","appliedChildren","apply","state","modalVisible","currentLabel","getLabel","dataSource","item","child","value","selectedValue","defaultProps","style","itemStyle","visible","setState","React","cloneElement","iosIcon","fontSize","lineHeight","onPress","enabled","undefined","_setModalVisible","text","placeholder","renderButton","selectedItem","getSelectedItem","textStyle","note","placeholderStyle","renderIcon","renderHeader","headerStyle","shadowOffset","shadowColor","shadowRadius","shadowOpacity","marginLeft","headerBackButtonStyle","headerBackButtonTextStyle","headerBackButtonText","headerTitleStyle","iosHeader","nextProps","nextLabel","currentDS","nextDS","_root","c","modalStyle","testID","index","String","onValueChange","current","label","itemTextStyle","Component","Item","render","propTypes","ViewPropTypes","PropTypes","func","StyledPickerNB","mapPropsToStyleNames"],"mappings":"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","file":"Picker.ios.js","sourcesContent":["/* eslint-disable react/prefer-stateless-function */\r\n/* eslint-disable react/prefer-es6-class */\r\n/* eslint-disable react/sort-comp */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport createReactClass from 'create-react-class';\r\nimport { FlatList, Modal, Picker, View, ViewPropTypes } from 'react-native';\r\nimport { connectStyle } from 'native-base-shoutem-theme';\r\nimport { find, get } from 'lodash';\r\n\r\nimport computeProps from '../utils/computeProps';\r\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\r\n\r\nimport { Text } from './Text';\r\nimport { Radio } from './Radio';\r\nimport { Container } from './Container';\r\nimport { ListItem } from './ListItem';\r\nimport { Button } from './Button';\r\nimport { Header } from './Header';\r\nimport { Title } from './Title';\r\nimport { Left } from './Left';\r\nimport { Right } from './Right';\r\nimport { Body } from './Body';\r\n\r\nclass PickerNB extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalVisible: false,\r\n      currentLabel: this.getLabel(props),\r\n      dataSource: this.getChildren(props.children)\r\n    };\r\n  }\r\n\r\n  getInitialStyle = () => {\r\n    return {\r\n      picker: {\r\n        // alignItems: 'flex-end'\r\n      },\r\n      pickerItem: {}\r\n    };\r\n  };\r\n\r\n  getLabel(props) {\r\n    const children = this.getChildren(props.children);\r\n    const item = find(\r\n      children,\r\n      child => child.props.value === props.selectedValue\r\n    );\r\n    return get(item, 'props.label');\r\n  }\r\n\r\n  getSelectedItem() {\r\n    return find(\r\n      this.props.children,\r\n      child => child.props.value === this.props.selectedValue\r\n    );\r\n  }\r\n\r\n  getChildren = children => {\r\n    if (children && !Array.isArray(children)) {\r\n      return [].concat(children);\r\n    }\r\n    // eslint-disable-next-line prefer-spread\r\n    const appliedChildren = [].concat.apply([], children);\r\n    return appliedChildren;\r\n  };\r\n\r\n  prepareRootProps() {\r\n    const defaultProps = {\r\n      style: this.getInitialStyle().picker,\r\n      itemStyle: this.getInitialStyle().pickerItem\r\n    };\r\n\r\n    return computeProps(this.props, defaultProps);\r\n  }\r\n\r\n  _setModalVisible(visible) {\r\n    this.setState({ modalVisible: visible });\r\n  }\r\n\r\n  renderIcon() {\r\n    return React.cloneElement(this.props.iosIcon, {\r\n      style: [\r\n        {\r\n          fontSize: 22,\r\n          lineHeight: 26\r\n        },\r\n        { ...this.props.iosIcon.props.style }\r\n      ]\r\n    });\r\n  }\r\n\r\n  renderButton() {\r\n    const onPress = () => {\r\n      if (this.props.enabled !== undefined && !this.props.enabled) return;\r\n      this._setModalVisible(true);\r\n    };\r\n    const text = this.state.currentLabel\r\n      ? this.state.currentLabel\r\n      : this.props.placeholder;\r\n    if (this.props.renderButton) {\r\n      return this.props.renderButton({\r\n        onPress,\r\n        text,\r\n        picker: this,\r\n        selectedItem: this.getSelectedItem()\r\n      });\r\n    }\r\n    return (\r\n      <Button\r\n        style={this.props.style}\r\n        dark\r\n        picker\r\n        transparent\r\n        onPress={onPress}\r\n      >\r\n        {this.state.currentLabel ? (\r\n          <Text\r\n            style={[this.props.textStyle]}\r\n            note={this.props.note}\r\n            numberOfLines={1}\r\n            ellipsizeMode=\"tail\"\r\n          >\r\n            {this.state.currentLabel}\r\n          </Text>\r\n        ) : (\r\n          <Text\r\n            style={[this.props.textStyle, this.props.placeholderStyle]}\r\n            note={this.props.note !== false}\r\n            numberOfLines={1}\r\n            ellipsizeMode=\"tail\"\r\n          >\r\n            {this.props.placeholder}\r\n          </Text>\r\n        )}\r\n        {this.props.iosIcon === undefined ? null : this.renderIcon()}\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  renderHeader() {\r\n    return this.props.renderHeader ? (\r\n      this.props.renderHeader(() => this._setModalVisible(false))\r\n    ) : (\r\n      <Header style={this.props.headerStyle}>\r\n        <Left>\r\n          <Button\r\n            style={{\r\n              shadowOffset: null,\r\n              shadowColor: null,\r\n              shadowRadius: null,\r\n              shadowOpacity: null,\r\n              marginLeft: 3,\r\n              ...this.props.headerBackButtonStyle\r\n            }}\r\n            transparent\r\n            onPress={() => {\r\n              this._setModalVisible(false);\r\n            }}\r\n          >\r\n            <Text style={this.props.headerBackButtonTextStyle}>\r\n              {this.props.headerBackButtonText || 'Back'}\r\n            </Text>\r\n          </Button>\r\n        </Left>\r\n        <Body>\r\n          <Title style={this.props.headerTitleStyle}>\r\n            {this.props.iosHeader || 'Select One'}\r\n          </Title>\r\n        </Body>\r\n        <Right />\r\n      </Header>\r\n    );\r\n  }\r\n\r\n  // eslint-disable-next-line camelcase\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    const currentLabel = this.state.currentLabel;\r\n    const nextLabel = this.getLabel(nextProps);\r\n    const currentDS = this.state.dataSource;\r\n    const nextDS = this.getChildren(nextProps.children);\r\n\r\n    if (currentLabel !== nextLabel) {\r\n      this.setState({\r\n        currentLabel: nextLabel\r\n      });\r\n    }\r\n    if (currentDS !== nextDS) {\r\n      this.setState({\r\n        dataSource: nextDS\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View ref={c => (this._root = c)}>\r\n        {this.renderButton()}\r\n        <Modal\r\n          // supportedOrientations={this.props.supportedOrientations || null}\r\n          supportedOrientations={['portrait', 'landscape']}\r\n          animationType=\"slide\"\r\n          transparent={false}\r\n          visible={this.state.modalVisible}\r\n          onRequestClose={() => {\r\n            this._setModalVisible(false);\r\n          }}\r\n        >\r\n          <Container style={this.props.modalStyle}>\r\n            {this.renderHeader()}\r\n            <FlatList\r\n              testID={this.props.testID}\r\n              data={this.state.dataSource}\r\n              keyExtractor={(item, index) => String(index)}\r\n              renderItem={({ item }) => (\r\n                <ListItem\r\n                  selected={item.props.value === this.props.selectedValue}\r\n                  button\r\n                  style={this.props.itemStyle}\r\n                  onPress={() => {\r\n                    this._setModalVisible(false);\r\n                    this.props.onValueChange(item.props.value);\r\n                    this.setState({ current: item.props.label });\r\n                  }}\r\n                >\r\n                  <Left>\r\n                    <Text style={this.props.itemTextStyle}>\r\n                      {item.props.label}\r\n                    </Text>\r\n                  </Left>\r\n                  <Right>\r\n                    {item.props.value === this.props.selectedValue ? (\r\n                      <Radio selected />\r\n                    ) : (\r\n                      <Radio selected={false} />\r\n                    )}\r\n                  </Right>\r\n                </ListItem>\r\n              )}\r\n            />\r\n          </Container>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\n// eslint-disable-next-line react/no-multi-comp\r\nPickerNB.Item = createReactClass({\r\n  render() {\r\n    return <Picker.Item {...this.props()} />;\r\n  }\r\n});\r\n\r\nPickerNB.propTypes = {\r\n  ...ViewPropTypes,\r\n  renderButton: PropTypes.func\r\n};\r\n\r\nconst StyledPickerNB = connectStyle(\r\n  'NativeBase.PickerNB',\r\n  {},\r\n  mapPropsToStyleNames\r\n)(PickerNB);\r\n\r\nexport { StyledPickerNB as PickerNB };\r\n"]}