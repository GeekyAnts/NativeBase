{"version":3,"sources":["../../../src/basic/Picker.ios.js"],"names":["PickerNB","props","state","modalVisible","currentLabel","getLabel","dataSource","getChildren","children","nextProps","nextLabel","currentDS","nextDS","setState","picker","pickerItem","visible","defaultProps","style","getInitialStyle","itemStyle","item","_","find","child","value","selectedValue","get","Array","isArray","concat","React","cloneElement","iosIcon","fontSize","lineHeight","onPress","enabled","undefined","_setModalVisible","text","placeholder","renderButton","selectedItem","getSelectedItem","textStyle","note","placeholderStyle","renderIcon","renderHeader","headerStyle","shadowOffset","shadowColor","shadowRadius","shadowOpacity","marginLeft","headerBackButtonStyle","headerBackButtonTextStyle","headerBackButtonText","headerTitleStyle","iosHeader","_root","c","supportedOrientations","modalStyle","index","String","onValueChange","current","label","itemTextStyle","Component","Item","render","propTypes","ViewPropTypes","PropTypes","func","StyledPickerNB","mapPropsToStyleNames"],"mappings":"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","file":"Picker.ios.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport createReactClass from \"create-react-class\";\r\nimport { Picker, Modal, View, ViewPropTypes, FlatList } from \"react-native\";\r\nimport _ from \"lodash\";\r\nimport { Text } from \"./Text\";\r\nimport { List } from \"./List\";\r\nimport { IconNB as Icon } from \"./IconNB\";\r\nimport { Radio } from \"./Radio\";\r\nimport { Container } from \"./Container\";\r\nimport { ListItem } from \"./ListItem\";\r\nimport { Button } from \"./Button\";\r\nimport { Header } from \"./Header\";\r\nimport { Title } from \"./Title\";\r\nimport { Left } from \"./Left\";\r\nimport { Right } from \"./Right\";\r\nimport { Body } from \"./Body\";\r\nimport { connectStyle } from \"native-base-shoutem-theme\";\r\nimport computeProps from \"../utils/computeProps\";\r\n\r\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\r\n\r\nclass PickerNB extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalVisible: false,\r\n      currentLabel: this.getLabel(props),\r\n      dataSource: this.getChildren(props.children)\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const currentLabel = this.state.currentLabel;\r\n    const nextLabel = this.getLabel(nextProps);\r\n    const currentDS = this.state.dataSource;\r\n    const nextDS = this.getChildren(nextProps.children);\r\n\r\n    if (currentLabel !== nextLabel) {\r\n      this.setState({\r\n        currentLabel: nextLabel\r\n      });\r\n    }\r\n    if (currentDS !== nextDS) {\r\n      this.setState({\r\n        dataSource: nextDS\r\n      });\r\n    }\r\n  }\r\n\r\n  getInitialStyle() {\r\n    return {\r\n      picker: {\r\n        // alignItems: 'flex-end'\r\n      },\r\n      pickerItem: {}\r\n    };\r\n  }\r\n  _setModalVisible(visible) {\r\n    this.setState({ modalVisible: visible });\r\n  }\r\n\r\n  prepareRootProps() {\r\n    const defaultProps = {\r\n      style: this.getInitialStyle().picker,\r\n      itemStyle: this.getInitialStyle().pickerItem\r\n    };\r\n\r\n    return computeProps(this.props, defaultProps);\r\n  }\r\n\r\n  getLabel(props) {\r\n    let children = this.getChildren(props.children);\r\n    const item = _.find(\r\n      children,\r\n      child => child.props.value === props.selectedValue\r\n    );\r\n    return _.get(item, \"props.label\");\r\n  }\r\n\r\n  getSelectedItem() {\r\n    return _.find(\r\n      this.props.children,\r\n      child => child.props.value === this.props.selectedValue\r\n    );\r\n  }\r\n\r\n  getChildren(children) {\r\n    if (children && !Array.isArray(children)) {\r\n      return [].concat(children);\r\n    }\r\n    return children;\r\n  }\r\n\r\n  renderIcon() {\r\n    return React.cloneElement(this.props.iosIcon, {\r\n      style: [\r\n        {\r\n          fontSize: 22,\r\n          lineHeight: 26\r\n        },\r\n        { ...this.props.iosIcon.props.style }\r\n      ]\r\n    });\r\n  }\r\n\r\n  renderButton() {\r\n    const onPress = () => {\r\n      if (this.props.enabled !== undefined && !this.props.enabled) return;\r\n      this._setModalVisible(true);\r\n    };\r\n    const text = this.state.currentLabel\r\n      ? this.state.currentLabel\r\n      : this.props.placeholder;\r\n    if (this.props.renderButton) {\r\n      return this.props.renderButton({\r\n        onPress,\r\n        text,\r\n        picker: this,\r\n        selectedItem: this.getSelectedItem()\r\n      });\r\n    }\r\n    return (\r\n      <Button\r\n        style={this.props.style}\r\n        dark\r\n        picker\r\n        transparent\r\n        onPress={onPress}\r\n      >\r\n        {this.state.currentLabel ? (\r\n          <Text style={this.props.textStyle} note={this.props.note}>\r\n            {this.state.currentLabel}\r\n          </Text>\r\n        ) : (\r\n          <Text\r\n            style={[this.props.textStyle, this.props.placeholderStyle]}\r\n            note={this.props.note === false ? false : true}\r\n          >\r\n            {this.props.placeholder}\r\n          </Text>\r\n        )}\r\n        {this.props.iosIcon === undefined ? null : this.renderIcon()}\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  renderHeader() {\r\n    return this.props.renderHeader ? (\r\n      this.props.renderHeader(() => this._setModalVisible(false))\r\n    ) : (\r\n      <Header style={this.props.headerStyle}>\r\n        <Left>\r\n          <Button\r\n            style={{\r\n              shadowOffset: null,\r\n              shadowColor: null,\r\n              shadowRadius: null,\r\n              shadowOpacity: null,\r\n              marginLeft: 3,\r\n              ...this.props.headerBackButtonStyle\r\n            }}\r\n            transparent\r\n            onPress={() => {\r\n              this._setModalVisible(false);\r\n            }}\r\n          >\r\n            <Text style={this.props.headerBackButtonTextStyle}>\r\n              {this.props.headerBackButtonText || \"Back\"}\r\n            </Text>\r\n          </Button>\r\n        </Left>\r\n        <Body>\r\n          <Title style={this.props.headerTitleStyle}>\r\n            {this.props.iosHeader || \"Select One\"}\r\n          </Title>\r\n        </Body>\r\n        <Right />\r\n      </Header>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View ref={c => (this._root = c)}>\r\n        {this.renderButton()}\r\n        <Modal\r\n          supportedOrientations={this.props.supportedOrientations || null}\r\n          animationType=\"slide\"\r\n          transparent={false}\r\n          visible={this.state.modalVisible}\r\n          onRequestClose={() => {\r\n            this._setModalVisible(false);\r\n          }}\r\n        >\r\n          <Container style={this.props.modalStyle}>\r\n            {this.renderHeader()}\r\n            <FlatList\r\n              data={this.state.dataSource}\r\n              keyExtractor={(item, index) => String(index)}\r\n              renderItem={({ item }) => (\r\n                <ListItem\r\n                  selected={item.props.value === this.props.selectedValue}\r\n                  button\r\n                  style={this.props.itemStyle}\r\n                  onPress={() => {\r\n                    this._setModalVisible(false);\r\n                    this.props.onValueChange(item.props.value);\r\n                    this.setState({ current: item.props.label });\r\n                  }}\r\n                >\r\n                  <Left>\r\n                    <Text style={this.props.itemTextStyle}>\r\n                      {item.props.label}\r\n                    </Text>\r\n                  </Left>\r\n                  <Right>\r\n                    {item.props.value === this.props.selectedValue ? (\r\n                      <Radio selected />\r\n                    ) : (\r\n                      <Radio selected={false} />\r\n                    )}\r\n                  </Right>\r\n                </ListItem>\r\n              )}\r\n            />\r\n          </Container>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nPickerNB.Item = createReactClass({\r\n  render() {\r\n    return <Picker.Item {...this.props()} />;\r\n  }\r\n});\r\n\r\nPickerNB.propTypes = {\r\n  ...ViewPropTypes,\r\n  renderButton: PropTypes.func\r\n};\r\n\r\nconst StyledPickerNB = connectStyle(\r\n  \"NativeBase.PickerNB\",\r\n  {},\r\n  mapPropsToStyleNames\r\n)(PickerNB);\r\n\r\nexport { StyledPickerNB as PickerNB };\r\n"]}