{"version":3,"sources":["../../../src/basic/CardItem.js"],"names":["CardItem","props","button","_root","c","children","propTypes","style","oneOfType","object","number","array","header","bool","cardBody","footer","StyledCardItem"],"mappings":"61BAAA,4B;AACA,qC;AACA;;AAEA;AACA,mE;;AAEMA,Q;AACI;AACR,GAAI,KAAKC,KAAL,CAAWC,MAAf,CAAuB;AACtB;AACC;AACC,IAAK,sBAAM,QAAKC,KAAL,CAAaC,CAAnB,EADN;AAEK,KAAKH,KAFV;AAGC,cAAe,KAAKA,KAAL,CAAWC,MAAX,CAAoB,GAApB,CAA0B,CAH1C;;AAKE,KAAKD,KAAL,CAAWI,QALb,CADD;;;AASA,CAVD,IAUO;AACN;AACC,0DAAM,IAAK,sBAAM,QAAKF,KAAL,CAAaC,CAAnB,EAAX,EAAsC,KAAKH,KAA3C;AACE,KAAKA,KAAL,CAAWI,QADb,CADD;;;AAKA;AACD,C;;;AAGFL,SAASM,SAAT;AACI,8BAAiBA,SADrB;AAECC,MAAO,oBAAUC,SAAV,CAAoB,CAAC,oBAAUC,MAAX,CAAmB,oBAAUC,MAA7B,CAAqC,oBAAUC,KAA/C,CAApB,CAFR;AAGCC,OAAQ,oBAAUC,IAHnB;AAICC,SAAU,oBAAUD,IAJrB;AAKCE,OAAQ,oBAAUF,IALnB;AAMCX,OAAQ,oBAAUW,IANnB;;;AASA,GAAMG,gBAAiB,yCAAa,qBAAb,CAAoC,EAApC,iCAA8DhB,QAA9D,CAAvB,C;;AAE2BA,Q,CAAlBgB,c","file":"CardItem.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TouchableOpacity, View } from \"react-native\";\r\n\r\nimport { connectStyle } from \"native-base-shoutem-theme\";\r\nimport mapPropsToStyleNames from \"../Utils/mapPropsToStyleNames\";\r\n\r\nclass CardItem extends Component {\r\n\trender() {\r\n\t\tif (this.props.button) {\r\n\t\t\treturn (\r\n\t\t\t\t<TouchableOpacity\r\n\t\t\t\t\tref={c => (this._root = c)}\r\n\t\t\t\t\t{...this.props}\r\n\t\t\t\t\tactiveOpacity={this.props.button ? 0.2 : 1}\r\n\t\t\t\t>\r\n\t\t\t\t\t{this.props.children}\r\n\t\t\t\t</TouchableOpacity>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<View ref={c => (this._root = c)} {...this.props}>\r\n\t\t\t\t\t{this.props.children}\r\n\t\t\t\t</View>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nCardItem.propTypes = {\r\n\t...TouchableOpacity.propTypes,\r\n\tstyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\r\n\theader: PropTypes.bool,\r\n\tcardBody: PropTypes.bool,\r\n\tfooter: PropTypes.bool,\r\n\tbutton: PropTypes.bool,\r\n};\r\n\r\nconst StyledCardItem = connectStyle(\"NativeBase.CardItem\", {}, mapPropsToStyleNames)(CardItem);\r\n\r\nexport { StyledCardItem as CardItem };\r\n"]}