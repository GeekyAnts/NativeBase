{"version":3,"sources":["../../../src/basic/IconNB.js"],"names":["IconNB","context","theme","variables","iconFamily","Icon","_root","c","props","contextTypes","PropTypes","object","propTypes","style","StyledIconNB"],"mappings":"gzBAAA,4B;;AAEA;;AAEA,4D;AACA,wD;AACA,kE;AACA,gE;AACA,sE;AACA,4D;AACA,wD;;AAEA,mE;;AAEMA,M;;;;;AAKiB;AACnB,GAAI,KAAKC,OAAL,CAAaC,KAAjB,CAAwB;AACtB,OAAQ,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDC,SAAjD,CAA2DC,UAAnE;AACE,IAAK,UAAL;AACE,KAAKC,IAAL;AACA;AACF,IAAK,QAAL;AACE,KAAKA,IAAL;AACA;AACF,IAAK,aAAL;AACE,KAAKA,IAAL;AACA;AACF,IAAK,YAAL;AACE,KAAKA,IAAL;AACA;AACF,IAAK,eAAL;AACE,KAAKA,IAAL;AACA;AACF,IAAK,UAAL;AACE,KAAKA,IAAL;AACA;AACF,IAAK,QAAL;AACE,KAAKA,IAAL;AACA;AACF;AACE,KAAKA,IAAL,oBAvBJ;;AAyBD,CA1BD,IA0BO;AACL,KAAKA,IAAL;AACD;AACF,C;;AAEQ;AACP;AACE,mCAAM,IAAN,WAAW,IAAK,sBAAK,QAAKC,KAAL,CAAaC,CAAlB,EAAhB,EAAyC,KAAKC,KAA9C,EADF;;AAGD,C,sCAzCGR,M,CACGS,Y,CAAe,CACpBP,MAAO,gBAAMQ,SAAN,CAAgBC,MADH,C;;;AA2CxBX,OAAOY,SAAP;AACK,mBAASA,SADd;AAEEC,MAAO,gBAAMH,SAAN,CAAgBC,MAFzB;;;AAKA,GAAMG,cAAe,wBAAa,mBAAb,CAAkC,EAAlC,iCAA4Dd,MAA5D,CAArB,C;;;AAGkBA,M,CAAhBc,Y","file":"IconNB.js","sourcesContent":["import React, { Component } from 'react';\n\nimport { connectStyle } from '@shoutem/theme';\n\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport Entypo from 'react-native-vector-icons/Entypo';\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\nimport Foundation from 'react-native-vector-icons/Foundation';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\nimport Octicons from 'react-native-vector-icons/Octicons';\nimport Zocial from 'react-native-vector-icons/Zocial';\n\nimport mapPropsToStyleNames from '../Utils/mapPropsToStyleNames';\n\nclass IconNB extends Component {\n  static contextTypes = {\n    theme: React.PropTypes.object,\n  }\n\n  componentWillMount() {\n    if (this.context.theme) {\n      switch (this.context.theme['@@shoutem.theme/themeStyle'].variables.iconFamily) {\n        case 'Ionicons':\n          this.Icon = Ionicons;\n          break;\n        case 'Entypo':\n          this.Icon = Entypo;\n          break;\n        case 'FontAwesome':\n          this.Icon = FontAwesome;\n          break;\n        case 'Foundation':\n          this.Icon = Foundation;\n          break;\n        case 'MaterialIcons':\n          this.Icon = MaterialIcons;\n          break;\n        case 'Octicons':\n          this.Icon = Octicons;\n          break;\n        case 'Zocial':\n          this.Icon = Zocial;\n          break;\n        default:\n          this.Icon = Ionicons;\n      }\n    } else {\n      this.Icon = Ionicons;\n    }\n  }\n\n  render() {\n    return (\n      <this.Icon ref={c => this._root = c} {...this.props} />\n    );\n  }\n}\n\nIconNB.propTypes = {\n  ...Ionicons.propTypes,\n  style: React.PropTypes.object,\n};\n\nconst StyledIconNB = connectStyle('NativeBase.IconNB', {}, mapPropsToStyleNames)(IconNB);\n\nexport {\n  StyledIconNB as IconNB,\n};\n"]}