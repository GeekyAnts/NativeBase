{"version":3,"sources":["../../../src/basic/IconNB.js"],"names":["IconNB","iconType","undefined","context","theme","variables","iconFamily","Icon","Entypo","EvilIcons","Feather","FontAwesome","Foundation","Ionicons","MaterialCommunityIcons","MaterialIcons","Octicons","SimpleLineIcons","Zocial","setIcon","props","type","nextProps","nextState","_root","c","Component","contextTypes","PropTypes","object","propTypes","style","oneOfType","number","array","oneOf","StyledIconNB","mapPropsToStyleNames"],"mappings":"gzBAAA,4B,2CACA,qC,mDAEA,iEAEA,4D,iDACA,wD,6CACA,0D,+CACA,kE,uDACA,gE,qDACA,sE,2DACA,wF,6EACA,4D,iDACA,wD,6CACA,0E,+DACA,8D,mDAEA,mE,68BAEMA,O,8QAKIC,Q,CAAU,CAChB,GAAIA,UAAYC,SAAZ,EAAyB,KAAKC,OAAL,CAAaC,KAA1C,CAAiD,CAC/CH,SAAW,KAAKE,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDC,SAAjD,CACRC,UADH,CAED,CACD,OAAQL,QAAR,EACA,IAAK,QAAL,CACE,KAAKM,IAAL,CAAYC,gBAAZ,CACA,MACF,IAAK,WAAL,CACE,KAAKD,IAAL,CAAYE,mBAAZ,CACA,MACF,IAAK,SAAL,CACE,KAAKF,IAAL,CAAYG,iBAAZ,CACA,MACF,IAAK,aAAL,CACE,KAAKH,IAAL,CAAYI,qBAAZ,CACA,MACF,IAAK,YAAL,CACE,KAAKJ,IAAL,CAAYK,oBAAZ,CACA,MACF,IAAK,UAAL,CACE,KAAKL,IAAL,CAAYM,kBAAZ,CACA,MACF,IAAK,wBAAL,CACE,KAAKN,IAAL,CAAYO,gCAAZ,CACA,MACF,IAAK,eAAL,CACE,KAAKP,IAAL,CAAYQ,uBAAZ,CACA,MACF,IAAK,UAAL,CACE,KAAKR,IAAL,CAAYS,kBAAZ,CACA,MACF,IAAK,iBAAL,CACE,KAAKT,IAAL,CAAYU,yBAAZ,CACA,MACF,IAAK,QAAL,CACE,KAAKV,IAAL,CAAYW,gBAAZ,CACA,MACF,QACE,KAAKX,IAAL,CAAYM,kBAAZ,CAnCF,CAqCD,C,+DAEoB,CACnB,KAAKM,OAAL,CAAa,KAAKC,KAAL,CAAWC,IAAxB,EACD,C,gEAEmBC,S,CAAWC,S,CAAW,CACxC,GAAID,UAAUD,IAAV,EAAkB,KAAKD,KAAL,CAAWC,IAAX,EAAmBC,UAAUD,IAAnD,CAAyD,CACvD,KAAKF,OAAL,CAAaG,UAAUD,IAAvB,EACD,CACF,C,uCAEQ,iBACP,MAAO,oCAAM,IAAN,WAAW,IAAK,sBAAM,QAAKG,KAAL,CAAaC,CAAnB,EAAhB,EAA2C,KAAKL,KAAhD,EAAP,CACD,C,oBA7DkBM,gB,EAAf1B,M,CACG2B,Y,CAAe,CACpBvB,MAAOwB,oBAAUC,MADG,C,CA+DxB7B,OAAO8B,SAAP,CAAmB,CACjBC,MAAOH,oBAAUI,SAAV,CAAoB,CACzBJ,oBAAUC,MADe,CAEzBD,oBAAUK,MAFe,CAGzBL,oBAAUM,KAHe,CAApB,CADU,CAMjBb,KAAMO,oBAAUO,KAAV,CAAgB,CACpB,QADoB,CAEpB,WAFoB,CAGpB,SAHoB,CAIpB,aAJoB,CAKpB,YALoB,CAMpB,UANoB,CAOpB,wBAPoB,CAQpB,eARoB,CASpB,UAToB,CAUpB,iBAVoB,CAWpB,QAXoB,CAAhB,CANW,CAAnB,CAqBA,GAAMC,cAAe,yCACnB,mBADmB,CAEnB,EAFmB,CAGnBC,8BAHmB,EAInBrC,MAJmB,CAArB,C,QAMyBA,M,CAAhBoC,Y","file":"IconNB.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { connectStyle } from \"native-base-shoutem-theme\";\n\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\nimport Entypo from \"react-native-vector-icons/Entypo\";\nimport Feather from \"react-native-vector-icons/Feather\";\nimport FontAwesome from \"react-native-vector-icons/FontAwesome\";\nimport Foundation from \"react-native-vector-icons/Foundation\";\nimport MaterialIcons from \"react-native-vector-icons/MaterialIcons\";\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\nimport Octicons from \"react-native-vector-icons/Octicons\";\nimport Zocial from \"react-native-vector-icons/Zocial\";\nimport SimpleLineIcons from \"react-native-vector-icons/SimpleLineIcons\";\nimport EvilIcons from \"react-native-vector-icons/EvilIcons\";\n\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\n\nclass IconNB extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n\n  setIcon(iconType) {\n    if (iconType == undefined && this.context.theme) {\n      iconType = this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\n        .iconFamily;\n    }\n    switch (iconType) {\n    case \"Entypo\":\n      this.Icon = Entypo;\n      break;\n    case \"EvilIcons\":\n      this.Icon = EvilIcons;\n      break;\n    case \"Feather\":\n      this.Icon = Feather;\n      break;\n    case \"FontAwesome\":\n      this.Icon = FontAwesome;\n      break;\n    case \"Foundation\":\n      this.Icon = Foundation;\n      break;\n    case \"Ionicons\":\n      this.Icon = Ionicons;\n      break;\n    case \"MaterialCommunityIcons\":\n      this.Icon = MaterialCommunityIcons;\n      break;\n    case \"MaterialIcons\":\n      this.Icon = MaterialIcons;\n      break;\n    case \"Octicons\":\n      this.Icon = Octicons;\n      break;\n    case \"SimpleLineIcons\":\n      this.Icon = SimpleLineIcons;\n      break;\n    case \"Zocial\":\n      this.Icon = Zocial;\n      break;\n    default:\n      this.Icon = Ionicons;\n    }\n  }\n\n  componentWillMount() {\n    this.setIcon(this.props.type);\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (nextProps.type && this.props.type != nextProps.type) {\n      this.setIcon(nextProps.type);\n    }\n  }\n\n  render() {\n    return <this.Icon ref={c => (this._root = c)} {...this.props} />;\n  }\n}\n\nIconNB.propTypes = {\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ]),\n  type: PropTypes.oneOf([\n    \"Entypo\",\n    \"EvilIcons\",\n    \"Feather\",\n    \"FontAwesome\",\n    \"Foundation\",\n    \"Ionicons\",\n    \"MaterialCommunityIcons\",\n    \"MaterialIcons\",\n    \"Octicons\",\n    \"SimpleLineIcons\",\n    \"Zocial\"\n  ])\n};\n\nconst StyledIconNB = connectStyle(\n  \"NativeBase.IconNB\",\n  {},\n  mapPropsToStyleNames\n)(IconNB);\n\nexport { StyledIconNB as IconNB };\n"]}