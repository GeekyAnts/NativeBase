{"version":3,"sources":["../../../../src/basic/Tabs/ScrollableTabBar.js"],"names":["Button","require","ReactNative","View","Animated","StyleSheet","ScrollView","Platform","Dimensions","WINDOW_WIDTH","get","width","ScrollableTabBar","propTypes","goToPage","PropTypes","func","activeTab","number","tabs","array","backgroundColor","string","activeTextColor","inactiveTextColor","scrollOffset","style","ViewPropTypes","tabStyle","tabsContainerStyle","renderTab","underlineStyle","onScroll","disabled","bool","contextTypes","theme","object","getDefaultProps","variable","tabDefaultBg","tabFontSize","getInitialState","_tabsMeasurements","_leftTabUnderline","Value","_widthTabUnderline","_containerWidth","componentDidMount","props","scrollValue","addListener","updateView","offset","position","Math","floor","value","pageOffset","tabCount","length","lastTabPosition","necessarilyMeasurementsCompleted","updateTabPanel","updateTabUnderline","isLastTab","_tabContainerMeasurements","_containerMeasurements","containerWidth","tabWidth","nextTabMeasurements","nextTabWidth","tabOffset","left","absolutePageOffset","newScrollX","OS","_scrollView","scrollTo","x","y","animated","rightBoundScroll","lineLeft","lineRight","right","nextTabLeft","nextTabRight","newLineLeft","newLineRight","state","setValue","name","page","isTabActive","onPressHandler","onLayoutHandler","activeTabStyle","textStyle","activeTextStyle","tabHeaderStyle","headerContent","children","undefined","textColor","fontWeight","fontSize","_","random","measureTab","event","nativeEvent","layout","height","_value","render","variables","context","tabUnderlineStyle","topTabBarActiveBorderColor","bottom","dynamicTabUnderline","styles","container","onContainerLayout","scrollView","onTabContainerLayout","map","bind","componentWillReceiveProps","nextProps","isEqual","setState","e","StyledTab","mapPropsToStyleNames","ScrollableTab","create","tab","alignItems","justifyContent","paddingLeft","paddingRight","borderWidth","borderTopWidth","borderLeftWidth","borderRightWidth","borderColor","flexDirection"],"mappings":"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","file":"ScrollableTabBar.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport createReactClass from \"create-react-class\";\nimport _ from \"lodash\";\nimport { connectStyle, StyleProvider } from \"native-base-shoutem-theme\";\nimport mapPropsToStyleNames from \"../../utils/mapPropsToStyleNames\";\nimport variable from \"./../../theme/variables/platform\";\nimport { TabHeading } from \"../TabHeading\";\nimport { Text } from \"../Text\";\nimport { TabContainer } from \"../TabContainer\";\nimport { ViewPropTypes } from \"../../utils\";\nconst Button = require(\"./Button\");\nconst ReactNative = require(\"react-native\");\nconst {\n    View,\n    Animated,\n    StyleSheet,\n    ScrollView,\n    Platform,\n    Dimensions\n} = ReactNative;\n\nconst WINDOW_WIDTH = Dimensions.get(\"window\").width;\n\nconst ScrollableTabBar = createReactClass({\n    propTypes: {\n        goToPage: PropTypes.func,\n        activeTab: PropTypes.number,\n        tabs: PropTypes.array,\n        backgroundColor: PropTypes.string,\n        activeTextColor: PropTypes.string,\n        inactiveTextColor: PropTypes.string,\n        scrollOffset: PropTypes.number,\n        style: ViewPropTypes.style,\n        tabStyle: ViewPropTypes.style,\n        tabsContainerStyle: ViewPropTypes.style,\n        renderTab: PropTypes.func,\n        underlineStyle: ViewPropTypes.style,\n        onScroll: PropTypes.func,\n        disabled: ViewPropTypes.bool\n    },\n    contextTypes: {\n        theme: PropTypes.object\n    },\n\n    getDefaultProps() {\n        return {\n            scrollOffset: 52,\n            activeTextColor: \"navy\",\n            inactiveTextColor: \"black\",\n            backgroundColor: variable.tabDefaultBg,\n            style: {},\n            tabStyle: {},\n            tabsContainerStyle: {},\n            underlineStyle: {},\n            tabFontSize: variable.tabFontSize\n        };\n    },\n\n    getInitialState() {\n        this._tabsMeasurements = [];\n        return {\n            _leftTabUnderline: new Animated.Value(0),\n            _widthTabUnderline: new Animated.Value(0),\n            _containerWidth: null\n        };\n    },\n\n    componentDidMount() {\n        this.props.scrollValue.addListener(this.updateView);\n    },\n\n    updateView(offset) {\n        const position = Math.floor(offset.value);\n        const pageOffset = offset.value % 1;\n        const tabCount = this.props.tabs.length;\n        const lastTabPosition = tabCount - 1;\n\n        if (\n            tabCount === 0 ||\n            offset.value < 0 ||\n            offset.value > lastTabPosition\n        ) {\n            return;\n        }\n\n        if (\n            this.necessarilyMeasurementsCompleted(\n                position,\n                position === lastTabPosition\n            )\n        ) {\n            this.updateTabPanel(position, pageOffset);\n            this.updateTabUnderline(position, pageOffset, tabCount);\n        }\n    },\n\n    necessarilyMeasurementsCompleted(position, isLastTab) {\n        return (\n            this._tabsMeasurements[position] &&\n            (isLastTab || this._tabsMeasurements[position + 1]) &&\n            this._tabContainerMeasurements &&\n            this._containerMeasurements\n        );\n    },\n\n    updateTabPanel(position, pageOffset) {\n        const containerWidth = this._containerMeasurements.width;\n        const tabWidth = this._tabsMeasurements[position].width;\n        const nextTabMeasurements = this._tabsMeasurements[position + 1];\n        const nextTabWidth =\n            (nextTabMeasurements && nextTabMeasurements.width) || 0;\n        const tabOffset = this._tabsMeasurements[position].left;\n        const absolutePageOffset = pageOffset * tabWidth;\n        let newScrollX = tabOffset + absolutePageOffset;\n\n        // center tab and smooth tab change (for when tabWidth changes a lot between two tabs)\n        newScrollX -=\n            (containerWidth -\n                (1 - pageOffset) * tabWidth -\n                pageOffset * nextTabWidth) /\n            2;\n        newScrollX = newScrollX >= 0 ? newScrollX : 0;\n\n        if (Platform.OS === \"android\") {\n            this._scrollView.scrollTo({ x: newScrollX, y: 0, animated: false });\n        } else {\n            const rightBoundScroll =\n                this._tabContainerMeasurements.width -\n                this._containerMeasurements.width;\n            newScrollX =\n                newScrollX > rightBoundScroll ? rightBoundScroll : newScrollX;\n            this._scrollView.scrollTo({ x: newScrollX, y: 0, animated: false });\n        }\n    },\n\n    updateTabUnderline(position, pageOffset, tabCount) {\n        const lineLeft = this._tabsMeasurements[position].left;\n        const lineRight = this._tabsMeasurements[position].right;\n\n        if (position < tabCount - 1) {\n            const nextTabLeft = this._tabsMeasurements[position + 1].left;\n            const nextTabRight = this._tabsMeasurements[position + 1].right;\n\n            const newLineLeft =\n                pageOffset * nextTabLeft + (1 - pageOffset) * lineLeft;\n            const newLineRight =\n                pageOffset * nextTabRight + (1 - pageOffset) * lineRight;\n\n            this.state._leftTabUnderline.setValue(newLineLeft);\n            this.state._widthTabUnderline.setValue(newLineRight - newLineLeft);\n        } else {\n            this.state._leftTabUnderline.setValue(lineLeft);\n            this.state._widthTabUnderline.setValue(lineRight - lineLeft);\n        }\n    },\n\n    renderTab(\n        name,\n        page,\n        isTabActive,\n        onPressHandler,\n        onLayoutHandler,\n        tabStyle,\n        activeTabStyle,\n        textStyle,\n        activeTextStyle,\n        tabHeaderStyle,\n        tabFontSize,\n        disabled\n    ) {\n        const headerContent =\n            typeof name !== \"string\" ? name.props.children : undefined;\n        const { activeTextColor, inactiveTextColor } = this.props;\n        const textColor = isTabActive ? activeTextColor : inactiveTextColor;\n        const fontWeight = isTabActive ? \"bold\" : \"normal\";\n        // const fontSize = tabFontSize;\n\n        if (typeof name === \"string\") {\n            return (\n                <Button\n                    key={`${name}_${page}`}\n                    onPress={() => {\n                        if (disabled === true) {\n                            return;\n                        }\n                        onPressHandler(page);\n                    }}\n                    onLayout={onLayoutHandler}\n                >\n                    <TabHeading\n                        scrollable\n                        style={isTabActive ? activeTabStyle : tabStyle}\n                        active={isTabActive}\n                    >\n                        <Text\n                            style={[\n                                isTabActive ? activeTextStyle : textStyle,\n                                { fontSize: tabFontSize }\n                            ]}\n                        >\n                            {name}\n                        </Text>\n                    </TabHeading>\n                </Button>\n            );\n        } else {\n            return (\n                <Button\n                    key={_.random(1.2, 5.2)}\n                    onPress={() => {\n                        if (disabled === true) {\n                            return;\n                        }\n                        onPressHandler(page);\n                    }}\n                    onLayout={onLayoutHandler}\n                >\n                    <TabHeading\n                        scrollable\n                        style={tabHeaderStyle}\n                        active={isTabActive}\n                    >\n                        {headerContent}\n                    </TabHeading>\n                </Button>\n            );\n        }\n    },\n\n    measureTab(page, event) {\n        const { x, width, height } = event.nativeEvent.layout;\n        this._tabsMeasurements[page] = {\n            left: x,\n            right: x + width,\n            width,\n            height\n        };\n        this.updateView({ value: this.props.scrollValue._value });\n    },\n\n    render() {\n        const variables = this.context.theme\n            ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\n            : variable;\n        const tabUnderlineStyle = {\n            position: \"absolute\",\n            height: 4,\n            backgroundColor: variables.topTabBarActiveBorderColor,\n            bottom: 0\n        };\n\n        const dynamicTabUnderline = {\n            left: this.state._leftTabUnderline,\n            width: this.state._widthTabUnderline\n        };\n\n        return (\n            <View\n                style={[\n                    styles.container,\n                    { backgroundColor: this.props.backgroundColor },\n                    this.props.style\n                ]}\n                onLayout={this.onContainerLayout}\n            >\n                <ScrollView\n                    automaticallyAdjustContentInsets={false}\n                    ref={scrollView => {\n                        this._scrollView = scrollView;\n                    }}\n                    horizontal={true}\n                    showsHorizontalScrollIndicator={false}\n                    showsVerticalScrollIndicator={false}\n                    directionalLockEnabled={true}\n                    onScroll={this.props.onScroll}\n                    bounces={false}\n                    scrollsToTop={false}\n                >\n                    <View\n                        style={[\n                            styles.tabs,\n                            { width: this.state._containerWidth },\n                            this.props.tabsContainerStyle\n                        ]}\n                        ref={\"tabContainer\"}\n                        onLayout={this.onTabContainerLayout}\n                    >\n                        {this.props.tabs.map((name, page) => {\n                            const isTabActive = this.props.activeTab === page;\n                            const renderTab =\n                                this.props.renderTab || this.renderTab;\n                            return renderTab(\n                                name,\n                                page,\n                                isTabActive,\n                                this.props.goToPage,\n                                this.measureTab.bind(this, page),\n                                this.props.tabStyle[page],\n                                this.props.activeTabStyle[page],\n                                this.props.textStyle[page],\n                                this.props.activeTextStyle[page],\n                                this.props.tabHeaderStyle[page],\n                                this.props.disabled[page],\n                                variables.tabFontSize\n                            );\n                        })}\n                        <Animated.View\n                            style={[\n                                tabUnderlineStyle,\n                                dynamicTabUnderline,\n                                this.props.underlineStyle\n                            ]}\n                        />\n                    </View>\n                </ScrollView>\n            </View>\n        );\n    },\n\n    componentWillReceiveProps(nextProps) {\n        // If the tabs change, force the width of the tabs container to be recalculated\n        if (\n            !_.isEqual(this.props.tabs, nextProps.tabs) &&\n            this.state._containerWidth\n        ) {\n            this.setState({ _containerWidth: null });\n        }\n    },\n\n    onTabContainerLayout(e) {\n        this._tabContainerMeasurements = e.nativeEvent.layout;\n        let width = this._tabContainerMeasurements.width;\n        if (width < WINDOW_WIDTH) {\n            width = WINDOW_WIDTH;\n        }\n        this.setState({ _containerWidth: width });\n        this.updateView({ value: this.props.scrollValue._value });\n    },\n\n    onContainerLayout(e) {\n        this._containerMeasurements = e.nativeEvent.layout;\n        this.updateView({ value: this.props.scrollValue._value });\n    }\n});\n\n// module.exports = ScrollableTabBar;\nconst StyledTab = connectStyle(\n    \"NativeBase.ScrollableTab\",\n    {},\n    mapPropsToStyleNames\n)(ScrollableTabBar);\nexport { StyledTab as ScrollableTab };\nconst styles = StyleSheet.create({\n    tab: {\n        height: 49,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        paddingLeft: 20,\n        paddingRight: 20\n    },\n    container: {\n        height: 50,\n        borderWidth: 1,\n        borderTopWidth: 0,\n        borderLeftWidth: 0,\n        borderRightWidth: 0,\n        borderColor: \"#ccc\"\n    },\n    tabs: {\n        flexDirection: \"row\",\n        justifyContent: \"space-around\"\n    }\n});\n"]}