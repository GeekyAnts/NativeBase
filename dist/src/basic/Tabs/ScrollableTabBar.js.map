{"version":3,"sources":["../../../../src/basic/Tabs/ScrollableTabBar.js"],"names":["Button","require","ReactNative","View","Animated","StyleSheet","ScrollView","Platform","Dimensions","WINDOW_WIDTH","get","width","ScrollableTabBar","propTypes","goToPage","func","activeTab","number","tabs","array","backgroundColor","string","activeTextColor","inactiveTextColor","scrollOffset","style","tabStyle","tabsContainerStyle","renderTab","underlineStyle","onScroll","contextTypes","theme","object","getDefaultProps","getInitialState","_tabsMeasurements","_leftTabUnderline","Value","_widthTabUnderline","_containerWidth","componentDidMount","props","scrollValue","addListener","updateView","offset","position","Math","floor","value","pageOffset","tabCount","length","lastTabPosition","necessarilyMeasurementsCompleted","updateTabPanel","updateTabUnderline","isLastTab","_tabContainerMeasurements","_containerMeasurements","containerWidth","tabWidth","nextTabMeasurements","nextTabWidth","tabOffset","left","absolutePageOffset","newScrollX","OS","_scrollView","scrollTo","x","y","animated","rightBoundScroll","lineLeft","lineRight","right","nextTabLeft","nextTabRight","newLineLeft","newLineRight","state","setValue","name","page","isTabActive","onPressHandler","onLayoutHandler","activeTabStyle","textStyle","activeTextStyle","tabHeaderStyle","headerContent","children","undefined","textColor","fontWeight","random","measureTab","event","nativeEvent","layout","height","_value","render","variables","context","tabUnderlineStyle","topTabBarActiveBorderColor","bottom","dynamicTabUnderline","styles","container","onContainerLayout","scrollView","onTabContainerLayout","map","bind","componentWillReceiveProps","nextProps","isEqual","setState","e","StyledTab","ScrollableTab","create","tab","alignItems","justifyContent","paddingLeft","paddingRight","borderWidth","borderTopWidth","borderLeftWidth","borderRightWidth","borderColor","flexDirection"],"mappings":"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","file":"ScrollableTabBar.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport createReactClass from \"create-react-class\";\nimport _ from \"lodash\";\nimport { connectStyle, StyleProvider } from \"native-base-shoutem-theme\";\nimport mapPropsToStyleNames from \"../../Utils/mapPropsToStyleNames\";\nimport variable from \"./../../theme/variables/platform\";\nimport { TabHeading, Text, TabContainer } from \"./../../index\";\nimport { ViewPropTypes } from \"../../Utils\";\nconst Button = require(\"./Button\");\nconst ReactNative = require(\"react-native\");\nconst {\n  View,\n  Animated,\n  StyleSheet,\n  ScrollView,\n  Platform,\n  Dimensions\n} = ReactNative;\n\nconst WINDOW_WIDTH = Dimensions.get(\"window\").width;\n\nconst ScrollableTabBar = createReactClass({\n  propTypes: {\n    goToPage: PropTypes.func,\n    activeTab: PropTypes.number,\n    tabs: PropTypes.array,\n    backgroundColor: PropTypes.string,\n    activeTextColor: PropTypes.string,\n    inactiveTextColor: PropTypes.string,\n    scrollOffset: PropTypes.number,\n    style: ViewPropTypes.style,\n    tabStyle: ViewPropTypes.style,\n    tabsContainerStyle: ViewPropTypes.style,\n    renderTab: PropTypes.func,\n    underlineStyle: ViewPropTypes.style,\n    onScroll: PropTypes.func\n  },\n  contextTypes: {\n    theme: PropTypes.object\n  },\n\n  getDefaultProps() {\n    return {\n      scrollOffset: 52,\n      activeTextColor: \"navy\",\n      inactiveTextColor: \"black\",\n      backgroundColor: null,\n      style: {},\n      tabStyle: {},\n      tabsContainerStyle: {},\n      underlineStyle: {}\n    };\n  },\n\n  getInitialState() {\n    this._tabsMeasurements = [];\n    return {\n      _leftTabUnderline: new Animated.Value(0),\n      _widthTabUnderline: new Animated.Value(0),\n      _containerWidth: null\n    };\n  },\n\n  componentDidMount() {\n    this.props.scrollValue.addListener(this.updateView);\n  },\n\n  updateView(offset) {\n    const position = Math.floor(offset.value);\n    const pageOffset = offset.value % 1;\n    const tabCount = this.props.tabs.length;\n    const lastTabPosition = tabCount - 1;\n\n    if (tabCount === 0 || offset.value < 0 || offset.value > lastTabPosition) {\n      return;\n    }\n\n    if (\n      this.necessarilyMeasurementsCompleted(\n        position,\n        position === lastTabPosition\n      )\n    ) {\n      this.updateTabPanel(position, pageOffset);\n      this.updateTabUnderline(position, pageOffset, tabCount);\n    }\n  },\n\n  necessarilyMeasurementsCompleted(position, isLastTab) {\n    return (\n      this._tabsMeasurements[position] &&\n      (isLastTab || this._tabsMeasurements[position + 1]) &&\n      this._tabContainerMeasurements &&\n      this._containerMeasurements\n    );\n  },\n\n  updateTabPanel(position, pageOffset) {\n    const containerWidth = this._containerMeasurements.width;\n    const tabWidth = this._tabsMeasurements[position].width;\n    const nextTabMeasurements = this._tabsMeasurements[position + 1];\n    const nextTabWidth =\n      (nextTabMeasurements && nextTabMeasurements.width) || 0;\n    const tabOffset = this._tabsMeasurements[position].left;\n    const absolutePageOffset = pageOffset * tabWidth;\n    let newScrollX = tabOffset + absolutePageOffset;\n\n    // center tab and smooth tab change (for when tabWidth changes a lot between two tabs)\n    newScrollX -=\n      (containerWidth -\n        (1 - pageOffset) * tabWidth -\n        pageOffset * nextTabWidth) /\n      2;\n    newScrollX = newScrollX >= 0 ? newScrollX : 0;\n\n    if (Platform.OS === \"android\") {\n      this._scrollView.scrollTo({ x: newScrollX, y: 0, animated: false });\n    } else {\n      const rightBoundScroll =\n        this._tabContainerMeasurements.width -\n        this._containerMeasurements.width;\n      newScrollX =\n        newScrollX > rightBoundScroll ? rightBoundScroll : newScrollX;\n      this._scrollView.scrollTo({ x: newScrollX, y: 0, animated: false });\n    }\n  },\n\n  updateTabUnderline(position, pageOffset, tabCount) {\n    const lineLeft = this._tabsMeasurements[position].left;\n    const lineRight = this._tabsMeasurements[position].right;\n\n    if (position < tabCount - 1) {\n      const nextTabLeft = this._tabsMeasurements[position + 1].left;\n      const nextTabRight = this._tabsMeasurements[position + 1].right;\n\n      const newLineLeft =\n        pageOffset * nextTabLeft + (1 - pageOffset) * lineLeft;\n      const newLineRight =\n        pageOffset * nextTabRight + (1 - pageOffset) * lineRight;\n\n      this.state._leftTabUnderline.setValue(newLineLeft);\n      this.state._widthTabUnderline.setValue(newLineRight - newLineLeft);\n    } else {\n      this.state._leftTabUnderline.setValue(lineLeft);\n      this.state._widthTabUnderline.setValue(lineRight - lineLeft);\n    }\n  },\n\n  renderTab(\n    name,\n    page,\n    isTabActive,\n    onPressHandler,\n    onLayoutHandler,\n    tabStyle,\n    activeTabStyle,\n    textStyle,\n    activeTextStyle,\n    tabHeaderStyle\n  ) {\n    const headerContent =\n      typeof name !== \"string\" ? name.props.children : undefined;\n    const { activeTextColor, inactiveTextColor } = this.props;\n    const textColor = isTabActive ? activeTextColor : inactiveTextColor;\n    const fontWeight = isTabActive ? \"bold\" : \"normal\";\n\n    if (typeof name === \"string\") {\n      return (\n        <Button\n          key={`${name}_${page}`}\n          onPress={() => onPressHandler(page)}\n          onLayout={onLayoutHandler}\n        >\n          <TabHeading\n            scrollable\n            style={isTabActive ? activeTabStyle : tabStyle}\n            active={isTabActive}\n          >\n            <Text style={isTabActive ? activeTextStyle : textStyle}>\n              {name}\n            </Text>\n          </TabHeading>\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          key={_.random(1.2, 5.2)}\n          onPress={() => onPressHandler(page)}\n          onLayout={onLayoutHandler}\n        >\n          <TabHeading scrollable style={tabHeaderStyle} active={isTabActive}>\n            {headerContent}\n          </TabHeading>\n        </Button>\n      );\n    }\n  },\n\n  measureTab(page, event) {\n    const { x, width, height } = event.nativeEvent.layout;\n    this._tabsMeasurements[page] = { left: x, right: x + width, width, height };\n    this.updateView({ value: this.props.scrollValue._value });\n  },\n\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\n      : variable;\n    const tabUnderlineStyle = {\n      position: \"absolute\",\n      height: 4,\n      backgroundColor: variables.topTabBarActiveBorderColor,\n      bottom: 0\n    };\n\n    const dynamicTabUnderline = {\n      left: this.state._leftTabUnderline,\n      width: this.state._widthTabUnderline\n    };\n\n    return (\n      <View\n        style={[\n          styles.container,\n          { backgroundColor: this.props.backgroundColor },\n          this.props.style\n        ]}\n        onLayout={this.onContainerLayout}\n      >\n        <ScrollView\n          automaticallyAdjustContentInsets={false}\n          ref={scrollView => {\n            this._scrollView = scrollView;\n          }}\n          horizontal={true}\n          showsHorizontalScrollIndicator={false}\n          showsVerticalScrollIndicator={false}\n          directionalLockEnabled={true}\n          onScroll={this.props.onScroll}\n          bounces={false}\n          scrollsToTop={false}\n        >\n          <View\n            style={[\n              styles.tabs,\n              { width: this.state._containerWidth },\n              this.props.tabsContainerStyle\n            ]}\n            ref={\"tabContainer\"}\n            onLayout={this.onTabContainerLayout}\n          >\n            {this.props.tabs.map((name, page) => {\n              const isTabActive = this.props.activeTab === page;\n              const renderTab = this.props.renderTab || this.renderTab;\n              return renderTab(\n                name,\n                page,\n                isTabActive,\n                this.props.goToPage,\n                this.measureTab.bind(this, page),\n                this.props.tabStyle[page],\n                this.props.activeTabStyle[page],\n                this.props.textStyle[page],\n                this.props.activeTextStyle[page],\n                this.props.tabHeaderStyle[page]\n              );\n            })}\n            <Animated.View\n              style={[\n                tabUnderlineStyle,\n                dynamicTabUnderline,\n                this.props.underlineStyle\n              ]}\n            />\n          </View>\n        </ScrollView>\n      </View>\n    );\n  },\n\n  componentWillReceiveProps(nextProps) {\n    // If the tabs change, force the width of the tabs container to be recalculated\n    if (\n      !_.isEqual(this.props.tabs, nextProps.tabs) &&\n      this.state._containerWidth\n    ) {\n      this.setState({ _containerWidth: null });\n    }\n  },\n\n  onTabContainerLayout(e) {\n    this._tabContainerMeasurements = e.nativeEvent.layout;\n    let width = this._tabContainerMeasurements.width;\n    if (width < WINDOW_WIDTH) {\n      width = WINDOW_WIDTH;\n    }\n    this.setState({ _containerWidth: width });\n    this.updateView({ value: this.props.scrollValue._value });\n  },\n\n  onContainerLayout(e) {\n    this._containerMeasurements = e.nativeEvent.layout;\n    this.updateView({ value: this.props.scrollValue._value });\n  }\n});\n\n// module.exports = ScrollableTabBar;\nconst StyledTab = connectStyle(\n  \"NativeBase.ScrollableTab\",\n  {},\n  mapPropsToStyleNames\n)(ScrollableTabBar);\nexport { StyledTab as ScrollableTab };\nconst styles = StyleSheet.create({\n  tab: {\n    height: 49,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingLeft: 20,\n    paddingRight: 20\n  },\n  container: {\n    height: 50,\n    borderWidth: 1,\n    borderTopWidth: 0,\n    borderLeftWidth: 0,\n    borderRightWidth: 0,\n    borderColor: \"#ccc\"\n  },\n  tabs: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  }\n});\n"]}