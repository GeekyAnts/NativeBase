{"version":3,"sources":["../../../../src/basic/Tabs/ScrollableTabBar.js"],"names":["ReactNative","require","View","Animated","StyleSheet","ScrollView","Platform","Dimensions","Button","WINDOW_WIDTH","get","width","ScrollableTabBar","propTypes","goToPage","func","activeTab","number","tabs","array","backgroundColor","string","activeTextColor","inactiveTextColor","scrollOffset","style","tabStyle","tabsContainerStyle","renderTab","underlineStyle","onScroll","contextTypes","theme","object","getDefaultProps","getInitialState","_tabsMeasurements","_leftTabUnderline","Value","_widthTabUnderline","_containerWidth","componentDidMount","props","scrollValue","addListener","updateView","offset","position","Math","floor","value","pageOffset","tabCount","length","lastTabPosition","necessarilyMeasurementsCompleted","updateTabPanel","updateTabUnderline","isLastTab","_tabContainerMeasurements","_containerMeasurements","containerWidth","tabWidth","nextTabMeasurements","nextTabWidth","tabOffset","left","absolutePageOffset","newScrollX","OS","_scrollView","scrollTo","x","y","animated","rightBoundScroll","lineLeft","lineRight","right","nextTabLeft","nextTabRight","newLineLeft","newLineRight","state","setValue","name","page","isTabActive","onPressHandler","onLayoutHandler","activeTabStyle","textStyle","activeTextStyle","tabHeaderStyle","headerContent","children","undefined","textColor","fontWeight","random","measureTab","event","nativeEvent","layout","height","_value","render","variables","context","tabUnderlineStyle","topTabBarActiveBorderColor","bottom","dynamicTabUnderline","styles","container","onContainerLayout","scrollView","onTabContainerLayout","map","bind","componentWillReceiveProps","nextProps","isEqual","setState","e","StyledTab","ScrollableTab","create","tab","alignItems","justifyContent","paddingLeft","paddingRight","borderWidth","borderTopWidth","borderLeftWidth","borderRightWidth","borderColor","flexDirection"],"mappings":"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","file":"ScrollableTabBar.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport createReactClass from \"create-react-class\";\r\nconst ReactNative = require(\"react-native\");\r\nimport { connectStyle, StyleProvider } from \"native-base-shoutem-theme\";\r\nimport mapPropsToStyleNames from \"../../Utils/mapPropsToStyleNames\";\r\nimport variable from \"./../../theme/variables/platform\";\r\nimport { TabHeading, Text, TabContainer } from \"./../../index\";\r\nimport _ from \"lodash\";\r\nconst { View, Animated, StyleSheet, ScrollView, Platform, Dimensions } = ReactNative;\r\nimport { ViewPropTypes } from '../../Utils';\r\nconst Button = require(\"./Button\");\r\n\r\nconst WINDOW_WIDTH = Dimensions.get(\"window\").width;\r\n\r\nconst ScrollableTabBar = createReactClass({\r\n\tpropTypes: {\r\n\t\tgoToPage: PropTypes.func,\r\n\t\tactiveTab: PropTypes.number,\r\n\t\ttabs: PropTypes.array,\r\n\t\tbackgroundColor: PropTypes.string,\r\n\t\tactiveTextColor: PropTypes.string,\r\n\t\tinactiveTextColor: PropTypes.string,\r\n\t\tscrollOffset: PropTypes.number,\r\n\t\tstyle: ViewPropTypes.style,\r\n\t\ttabStyle: ViewPropTypes.style,\r\n\t\ttabsContainerStyle: ViewPropTypes.style,\r\n\t\trenderTab: PropTypes.func,\r\n\t\tunderlineStyle: ViewPropTypes.style,\r\n\t\tonScroll: PropTypes.func,\r\n\t},\r\n\tcontextTypes: {\r\n\t\ttheme: PropTypes.object,\r\n\t},\r\n\r\n\tgetDefaultProps() {\r\n\t\treturn {\r\n\t\t\tscrollOffset: 52,\r\n\t\t\tactiveTextColor: \"navy\",\r\n\t\t\tinactiveTextColor: \"black\",\r\n\t\t\tbackgroundColor: null,\r\n\t\t\tstyle: {},\r\n\t\t\ttabStyle: {},\r\n\t\t\ttabsContainerStyle: {},\r\n\t\t\tunderlineStyle: {},\r\n\t\t};\r\n\t},\r\n\r\n\tgetInitialState() {\r\n\t\tthis._tabsMeasurements = [];\r\n\t\treturn {\r\n\t\t\t_leftTabUnderline: new Animated.Value(0),\r\n\t\t\t_widthTabUnderline: new Animated.Value(0),\r\n\t\t\t_containerWidth: null,\r\n\t\t};\r\n\t},\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.scrollValue.addListener(this.updateView);\r\n\t},\r\n\r\n\tupdateView(offset) {\r\n\t\tconst position = Math.floor(offset.value);\r\n\t\tconst pageOffset = offset.value % 1;\r\n\t\tconst tabCount = this.props.tabs.length;\r\n\t\tconst lastTabPosition = tabCount - 1;\r\n\r\n\t\tif (tabCount === 0 || offset.value < 0 || offset.value > lastTabPosition) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.necessarilyMeasurementsCompleted(position, position === lastTabPosition)) {\r\n\t\t\tthis.updateTabPanel(position, pageOffset);\r\n\t\t\tthis.updateTabUnderline(position, pageOffset, tabCount);\r\n\t\t}\r\n\t},\r\n\r\n\tnecessarilyMeasurementsCompleted(position, isLastTab) {\r\n\t\treturn (\r\n\t\t\tthis._tabsMeasurements[position] &&\r\n\t\t\t(isLastTab || this._tabsMeasurements[position + 1]) &&\r\n\t\t\tthis._tabContainerMeasurements &&\r\n\t\t\tthis._containerMeasurements\r\n\t\t);\r\n\t},\r\n\r\n\tupdateTabPanel(position, pageOffset) {\r\n\t\tconst containerWidth = this._containerMeasurements.width;\r\n\t\tconst tabWidth = this._tabsMeasurements[position].width;\r\n\t\tconst nextTabMeasurements = this._tabsMeasurements[position + 1];\r\n\t\tconst nextTabWidth = (nextTabMeasurements && nextTabMeasurements.width) || 0;\r\n\t\tconst tabOffset = this._tabsMeasurements[position].left;\r\n\t\tconst absolutePageOffset = pageOffset * tabWidth;\r\n\t\tlet newScrollX = tabOffset + absolutePageOffset;\r\n\r\n\t\t// center tab and smooth tab change (for when tabWidth changes a lot between two tabs)\r\n\t\tnewScrollX -= (containerWidth - (1 - pageOffset) * tabWidth - pageOffset * nextTabWidth) / 2;\r\n\t\tnewScrollX = newScrollX >= 0 ? newScrollX : 0;\r\n\r\n\t\tif (Platform.OS === \"android\") {\r\n\t\t\tthis._scrollView.scrollTo({ x: newScrollX, y: 0, animated: false });\r\n\t\t} else {\r\n\t\t\tconst rightBoundScroll = this._tabContainerMeasurements.width - this._containerMeasurements.width;\r\n\t\t\tnewScrollX = newScrollX > rightBoundScroll ? rightBoundScroll : newScrollX;\r\n\t\t\tthis._scrollView.scrollTo({ x: newScrollX, y: 0, animated: false });\r\n\t\t}\r\n\t},\r\n\r\n\tupdateTabUnderline(position, pageOffset, tabCount) {\r\n\t\tconst lineLeft = this._tabsMeasurements[position].left;\r\n\t\tconst lineRight = this._tabsMeasurements[position].right;\r\n\r\n\t\tif (position < tabCount - 1) {\r\n\t\t\tconst nextTabLeft = this._tabsMeasurements[position + 1].left;\r\n\t\t\tconst nextTabRight = this._tabsMeasurements[position + 1].right;\r\n\r\n\t\t\tconst newLineLeft = pageOffset * nextTabLeft + (1 - pageOffset) * lineLeft;\r\n\t\t\tconst newLineRight = pageOffset * nextTabRight + (1 - pageOffset) * lineRight;\r\n\r\n\t\t\tthis.state._leftTabUnderline.setValue(newLineLeft);\r\n\t\t\tthis.state._widthTabUnderline.setValue(newLineRight - newLineLeft);\r\n\t\t} else {\r\n\t\t\tthis.state._leftTabUnderline.setValue(lineLeft);\r\n\t\t\tthis.state._widthTabUnderline.setValue(lineRight - lineLeft);\r\n\t\t}\r\n\t},\r\n\r\n\trenderTab(\r\n\t\tname,\r\n\t\tpage,\r\n\t\tisTabActive,\r\n\t\tonPressHandler,\r\n\t\tonLayoutHandler,\r\n\t\ttabStyle,\r\n\t\tactiveTabStyle,\r\n\t\ttextStyle,\r\n\t\tactiveTextStyle,\r\n\t\ttabHeaderStyle\r\n\t) {\r\n\t\tconst headerContent = typeof name !== \"string\" ? name.props.children : undefined;\r\n\t\tconst { activeTextColor, inactiveTextColor } = this.props;\r\n\t\tconst textColor = isTabActive ? activeTextColor : inactiveTextColor;\r\n\t\tconst fontWeight = isTabActive ? \"bold\" : \"normal\";\r\n\r\n\t\tif (typeof name === \"string\") {\r\n\t\t\treturn (\r\n\t\t\t\t<Button key={`${name}_${page}`} onPress={() => onPressHandler(page)} onLayout={onLayoutHandler}>\r\n\t\t\t\t\t<TabHeading scrollable style={isTabActive ? activeTabStyle : tabStyle} active={isTabActive}>\r\n\t\t\t\t\t\t<Text style={isTabActive ? activeTextStyle : textStyle}>\r\n\t\t\t\t\t\t\t{name}\r\n\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t</TabHeading>\r\n\t\t\t\t</Button>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<Button key={_.random(1.2, 5.2)} onPress={() => onPressHandler(page)} onLayout={onLayoutHandler}>\r\n\t\t\t\t\t<TabHeading scrollable style={tabHeaderStyle} active={isTabActive}>\r\n\t\t\t\t\t\t{headerContent}\r\n\t\t\t\t\t</TabHeading>\r\n\t\t\t\t</Button>\r\n\t\t\t);\r\n\t\t}\r\n\t},\r\n\r\n\tmeasureTab(page, event) {\r\n\t\tconst { x, width, height } = event.nativeEvent.layout;\r\n\t\tthis._tabsMeasurements[page] = { left: x, right: x + width, width, height };\r\n\t\tthis.updateView({ value: this.props.scrollValue._value });\r\n\t},\r\n\r\n\trender() {\r\n\t\tconst variables = this.context.theme ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables : variable;\r\n\t\tconst tabUnderlineStyle = {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\theight: 4,\r\n\t\t\tbackgroundColor: variables.topTabBarActiveBorderColor,\r\n\t\t\tbottom: 0,\r\n\t\t};\r\n\r\n\t\tconst dynamicTabUnderline = {\r\n\t\t\tleft: this.state._leftTabUnderline,\r\n\t\t\twidth: this.state._widthTabUnderline,\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<View\r\n\t\t\t\tstyle={[styles.container, { backgroundColor: this.props.backgroundColor }, this.props.style]}\r\n\t\t\t\tonLayout={this.onContainerLayout}\r\n\t\t\t>\r\n\t\t\t\t<ScrollView\r\n\t\t\t\t\tautomaticallyAdjustContentInsets={false}\r\n\t\t\t\t\tref={scrollView => {\r\n\t\t\t\t\t\tthis._scrollView = scrollView;\r\n\t\t\t\t\t}}\r\n\t\t\t\t\thorizontal={true}\r\n\t\t\t\t\tshowsHorizontalScrollIndicator={false}\r\n\t\t\t\t\tshowsVerticalScrollIndicator={false}\r\n\t\t\t\t\tdirectionalLockEnabled={true}\r\n\t\t\t\t\tonScroll={this.props.onScroll}\r\n\t\t\t\t\tbounces={false}\r\n\t\t\t\t\tscrollsToTop={false}\r\n\t\t\t\t>\r\n\t\t\t\t\t<View\r\n\t\t\t\t\t\tstyle={[styles.tabs, { width: this.state._containerWidth }, this.props.tabsContainerStyle]}\r\n\t\t\t\t\t\tref={\"tabContainer\"}\r\n\t\t\t\t\t\tonLayout={this.onTabContainerLayout}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{this.props.tabs.map((name, page) => {\r\n\t\t\t\t\t\t\tconst isTabActive = this.props.activeTab === page;\r\n\t\t\t\t\t\t\tconst renderTab = this.props.renderTab || this.renderTab;\r\n\t\t\t\t\t\t\treturn renderTab(\r\n\t\t\t\t\t\t\t\tname,\r\n\t\t\t\t\t\t\t\tpage,\r\n\t\t\t\t\t\t\t\tisTabActive,\r\n\t\t\t\t\t\t\t\tthis.props.goToPage,\r\n\t\t\t\t\t\t\t\tthis.measureTab.bind(this, page),\r\n\t\t\t\t\t\t\t\tthis.props.tabStyle[page],\r\n\t\t\t\t\t\t\t\tthis.props.activeTabStyle[page],\r\n\t\t\t\t\t\t\t\tthis.props.textStyle[page],\r\n\t\t\t\t\t\t\t\tthis.props.activeTextStyle[page],\r\n\t\t\t\t\t\t\t\tthis.props.tabHeaderStyle[page]\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t<Animated.View style={[tabUnderlineStyle, dynamicTabUnderline, this.props.underlineStyle]} />\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</ScrollView>\r\n\t\t\t</View>\r\n\t\t);\r\n\t},\r\n\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\t// If the tabs change, force the width of the tabs container to be recalculated\r\n\t\tif (!_.isEqual(this.props.tabs, nextProps.tabs) && this.state._containerWidth) {\r\n\t\t\tthis.setState({ _containerWidth: null });\r\n\t\t}\r\n\t},\r\n\r\n\tonTabContainerLayout(e) {\r\n\t\tthis._tabContainerMeasurements = e.nativeEvent.layout;\r\n\t\tlet width = this._tabContainerMeasurements.width;\r\n\t\tif (width < WINDOW_WIDTH) {\r\n\t\t\twidth = WINDOW_WIDTH;\r\n\t\t}\r\n\t\tthis.setState({ _containerWidth: width });\r\n\t\tthis.updateView({ value: this.props.scrollValue._value });\r\n\t},\r\n\r\n\tonContainerLayout(e) {\r\n\t\tthis._containerMeasurements = e.nativeEvent.layout;\r\n\t\tthis.updateView({ value: this.props.scrollValue._value });\r\n\t},\r\n});\r\n\r\n// module.exports = ScrollableTabBar;\r\nconst StyledTab = connectStyle(\"NativeBase.ScrollableTab\", {}, mapPropsToStyleNames)(ScrollableTabBar);\r\nexport { StyledTab as ScrollableTab };\r\nconst styles = StyleSheet.create({\r\n\ttab: {\r\n\t\theight: 49,\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tpaddingLeft: 20,\r\n\t\tpaddingRight: 20,\r\n\t},\r\n\tcontainer: {\r\n\t\theight: 50,\r\n\t\tborderWidth: 1,\r\n\t\tborderTopWidth: 0,\r\n\t\tborderLeftWidth: 0,\r\n\t\tborderRightWidth: 0,\r\n\t\tborderColor: \"#ccc\",\r\n\t},\r\n\ttabs: {\r\n\t\tflexDirection: \"row\",\r\n\t\tjustifyContent: \"space-around\",\r\n\t},\r\n});\r\n"]}