{"version":3,"sources":["../../../../src/basic/Tabs/index.js"],"names":["React","require","Component","ReactNative","Dimensions","View","Animated","ScrollView","StyleSheet","InteractionManager","Platform","TimerMixin","SceneComponent","DefaultTabBar","ScrollableTabBar","ScrollableTabView","mixins","statics","propTypes","tabBarPosition","oneOf","initialPage","number","page","onChangeTab","func","onScroll","renderTabBar","any","style","contentProps","object","scrollWithoutAnimation","bool","locked","prerenderingSiblingsNumber","getDefaultProps","getInitialState","currentPage","props","gotNextPage","isClicked","scrollValue","Value","containerWidth","get","width","sceneKeys","newSceneKeys","componentDidMount","scrollFn","scrollView","OS","x","state","scrollTo","animated","setTimeout","runAfterInteractions","componentWillReceiveProps","children","updateSceneKeys","goToPage","pageNumber","offset","setState","y","callback","_onChangeTab","bind","cloneElement","newKeys","previousKeys","_children","forEach","child","idx","key","_makeSceneKey","_keyExists","_shouldRenderSceneKey","push","currentPageKey","numOfSibling","find","sceneKey","heading","renderScrollableContent","scenes","_composeScenes","_optimisticRender","_onMomentumScrollBeginAndEnd","map","e","offsetX","nativeEvent","contentOffset","Math","round","_updateSelectedPage","currentPageOffset","deltaX","abs","nextPage","_updateScrollValue","localNextPage","position","prevPage","i","ref","from","value","setValue","_handleLayout","layout","requestAnimationFrame","Children","render","overlayTabs","tabBarProps","tabs","tabStyle","activeTabStyle","textStyle","activeTextStyle","tabHeaderStyle","undefined","activeTab","tabBarBackgroundColor","backgroundColor","tabBarActiveTextColor","activeTextColor","tabBarInactiveTextColor","inactiveTextColor","tabBarTextStyle","tabBarUnderlineStyle","underlineStyle","tabContainerStyle","left","right","styles","container","create","flex","scrollableContentAndroid"],"mappings":"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","file":"index.js","sourcesContent":["const React = require(\"react\");\nconst { Component } = React;\nimport PropTypes from \"prop-types\";\nimport createReactClass from \"create-react-class\";\nconst ReactNative = require(\"react-native\");\nconst {\n  Dimensions,\n  View,\n  Animated,\n  ScrollView,\n  StyleSheet,\n  InteractionManager,\n  Platform,\n} = ReactNative;\nimport { ViewPropTypes } from \"../../Utils\";\nconst TimerMixin = require(\"react-timer-mixin\");\nimport _ from \"lodash\";\n\nconst SceneComponent = require(\"./SceneComponent\");\nconst { DefaultTabBar } = require(\"./DefaultTabBar\");\nconst { ScrollableTabBar } = require(\"./ScrollableTabBar\");\n\nconst ScrollableTabView = createReactClass({\n  mixins: [TimerMixin],\n  statics: {\n    DefaultTabBar,\n    ScrollableTabBar,\n  },\n\n  propTypes: {\n    tabBarPosition: PropTypes.oneOf([\"top\", \"bottom\", \"overlayTop\", \"overlayBottom\"]),\n    initialPage: PropTypes.number,\n    page: PropTypes.number,\n    onChangeTab: PropTypes.func,\n    onScroll: PropTypes.func,\n    renderTabBar: PropTypes.any,\n    style: ViewPropTypes.style,\n    contentProps: PropTypes.object,\n    scrollWithoutAnimation: PropTypes.bool,\n    locked: PropTypes.bool,\n    prerenderingSiblingsNumber: PropTypes.number,\n  },\n\n  getDefaultProps() {\n    return {\n      tabBarPosition: \"top\",\n      initialPage: 0,\n      page: -1,\n      onChangeTab: () => {},\n      onScroll: () => {},\n      contentProps: {},\n      scrollWithoutAnimation: false,\n      locked: false,\n      prerenderingSiblingsNumber: 0,\n    };\n  },\n\n  getInitialState() {\n    return {\n      currentPage: this.props.initialPage,\n      gotNextPage: false,\n      isClicked: false,\n      scrollValue: new Animated.Value(this.props.initialPage),\n      containerWidth: Dimensions.get(\"window\").width,\n      sceneKeys: this.newSceneKeys({ currentPage: this.props.initialPage }),\n    };\n  },\n\n  componentDidMount() {\n    const scrollFn = () => {\n      if (this.scrollView && Platform.OS === \"android\") {\n        const x = this.props.initialPage * this.state.containerWidth;\n        this.scrollView.scrollTo({ x, animated: false });\n      }\n    };\n    this.setTimeout(() => {\n      InteractionManager.runAfterInteractions(scrollFn);\n    }, 0);\n  },\n\n  componentWillReceiveProps(props) {\n    if (props.children !== this.props.children) {\n      this.updateSceneKeys({\n        page: this.state.currentPage,\n        children: props.children,\n      });\n    }\n\n    if (props.page >= 0 && props.page !== this.state.currentPage) {\n      this.goToPage(props.page);\n    }\n  },\n\n  goToPage(pageNumber, isClicked = false) {\n    const offset = pageNumber * this.state.containerWidth;\n    this.setState({ isClicked: isClicked }, () => {\n      if (this.scrollView) {\n        this.scrollView.scrollTo({\n          x: offset,\n          y: 0,\n          animated: !this.props.scrollWithoutAnimation,\n        });\n      }\n      const currentPage = this.state.currentPage;\n      this.updateSceneKeys({\n        page: pageNumber,\n        callback: this._onChangeTab.bind(this, currentPage, pageNumber),\n      });\n    })\n  },\n\n  renderTabBar(props) {\n    if (this.props.renderTabBar === false) {\n      return null;\n    } else if (this.props.renderTabBar) {\n      return React.cloneElement(this.props.renderTabBar(props), props);\n    } else {\n      return <DefaultTabBar {...props} />;\n    }\n  },\n\n  updateSceneKeys({ page, children = this.props.children, callback = () => {} }) {\n    let newKeys = this.newSceneKeys({\n      previousKeys: this.state.sceneKeys,\n      currentPage: page,\n      children,\n    });\n    this.setState({ currentPage: page, sceneKeys: newKeys }, callback);\n  },\n\n  newSceneKeys({ previousKeys = [], currentPage = 0, children = this.props.children }) {\n    let newKeys = [];\n    this._children(children).forEach((child, idx) => {\n      let key = this._makeSceneKey(child, idx);\n      if (this._keyExists(previousKeys, key) || this._shouldRenderSceneKey(idx, currentPage)) {\n        newKeys.push(key);\n      }\n    });\n    return newKeys;\n  },\n\n  _shouldRenderSceneKey(idx, currentPageKey) {\n    let numOfSibling = this.props.prerenderingSiblingsNumber;\n    return idx < currentPageKey + numOfSibling + 1 && idx > currentPageKey - numOfSibling - 1;\n  },\n\n  _keyExists(sceneKeys, key) {\n    return sceneKeys.find(sceneKey => key === sceneKey);\n  },\n\n  _makeSceneKey(child, idx) {\n    return child.props.heading + \"_\" + idx;\n  },\n\n  renderScrollableContent() {\n    const scenes = this._composeScenes();\n    return (\n      <ScrollView\n        horizontal\n        pagingEnabled\n        automaticallyAdjustContentInsets={false}\n        contentOffset={{\n          x: this.props.initialPage * this.state.containerWidth,\n        }}\n        ref={scrollView => {\n          this.scrollView = scrollView;\n        }}\n        onScroll={this._optimisticRender}\n        onMomentumScrollEnd={this._onMomentumScrollBeginAndEnd}\n        scrollEventThrottle={16}\n        scrollsToTop={false}\n        showsHorizontalScrollIndicator={false}\n        scrollEnabled={!this.props.locked}\n        directionalLockEnabled\n        alwaysBounceVertical={false}\n        keyboardDismissMode=\"on-drag\"\n        {...this.props.contentProps}\n      >\n        {scenes}\n      </ScrollView>\n    );\n  },\n\n  _composeScenes() {\n    return this._children().map((child, idx) => {\n      let key = this._makeSceneKey(child, idx);\n      return (\n        <SceneComponent\n          key={child.key}\n          shouldUpdated={this._shouldRenderSceneKey(idx, this.state.currentPage)}\n          style={{ width: this.state.containerWidth }}\n        >\n          {this._keyExists(this.state.sceneKeys, key) ? (\n            child\n          ) : (\n            <View heading={child.props.heading} />\n          )}\n        </SceneComponent>\n      );\n    });\n  },\n\n  _onMomentumScrollBeginAndEnd(e) {\n    const offsetX = e.nativeEvent.contentOffset.x;\n    const page = Math.round(offsetX / this.state.containerWidth);\n    if (this.state.currentPage !== page) {\n      this._updateSelectedPage(page);\n    }\n  },\n  // function that optimistically renders the tab based on scrolling\n  _optimisticRender(e) {\n    const { currentPage, containerWidth, isClicked, gotNextPage } = this.state\n    // overall offset\n    const offsetX = e.nativeEvent.contentOffset.x;\n    // offset in reference to screen (to get the scene it should scroll to)\n    const currentPageOffset = offsetX / containerWidth\n    // change in page\n    const deltaX = currentPageOffset - currentPage\n    // if there is a change (but not > 1 whole screen) and is not a click and the\n    // next page has not already been set to the current page\n    if(Math.abs(deltaX) > 0 && Math.abs(deltaX) < 1 && !isClicked && !gotNextPage) {\n      // set the next page and scroll to it\n      this.setState({ gotNextPage: true }, () => {\n        const nextPage = deltaX > 0 ? currentPage + 1 : currentPage - 1\n        this._updateSelectedPage(nextPage)\n      })\n    }\n    // if we are done scrolling, reset isClicked & gotNextPage\n    if(!deltaX) {\n      this.setState({ isClicked: false, gotNextPage: false })\n    }\n    this._updateScrollValue(offsetX / this.state.containerWidth)\n  },\n\n  _updateSelectedPage(nextPage) {\n    let localNextPage = nextPage;\n    if (typeof localNextPage === \"object\") {\n      localNextPage = nextPage.nativeEvent.position;\n    }\n\n    const currentPage = this.state.currentPage;\n    this.updateSceneKeys({\n      page: localNextPage,\n      callback: this._onChangeTab.bind(this, currentPage, localNextPage),\n    });\n  },\n\n  _onChangeTab(prevPage, currentPage) {\n    this.props.onChangeTab({\n      i: currentPage,\n      ref: this._children()[currentPage],\n      from: prevPage,\n    });\n  },\n\n  _updateScrollValue(value) {\n    this.state.scrollValue.setValue(value);\n    this.props.onScroll(value);\n  },\n\n  _handleLayout(e) {\n    const { width } = e.nativeEvent.layout;\n\n    if (Math.round(width) !== Math.round(this.state.containerWidth)) {\n      this.setState({ containerWidth: width });\n      this.requestAnimationFrame(() => {\n        this.goToPage(this.state.currentPage);\n      });\n    }\n  },\n\n  _children(children = this.props.children) {\n    return React.Children.map(children, child => child);\n  },\n\n  render() {\n    let overlayTabs =\n      this.props.tabBarPosition === \"overlayTop\" || this.props.tabBarPosition === \"overlayBottom\";\n    let tabBarProps = {\n      goToPage: this.goToPage,\n      tabs: this._children().map(child => child.props.heading),\n      tabStyle: this._children().map(child => child.props.tabStyle),\n      activeTabStyle: this._children().map(child => child.props.activeTabStyle),\n      textStyle: this._children().map(child => child.props.textStyle),\n      activeTextStyle: this._children().map(child => child.props.activeTextStyle),\n      tabHeaderStyle: this._children().map(child =>\n        _.get(child.props.heading.props, \"style\", undefined)\n      ),\n      activeTab: this.state.currentPage,\n      scrollValue: this.state.scrollValue,\n      containerWidth: this.state.containerWidth,\n    };\n\n    if (this.props.tabBarBackgroundColor) {\n      tabBarProps.backgroundColor = this.props.tabBarBackgroundColor;\n    }\n    if (this.props.tabBarActiveTextColor) {\n      tabBarProps.activeTextColor = this.props.tabBarActiveTextColor;\n    }\n    if (this.props.tabBarInactiveTextColor) {\n      tabBarProps.inactiveTextColor = this.props.tabBarInactiveTextColor;\n    }\n    if (this.props.tabBarTextStyle) {\n      tabBarProps.textStyle = this.props.tabBarTextStyle;\n    }\n    if (this.props.tabBarUnderlineStyle) {\n      tabBarProps.underlineStyle = this.props.tabBarUnderlineStyle;\n    }\n    if (this.props.tabContainerStyle) {\n      tabBarProps.tabContainerStyle = this.props.tabContainerStyle;\n    }\n    if (overlayTabs) {\n      tabBarProps.style = {\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        [this.props.tabBarPosition === \"overlayTop\" ? \"top\" : \"bottom\"]: 0,\n        backgroundColor: \"rgba(255, 255, 255, 0.7)\",\n      };\n    }\n\n    return (\n      <View style={[styles.container, this.props.style]} onLayout={this._handleLayout}>\n        {(this.props.tabBarPosition === \"top\" || this.props.tabBarPosition===\"overlayTop\")&& this.renderTabBar(tabBarProps)}\n        {this.renderScrollableContent()}\n        {(this.props.tabBarPosition === \"bottom\" || this.props.tabBarPosition===\"overlayBottom\") && this.renderTabBar(tabBarProps)}\n      </View>\n    );\n  },\n});\n\nexport default ScrollableTabView;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scrollableContentAndroid: {\n    flex: 1,\n  },\n});\n"]}