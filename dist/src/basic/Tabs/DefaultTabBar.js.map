{"version":3,"sources":["../../../../src/basic/Tabs/DefaultTabBar.js"],"names":["ReactNative","require","StyleSheet","View","Animated","Platform","Button","DefaultTabBar","propTypes","goToPage","PropTypes","func","activeTab","number","tabs","array","backgroundColor","string","activeTextColor","inactiveTextColor","disabledTextColor","tabStyle","ViewPropTypes","style","renderTab","underlineStyle","tabContainerStyle","contextTypes","theme","object","getDefaultProps","variable","topTabBarActiveTextColor","topTabBarTextColor","tabBarDisabledTextColor","tabFontSize","renderTabOption","name","page","isTabActive","onPressHandler","activeTabStyle","textStyle","activeTextStyle","tabHeaderStyle","disabled","headerContent","props","children","undefined","fontWeight","isDisabled","textColor","color","flex","fontSize","_","random","render","variables","context","platformStyle","containerWidth","numberOfTabs","length","tabUnderlineStyle","position","width","height","topTabBarActiveBorderColor","bottom","left","scrollValue","interpolate","inputRange","outputRange","tabDefaultBg","map","StyledTab","mapPropsToStyleNames"],"mappings":"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","file":"DefaultTabBar.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport createReactClass from 'create-react-class';\r\nimport _ from 'lodash';\r\nimport { connectStyle, StyleProvider } from 'native-base-shoutem-theme';\r\nimport mapPropsToStyleNames from '../../utils/mapPropsToStyleNames';\r\nimport variable from './../../theme/variables/platform';\r\nimport { TabHeading } from '../TabHeading';\r\nimport { Text } from '../Text';\r\nimport { TabContainer } from '../TabContainer';\r\nimport { ViewPropTypes } from '../../utils';\r\nconst ReactNative = require('react-native');\r\n\r\nconst { StyleSheet, View, Animated, Platform } = ReactNative;\r\nconst Button = require('./Button');\r\n\r\nconst DefaultTabBar = createReactClass({\r\n  propTypes: {\r\n    goToPage: PropTypes.func,\r\n    activeTab: PropTypes.number,\r\n    tabs: PropTypes.array,\r\n    backgroundColor: PropTypes.string,\r\n    activeTextColor: PropTypes.string,\r\n    inactiveTextColor: PropTypes.string,\r\n    disabledTextColor: PropTypes.string,\r\n    tabStyle: ViewPropTypes.style,\r\n    renderTab: PropTypes.func,\r\n    underlineStyle: ViewPropTypes.style,\r\n    tabContainerStyle: ViewPropTypes.style\r\n  },\r\n  contextTypes: {\r\n    theme: PropTypes.object\r\n  },\r\n\r\n  getDefaultProps() {\r\n    return {\r\n      activeTextColor: variable.topTabBarActiveTextColor,\r\n      inactiveTextColor: variable.topTabBarTextColor,\r\n      disabledTextColor: variable.tabBarDisabledTextColor,\r\n      backgroundColor: 'transparent',\r\n      tabFontSize: variable.tabFontSize\r\n    };\r\n  },\r\n\r\n  renderTabOption(name, page) {},\r\n\r\n  renderTab(\r\n    name,\r\n    page,\r\n    isTabActive,\r\n    onPressHandler,\r\n    tabStyle,\r\n    activeTabStyle,\r\n    textStyle,\r\n    activeTextStyle,\r\n    tabHeaderStyle,\r\n    tabFontSize,\r\n    disabled,\r\n    disabledTextColor\r\n  ) {\r\n    const headerContent =\r\n      typeof name !== 'string' ? name.props.children : undefined;\r\n    const { activeTextColor, inactiveTextColor } = this.props;\r\n    const fontWeight = isTabActive ? 'bold' : 'normal';\r\n    const isDisabled = disabled !== undefined;\r\n    let textColor;\r\n    if (isDisabled) {\r\n      textColor = disabledTextColor;\r\n    } else if (isTabActive) {\r\n      textColor = activeTextStyle ? activeTextStyle.color : activeTextColor; // activeTextColor: default color for active Tab\r\n    } else {\r\n      textColor = textStyle ? textStyle.color : inactiveTextColor; // inactiveTextColor: default color for inactive Tab\r\n    }\r\n\r\n    if (typeof name === 'string') {\r\n      return (\r\n        <Button\r\n          style={{ flex: 1 }}\r\n          disabled={isDisabled}\r\n          key={name}\r\n          onPress={() => onPressHandler(page)}\r\n        >\r\n          <TabHeading\r\n            style={isTabActive ? activeTabStyle : tabStyle}\r\n            active={isTabActive}\r\n          >\r\n            <Text\r\n              style={[\r\n                { fontSize: tabFontSize },\r\n                isTabActive ? activeTextStyle : textStyle,\r\n                { color: textColor }\r\n              ]}\r\n            >\r\n              {name}\r\n            </Text>\r\n          </TabHeading>\r\n        </Button>\r\n      );\r\n    }\r\n    return (\r\n      <Button\r\n        style={{ flex: 1 }}\r\n        disabled={isDisabled}\r\n        key={_.random(1.2, 5.2)}\r\n        onPress={() => onPressHandler(page)}\r\n      >\r\n        <TabHeading style={tabHeaderStyle} active={isTabActive}>\r\n          {headerContent}\r\n        </TabHeading>\r\n      </Button>\r\n    );\r\n  },\r\n\r\n  render() {\r\n    const variables = this.context.theme\r\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\r\n      : variable;\r\n    const platformStyle = variables.platformStyle;\r\n    const containerWidth = this.props.containerWidth;\r\n    const numberOfTabs = this.props.tabs.length;\r\n    const tabUnderlineStyle = {\r\n      position: 'absolute',\r\n      width: containerWidth / numberOfTabs,\r\n      height: 4,\r\n      backgroundColor: variables.topTabBarActiveBorderColor,\r\n      bottom: 0\r\n    };\r\n\r\n    const left = this.props.scrollValue.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: [0, containerWidth / numberOfTabs]\r\n    });\r\n    return (\r\n      <TabContainer\r\n        style={[\r\n          { backgroundColor: variables.tabDefaultBg },\r\n          this.props.tabContainerStyle ? this.props.tabContainerStyle : {}\r\n        ]}\r\n      >\r\n        {this.props.tabs.map((name, page) => {\r\n          const isTabActive = this.props.activeTab === page;\r\n          const renderTab = this.props.renderTab || this.renderTab;\r\n          return renderTab(\r\n            name,\r\n            page,\r\n            isTabActive,\r\n            this.props.goToPage,\r\n            this.props.tabStyle[page],\r\n            this.props.activeTabStyle[page],\r\n            this.props.textStyle[page],\r\n            this.props.activeTextStyle[page],\r\n            this.props.tabHeaderStyle[page],\r\n            variables.tabFontSize,\r\n            this.props.disabled[page],\r\n            this.props.disabledTextColor\r\n          );\r\n        })}\r\n        <Animated.View\r\n          style={[tabUnderlineStyle, { left }, this.props.underlineStyle]}\r\n        />\r\n      </TabContainer>\r\n    );\r\n  }\r\n});\r\n\r\n// module.exports = DefaultTabBar;\r\nconst StyledTab = connectStyle(\r\n  'NativeBase.DefaultTabBar',\r\n  {},\r\n  mapPropsToStyleNames\r\n)(DefaultTabBar);\r\nexport { StyledTab as DefaultTabBar };\r\n"]}