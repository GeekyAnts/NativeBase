{"version":3,"sources":["../../../../src/basic/Tabs/DefaultTabBar.js"],"names":["ReactNative","require","StyleSheet","View","Animated","Platform","Button","DefaultTabBar","propTypes","goToPage","PropTypes","func","activeTab","number","tabs","array","backgroundColor","string","activeTextColor","inactiveTextColor","tabStyle","ViewPropTypes","style","renderTab","underlineStyle","tabContainerStyle","contextTypes","theme","object","getDefaultProps","variable","topTabBarActiveTextColor","topTabBarTextColor","tabFontSize","renderTabOption","name","page","isTabActive","onPressHandler","activeTabStyle","textStyle","activeTextStyle","tabHeaderStyle","disabled","headerContent","props","children","undefined","textColor","fontWeight","flex","fontSize","_","random","render","variables","context","platformStyle","containerWidth","numberOfTabs","length","tabUnderlineStyle","position","width","height","topTabBarActiveBorderColor","bottom","left","scrollValue","interpolate","inputRange","outputRange","console","log","tabDefaultBg","map","StyledTab","mapPropsToStyleNames"],"mappings":"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","file":"DefaultTabBar.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport createReactClass from \"create-react-class\";\nimport _ from \"lodash\";\nimport { connectStyle, StyleProvider } from \"native-base-shoutem-theme\";\nimport mapPropsToStyleNames from \"../../utils/mapPropsToStyleNames\";\nimport variable from \"./../../theme/variables/platform\";\nimport { TabHeading, Text, TabContainer } from \"./../../index\";\nimport { ViewPropTypes } from \"../../utils\";\nconst ReactNative = require(\"react-native\");\n\nconst { StyleSheet, View, Animated, Platform } = ReactNative;\nconst Button = require(\"./Button\");\n\nconst DefaultTabBar = createReactClass({\n    propTypes: {\n        goToPage: PropTypes.func,\n        activeTab: PropTypes.number,\n        tabs: PropTypes.array,\n        backgroundColor: PropTypes.string,\n        activeTextColor: PropTypes.string,\n        inactiveTextColor: PropTypes.string,\n        tabStyle: ViewPropTypes.style,\n        renderTab: PropTypes.func,\n        underlineStyle: ViewPropTypes.style,\n        tabContainerStyle: ViewPropTypes.style,\n    },\n    contextTypes: {\n        theme: PropTypes.object\n    },\n\n    getDefaultProps() {\n        return {\n            activeTextColor: variable.topTabBarActiveTextColor,\n            inactiveTextColor: variable.topTabBarTextColor,\n            backgroundColor: null,\n            tabFontSize: variable.tabFontSize\n        };\n    },\n\n    renderTabOption(name, page) {},\n\n    renderTab(\n        name,\n        page,\n        isTabActive,\n        onPressHandler,\n        tabStyle,\n        activeTabStyle,\n        textStyle,\n        activeTextStyle,\n        tabHeaderStyle,\n        tabFontSize,\n        disabled\n    ) {\n        const headerContent =\n            typeof name !== \"string\" ? name.props.children : undefined;\n        const { activeTextColor, inactiveTextColor } = this.props;\n        const textColor = isTabActive ? activeTextColor : inactiveTextColor;\n        const fontWeight = isTabActive ? \"bold\" : \"normal\";\n        // const fontSize = tabFontSize;\n        if (typeof name === \"string\") {\n            return (\n                <Button\n                    style={{ flex: 1 }}\n                    key={name}\n                    onPress={() => {\n                        if (disabled === true) {\n                            return;\n                        }\n                        onPressHandler(page);\n                    }}\n                >\n                    <TabHeading\n                        style={isTabActive ? activeTabStyle : tabStyle}\n                        active={isTabActive}\n                    >\n                        <Text\n                            style={[\n                                { fontSize: tabFontSize },\n                                isTabActive ? activeTextStyle : textStyle\n                            ]}\n                        >\n                            {name}\n                        </Text>\n                    </TabHeading>\n                </Button>\n            );\n        } else {\n            return (\n                <Button\n                    style={{ flex: 1 }}\n                    key={_.random(1.2, 5.2)}\n                    onPress={() => {\n                        if (disabled === true) {\n                            return;\n                        }\n                        onPressHandler(page);\n                    }}\n                >\n                    <TabHeading style={tabHeaderStyle} active={isTabActive}>\n                        {headerContent}\n                    </TabHeading>\n                </Button>\n            );\n        }\n    },\n\n    render() {\n        const variables = this.context.theme\n            ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\n            : variable;\n        const platformStyle = variables.platformStyle;\n        const containerWidth = this.props.containerWidth;\n        const numberOfTabs = this.props.tabs.length;\n        const tabUnderlineStyle = {\n            position: \"absolute\",\n            width: containerWidth / numberOfTabs,\n            height: 4,\n            backgroundColor: variables.topTabBarActiveBorderColor,\n            bottom: 0\n        };\n\n        const left = this.props.scrollValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, containerWidth / numberOfTabs]\n        });\n        console.log(\"tabs:\", this.props.tabs);\n        return (\n            <TabContainer\n                style={[\n                    { backgroundColor: variables.tabDefaultBg },\n                    this.props.tabContainerStyle\n                        ? this.props.tabContainerStyle\n                        : {}\n                ]}\n            >\n                {this.props.tabs.map((name, page) => {\n                    const isTabActive = this.props.activeTab === page;\n                    const renderTab = this.props.renderTab || this.renderTab;\n                    return renderTab(\n                        name,\n                        page,\n                        isTabActive,\n                        this.props.goToPage,\n                        this.props.tabStyle[page],\n                        this.props.activeTabStyle[page],\n                        this.props.textStyle[page],\n                        this.props.activeTextStyle[page],\n                        this.props.tabHeaderStyle[page],\n                        variables.tabFontSize,\n                        this.props.disabled[page]\n                    );\n                })}\n                <Animated.View\n                    style={[\n                        tabUnderlineStyle,\n                        { left },\n                        this.props.underlineStyle\n                    ]}\n                />\n            </TabContainer>\n        );\n    }\n});\n\n// module.exports = DefaultTabBar;\nconst StyledTab = connectStyle(\n    \"NativeBase.DefaultTabBar\",\n    {},\n    mapPropsToStyleNames\n)(DefaultTabBar);\nexport { StyledTab as DefaultTabBar };\n"]}