{"version":3,"sources":["../../../src/basic/SwipeRow.js"],"names":["PREVIEW_OPEN_DELAY","PREVIEW_CLOSE_DELAY","SwipeRow","props","horizontalSwipeGestureBegan","swipeInitialX","parentScrollEnabled","ranPreview","state","dimensionsSet","hiddenHeight","hiddenWidth","_translateX","Animated","Value","_panResponder","PanResponder","create","onMoveShouldSetPanResponder","e","gs","handleOnMoveShouldSetPanResponder","onPanResponderMove","handlePanResponderMove","onPanResponderRelease","handlePanResponderEnd","onPanResponderTerminate","onShouldBlockNativeResponder","toValue","delay","timing","duration","previewDuration","useNativeDriver","setState","recalculateHiddenLayout","nativeEvent","layout","height","width","preview","previewOpenValue","rightOpenValue","getPreviewAnimation","start","dx","Math","abs","directionalDistanceChangeThreshold","gestureState","dy","absDx","absDy","setScrollEnabled","_value","swipeGestureBegan","newDX","disableLeftSwipe","disableRightSwipe","stopLeftSwipe","stopRightSwipe","setValue","leftOpenValue","swipeToOpenPercent","manuallySwipeRow","spring","friction","tension","onRowDidClose","onRowDidOpen","onRowClose","onRowOpen","panHandlers","transform","translateX","zIndex","list","style","body","backgroundColor","onContentLayout","undefined","styles","hidden","flex","flexDirection","justifyContent","left","right","renderMainContent","Component","defaultProps","closeOnRowPress","container","bottom","overflow","position","top","StyledSwipeRow","mapPropsToStyleNames"],"mappings":"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","file":"SwipeRow.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Animated, PanResponder, View } from 'react-native';\r\nimport { connectStyle } from 'native-base-shoutem-theme';\r\n\r\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\r\n\r\nimport { Left } from './Left';\r\nimport { Right } from './Right';\r\nimport { Body } from './Body';\r\nimport { ListItem } from './ListItem';\r\n\r\nconst PREVIEW_OPEN_DELAY = 700;\r\nconst PREVIEW_CLOSE_DELAY = 300;\r\n\r\nclass SwipeRow extends Component {\r\n  static defaultProps = {\r\n    leftOpenValue: 0,\r\n    rightOpenValue: 0,\r\n    closeOnRowPress: true,\r\n    disableLeftSwipe: false,\r\n    disableRightSwipe: false,\r\n    recalculateHiddenLayout: false,\r\n    preview: false,\r\n    previewDuration: 300,\r\n    directionalDistanceChangeThreshold: 2,\r\n    swipeToOpenPercent: 50\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.horizontalSwipeGestureBegan = false;\r\n    this.swipeInitialX = null;\r\n    this.parentScrollEnabled = true;\r\n    this.ranPreview = false;\r\n    this.state = {\r\n      dimensionsSet: false,\r\n      hiddenHeight: 0,\r\n      hiddenWidth: 0\r\n    };\r\n    this._translateX = new Animated.Value(0);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._panResponder = PanResponder.create({\r\n      onMoveShouldSetPanResponder: (e, gs) =>\r\n        this.handleOnMoveShouldSetPanResponder(e, gs),\r\n      onPanResponderMove: (e, gs) => this.handlePanResponderMove(e, gs),\r\n      onPanResponderRelease: (e, gs) => this.handlePanResponderEnd(e, gs),\r\n      onPanResponderTerminate: (e, gs) => this.handlePanResponderEnd(e, gs),\r\n      onShouldBlockNativeResponder: _ => false\r\n    });\r\n  }\r\n\r\n  getPreviewAnimation(toValue, delay) {\r\n    return Animated.timing(this._translateX, {\r\n      duration: this.props.previewDuration,\r\n      toValue,\r\n      delay,\r\n      useNativeDriver: true\r\n    });\r\n  }\r\n\r\n  onContentLayout(e) {\r\n    this.setState({\r\n      dimensionsSet: !this.props.recalculateHiddenLayout,\r\n      hiddenHeight: e.nativeEvent.layout.height,\r\n      hiddenWidth: e.nativeEvent.layout.width\r\n    });\r\n\r\n    if (this.props.preview && !this.ranPreview) {\r\n      this.ranPreview = true;\r\n      const previewOpenValue =\r\n        this.props.previewOpenValue || this.props.rightOpenValue * 0.5;\r\n      this.getPreviewAnimation(previewOpenValue, PREVIEW_OPEN_DELAY).start(\r\n        _ => {\r\n          this.getPreviewAnimation(0, PREVIEW_CLOSE_DELAY).start();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleOnMoveShouldSetPanResponder(e, gs) {\r\n    const { dx } = gs;\r\n    return Math.abs(dx) > this.props.directionalDistanceChangeThreshold;\r\n  }\r\n\r\n  handlePanResponderMove(e, gestureState) {\r\n    const { dx, dy } = gestureState;\r\n    const absDx = Math.abs(dx);\r\n    const absDy = Math.abs(dy);\r\n\r\n    // this check may not be necessary because we don't capture the move until we pass the threshold\r\n    // just being extra safe here\r\n    if (\r\n      absDx > this.props.directionalDistanceChangeThreshold ||\r\n      absDy > this.props.directionalDistanceChangeThreshold\r\n    ) {\r\n      // we have enough to determine direction\r\n      if (absDy > absDx && !this.horizontalSwipeGestureBegan) {\r\n        // user is moving vertically, do nothing, listView will handle\r\n        return;\r\n      }\r\n\r\n      // user is moving horizontally\r\n      if (this.parentScrollEnabled) {\r\n        // disable scrolling on the listView parent\r\n        this.parentScrollEnabled = false;\r\n        this.props.setScrollEnabled && this.props.setScrollEnabled(false);\r\n      }\r\n\r\n      if (this.swipeInitialX === null) {\r\n        // set tranlateX value when user started swiping\r\n        this.swipeInitialX = this._translateX._value;\r\n      }\r\n      if (!this.horizontalSwipeGestureBegan) {\r\n        this.horizontalSwipeGestureBegan = true;\r\n        this.props.swipeGestureBegan && this.props.swipeGestureBegan();\r\n      }\r\n\r\n      let newDX = this.swipeInitialX + dx;\r\n      if (this.props.disableLeftSwipe && newDX < 0) {\r\n        newDX = 0;\r\n      }\r\n      if (this.props.disableRightSwipe && newDX > 0) {\r\n        newDX = 0;\r\n      }\r\n\r\n      if (this.props.stopLeftSwipe && newDX > this.props.stopLeftSwipe) {\r\n        newDX = this.props.stopLeftSwipe;\r\n      }\r\n      if (this.props.stopRightSwipe && newDX < this.props.stopRightSwipe) {\r\n        newDX = this.props.stopRightSwipe;\r\n      }\r\n\r\n      this._translateX.setValue(newDX);\r\n    }\r\n  }\r\n\r\n  handlePanResponderEnd(e, gestureState) {\r\n    // re-enable scrolling on listView parent\r\n    if (!this.parentScrollEnabled) {\r\n      this.parentScrollEnabled = true;\r\n      this.props.setScrollEnabled && this.props.setScrollEnabled(true);\r\n    }\r\n\r\n    // finish up the animation\r\n    let toValue = 0;\r\n    if (this._translateX._value >= 0) {\r\n      // trying to open right\r\n      if (\r\n        this._translateX._value >\r\n        this.props.leftOpenValue * (this.props.swipeToOpenPercent / 100)\r\n      ) {\r\n        // we're more than halfway\r\n        toValue = this.props.leftOpenValue;\r\n      }\r\n    } else {\r\n      // trying to open left\r\n      if (\r\n        this._translateX._value <\r\n        this.props.rightOpenValue * (this.props.swipeToOpenPercent / 100)\r\n      ) {\r\n        // we're more than halfway\r\n        toValue = this.props.rightOpenValue;\r\n      }\r\n    }\r\n\r\n    this.manuallySwipeRow(toValue);\r\n  }\r\n\r\n  /*\r\n   * This method is called by SwipeListView\r\n   */\r\n  closeRow() {\r\n    this.manuallySwipeRow(0);\r\n  }\r\n\r\n  openLeftRow() {\r\n    this.manuallySwipeRow(this.props.leftOpenValue);\r\n  }\r\n\r\n  openRightRow() {\r\n    this.manuallySwipeRow(this.props.rightOpenValue);\r\n  }\r\n\r\n  manuallySwipeRow(toValue) {\r\n    Animated.spring(this._translateX, {\r\n      toValue,\r\n      friction: this.props.friction,\r\n      tension: this.props.tension,\r\n      useNativeDriver: true\r\n    }).start(_ => {\r\n      if (toValue === 0) {\r\n        this.props.onRowDidClose && this.props.onRowDidClose();\r\n      } else {\r\n        this.props.onRowDidOpen && this.props.onRowDidOpen();\r\n      }\r\n    });\r\n\r\n    if (toValue === 0) {\r\n      this.props.onRowClose && this.props.onRowClose();\r\n    } else {\r\n      this.props.onRowOpen && this.props.onRowOpen(toValue);\r\n    }\r\n\r\n    // reset everything\r\n    this.swipeInitialX = null;\r\n    this.horizontalSwipeGestureBegan = false;\r\n  }\r\n\r\n  renderMainContent() {\r\n    // We do this annoying if statement for performance.\r\n    // We don't want the onLayout func to run after it runs once.\r\n    if (this.state.dimensionsSet) {\r\n      return (\r\n        <Animated.View\r\n          {...this._panResponder.panHandlers}\r\n          style={{\r\n            transform: [{ translateX: this._translateX }],\r\n            zIndex: 2\r\n          }}\r\n        >\r\n          {!this.props.list ? (\r\n            <ListItem list style={this.props.style}>\r\n              {this.props.body}\r\n            </ListItem>\r\n          ) : (\r\n            <View style={[{ backgroundColor: '#FFF' }, this.props.style]}>\r\n              {this.props.body}\r\n            </View>\r\n          )}\r\n        </Animated.View>\r\n      );\r\n    }\r\n    return (\r\n      <Animated.View\r\n        {...this._panResponder.panHandlers}\r\n        onLayout={e => this.onContentLayout(e)}\r\n        style={{\r\n          transform: [{ translateX: this._translateX }],\r\n          zIndex: 2\r\n        }}\r\n      >\r\n        {!this.props.list ? (\r\n          <ListItem list style={this.props.style}>\r\n            {this.props.body}\r\n          </ListItem>\r\n        ) : (\r\n          <View style={[{ backgroundColor: '#FFF' }, this.props.style]}>\r\n            {this.props.body}\r\n          </View>\r\n        )}\r\n      </Animated.View>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={this.props.style ? this.props.style : undefined}>\r\n        <View\r\n          style={[\r\n            styles.hidden,\r\n            {\r\n              height: this.state.hiddenHeight,\r\n              flex: 1,\r\n              flexDirection: 'row',\r\n              justifyContent: 'space-between'\r\n            }\r\n          ]}\r\n        >\r\n          <Left style={{ width: this.props.leftOpenValue, zIndex: 1 }}>\r\n            {this.props.left}\r\n          </Left>\r\n          <Body style={{ flex: 0 }} />\r\n          <Right style={{ width: -this.props.rightOpenValue, zIndex: 1 }}>\r\n            {this.props.right}\r\n          </Right>\r\n        </View>\r\n        {this.renderMainContent()}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    // As of RN 0.29 flex: 1 is causing all rows to be the same height\r\n    // flex: 1\r\n  },\r\n  hidden: {\r\n    bottom: 0,\r\n    left: 0,\r\n    overflow: 'hidden',\r\n    position: 'absolute',\r\n    right: 0,\r\n    top: 0\r\n  }\r\n};\r\n\r\nconst StyledSwipeRow = connectStyle(\r\n  'NativeBase.SwipeRow',\r\n  {},\r\n  mapPropsToStyleNames\r\n)(SwipeRow);\r\nexport { StyledSwipeRow as SwipeRow };\r\n"]}