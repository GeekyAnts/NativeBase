{"version":3,"sources":["../../../src/basic/H1.js"],"names":["H1","_root","c","props","Component","childrenType","propName","component","error","prop","React","Children","forEach","child","Error","propTypes","Text","children","style","PropTypes","oneOfType","object","number","array","StyledH1","mapPropsToStyleNames"],"mappings":"+0BAAA,4B,2CACA,qC,mDACA,yCACA,iEAEA,mE,68BAEMA,G,qPACK,iBACP,MAAO,+BAAC,iBAAD,WAAM,IAAK,sBAAM,QAAKC,KAAL,CAAaC,CAAnB,EAAX,EAAsC,KAAKC,KAA3C,mDAAP,CACD,C,gBAHcC,gB,EAMjB,GAAMC,cAAe,QAAfA,aAAe,CAASF,KAAT,CAAgBG,QAAhB,CAA0BC,SAA1B,CAAqC,CACxD,GAAIC,aAAJ,CACA,GAAMC,MAAON,MAAMG,QAAN,CAAb,CACAI,gBAAMC,QAAN,CAAeC,OAAf,CAAuBH,IAAvB,CAA6B,eAAS,CACpC,GAAI,MAAOI,MAAP,GAAiB,QAAjB,EAA6B,MAAOA,MAAP,GAAiB,QAAlD,CAA4D,CAC1DL,MAAQ,GAAIM,MAAJ,CAAaP,SAAb,sCAAR,CACD,CACF,CAJD,EAKA,MAAOC,MAAP,CACD,CATD,CAWAR,GAAGe,SAAH,aACKC,kBAAKD,SADV,EAEEE,SAAUZ,YAFZ,CAGEa,MAAOC,oBAAUC,SAAV,CAAoB,CACzBD,oBAAUE,MADe,CAEzBF,oBAAUG,MAFe,CAGzBH,oBAAUI,KAHe,CAApB,CAHT,GAUA,GAAMC,UAAW,yCAAa,eAAb,CAA8B,EAA9B,CAAkCC,8BAAlC,EAAwDzB,EAAxD,CAAjB,C,QAEqBA,E,CAAZwB,Q","file":"H1.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text } from 'react-native';\nimport { connectStyle } from 'native-base-shoutem-theme';\n\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\n\nclass H1 extends Component {\n  render() {\n    return <Text ref={c => (this._root = c)} {...this.props} />;\n  }\n}\n\nconst childrenType = function(props, propName, component) {\n  let error;\n  const prop = props[propName];\n  React.Children.forEach(prop, child => {\n    if (typeof child !== 'string' && typeof child !== 'number') {\n      error = new Error(`${component} should have only string or number`);\n    }\n  });\n  return error;\n};\n\nH1.propTypes = {\n  ...Text.propTypes,\n  children: childrenType,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ])\n};\n\nconst StyledH1 = connectStyle('NativeBase.H1', {}, mapPropsToStyleNames)(H1);\n\nexport { StyledH1 as H1 };\n"]}