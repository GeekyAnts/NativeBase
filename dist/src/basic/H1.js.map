{"version":3,"sources":["../../../src/basic/H1.js"],"names":["H1","_root","c","props","Component","childrenType","propName","component","error","prop","React","Children","forEach","child","Error","propTypes","Text","children","style","PropTypes","oneOfType","object","number","array","StyledH1","mapPropsToStyleNames"],"mappings":"4yBAAA,4B,2CACA,qC,mDACA,yCAEA,iEACA,mE,68BAEMA,G,qPACI,iBACR,MAAO,+BAAC,iBAAD,WAAM,IAAK,sBAAM,QAAKC,KAAL,CAAaC,CAAnB,EAAX,EAAsC,KAAKC,KAA3C,EAAP,CACA,C,gBAHeC,gB,EAMjB,GAAMC,cAAe,QAAfA,aAAe,CAAUF,KAAV,CAAiBG,QAAjB,CAA2BC,SAA3B,CAAsC,CAC1D,GAAIC,aAAJ,CACA,GAAMC,MAAON,MAAMG,QAAN,CAAb,CACAI,gBAAMC,QAAN,CAAeC,OAAf,CAAuBH,IAAvB,CAA6B,eAAS,CACrC,GAAI,MAAOI,MAAP,GAAiB,QAAjB,EAA6B,MAAOA,MAAP,GAAiB,QAAlD,CAA4D,CAC3DL,MAAQ,GAAIM,MAAJ,CAAaP,SAAb,sCAAR,CACA,CACD,CAJD,EAKA,MAAOC,MAAP,CACA,CATD,CAWAR,GAAGe,SAAH,aACIC,kBAAKD,SADT,EAECE,SAAUZ,YAFX,CAGCa,MAAOC,oBAAUC,SAAV,CAAoB,CAACD,oBAAUE,MAAX,CAAmBF,oBAAUG,MAA7B,CAAqCH,oBAAUI,KAA/C,CAApB,CAHR,GAMA,GAAMC,UAAW,yCAAa,eAAb,CAA8B,EAA9B,CAAkCC,8BAAlC,EAAwDzB,EAAxD,CAAjB,C,QAEqBA,E,CAAZwB,Q","file":"H1.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Text } from \"react-native\";\n\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\n\nclass H1 extends Component {\n\trender() {\n\t\treturn <Text ref={c => (this._root = c)} {...this.props} />;\n\t}\n}\n\nconst childrenType = function (props, propName, component) {\n\tlet error;\n\tconst prop = props[propName];\n\tReact.Children.forEach(prop, child => {\n\t\tif (typeof child !== \"string\" && typeof child !== \"number\") {\n\t\t\terror = new Error(`${component} should have only string or number`);\n\t\t}\n\t});\n\treturn error;\n};\n\nH1.propTypes = {\n\t...Text.propTypes,\n\tchildren: childrenType,\n\tstyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n};\n\nconst StyledH1 = connectStyle(\"NativeBase.H1\", {}, mapPropsToStyleNames)(H1);\n\nexport { StyledH1 as H1 };\n"]}