{"version":3,"sources":["../../../src/basic/ListItem.js"],"names":["ListItem","variables","context","theme","variable","Platform","OS","androidRipple","props","onPress","onLongPress","Version","_root","c","listBtnUnderlayColor","undefined","children","marginLeft","paddingLeft","Component","contextTypes","PropTypes","object","propTypes","TouchableHighlight","style","oneOfType","number","array","itemDivider","bool","button","StyledListItem","mapPropsToStyleNames"],"mappings":"21BAAA,4B;AACA,qC;AACA;;;;;;;AAOA;AACA,mE;AACA,qD;;AAEMA,Q;;;;AAIK;AACP,GAAMC,WAAY,KAAKC,OAAL,CAAaC,KAAb;AACd,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SADnC;AAEdG,kBAFJ;;AAIA;AACEC,sBAASC,EAAT,GAAgB,KAAhB;AACAD,sBAASC,EAAT,GAAgB,KADhB;AAEAL,UAAUM,aAAV,GAA4B,KAF5B;AAGC,CAAC,KAAKC,KAAL,CAAWC,OAAZ,EAAuB,CAAC,KAAKD,KAAL,CAAWE,WAHpC;AAIAL,sBAASM,OAAT,EAAoB,EALtB;AAME;AACA;AACE,8BAAC,+BAAD;AACE,QAAS,KAAKH,KAAL,CAAWC,OADtB;AAEE,YAAa,KAAKD,KAAL,CAAWE,WAF1B;AAGE,IAAK,sBAAM,QAAKE,KAAL,CAAaC,CAAnB,EAHP;AAIE,cAAeZ,UAAUa,oBAJ3B;AAKM,KAAKN,KALX;AAME,MAAOO,SANT;;AAQE,8BAAC,iBAAD,aAAU,KAAKP,KAAf,mDAAuB,KAAKA,KAAL,CAAWQ,QAAlC,CARF,CADF;;;AAYD,CAnBD,IAmBO;AACL;AACE,8BAAC,oCAAD;AACE,IAAK,sBAAM,QAAKJ,KAAL,CAAaC,CAAnB,EADP;AAEE,QAAS,KAAKL,KAAL,CAAWC,OAFtB;AAGE,YAAa,KAAKD,KAAL,CAAWE,WAH1B;;AAKE,8BAAC,iBAAD,EAAM,MAAO,CAAEO,WAAY,CAAC,EAAf,CAAmBC,YAAa,EAAhC,CAAb;AACE,8BAAC,iBAAD,aAAU,KAAKV,KAAf,mDAAuB,KAAKA,KAAL,CAAWQ,QAAlC,CADF,CALF,CADF;;;;AAWD;AACF,C,sBAzCoBG,gB,EAAjBnB,Q,CACGoB,Y,CAAe,CACpBjB,MAAOkB,oBAAUC,MADG,C;;;AA2CxBtB,SAASuB,SAAT;AACKC,gCAAmBD,SADxB;AAEEE,MAAOJ,oBAAUK,SAAV,CAAoB;AACzBL,oBAAUC,MADe;AAEzBD,oBAAUM,MAFe;AAGzBN,oBAAUO,KAHe,CAApB,CAFT;;AAOEC,YAAaR,oBAAUS,IAPzB;AAQEC,OAAQV,oBAAUS,IARpB;;;AAWA,GAAME,gBAAiB;AACrB,qBADqB;AAErB,EAFqB;AAGrBC,8BAHqB;AAIrBjC,QAJqB,CAAvB,C;;AAM2BA,Q,CAAlBgC,c","file":"ListItem.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  TouchableHighlight,\n  Platform,\n  TouchableNativeFeedback,\n  View\n} from \"react-native\";\n\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\nimport variable from \"../theme/variables/platform\";\n\nclass ListItem extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\n      : variable;\n\n    if (\n      Platform.OS === \"ios\" ||\n      Platform.OS === \"web\" ||\n      variables.androidRipple === false ||\n      (!this.props.onPress && !this.props.onLongPress) ||\n      Platform.Version <= 21\n    ) {\n      return (\n        <TouchableHighlight\n          onPress={this.props.onPress}\n          onLongPress={this.props.onLongPress}\n          ref={c => (this._root = c)}\n          underlayColor={variables.listBtnUnderlayColor}\n          {...this.props}\n          style={undefined}\n        >\n          <View {...this.props}>{this.props.children}</View>\n        </TouchableHighlight>\n      );\n    } else {\n      return (\n        <TouchableNativeFeedback\n          ref={c => (this._root = c)}\n          onPress={this.props.onPress}\n          onLongPress={this.props.onLongPress}\n        >\n          <View style={{ marginLeft: -17, paddingLeft: 17 }}>\n            <View {...this.props}>{this.props.children}</View>\n          </View>\n        </TouchableNativeFeedback>\n      );\n    }\n  }\n}\n\nListItem.propTypes = {\n  ...TouchableHighlight.propTypes,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ]),\n  itemDivider: PropTypes.bool,\n  button: PropTypes.bool\n};\n\nconst StyledListItem = connectStyle(\n  \"NativeBase.ListItem\",\n  {},\n  mapPropsToStyleNames\n)(ListItem);\n\nexport { StyledListItem as ListItem };\n"]}