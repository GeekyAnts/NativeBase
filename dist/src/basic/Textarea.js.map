{"version":3,"sources":["../../../src/basic/Textarea.js"],"names":["Textarea","textarea","height","props","rowSpan","defaultProps","style","getStyle","_textInput","c","_root","prepareRootProps","placeholderTextColor","variables","inputColorPlaceholder","disabled","Component","propTypes","TextInput","PropTypes","oneOfType","object","number","array","bordered","bool","underline","StyledTextarea","mapPropsToStyleNames"],"mappings":"61BAAA,4B,2CACA,qC,mDACA,yCACA,iEAEA,qD,iDACA,mD,yDACA,mE,68BAEMA,S,6RACO,CACT,MAAO,CACLC,SAAU,CACRC,OAAQ,KAAKC,KAAL,CAAWC,OAAX,CAAqB,KAAKD,KAAL,CAAWC,OAAX,CAAqB,EAA1C,CAA+C,EAD/C,CADL,CAAP,CAKD,C,2DAEkB,CACjB,GAAMC,cAAe,CACnBC,MAAO,KAAKC,QAAL,GAAgBN,QADJ,CAArB,CAGA,MAAO,2BAAa,KAAKE,KAAlB,CAAyBE,YAAzB,CAAP,CACD,C,uCACQ,iBACP,MACE,+BAAC,sBAAD,WACE,IAAK,eAAK,CACR,OAAKG,UAAL,CAAkBC,CAAlB,CACA,OAAKC,KAAL,CAAaD,CAAb,CACD,CAJH,EAKM,KAAKE,gBAAL,EALN,EAME,cANF,CAOE,qBACE,KAAKR,KAAL,CAAWS,oBAAX,CACI,KAAKT,KAAL,CAAWS,oBADf,CAEIC,mBAAUC,qBAVlB,CAYE,sBAAsB,eAZxB,CAaE,SAAU,CAAC,KAAKX,KAAL,CAAWY,QAbxB,kDADF,CAiBD,C,sBAjCoBC,gB,EAoCvBhB,SAASiB,SAAT,aACKC,uBAAUD,SADf,EAEEX,MAAOa,oBAAUC,SAAV,CAAoB,CACzBD,oBAAUE,MADe,CAEzBF,oBAAUG,MAFe,CAGzBH,oBAAUI,KAHe,CAApB,CAFT,CAOEnB,QAASe,oBAAUG,MAPrB,CAQEE,SAAUL,oBAAUM,IARtB,CASEC,UAAWP,oBAAUM,IATvB,GAYA,GAAME,gBAAiB,yCACrB,qBADqB,CAErB,EAFqB,CAGrBC,8BAHqB,EAIrB5B,QAJqB,CAAvB,C,QAM2BA,Q,CAAlB2B,c","file":"Textarea.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TextInput } from 'react-native';\r\nimport { connectStyle } from 'native-base-shoutem-theme';\r\n\r\nimport variables from '../theme/variables/platform';\r\nimport computeProps from '../utils/computeProps';\r\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\r\n\r\nclass Textarea extends Component {\r\n  getStyle() {\r\n    return {\r\n      textarea: {\r\n        height: this.props.rowSpan ? this.props.rowSpan * 25 : 60\r\n      }\r\n    };\r\n  }\r\n\r\n  prepareRootProps() {\r\n    const defaultProps = {\r\n      style: this.getStyle().textarea\r\n    };\r\n    return computeProps(this.props, defaultProps);\r\n  }\r\n  render() {\r\n    return (\r\n      <TextInput\r\n        ref={c => {\r\n          this._textInput = c;\r\n          this._root = c;\r\n        }}\r\n        {...this.prepareRootProps()}\r\n        multiline\r\n        placeholderTextColor={\r\n          this.props.placeholderTextColor\r\n            ? this.props.placeholderTextColor\r\n            : variables.inputColorPlaceholder\r\n        }\r\n        underlineColorAndroid=\"rgba(0,0,0,0)\"\r\n        editable={!this.props.disabled}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nTextarea.propTypes = {\r\n  ...TextInput.propTypes,\r\n  style: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.number,\r\n    PropTypes.array\r\n  ]),\r\n  rowSpan: PropTypes.number,\r\n  bordered: PropTypes.bool,\r\n  underline: PropTypes.bool\r\n};\r\n\r\nconst StyledTextarea = connectStyle(\r\n  'NativeBase.Textarea',\r\n  {},\r\n  mapPropsToStyleNames\r\n)(Textarea);\r\n\r\nexport { StyledTextarea as Textarea };\r\n"]}