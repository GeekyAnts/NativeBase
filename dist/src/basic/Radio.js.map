{"version":3,"sources":["../../../src/basic/Radio.js"],"names":["Radio","variables","context","theme","platformStyle","platform","_root","c","props","color","selected","radioSelectedColorAndroid","undefined","lineHeight","radioBtnLineHeight","fontSize","radioBtnSize","contextTypes","PropTypes","object","propTypes","bool","StyledRadio"],"mappings":"+yBAAA,4B;AACA;AACA;AACA,4D;AACA,mE;AACA,qD;;AAEMA,K;;;;;AAKK;AACP,GAAMC,WAAY,KAAKC,OAAL,CAAaC,KAAb;AACd,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SADnC,mBAAlB;;AAGA,GAAMG,eAAgBH,UAAUG,aAAhC;AACA,GAAMC,UAAWJ,UAAUI,QAA3B;;AAEA;AACE,sEAAkB,IAAK,sBAAK,QAAKC,KAAL,CAAaC,CAAlB,EAAvB,EAAgD,KAAKC,KAArD;AACE;AACE,MAAO;AACLC,MAAO,KAAKD,KAAL,CAAWE,QAAX;AACHT,UAAUU,yBADP;AAEHC,SAHC;AAILC,WAAYZ,UAAUa,kBAJjB;AAKLC,SAAUd,UAAUe,YALf,CADT;;AAQE;AACE,KAAKR,KAAL,CAAWE,QAAX,CAAsB,oBAAtB,CAA6C,qBATjD,EADF,CADF;;;;;AAgBD,C,qCA5BGV,K,CACGiB,Y,CAAe,CACpBd,MAAO,gBAAMe,SAAN,CAAgBC,MADH,C;;;AA8BxBnB,MAAMoB,SAAN;AACK,8BAAiBA,SADtB;AAEEV,SAAU,gBAAMQ,SAAN,CAAgBG,IAF5B;;;AAKA,GAAMC,aAAc,wBAAa,kBAAb,CAAiC,EAAjC;AAClBtB,KADkB,CAApB,C;;;AAIwBA,K,CAAfsB,W","file":"Radio.js","sourcesContent":["import React, { Component } from \"react\";\nimport { TouchableOpacity, Platform } from \"react-native\";\nimport { connectStyle } from \"@shoutem/theme\";\nimport Icon from \"react-native-vector-icons/Ionicons\";\nimport mapPropsToStyleNames from \"../Utils/mapPropsToStyleNames\";\nimport variable from \"../theme/variables/platform\";\n\nclass Radio extends Component {\n  static contextTypes = {\n    theme: React.PropTypes.object\n  };\n\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\n      : variable;\n    const platformStyle = variables.platformStyle;\n    const platform = variables.platform;\n\n    return (\n      <TouchableOpacity ref={c => this._root = c} {...this.props}>\n        <Icon\n          style={{\n            color: this.props.selected\n              ? variables.radioSelectedColorAndroid\n              : undefined,\n            lineHeight: variables.radioBtnLineHeight,\n            fontSize: variables.radioBtnSize\n          }}\n          name={\n            this.props.selected ? \"md-radio-button-on\" : \"md-radio-button-off\"\n          }\n        />\n      </TouchableOpacity>\n    );\n  }\n}\n\nRadio.propTypes = {\n  ...TouchableOpacity.propTypes,\n  selected: React.PropTypes.bool\n};\n\nconst StyledRadio = connectStyle(\"NativeBase.Radio\", {}, mapPropsToStyleNames)(\n  Radio\n);\n\nexport { StyledRadio as Radio };\n"]}