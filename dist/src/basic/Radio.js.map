{"version":3,"sources":["../../../src/basic/Radio.js"],"names":["Radio","defaultProps","standardStyle","props","variables","context","theme","platformStyle","platform","_root","c","prepareRootProps","OS","selected","color","brandPrimary","lineHeight","height","fontSize","radioBtnSize","undefined","radioSelectedColorAndroid","radioBtnLineHeight","contextTypes","PropTypes","object","propTypes","bool","StyledRadio"],"mappings":"+yBAAA,4B;AACA;AACA;AACA,4D;AACA,mE;AACA,qD;AACA,mD;;AAEMA,K;;;;;AAKe;AACjB,GAAMC,cAAe;AACnBC,cAAe,KADI,CAArB;;;AAIA,MAAO,2BAAa,KAAKC,KAAlB,CAAyBF,YAAzB,CAAP;AACD,C;;AAEQ;AACP,GAAMG,WAAa,KAAKC,OAAL,CAAaC,KAAd,CAAuB,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SAAxE,mBAAlB;AACA,GAAMG,eAAgBH,UAAUG,aAAhC;AACA,GAAMC,UAAWJ,UAAUI,QAA3B;;AAEA;AACE,sEAAkB,IAAK,sBAAK,QAAKC,KAAL,CAAaC,CAAlB,EAAvB,EAAgD,KAAKC,gBAAL,EAAhD;AACI,sBAASC,EAAT,GAAgB,KAAhB,EAAyB,CAAC,KAAKT,KAAL,CAAWD,aAAtC;AACE,KAAKC,KAAL,CAAWU,QAAZ,EAAyB;AACzB,MAAO;AACLC,MAAOV,UAAUW,YADZ;AAELC,WAAY,EAFP;AAGLC,OAAQ,EAHH;AAILC,SAAUd,UAAUe,YAJf,CADkB;;AAOzB,KAAK,eAPoB,EAD1B;;AAUC;AACE,MAAO;AACLL,MAAO,sBAASF,EAAT,GAAgB,KAAhB,CAAyB,KAAKT,KAAL,CAAWU,QAAZ,CAAwBT,UAAUW,YAAlC,CAAiDK,SAAzE;AACyB,KAAKjB,KAAL,CAAWU,QAAZ,CAAwBT,UAAUiB,yBAAlC,CAA8DD,SAFxF;AAGLJ,WAAYZ,UAAUkB,kBAHjB;AAILJ,SAAUd,UAAUe,YAJf,CADT;;AAOE;AACE,sBAASP,EAAT,GAAgB,KAAhB,CAAwB,KAAKT,KAAL,CAAWU,QAAX,CAAsB,qBAAtB,CAA8C,sBAAtE;AACE,KAAKV,KAAL,CAAWU,QAAX,CAAsB,oBAAtB,CAA6C,qBATnD,EAXJ,CADF;;;;AAyBD,C,qCA3CGb,K,CACGuB,Y,CAAe,CACpBjB,MAAO,gBAAMkB,SAAN,CAAgBC,MADH,C;;;AA6CxBzB,MAAM0B,SAAN;AACK,8BAAiBA,SADtB;AAEEb,SAAU,gBAAMW,SAAN,CAAgBG,IAF5B;AAGEzB,cAAe,gBAAMsB,SAAN,CAAgBG,IAHjC;;;AAMA,GAAMC,aAAc,wBAAa,kBAAb,CAAiC,EAAjC,iCAA2D5B,KAA3D,CAApB,C;;;AAGiBA,K,CAAf4B,W","file":"Radio.js","sourcesContent":["import React, { Component } from 'react';\nimport { TouchableOpacity, Platform } from 'react-native';\nimport { connectStyle } from '@shoutem/theme';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport mapPropsToStyleNames from '../Utils/mapPropsToStyleNames';\nimport variable from '../theme/variables/platform';\nimport computeProps from '../Utils/computeProps';\n\nclass Radio extends Component {\n  static contextTypes = {\n    theme: React.PropTypes.object,\n  }\n\n  prepareRootProps() {\n    const defaultProps = {\n      standardStyle: false,\n    };\n\n    return computeProps(this.props, defaultProps);\n  }\n\n  render() {\n    const variables = (this.context.theme) ? this.context.theme['@@shoutem.theme/themeStyle'].variables : variable;\n    const platformStyle = variables.platformStyle;\n    const platform = variables.platform;\n\n    return (\n      <TouchableOpacity ref={c => this._root = c} {...this.prepareRootProps()}>\n        {(Platform.OS === 'ios' && !this.props.standardStyle) ?\n          (this.props.selected) && <Icon\n          style={{\n            color: variables.brandPrimary,\n            lineHeight: 25,\n            height: 20,\n            fontSize: variables.radioBtnSize,\n          }}\n          name=\"ios-checkmark\" />\n          :\n          <Icon\n            style={{\n              color: Platform.OS === 'ios' ? (this.props.selected) ? variables.brandPrimary : undefined\n                                           : (this.props.selected) ? variables.radioSelectedColorAndroid : undefined,\n              lineHeight: variables.radioBtnLineHeight,\n              fontSize: variables.radioBtnSize,\n            }}\n            name={\n              Platform.OS === 'ios' ? this.props.selected ? 'ios-radio-button-on' : 'ios-radio-button-off'\n              : this.props.selected ? 'md-radio-button-on' : 'md-radio-button-off'}  />\n      }\n      </TouchableOpacity>\n    );\n  }\n}\n\nRadio.propTypes = {\n  ...TouchableOpacity.propTypes,\n  selected: React.PropTypes.bool,\n  standardStyle: React.PropTypes.bool\n};\n\nconst StyledRadio = connectStyle('NativeBase.Radio', {}, mapPropsToStyleNames)(Radio);\n\nexport {\n  StyledRadio as Radio,\n};\n"]}