{"version":3,"sources":["../../../src/basic/Header.js"],"names":["Header","props","state","orientation","val","maxComp","Math","max","variable","deviceWidth","deviceHeight","width","setState","mode","inSet","style","inset","undefined","Inset","InsetValues","portrait","landscape","oldHeight","height","topInset","topPadder","StyleSheet","flatten","padding","paddingTop","androidStatusBarColor","iosBarStyle","transparent","translucent","variables","context","theme","platformStyle","layoutChange","e","nativeEvent","layout","statusBarColor","iosStatusbar","isIphoneX","_root","c","calculateHeight","calculatePadder","Component","contextTypes","PropTypes","object","propTypes","ViewPropTypes","oneOfType","number","array","searchBar","bool","rounded","StyledHeader","mapPropsToStyleNames"],"mappings":"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","file":"Header.js","sourcesContent":["/* eslint-disable no-nested-ternary */\n/* eslint-disable no-unneeded-ternary */\nimport { get } from 'lodash';\nimport { connectStyle } from 'native-base-shoutem-theme';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { View, StatusBar, StyleSheet, ViewPropTypes } from 'react-native';\n\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\nimport variable from '../theme/variables/platform';\n\nclass Header extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      orientation: 'portrait'\n    };\n  }\n\n  layoutChange(val) {\n    const maxComp = Math.max(variable.deviceWidth, variable.deviceHeight);\n\n    if (val.width >= maxComp) this.setState({ orientation: 'landscape' });\n    else this.setState({ orientation: 'portrait' });\n  }\n\n  calculateHeight(mode, inSet) {\n    const { style } = this.props;\n    let inset = null;\n\n    if (inSet !== undefined) {\n      inset = inSet;\n    } else {\n      inset = variable.Inset;\n    }\n\n    const InsetValues = mode === 'portrait' ? inset.portrait : inset.landscape;\n    let oldHeight = null;\n\n    if (style.height !== undefined) {\n      oldHeight = style.height;\n    } else if (style[1]) {\n      oldHeight = style[1].height ? style[1].height : style[0].height;\n    } else {\n      oldHeight = style[0].height;\n    }\n\n    const height = oldHeight + InsetValues.topInset;\n\n    return height;\n  }\n\n  calculatePadder(mode, inSet) {\n    let inset = null;\n\n    if (inSet !== undefined) {\n      inset = inSet;\n    } else {\n      inset = variable.Inset;\n    }\n\n    const InsetValues = mode === 'portrait' ? inset.portrait : inset.landscape;\n    let topPadder = null;\n    const style = StyleSheet.flatten(this.props.style);\n\n    if (style.padding !== undefined || style.paddingTop !== undefined) {\n      topPadder =\n        (style.paddingTop ? style.paddingTop : get(style, 'padding', 0)) +\n        InsetValues.topInset;\n    } else {\n      topPadder = InsetValues.topInset;\n    }\n\n    return topPadder;\n  }\n\n  render() {\n    const {\n      androidStatusBarColor,\n      iosBarStyle,\n      style,\n      transparent,\n      translucent\n    } = this.props;\n    const { orientation } = this.state;\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n    const platformStyle = variables.platformStyle;\n\n    return (\n      <View onLayout={e => this.layoutChange(e.nativeEvent.layout)}>\n        <StatusBar\n          backgroundColor={\n            androidStatusBarColor\n              ? androidStatusBarColor\n              : variables.statusBarColor\n          }\n          barStyle={\n            iosBarStyle\n              ? iosBarStyle\n              : platformStyle === 'material'\n              ? 'light-content'\n              : variables.iosStatusbar\n          }\n          translucent={transparent ? true : translucent}\n        />\n        {variables.isIphoneX ? (\n          <View\n            ref={c => (this._root = c)}\n            {...this.props}\n            style={[\n              style,\n              {\n                height: this.calculateHeight(orientation, variables.Inset),\n                paddingTop: this.calculatePadder(orientation, variables.Inset)\n              }\n            ]}\n          />\n        ) : (\n          <View ref={c => (this._root = c)} {...this.props} />\n        )}\n      </View>\n    );\n  }\n}\n\nHeader.propTypes = {\n  ...ViewPropTypes,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ]),\n  searchBar: PropTypes.bool,\n  rounded: PropTypes.bool\n};\n\nconst StyledHeader = connectStyle(\n  'NativeBase.Header',\n  {},\n  mapPropsToStyleNames\n)(Header);\nexport { StyledHeader as Header };\n"]}