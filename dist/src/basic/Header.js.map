{"version":3,"sources":["../../../src/basic/Header.js"],"names":["Header","variables","context","theme","variable","platformStyle","props","androidStatusBarColor","statusBarColor","iosBarStyle","iosStatusbar","_root","c","Component","contextTypes","PropTypes","object","propTypes","ViewPropTypes","style","oneOfType","number","array","searchBar","bool","rounded","StyledHeader","mapPropsToStyleNames"],"mappings":"u1BAAA,4B;AACA,qC;AACA;AACA;AACA,mE;AACA,qD;AACA,8B;;AAEMA,M;;;;;AAKK;AACP,GAAMC,WAAY,KAAKC,OAAL,CAAaC,KAAb;AACd,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SADnC;AAEdG,kBAFJ;AAGA,GAAMC,eAAgBJ,UAAUI,aAAhC;;AAEA;AACE,8BAAC,iBAAD;AACE,8BAAC,sBAAD;AACE;AACE,KAAKC,KAAL,CAAWC,qBAAX;AACI,KAAKD,KAAL,CAAWC,qBADf;AAEIN,UAAUO,cAJlB;;AAME;AACE,KAAKF,KAAL,CAAWG,WAAX;AACI,KAAKH,KAAL,CAAWG,WADf;AAEIJ,gBAAkB,UAAlB;AACE,eADF;AAEEJ,UAAUS,YAXpB,iDADF;;;AAeE,8BAAC,iBAAD,WAAM,IAAK,sBAAM,QAAKC,KAAL,CAAaC,CAAnB,EAAX,EAAsC,KAAKN,KAA3C,mDAfF,CADF;;;AAmBD,C,oBA9BkBO,gB,EAAfb,M,CACGc,Y,CAAe,CACpBX,MAAOY,oBAAUC,MADG,C;;;AAgCxBhB,OAAOiB,SAAP;AACKC,0BADL;AAEEC,MAAOJ,oBAAUK,SAAV,CAAoB;AACzBL,oBAAUC,MADe;AAEzBD,oBAAUM,MAFe;AAGzBN,oBAAUO,KAHe,CAApB,CAFT;;AAOEC,UAAWR,oBAAUS,IAPvB;AAQEC,QAASV,oBAAUS,IARrB;;;AAWA,GAAME,cAAe;AACnB,mBADmB;AAEnB,EAFmB;AAGnBC,8BAHmB;AAInB3B,MAJmB,CAArB,C;AAKyBA,M,CAAhB0B,Y","file":"Header.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { View, StatusBar, ViewPropTypes } from \"react-native\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\nimport variable from \"../theme/variables/platform\";\nimport _ from \"lodash\";\n\nclass Header extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\n      : variable;\n    const platformStyle = variables.platformStyle;\n\n    return (\n      <View>\n        <StatusBar\n          backgroundColor={\n            this.props.androidStatusBarColor\n              ? this.props.androidStatusBarColor\n              : variables.statusBarColor\n          }\n          barStyle={\n            this.props.iosBarStyle\n              ? this.props.iosBarStyle\n              : platformStyle === \"material\"\n                ? \"light-content\"\n                : variables.iosStatusbar\n          }\n        />\n        <View ref={c => (this._root = c)} {...this.props} />\n      </View>\n    );\n  }\n}\n\nHeader.propTypes = {\n  ...ViewPropTypes,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ]),\n  searchBar: PropTypes.bool,\n  rounded: PropTypes.bool\n};\n\nconst StyledHeader = connectStyle(\n  \"NativeBase.Header\",\n  {},\n  mapPropsToStyleNames\n)(Header);\nexport { StyledHeader as Header };\n"]}