{"version":3,"sources":["../../../src/basic/Item.js"],"names":["Item","props","state","text","topAnim","Animated","Value","opacAnim","floatingLabel","inputProps","value","setState","isFocused","floatUp","getRef","_inputRef","nextProps","childrenArray","React","Children","toArray","children","_","remove","item","type","displayName","timing","toValue","duration","start","e","label","labelProps","newLabel","labelStyle","StyleSheet","flatten","fontSize","lineHeight","style","push","createElement","Label","key","float","floatBack","newChildren","input","Input","icon","iconProps","Icon","length","isIcon","i","name","position","left","last","right","top","opacity","paddingTop","Platform","OS","undefined","paddingBottom","renderLabel","c","onFocus","onBlur","onChangeText","stackedLabel","flexDirection","flex","width","variables","deviceWidth","roundedInputGroup","borderWidth","rounded","borderRadius","inputGroupRoundedBorderRadius","defaultProps","getInitialStyle","_root","prepareRootProps","renderChildren","Component","childrenType","propName","component","error","prop","Error","propTypes","TouchableOpacity","PropTypes","oneOfType","object","number","array","inlineLabel","bool","fixedLabel","success","StyledItem","mapPropsToStyleNames"],"mappings":"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","file":"Item.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  TouchableOpacity,\r\n  Animated,\r\n  Platform,\r\n  View,\r\n  StyleSheet\r\n} from \"react-native\";\r\nimport { Input } from \"./Input\";\r\nimport { Label } from \"./Label\";\r\nimport { Icon } from \"./Icon\";\r\n\r\nimport { connectStyle } from \"native-base-shoutem-theme\";\r\nimport variables from \"../theme/variables/platform\";\r\nimport computeProps from \"../utils/computeProps\";\r\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\r\nimport _ from \"lodash\";\r\n\r\nclass Item extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      text: \"\",\r\n      topAnim: new Animated.Value(18),\r\n      opacAnim: new Animated.Value(1)\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.floatingLabel) {\r\n      if (this.inputProps && this.inputProps.value) {\r\n        this.setState({ isFocused: true });\r\n        this.floatUp(-16);\r\n      }\r\n      if (this.inputProps && this.inputProps.getRef)\r\n        this.inputProps.getRef(this._inputRef);\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    const childrenArray = React.Children.toArray(nextProps.children);\r\n    let inputProps = {};\r\n    _.remove(childrenArray, item => {\r\n      if (item.type.displayName === \"Styled(Input)\") {\r\n        inputProps = item.props;\r\n        this.inputProps = item.props;\r\n        return item;\r\n      }\r\n    });\r\n    if (this.props.floatingLabel) {\r\n      if (this.inputProps && this.inputProps.value) {\r\n        this.setState({ isFocused: true });\r\n        this.floatUp(-16);\r\n      }\r\n      if (this.inputProps && this.inputProps.getRef)\r\n        this.inputProps.getRef(this._inputRef);\r\n    }\r\n  }\r\n\r\n  floatBack() {\r\n    Animated.timing(this.state.topAnim, {\r\n      toValue: 18,\r\n      duration: 150\r\n    }).start();\r\n    Animated.timing(this.state.opacAnim, {\r\n      toValue: 1,\r\n      duration: 150\r\n    }).start();\r\n  }\r\n\r\n  floatUp(e) {\r\n    Animated.timing(this.state.topAnim, {\r\n      toValue: e || -22,\r\n      duration: 150\r\n    }).start();\r\n    Animated.timing(this.state.opacAnim, {\r\n      toValue: 0.7,\r\n      duration: 150\r\n    }).start();\r\n  }\r\n\r\n  renderLabel(label, labelProps) {\r\n    const newLabel = [];\r\n    let labelStyle = StyleSheet.flatten(\r\n      { fontSize: 15, lineHeight: 30 },\r\n      labelProps.style\r\n    );\r\n    if (this.props.floatingLabel) {\r\n      if (this.state.isFocused) {\r\n        newLabel.push(\r\n          React.createElement(Label, {\r\n            ...labelProps,\r\n            key: \"newFLabel\",\r\n            float: true,\r\n            style: labelStyle\r\n          })\r\n        );\r\n        this.floatUp(-16);\r\n      } else {\r\n        newLabel.push(label);\r\n        this.floatBack();\r\n      }\r\n    } else {\r\n      newLabel.push(\r\n        React.createElement(Label, {\r\n          ...labelProps,\r\n          key: \"newLabel\"\r\n        })\r\n      );\r\n    }\r\n    return newLabel;\r\n  }\r\n\r\n  renderChildren() {\r\n    const newChildren = [];\r\n    const childrenArray = React.Children.toArray(this.props.children);\r\n\r\n    let label = [];\r\n    let labelProps = {};\r\n    label = _.remove(childrenArray, item => {\r\n      if (item.type === Label) {\r\n        labelProps = item.props;\r\n        return item;\r\n      }\r\n    });\r\n\r\n    let input = [];\r\n    let inputProps = {};\r\n    input = _.remove(childrenArray, item => {\r\n      if (item.type === Input) {\r\n        inputProps = item.props;\r\n        this.inputProps = item.props;\r\n        return item;\r\n      }\r\n    });\r\n\r\n    let icon = [];\r\n    let iconProps = {};\r\n    icon = _.remove(childrenArray, item => {\r\n      if (item.type === Icon) {\r\n        iconProps = item.props;\r\n        return item;\r\n      }\r\n    });\r\n    if (this.props.floatingLabel && icon.length) {\r\n      let isIcon = false;\r\n      for (let i = 0; i < this.props.children.length; i++) {\r\n        if (this.props.children[i].props.name && this.props.children[i].type.displayName !== \"Styled(Input)\") {\r\n          isIcon = true;\r\n          newChildren.push(\r\n            <Icon key={[i]} {...this.props.children[i].props} />\r\n          );\r\n        }\r\n        if (this.props.children[i].props.children) {\r\n          newChildren.push(\r\n            <Animated.View\r\n              key=\"float\"\r\n              style={{\r\n                position: \"absolute\",\r\n                left:\r\n                  this.props.last && isIcon\r\n                    ? 40\r\n                    : this.props.last\r\n                      ? 15\r\n                      : isIcon\r\n                        ? 26\r\n                        : 0,\r\n                right: 0,\r\n                top: this.state.topAnim,\r\n                opacity: this.state.opacAnim,\r\n                paddingTop: Platform.OS === \"ios\" ? undefined : undefined,\r\n                paddingBottom: Platform.OS === \"ios\" ? undefined : 12\r\n              }}\r\n            >\r\n              <Label {...labelProps}>\r\n                {this.renderLabel(label, labelProps)}\r\n              </Label>\r\n            </Animated.View>\r\n          );\r\n          newChildren.push(\r\n            <Input\r\n              ref={c => (this._inputRef = c)}\r\n              key=\"l2\"\r\n              {...inputProps}\r\n              onFocus={() => {\r\n                this.setState({ isFocused: true });\r\n                inputProps.onFocus && inputProps.onFocus();\r\n              }}\r\n              onBlur={() => {\r\n                inputProps.value\r\n                  ? this.setState({\r\n                    isFocused: true\r\n                  })\r\n                  : !this.state.text.length &&\r\n                  this.setState({ isFocused: false });\r\n                inputProps.onBlur && inputProps.onBlur();\r\n              }}\r\n              onChangeText={text => {\r\n                this.setState({ text });\r\n                inputProps.onChangeText && inputProps.onChangeText(text);\r\n              }}\r\n            />\r\n          );\r\n        }\r\n      }\r\n    } else if (this.props.floatingLabel) {\r\n      newChildren.push(\r\n        <Animated.View\r\n          key=\"float\"\r\n          style={{\r\n            position: \"absolute\",\r\n            left: this.props.last ? 15 : 0,\r\n            right: 0,\r\n            top: this.state.topAnim,\r\n            opacity: this.state.opacAnim,\r\n            paddingTop: Platform.OS === \"ios\" ? undefined : undefined,\r\n            paddingBottom: Platform.OS === \"ios\" ? undefined : 12\r\n          }}\r\n        >\r\n          <Label {...labelProps}>{this.renderLabel(label, labelProps)}</Label>\r\n        </Animated.View>\r\n      );\r\n      newChildren.push(\r\n        <Input\r\n          ref={c => (this._inputRef = c)}\r\n          value={this.state.text}\r\n          key=\"l2\"\r\n          {...inputProps}\r\n          onFocus={() => {\r\n            this.setState({ isFocused: true });\r\n            inputProps.onFocus && inputProps.onFocus();\r\n          }}\r\n          onBlur={() => {\r\n            inputProps.value\r\n              ? this.setState({\r\n                isFocused: true\r\n              })\r\n              : !this.state.text.length && this.setState({ isFocused: false });\r\n            inputProps.onBlur && inputProps.onBlur();\r\n          }}\r\n          onChangeText={text => {\r\n            this.setState({ text });\r\n            inputProps.onChangeText && inputProps.onChangeText(text);\r\n          }}\r\n        />\r\n      );\r\n    } else if (this.props.stackedLabel && icon.length) {\r\n      newChildren.push(\r\n        <View\r\n          key=\"s\"\r\n          style={{\r\n            flexDirection: \"row\",\r\n            flex: 1,\r\n            width: variables.deviceWidth - 15\r\n          }}\r\n        >\r\n          <Icon key=\"s1\" {...iconProps} />\r\n          <View style={{ flexDirection: \"column\" }}>\r\n            <Label key=\"s2\" {...labelProps} />\r\n            <Input\r\n              key=\"s3\"\r\n              {...inputProps}\r\n              style={{ width: variables.deviceWidth - 40 }}\r\n            />\r\n          </View>\r\n        </View>\r\n      );\r\n    } else {\r\n      return this.props.children;\r\n    }\r\n    return newChildren;\r\n  }\r\n  getInitialStyle() {\r\n    return {\r\n      roundedInputGroup: {\r\n        borderWidth: this.props.rounded ? variables.borderWidth * 2 : undefined,\r\n        borderRadius: this.props.rounded\r\n          ? variables.inputGroupRoundedBorderRadius\r\n          : undefined\r\n      }\r\n    };\r\n  }\r\n\r\n  prepareRootProps() {\r\n    const defaultProps = {\r\n      style: this.getInitialStyle().roundedInputGroup\r\n    };\r\n\r\n    return computeProps(this.props, defaultProps);\r\n  }\r\n  render() {\r\n    return (\r\n      <TouchableOpacity\r\n        ref={c => (this._root = c)}\r\n        {...this.prepareRootProps()}\r\n        activeOpacity={1}\r\n      >\r\n        {this.renderChildren()}\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n}\r\n\r\nconst childrenType = function (props, propName, component) {\r\n  let error;\r\n  const prop = props[propName];\r\n  if (!props.children.length) {\r\n    error = new Error(\r\n      `${component} should have both Label and Input components`\r\n    );\r\n  } else if (\r\n    props.children[0].type.displayName !== \"Styled(Label)\" ||\r\n    props.children[1].type.displayName !== \"Styled(Input)\"\r\n  ) {\r\n    error = new Error(\r\n      `${component} should have Label and Input components only`\r\n    );\r\n  }\r\n  return error;\r\n};\r\n\r\nItem.propTypes = {\r\n  ...TouchableOpacity.propTypes,\r\n  style: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.number,\r\n    PropTypes.array\r\n  ]),\r\n  inlineLabel: PropTypes.bool,\r\n  floatingLabel: PropTypes.bool,\r\n  stackedLabel: PropTypes.bool,\r\n  fixedLabel: PropTypes.bool,\r\n  success: PropTypes.bool,\r\n  error: PropTypes.bool\r\n};\r\n\r\nconst StyledItem = connectStyle(\"NativeBase.Item\", {}, mapPropsToStyleNames)(\r\n  Item\r\n);\r\n\r\nexport { StyledItem as Item };\r\n"]}