{"version":3,"sources":["../../../src/basic/Root.js"],"names":["Root","_root","c","props","flex","children","Toast","toastInstance","ActionSheet","actionsheetInstance","Component","propTypes","ViewPropTypes","style","PropTypes","oneOfType","object","number","array","StyledRoot","mapPropsToStyleNames"],"mappings":"q1BAAA,4B,2CACA,yCACA,qC,mDACA,iEAEA,mE,yEAEA,gDACA,0C,o4BAEMA,K,iQACK,iBACP,MACE,+BAAC,iBAAD,WAAM,IAAK,sBAAM,QAAKC,KAAL,CAAaC,CAAnB,EAAX,EAAsC,KAAKC,KAA3C,EAAkD,MAAO,CAAEC,KAAM,CAAR,CAAzD,kDACG,KAAKD,KAAL,CAAWE,QADd,CAEE,8BAAC,8BAAD,EACE,IAAK,eAAK,CACR,GAAIH,CAAJ,CAAOI,+BAAMC,aAAN,CAAsBL,CAAtB,CACR,CAHH,iDAFF,CAOE,8BAAC,iCAAD,EACE,IAAK,eAAK,CACR,GAAIA,CAAJ,CAAOM,kCAAYC,mBAAZ,CAAkCP,CAAlC,CACR,CAHH,iDAPF,CADF,CAeD,C,kBAjBgBQ,gB,EAoBnBV,KAAKW,SAAL,aACKC,0BADL,EAEEC,MAAOC,oBAAUC,SAAV,CAAoB,CACzBD,oBAAUE,MADe,CAEzBF,oBAAUG,MAFe,CAGzBH,oBAAUI,KAHe,CAApB,CAFT,GASA,GAAMC,YAAa,yCAAa,iBAAb,CAAgC,EAAhC,CAAoCC,8BAApC,EACjBpB,IADiB,CAAnB,C,QAIuBA,I,CAAdmB,U","file":"Root.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, ViewPropTypes } from 'react-native';\r\nimport PropTypes from 'prop-types';\r\nimport { connectStyle } from 'native-base-shoutem-theme';\r\n\r\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\r\n\r\nimport { ToastContainer as Toast } from './ToastContainer';\r\nimport { ActionSheetContainer as ActionSheet } from './Actionsheet';\r\n\r\nclass Root extends Component {\r\n  render() {\r\n    return (\r\n      <View ref={c => (this._root = c)} {...this.props} style={{ flex: 1 }}>\r\n        {this.props.children}\r\n        <Toast\r\n          ref={c => {\r\n            if (c) Toast.toastInstance = c;\r\n          }}\r\n        />\r\n        <ActionSheet\r\n          ref={c => {\r\n            if (c) ActionSheet.actionsheetInstance = c;\r\n          }}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nRoot.propTypes = {\r\n  ...ViewPropTypes,\r\n  style: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.number,\r\n    PropTypes.array\r\n  ])\r\n};\r\n\r\nconst StyledRoot = connectStyle('NativeBase.Root', {}, mapPropsToStyleNames)(\r\n  Root\r\n);\r\n\r\nexport { StyledRoot as Root };\r\n"]}