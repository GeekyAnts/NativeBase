{"version":3,"sources":["../../../src/basic/Root.js"],"names":["Root","_root","c","props","flex","children","Toast","toastInstance","ActionSheet","actionsheetInstance","Component","propTypes","ViewPropTypes","style","PropTypes","oneOfType","object","number","array","StyledRoot","mapPropsToStyleNames"],"mappings":"q1BAAA,4B;AACA;AACA,qC;AACA;AACA,mE;AACA;AACA;AACA,4B;;AAEMA,I;AACK;AACP;AACE,8BAAC,iBAAD,WAAM,IAAK,sBAAM,QAAKC,KAAL,CAAaC,CAAnB,EAAX,EAAsC,KAAKC,KAA3C,EAAkD,MAAO,CAAEC,KAAM,CAAR,CAAzD;AACG,KAAKD,KAAL,CAAWE,QADd;AAEE,8BAAC,8BAAD;AACE,IAAK,eAAK;AACR,GAAIH,CAAJ,CAAOI,+BAAMC,aAAN,CAAsBL,CAAtB;AACR,CAHH,iDAFF;;AAOE,8BAAC,iCAAD;AACE,IAAK,eAAK;AACR,GAAIA,CAAJ;AACEM,kCAAYC,mBAAZ,CAAkCP,CAAlC;AACH,CAJH,iDAPF,CADF;;;;AAgBD,C,kBAlBgBQ,gB;;;AAqBnBV,KAAKW,SAAL;AACKC,0BADL;AAEEC,MAAOC,oBAAUC,SAAV,CAAoB;AACzBD,oBAAUE,MADe;AAEzBF,oBAAUG,MAFe;AAGzBH,oBAAUI,KAHe,CAApB,CAFT;;;;AASA,GAAMC,YAAa,yCAAa,iBAAb,CAAgC,EAAhC,CAAoCC,8BAApC;AACjBpB,IADiB,CAAnB,C;;;AAIuBA,I,CAAdmB,U","file":"Root.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View, ViewPropTypes } from \"react-native\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connectStyle } from \"native-base-shoutem-theme\";\r\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\r\nimport { ToastContainer as Toast } from \"./ToastContainer\";\r\nimport { ActionSheetContainer as ActionSheet } from \"./Actionsheet\";\r\nimport { Text } from \"./Text\";\r\n\r\nclass Root extends Component {\r\n  render() {\r\n    return (\r\n      <View ref={c => (this._root = c)} {...this.props} style={{ flex: 1 }}>\r\n        {this.props.children}\r\n        <Toast\r\n          ref={c => {\r\n            if (c) Toast.toastInstance = c;\r\n          }}\r\n        />\r\n        <ActionSheet\r\n          ref={c => {\r\n            if (c)\r\n              ActionSheet.actionsheetInstance = c;\r\n          }}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nRoot.propTypes = {\r\n  ...ViewPropTypes,\r\n  style: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.number,\r\n    PropTypes.array\r\n  ])\r\n};\r\n\r\nconst StyledRoot = connectStyle(\"NativeBase.Root\", {}, mapPropsToStyleNames)(\r\n  Root\r\n);\r\n\r\nexport { StyledRoot as Root };\r\n"]}