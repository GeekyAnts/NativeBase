{"version":3,"sources":["../../../src/basic/Root.js"],"names":["Root","_root","c","props","flex","children","Toast","toastInstance","ActionSheet","actionsheetInstance","Component","propTypes","ViewPropTypes","style","PropTypes","oneOfType","object","number","array","StyledRoot","mapPropsToStyleNames"],"mappings":"m1BAAA,4B;AACA;AACA,qC;AACA;AACA,mE;AACA;AACA;AACA,4B;;AAEMA,I;AACK;AACP;AACE,8BAAC,iBAAD,WAAM,IAAK,sBAAM,QAAKC,KAAL,CAAaC,CAAnB,EAAX,EAAsC,KAAKC,KAA3C,EAAkD,MAAO,CAAEC,KAAM,CAAR,CAAzD;AACG,KAAKD,KAAL,CAAWE,QADd;AAEE,8BAAC,8BAAD;AACE,IAAK,eAAK;AACR,GAAI,CAACC,+BAAMC,aAAX,CAA0BD,+BAAMC,aAAN,CAAsBL,CAAtB;AAC3B,CAHH,iDAFF;;AAOE,8BAAC,iCAAD;AACE,IAAK,eAAK;AACR,GAAI,CAACM,kCAAYC,mBAAjB;AACED,kCAAYC,mBAAZ,CAAkCP,CAAlC;AACH,CAJH,iDAPF,CADF;;;;AAgBD,C,kBAlBgBQ,gB;;;AAqBnBV,KAAKW,SAAL;AACKC,0BADL;AAEEC,MAAOC,oBAAUC,SAAV,CAAoB;AACzBD,oBAAUE,MADe;AAEzBF,oBAAUG,MAFe;AAGzBH,oBAAUI,KAHe,CAApB,CAFT;;;;AASA,GAAMC,YAAa,yCAAa,iBAAb,CAAgC,EAAhC,CAAoCC,8BAApC;AACjBpB,IADiB,CAAnB,C;;;AAIuBA,I,CAAdmB,U","file":"Root.js","sourcesContent":["import React, { Component } from \"react\";\nimport { View, ViewPropTypes } from \"react-native\";\nimport PropTypes from \"prop-types\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\nimport { ToastContainer as Toast } from \"./ToastContainer\";\nimport { ActionSheetContainer as ActionSheet } from \"./Actionsheet\";\nimport { Text } from \"./Text\";\n\nclass Root extends Component {\n  render() {\n    return (\n      <View ref={c => (this._root = c)} {...this.props} style={{ flex: 1 }}>\n        {this.props.children}\n        <Toast\n          ref={c => {\n            if (!Toast.toastInstance) Toast.toastInstance = c;\n          }}\n        />\n        <ActionSheet\n          ref={c => {\n            if (!ActionSheet.actionsheetInstance)\n              ActionSheet.actionsheetInstance = c;\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nRoot.propTypes = {\n  ...ViewPropTypes,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ])\n};\n\nconst StyledRoot = connectStyle(\"NativeBase.Root\", {}, mapPropsToStyleNames)(\n  Root\n);\n\nexport { StyledRoot as Root };\n"]}