{"version":3,"sources":["../../../src/basic/Checkbox.js"],"names":["CheckBox","backgroundColor","props","checked","variables","context","theme","push","color","checkboxBgColor","platformStyle","platform","_root","c","borderRadius","CheckboxRadius","overflow","width","checkboxSize","height","borderWidth","CheckboxBorderWidth","paddingLeft","CheckboxPaddingLeft","paddingBottom","CheckboxPaddingBottom","borderColor","getBackgroundColor","contextTypes","PropTypes","object","propTypes","style","bool","StyledCheckBox"],"mappings":"kzBAAA,4B;AACA;AACA;AACA;AACA,mE;AACA,qD;AACA,8B;;AAEMA,Q;;;;;AAKiB;AACnB,GAAMC,iBAAkB,CAAC,aAAD,CAAxB;;AAEA,GAAI,KAAKC,KAAL,CAAWC,OAAf,CAAwB;AACtB,GAAMC,WAAa,KAAKC,OAAL,CAAaC,KAAd,CAAuB,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SAAxE,mBAAlB;AACAH,gBAAgBM,IAAhB,CAAsB,KAAKL,KAAL,CAAWM,KAAZ,CAAqB,KAAKN,KAAL,CAAWM,KAAhC,CAAwCJ,UAAUK,eAAvE;AACD,CAHD,IAGO;AACLR,gBAAgBM,IAAhB,CAAqB,aAArB;AACD;AACD,MAAON,iBAAgB,CAAhB,CAAP;AACD,C;AACQ;AACP,GAAMG,WAAa,KAAKC,OAAL,CAAaC,KAAd,CAAuB,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SAAxE,mBAAlB;AACA,GAAMM,eAAgBN,UAAUM,aAAhC;AACA,GAAMC,UAAWP,UAAUO,QAA3B;;AAEA;AACE;AACE,IAAK,sBAAK,QAAKC,KAAL,CAAaC,CAAlB,EADP;AAEM,KAAKX,KAFX;AAGE,MAAO;AACLY,aAAcV,UAAUW,cADnB;AAELC,SAAU,QAFL;AAGLC,MAAOb,UAAUc,YAHZ;AAILC,OAAQf,UAAUc,YAJb;AAKLE,YAAahB,UAAUiB,mBALlB;AAMLC,YAAalB,UAAUmB,mBAAV,CAAgC,CANxC;AAOLC,cAAepB,UAAUqB,qBAPpB;AAQLC,YAAa,KAAKxB,KAAL,CAAWM,KAAX,CAAmB,KAAKN,KAAL,CAAWM,KAA9B,CAAsCJ,UAAUK,eARxD;AASLR,gBAAiB,KAAK0B,kBAAL,EATZ,CAHT;;;AAeE,8CAAQ,KAAQhB,WAAa,KAAd,EAAyBD,gBAAkB,UAA5C,CAA2D,uBAA3D,CAAqF,cAAnG,EAfF,CADF;;;AAmBD,C,wCAxCGV,Q,CACG4B,Y,CAAe,CACpBtB,MAAO,gBAAMuB,SAAN,CAAgBC,MADH,C;;;AA0CxB9B,SAAS+B,SAAT;AACK,8BAAiBA,SADtB;AAEEC,MAAO,gBAAMH,SAAN,CAAgBC,MAFzB;AAGE3B,QAAS,gBAAM0B,SAAN,CAAgBI,IAH3B;;;AAMA,GAAMC,gBAAiB,wBAAa,qBAAb,CAAoC,EAApC,iCAA8DlC,QAA9D,CAAvB,C;;;AAGoBA,Q,CAAlBkC,c","file":"Checkbox.js","sourcesContent":["import React, { Component } from 'react';\nimport { TouchableOpacity, Platform } from 'react-native';\nimport { IconNB } from './IconNB';\nimport { connectStyle } from '@shoutem/theme';\nimport mapPropsToStyleNames from '../Utils/mapPropsToStyleNames';\nimport variable from '../theme/variables/platform';\nimport _ from 'lodash';\n\nclass CheckBox extends Component {\n  static contextTypes = {\n    theme: React.PropTypes.object,\n  }\n\n  getBackgroundColor() {\n    const backgroundColor = ['transparent'];\n\n    if (this.props.checked) {\n      const variables = (this.context.theme) ? this.context.theme['@@shoutem.theme/themeStyle'].variables : variable;\n      backgroundColor.push((this.props.color) ? this.props.color : variables.checkboxBgColor);\n    } else {\n      backgroundColor.push('transparent');\n    }\n    return backgroundColor[1];\n  }\n  render() {\n    const variables = (this.context.theme) ? this.context.theme['@@shoutem.theme/themeStyle'].variables : variable;\n    const platformStyle = variables.platformStyle;\n    const platform = variables.platform;\n    // console.log('variables', variables);\n    return (\n      <TouchableOpacity\n        ref={c => this._root = c}\n        {...this.props}\n        style={{\n          borderRadius: variables.CheckboxRadius,\n          overflow: 'hidden',\n          width: variables.checkboxSize,\n          height: variables.checkboxSize,\n          borderWidth: variables.CheckboxBorderWidth,\n          paddingLeft: variables.CheckboxPaddingLeft - 1,\n          paddingBottom: variables.CheckboxPaddingBottom,\n          borderColor: this.props.color ? this.props.color : variables.checkboxBgColor,\n          backgroundColor: this.getBackgroundColor()\n        }}\n        >\n        <IconNB name={((platform === 'ios') && (platformStyle !== 'material')) ? 'ios-checkmark-outline' : 'md-checkmark'} />\n      </TouchableOpacity>\n    );\n  }\n}\n\nCheckBox.propTypes = {\n  ...TouchableOpacity.propTypes,\n  style: React.PropTypes.object,\n  checked: React.PropTypes.bool,\n};\n\nconst StyledCheckBox = connectStyle('NativeBase.CheckBox', {}, mapPropsToStyleNames)(CheckBox);\n\nexport {\n  StyledCheckBox as CheckBox,\n};\n"]}