{"version":3,"sources":["../../../src/basic/Checkbox.js"],"names":["CheckBox","variables","checkStyle","borderColor","props","color","checkboxBgColor","backgroundColor","checked","defaultProps","style","getInitialStyle","context","theme","platformStyle","platform","_root","c","prepareRootProps","checkboxTickColor","fontSize","CheckboxFontSize","lineHeight","CheckboxIconSize","contextTypes","PropTypes","object","propTypes","bool","StyledCheckBox"],"mappings":"kzBAAA,4B;AACA;AACA,4D;AACA;AACA,mE;AACA,qD;AACA,8B;AACA,mD;;;AAGMA,Q;;;;;AAKkC,IAAtBC,UAAsB;AACpC,MAAO;AACLC,WAAY;AACVC,YAAa,KAAKC,KAAL,CAAWC,KAAX,CAAmB,KAAKD,KAAL,CAAWC,KAA9B,CAAsCJ,UAAUK,eADnD;AAEVC,gBAAkB,KAAKH,KAAL,CAAWI,OAAX,GAAuB,IAAxB,CAAiC,KAAKJ,KAAL,CAAWC,KAAX,CAAmB,KAAKD,KAAL,CAAWC,KAA9B,CAAsCJ,UAAUK,eAAjF,CAAoG,aAF3G,CADP,CAAP;;;AAMD,C;;AAEgBL,S,CAAW;AAC1B,GAAMQ,cAAe;AACnBC,MAAO,KAAKC,eAAL,CAAqBV,SAArB,EAAgCC,UADpB,CAArB;;;AAIA,MAAO,2BAAa,KAAKE,KAAlB,CAAyBK,YAAzB,CAAP;AACD,C;AACQ;AACP,GAAMR,WAAa,KAAKW,OAAL,CAAaC,KAAd,CAAuB,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDZ,SAAxE,mBAAlB;AACA,GAAMa,eAAgBb,UAAUa,aAAhC;AACA,GAAMC,UAAWd,UAAUc,QAA3B;AACA;AACE,sEAAkB,IAAK,sBAAK,QAAKC,KAAL,CAAaC,CAAlB,EAAvB,EAAgD,KAAKC,gBAAL,CAAsBjB,SAAtB,CAAhD;AACE,kDAAQ,MAAO;AACXI,MAAOJ,UAAUkB,iBADN;AAEXC,SAAUnB,UAAUoB,gBAFT;AAGXC,WAAYrB,UAAUsB,gBAHX,CAAf;AAIK,KAAQR,WAAa,KAAd,EAAyBD,gBAAkB,UAA5C,CAA2D,uBAA3D,CAAqF,cAJhG,EADF,CADF;;;AASD,C,wCAlCGd,Q,CACGwB,Y,CAAe,CACpBX,MAAO,gBAAMY,SAAN,CAAgBC,MADH,C;;;AAoCxB1B,SAAS2B,SAAT;AACK,8BAAiBA,SADtB;AAEEjB,MAAO,gBAAMe,SAAN,CAAgBC,MAFzB;AAGElB,QAAS,gBAAMiB,SAAN,CAAgBG,IAH3B;;;AAMA,GAAMC,gBAAiB,wBAAa,qBAAb,CAAoC,EAApC,iCAA8D7B,QAA9D,CAAvB,C;;;AAGoBA,Q,CAAlB6B,c","file":"Checkbox.js","sourcesContent":["import React, { Component } from 'react';\nimport { TouchableOpacity, Platform } from 'react-native';\nimport IconNB from 'react-native-vector-icons/Ionicons';\nimport { connectStyle } from '@shoutem/theme';\nimport mapPropsToStyleNames from '../Utils/mapPropsToStyleNames';\nimport variable from '../theme/variables/platform';\nimport _ from 'lodash';\nimport computeProps from '../Utils/computeProps';\n\n\nclass CheckBox extends Component {\n  static contextTypes = {\n    theme: React.PropTypes.object,\n  }\n\n  getInitialStyle(variables = variable) {\n    return {\n      checkStyle: {\n        borderColor: this.props.color ? this.props.color : variables.checkboxBgColor,\n        backgroundColor: (this.props.checked === true) ? (this.props.color ? this.props.color : variables.checkboxBgColor) : 'transparent',\n      },\n    };\n  }\n\n  prepareRootProps(variables) {\n    const defaultProps = {\n      style: this.getInitialStyle(variables).checkStyle,\n    };\n\n    return computeProps(this.props, defaultProps);\n  }\n  render() {\n    const variables = (this.context.theme) ? this.context.theme['@@shoutem.theme/themeStyle'].variables : variable;\n    const platformStyle = variables.platformStyle;\n    const platform = variables.platform;\n    return (\n      <TouchableOpacity ref={c => this._root = c} {...this.prepareRootProps(variables)}>\n        <IconNB style={{\n            color: variables.checkboxTickColor,\n            fontSize: variables.CheckboxFontSize,\n            lineHeight: variables.CheckboxIconSize\n          }} name={((platform === 'ios') && (platformStyle !== 'material')) ? 'ios-checkmark-outline' : 'md-checkmark'} />\n      </TouchableOpacity>\n    );\n  }\n}\n\nCheckBox.propTypes = {\n  ...TouchableOpacity.propTypes,\n  style: React.PropTypes.object,\n  checked: React.PropTypes.bool,\n};\n\nconst StyledCheckBox = connectStyle('NativeBase.CheckBox', {}, mapPropsToStyleNames)(CheckBox);\n\nexport {\n  StyledCheckBox as CheckBox,\n};\n"]}