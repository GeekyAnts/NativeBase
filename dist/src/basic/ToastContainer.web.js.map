{"version":3,"sources":["../../../src/basic/ToastContainer.web.js"],"names":["ToastContainer","props","state","modalVisible","config","setState","text","buttonText","type","position","duration","setTimeout","autoHide","console","warn","toastInstance","_root","showToast","propTypes","style","PropTypes","object","StyledToastContainer"],"mappings":";;;AAGA,4B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mE;;;AAGMA,c;AACJ,wBAAYC,KAAZ,CAAmB;AACXA,KADW;AAEjB,MAAKC,KAAL,CAAa;AACXC,aAAc,KADH,CAAb,CAFiB;;AAKlB,C;;;;;AAKmB,oBAATC,OAAS,MAATA,MAAS;AAClB,KAAKC,QAAL,CAAc;AACZF,aAAc,IADF;AAEZG,KAAMF,OAAOE,IAFD;AAGZC,WAAYH,OAAOG,UAHP;AAIZC,KAAMJ,OAAOI,IAJD;AAKZC,SAAUL,OAAOK,QALL,CAAd;;AAOA,GAAIL,OAAOM,QAAP,CAAgB,CAApB,CAAuB;AACrBC,WAAW,UAAK;AACd,OAAKN,QAAL,CAAc;AACZF,aAAc,KADF,CAAd;;AAGD,CAJD,CAIGC,OAAOM,QAJV;AAKD;AACF,C;AACmB;AAClB,GAAI,CAAC,KAAKT,KAAL,CAAWW,QAAZ,EAAwB,KAAKX,KAAL,CAAWS,QAAvC,CAAiD;AAC/CG,QAAQC,IAAR;AACD;AACF,C;AACQ;AACP,MAAO,KAAP;AACD,C,0CA1BwB,IAATV,OAAS,oCACvB,KAAKW,aAAL,CAAmBC,KAAnB,CAAyBC,SAAzB,CAAmC,CAACb,aAAD,CAAnC,EACD,C;;;AA2BHJ,eAAekB,SAAf;AACK,kBAAKA,SADV;AAEEC,MAAO,gBAAMC,SAAN,CAAgBC,MAFzB;;;AAKA,GAAMC,sBAAuB,wBAAa,2BAAb,CAA0C,EAA1C,iCAAoEtB,cAApE,CAA7B,C;;;AAG0BA,c,CAAxBsB,oB","file":"ToastContainer.web.js","sourcesContent":["/* @flow */\n\n\nimport React, { Component } from 'react';\nimport { View, /*Modal,*/ Platform } from 'react-native';\nimport { connectStyle } from '@shoutem/theme';\nimport { Text } from './Text';\nimport { Button } from './Button';\nimport { ViewNB } from './View';\nimport { Toast } from './Toast';\nimport mapPropsToStyleNames from '../Utils/mapPropsToStyleNames';\n\n\nclass ToastContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalVisible: false\n    }\n  }\n  static toastInstance;\n  static show({...config}) {\n    this.toastInstance._root.showToast({config});\n  }\n  showToast({config}) {\n    this.setState({\n      modalVisible: true,\n      text: config.text,\n      buttonText: config.buttonText,\n      type: config.type,\n      position: config.position\n    });\n    if (config.duration>0) {\n      setTimeout(()=> {\n        this.setState({\n          modalVisible: false\n        });\n      }, config.duration);\n    }\n  }\n  componentDidMount() {\n    if (!this.props.autoHide && this.props.duration) {\n      console.warn(`It's not recommended to set autoHide false with duration`);\n    }\n  }\n  render() {\n    return null;\n  }\n}\n\nToastContainer.propTypes = {\n  ...View.propTypes,\n  style: React.PropTypes.object,\n};\n\nconst StyledToastContainer = connectStyle('NativeBase.ToastContainer', {}, mapPropsToStyleNames)(ToastContainer);\n\nexport {\n  StyledToastContainer as ToastContainer,\n};\n"]}