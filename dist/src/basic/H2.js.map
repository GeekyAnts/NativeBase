{"version":3,"sources":["../../../src/basic/H2.js"],"names":["H2","_root","c","props","Component","childrenType","propName","component","error","prop","React","Children","forEach","child","Error","propTypes","Text","children","style","PropTypes","oneOfType","object","number","array","StyledH2","mapPropsToStyleNames"],"mappings":"i1BAAA,4B;AACA,qC;AACA;;AAEA;AACA,mE;;AAEMA,E;AACI;AACR,MAAO,+BAAC,iBAAD,WAAM,IAAK,sBAAM,QAAKC,KAAL,CAAaC,CAAnB,EAAX,EAAsC,KAAKC,KAA3C,mDAAP;AACA,C,gBAHeC,gB;;AAKjB,GAAMC,cAAe,QAAfA,aAAe,CAAUF,KAAV,CAAiBG,QAAjB,CAA2BC,SAA3B,CAAsC;AAC1D,GAAIC,aAAJ;AACA,GAAMC,MAAON,MAAMG,QAAN,CAAb;AACAI,gBAAMC,QAAN,CAAeC,OAAf,CAAuBH,IAAvB,CAA6B,eAAS;AACrC,GAAI,MAAOI,MAAP,GAAiB,QAAjB,EAA6B,MAAOA,MAAP,GAAiB,QAAlD,CAA4D;AAC3DL,MAAQ,GAAIM,MAAJ,CAAaP,SAAb,sCAAR;AACA;AACD,CAJD;AAKA,MAAOC,MAAP;AACA,CATD;;AAWAR,GAAGe,SAAH;AACIC,kBAAKD,SADT;AAECE,SAAUZ,YAFX;AAGCa,MAAOC,oBAAUC,SAAV,CAAoB,CAACD,oBAAUE,MAAX,CAAmBF,oBAAUG,MAA7B,CAAqCH,oBAAUI,KAA/C,CAApB,CAHR;;;AAMA,GAAMC,UAAW,yCAAa,eAAb,CAA8B,EAA9B,CAAkCC,8BAAlC,EAAwDzB,EAAxD,CAAjB,C;;AAEqBA,E,CAAZwB,Q","file":"H2.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Text } from \"react-native\";\r\n\r\nimport { connectStyle } from \"native-base-shoutem-theme\";\r\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\r\n\r\nclass H2 extends Component {\r\n\trender() {\r\n\t\treturn <Text ref={c => (this._root = c)} {...this.props} />;\r\n\t}\r\n}\r\nconst childrenType = function (props, propName, component) {\r\n\tlet error;\r\n\tconst prop = props[propName];\r\n\tReact.Children.forEach(prop, child => {\r\n\t\tif (typeof child !== \"string\" && typeof child !== \"number\") {\r\n\t\t\terror = new Error(`${component} should have only string or number`);\r\n\t\t}\r\n\t});\r\n\treturn error;\r\n};\r\n\r\nH2.propTypes = {\r\n\t...Text.propTypes,\r\n\tchildren: childrenType,\r\n\tstyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\r\n};\r\n\r\nconst StyledH2 = connectStyle(\"NativeBase.H2\", {}, mapPropsToStyleNames)(H2);\r\n\r\nexport { StyledH2 as H2 };\r\n"]}