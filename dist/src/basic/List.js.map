{"version":3,"sources":["../../../src/basic/List.js"],"names":["List","props","_rows","openCellId","dataArray","renderRow","rowHasChanged","r1","r2","ds","DataSource","state","dataSource","cloneWithRows","nextProps","setState","childrenArray","Children","map","children","child","enable","_listView","setNativeProps","scrollEnabled","_root","closeRow","id","closeOnRowBeginSwipe","safeCloseOpenRow","secId","rowId","rowMap","cellIdentifier","onRowOpen","closeOnRowPress","e","closeOnScroll","onScroll","ref","listViewRef","rowData","previewRowId","getRowIDForFlatIndex","previewRowIndex","row","rowSwipeGestureBegan","onRowDidOpen","onRowClose","onRowDidClose","onRowPress","setScrollEnabled","leftOpenValue","rightOpenValue","disableLeftSwipe","disableRightSwipe","stopLeftSwipe","stopRightSwipe","recalculateHiddenLayout","swipeRowStyle","previewFirstRow","previewDuration","previewOpenValue","tension","friction","directionalDistanceChangeThreshold","swipeToOpenPercent","renderLeftHiddenRow","renderRightHiddenRow","setRefs","c","renderChildren","defaultProps","StyledList"],"mappings":"q1BAAA,4B;AACA;AACA;;AAEA;AACA,mE;;AAEMA,I;;;;;;;;;;;;;;AAcL,cAAYC,KAAZ,CAAmB;AACZA,KADY;AAElB,MAAKC,KAAL,CAAa,EAAb;AACA,MAAKC,UAAL,CAAkB,IAAlB;AACA,GAAIF,MAAMG,SAAN,EAAmBH,MAAMI,SAA7B,CAAwC;AACvC,GAAIC,eAAgBL,MAAMK,aAAN,EAAwB,SAACC,EAAD,CAAKC,EAAL,QAAYD,MAAOC,EAAnB,EAA5C;AACA,GAAMC,IAAK,GAAI,uBAASC,UAAb,CAAwB,CAAEJ,cAAeA,aAAjB,CAAxB,CAAX;AACA,MAAKK,KAAL,CAAa;AACZC,WAAYH,GAAGI,aAAH,CAAiBZ,MAAMG,SAAvB,CADA,CAAb;;AAGA,CAND,IAMO;AACN,MAAKO,KAAL,CAAa,EAAb;AACA,CAZiB;AAalB,C;AACyBG,S,CAAW;AACpC,GAAI,KAAKH,KAAL,CAAWC,UAAf,CAA2B;AAC1B,KAAKG,QAAL,CAAc;AACbH,WAAY,KAAKD,KAAL,CAAWC,UAAX,CAAsBC,aAAtB,CAAoCC,UAAUV,SAA9C,CADC,CAAd;;AAGA;AACD,C;AACgB;AAChB,GAAMY,eAAgB,gBAAMC,QAAN,CAAeC,GAAf,CAAmB,KAAKjB,KAAL,CAAWkB,QAA9B,CAAwC,sBAASC,MAAT,EAAxC,CAAtB;;AAEA,MAAOJ,cAAP;AACA,C;AACgBK,M,CAAQ;AACxB,KAAKC,SAAL,CAAeC,cAAf,CAA8B,CAAEC,cAAeH,MAAjB,CAA9B;AACA,C;;AAEkB;;AAElB,GAAI,KAAKnB,KAAL,CAAW,KAAKC,UAAhB,EAA4BsB,KAAhC,CAAuC;AACtC,KAAKvB,KAAL,CAAW,KAAKC,UAAhB,EAA4BsB,KAA5B,CAAkCC,QAAlC;AACA;AACD,C;;AAEoBC,E,CAAI;AACxB,GAAI,KAAK1B,KAAL,CAAW2B,oBAAX,EAAmC,KAAKzB,UAAxC,EAAsD,KAAKA,UAAL,GAAoBwB,EAA9E,CAAkF;AACjF,KAAKE,gBAAL;AACA;AACD,C;;AAESC,K,CAAOC,K,CAAOC,M,CAAQ;AAC/B,GAAMC,mBAAoBH,KAApB,CAA4BC,KAAlC;AACA,GAAI,KAAK5B,UAAL,EAAmB,KAAKA,UAAL,GAAoB8B,cAA3C,CAA2D;AAC1D,KAAKJ,gBAAL;AACA;AACD,KAAK1B,UAAL,CAAkB8B,cAAlB;AACA,KAAKhC,KAAL,CAAWiC,SAAX,EAAwB,KAAKjC,KAAL,CAAWiC,SAAX,CAAqBJ,KAArB,CAA4BC,KAA5B,CAAmCC,MAAnC,CAAxB;AACA,C;;AAEUL,E,CAAI;AACd,GAAI,KAAKxB,UAAT,CAAqB;AACpB,GAAI,KAAKF,KAAL,CAAWkC,eAAf,CAAgC;AAC/B,KAAKN,gBAAL;AACA,KAAK1B,UAAL,CAAkB,IAAlB;AACA;AACD;AACD,C;AACQwB,E,CAAI;AACZ,GAAI,KAAKxB,UAAT,CAAqB;AACpB,GAAI,KAAKF,KAAL,CAAWkC,eAAf,CAAgC;AAC/B,KAAKN,gBAAL;AACA,KAAK1B,UAAL,CAAkB,IAAlB;AACA;AACD;AACD,C;;AAEQiC,C,CAAG;AACX,GAAI,KAAKjC,UAAT,CAAqB;AACpB,GAAI,KAAKF,KAAL,CAAWoC,aAAf,CAA8B;AAC7B,KAAKR,gBAAL;AACA,KAAK1B,UAAL,CAAkB,IAAlB;AACA;AACD;AACD,KAAKF,KAAL,CAAWqC,QAAX,EAAuB,KAAKrC,KAAL,CAAWqC,QAAX,CAAoBF,CAApB,CAAvB;AACA,C;;AAEOG,G,CAAK;AACZ,KAAKjB,SAAL,CAAiBiB,GAAjB;AACA,KAAKtC,KAAL,CAAWuC,WAAX,EAA0B,KAAKvC,KAAL,CAAWuC,WAAX,CAAuBD,GAAvB,CAA1B;AACA,C;;AAESE,O,CAASX,K,CAAOC,K,CAAOC,M,CAAQ;AACxC,GAAMU;AACL,KAAKzC,KAAL,CAAWW,UAAX,EAAyB,KAAKX,KAAL,CAAWW,UAAX,CAAsB+B,oBAAtB,CAA2C,KAAK1C,KAAL,CAAW2C,eAAX,EAA8B,CAAzE,CAD1B;AAEA;AACC;AACC,KAAM,IADP;AAEC,IAAK,wBAAQ,QAAK1C,KAAL,IAAc4B,KAAd,CAAsBC,KAAtB,EAAiCc,GAAzC,EAFN;AAGC,kBAAmB,oCAAK,QAAKC,oBAAL,IAA6BhB,KAA7B,CAAqCC,KAArC,CAAL,EAHpB;AAIC,UAAW,4BAAK,QAAKG,SAAL,CAAeJ,KAAf,CAAsBC,KAAtB,CAA6B,OAAK7B,KAAlC,CAAL,EAJZ;AAKC,aAAc,+BAAK,QAAKD,KAAL,CAAW8C,YAAX,EAA2B,OAAK9C,KAAL,CAAW8C,YAAX,CAAwBjB,KAAxB,CAA+BC,KAA/B,CAAsC,OAAK7B,KAA3C,CAAhC,EALf;AAMC,WAAY,6BAAK,QAAKD,KAAL,CAAW+C,UAAX,EAAyB,OAAK/C,KAAL,CAAW+C,UAAX,CAAsBlB,KAAtB,CAA6BC,KAA7B,CAAoC,OAAK7B,KAAzC,CAA9B,EANb;AAOC,cAAe,gCAAK,QAAKD,KAAL,CAAWgD,aAAX,EAA4B,OAAKhD,KAAL,CAAWgD,aAAX,CAAyBnB,KAAzB,CAAgCC,KAAhC,CAAuC,OAAK7B,KAA5C,CAAjC,EAPhB;AAQC,WAAY,6BAAK,QAAKgD,UAAL,IAAmBpB,KAAnB,CAA2BC,KAA3B,CAAL,EARb;AASC,SAAU,2BAAK,QAAKL,QAAL,IAAiBI,KAAjB,CAAyBC,KAAzB,CAAL,EATX;AAUC,iBAAkB,wCAAU,QAAKoB,gBAAL,CAAsB9B,MAAtB,CAAV,EAVnB;AAWC,cAAe,KAAKpB,KAAL,CAAWmD,aAX3B;AAYC,eAAgB,KAAKnD,KAAL,CAAWoD,cAZ5B;AAaC,gBAAiB,KAAKpD,KAAL,CAAWkC,eAb7B;AAcC,iBAAkB,KAAKlC,KAAL,CAAWqD,gBAd9B;AAeC,kBAAmB,KAAKrD,KAAL,CAAWsD,iBAf/B;AAgBC,cAAe,KAAKtD,KAAL,CAAWuD,aAhB3B;AAiBC,eAAgB,KAAKvD,KAAL,CAAWwD,cAjB5B;AAkBC,wBAAyB,KAAKxD,KAAL,CAAWyD,uBAlBrC;AAmBC,MAAO,KAAKzD,KAAL,CAAW0D,aAnBnB;AAoBC,QAAS,CAAC,KAAK1D,KAAL,CAAW2D,eAAX,EAA8B,KAAK3D,KAAL,CAAW2C,eAA1C,GAA8Db,QAAUW,YApBlF;AAqBC,gBAAiB,KAAKzC,KAAL,CAAW4D,eArB7B;AAsBC,iBAAkB,KAAK5D,KAAL,CAAW6D,gBAtB9B;AAuBC,QAAS,KAAK7D,KAAL,CAAW8D,OAvBrB;AAwBC,SAAU,KAAK9D,KAAL,CAAW+D,QAxBtB;AAyBC,mCAAoC,KAAK/D,KAAL,CAAWgE,kCAzBhD;AA0BC,mBAAoB,KAAKhE,KAAL,CAAWiE,kBA1BhC;AA2BC,KAAM,KAAKjE,KAAL,CAAWkE,mBAAX,EAAkC,KAAKlE,KAAL,CAAWkE,mBAAX,CAA+B1B,OAA/B,CAAwCX,KAAxC,CAA+CC,KAA/C,CAAsD,KAAK7B,KAA3D,CA3BzC;AA4BC,MAAO,KAAKD,KAAL,CAAWmE,oBAAX,EAAmC,KAAKnE,KAAL,CAAWmE,oBAAX,CAAgC3B,OAAhC,CAAyCX,KAAzC,CAAgDC,KAAhD,CAAuD,KAAK7B,KAA5D,CA5B3C;AA6BC,KAAM,KAAKD,KAAL,CAAWI,SAAX,EAAwB,KAAKJ,KAAL,CAAWI,SAAX,CAAqBoC,OAArB,CAA8BX,KAA9B,CAAqCC,KAArC,CAA4C,KAAK7B,KAAjD,CA7B/B,kDADD;;;AAiCA,C;AACQ;AACR,GAAI,KAAKD,KAAL,CAAWkE,mBAAX,EAAkC,KAAKlE,KAAL,CAAWmE,oBAAjD,CAAuE;AACtE;AACC;AACK,KAAKnE,KADV;AAEC,IAAK,kBAAO;AACX,OAAKoE,OAAL,CAAa9B,IAAb;AACA,OAAKd,KAAL,CAAac,IAAb;AACA,CALF;AAMC,SAAU,2BAAK,QAAKD,QAAL,CAAcF,CAAd,CAAL,EANX;AAOC,UAAW,mBAACK,OAAD,CAAUX,KAAV,CAAiBC,KAAjB,QAA2B,QAAK1B,SAAL,CAAeoC,OAAf,CAAwBX,KAAxB,CAA+BC,KAA/B,CAAsC,OAAK7B,KAA3C,CAA3B,EAPZ,mDADD;;;AAWA,CAZD,IAYO,IAAI,KAAKS,KAAL,CAAWC,UAAf,CAA2B;AACjC;AACC;AACK,KAAKX,KADV;AAEC,IAAK,0BAAQ,QAAKwB,KAAL,CAAac,KAArB,EAFN;AAGC,wBAHD;AAIC,WAAY,KAAK5B,KAAL,CAAWC,UAJxB;AAKC,UAAW,KAAKX,KAAL,CAAWI,SALvB,mDADD;;;AASA;AACD;AACC,0DAAM,IAAK,sBAAM,QAAKoB,KAAL,CAAa6C,CAAnB,EAAX,EAAsC,KAAKrE,KAA3C;AACE,KAAKsE,cAAL,EADF,CADD;;;AAKA,C,oCApKIvE,I,CACEwE,Y,CAAe,CACrBpB,cAAe,CADM,CAErBC,eAAgB,CAFK,CAGrBzB,qBAAsB,KAHD,CAIrBS,cAAe,IAJM,CAKrBF,gBAAiB,IALI,CAMrBmB,iBAAkB,KANG,CAOrBC,kBAAmB,KAPE,CAQrBG,wBAAyB,KARJ,CASrBE,gBAAiB,KATI,CAUrBK,mCAAoC,CAVf,CAWrBC,mBAAoB,EAXC,C;;AAqKvB,GAAMO,YAAa,yCAAa,iBAAb,CAAgC,EAAhC,iCAA0DzE,IAA1D,CAAnB,C;;AAEuBA,I,CAAdyE,U","file":"List.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { ListView, View } from 'react-native';\r\nimport { connectStyle } from 'native-base-shoutem-theme';\r\n\r\nimport { SwipeRow } from './SwipeRow';\r\nimport mapPropsToStyleNames from '../Utils/mapPropsToStyleNames';\r\n\r\nclass List extends Component {\r\n\tstatic defaultProps = {\r\n\t\tleftOpenValue: 0,\r\n\t\trightOpenValue: 0,\r\n\t\tcloseOnRowBeginSwipe: false,\r\n\t\tcloseOnScroll: true,\r\n\t\tcloseOnRowPress: true,\r\n\t\tdisableLeftSwipe: false,\r\n\t\tdisableRightSwipe: false,\r\n\t\trecalculateHiddenLayout: false,\r\n\t\tpreviewFirstRow: false,\r\n\t\tdirectionalDistanceChangeThreshold: 2,\r\n\t\tswipeToOpenPercent: 50,\r\n\t};\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis._rows = {};\r\n\t\tthis.openCellId = null;\r\n\t\tif (props.dataArray && props.renderRow) {\r\n\t\t\tlet rowHasChanged = props.rowHasChanged || ((r1, r2) => r1 !== r2);\r\n\t\t\tconst ds = new ListView.DataSource({ rowHasChanged: rowHasChanged });\r\n\t\t\tthis.state = {\r\n\t\t\t\tdataSource: ds.cloneWithRows(props.dataArray),\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tthis.state = {};\r\n\t\t}\r\n\t}\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tif (this.state.dataSource) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tdataSource: this.state.dataSource.cloneWithRows(nextProps.dataArray),\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\trenderChildren() {\r\n\t\tconst childrenArray = React.Children.map(this.props.children, child => child);\r\n\r\n\t\treturn childrenArray;\r\n\t}\r\n\tsetScrollEnabled(enable) {\r\n\t\tthis._listView.setNativeProps({ scrollEnabled: enable });\r\n\t}\r\n\r\n\tsafeCloseOpenRow() {\r\n\t\t// if the openCellId is stale due to deleting a row this could be undefined\r\n\t\tif (this._rows[this.openCellId]._root) {\r\n\t\t\tthis._rows[this.openCellId]._root.closeRow();\r\n\t\t}\r\n\t}\r\n\r\n\trowSwipeGestureBegan(id) {\r\n\t\tif (this.props.closeOnRowBeginSwipe && this.openCellId && this.openCellId !== id) {\r\n\t\t\tthis.safeCloseOpenRow();\r\n\t\t}\r\n\t}\r\n\r\n\tonRowOpen(secId, rowId, rowMap) {\r\n\t\tconst cellIdentifier = `${secId}${rowId}`;\r\n\t\tif (this.openCellId && this.openCellId !== cellIdentifier) {\r\n\t\t\tthis.safeCloseOpenRow();\r\n\t\t}\r\n\t\tthis.openCellId = cellIdentifier;\r\n\t\tthis.props.onRowOpen && this.props.onRowOpen(secId, rowId, rowMap);\r\n\t}\r\n\r\n\tonRowPress(id) {\r\n\t\tif (this.openCellId) {\r\n\t\t\tif (this.props.closeOnRowPress) {\r\n\t\t\t\tthis.safeCloseOpenRow();\r\n\t\t\t\tthis.openCellId = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcloseRow(id) {\r\n\t\tif (this.openCellId) {\r\n\t\t\tif (this.props.closeOnRowPress) {\r\n\t\t\t\tthis.safeCloseOpenRow();\r\n\t\t\t\tthis.openCellId = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tonScroll(e) {\r\n\t\tif (this.openCellId) {\r\n\t\t\tif (this.props.closeOnScroll) {\r\n\t\t\t\tthis.safeCloseOpenRow();\r\n\t\t\t\tthis.openCellId = null;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.props.onScroll && this.props.onScroll(e);\r\n\t}\r\n\r\n\tsetRefs(ref) {\r\n\t\tthis._listView = ref;\r\n\t\tthis.props.listViewRef && this.props.listViewRef(ref);\r\n\t}\r\n\r\n\trenderRow(rowData, secId, rowId, rowMap) {\r\n\t\tconst previewRowId =\r\n\t\t\tthis.props.dataSource && this.props.dataSource.getRowIDForFlatIndex(this.props.previewRowIndex || 0);\r\n\t\treturn (\r\n\t\t\t<SwipeRow\r\n\t\t\t\tlist={true}\r\n\t\t\t\tref={row => (this._rows[`${secId}${rowId}`] = row)}\r\n\t\t\t\tswipeGestureBegan={_ => this.rowSwipeGestureBegan(`${secId}${rowId}`)}\r\n\t\t\t\tonRowOpen={_ => this.onRowOpen(secId, rowId, this._rows)}\r\n\t\t\t\tonRowDidOpen={_ => this.props.onRowDidOpen && this.props.onRowDidOpen(secId, rowId, this._rows)}\r\n\t\t\t\tonRowClose={_ => this.props.onRowClose && this.props.onRowClose(secId, rowId, this._rows)}\r\n\t\t\t\tonRowDidClose={_ => this.props.onRowDidClose && this.props.onRowDidClose(secId, rowId, this._rows)}\r\n\t\t\t\tonRowPress={_ => this.onRowPress(`${secId}${rowId}`)}\r\n\t\t\t\tcloseRow={_ => this.closeRow(`${secId}${rowId}`)}\r\n\t\t\t\tsetScrollEnabled={enable => this.setScrollEnabled(enable)}\r\n\t\t\t\tleftOpenValue={this.props.leftOpenValue}\r\n\t\t\t\trightOpenValue={this.props.rightOpenValue}\r\n\t\t\t\tcloseOnRowPress={this.props.closeOnRowPress}\r\n\t\t\t\tdisableLeftSwipe={this.props.disableLeftSwipe}\r\n\t\t\t\tdisableRightSwipe={this.props.disableRightSwipe}\r\n\t\t\t\tstopLeftSwipe={this.props.stopLeftSwipe}\r\n\t\t\t\tstopRightSwipe={this.props.stopRightSwipe}\r\n\t\t\t\trecalculateHiddenLayout={this.props.recalculateHiddenLayout}\r\n\t\t\t\tstyle={this.props.swipeRowStyle}\r\n\t\t\t\tpreview={(this.props.previewFirstRow || this.props.previewRowIndex) && rowId === previewRowId}\r\n\t\t\t\tpreviewDuration={this.props.previewDuration}\r\n\t\t\t\tpreviewOpenValue={this.props.previewOpenValue}\r\n\t\t\t\ttension={this.props.tension}\r\n\t\t\t\tfriction={this.props.friction}\r\n\t\t\t\tdirectionalDistanceChangeThreshold={this.props.directionalDistanceChangeThreshold}\r\n\t\t\t\tswipeToOpenPercent={this.props.swipeToOpenPercent}\r\n\t\t\t\tleft={this.props.renderLeftHiddenRow && this.props.renderLeftHiddenRow(rowData, secId, rowId, this._rows)}\r\n\t\t\t\tright={this.props.renderRightHiddenRow && this.props.renderRightHiddenRow(rowData, secId, rowId, this._rows)}\r\n\t\t\t\tbody={this.props.renderRow && this.props.renderRow(rowData, secId, rowId, this._rows)}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\trender() {\r\n\t\tif (this.props.renderLeftHiddenRow || this.props.renderRightHiddenRow) {\r\n\t\t\treturn (\r\n\t\t\t\t<ListView\r\n\t\t\t\t\t{...this.props}\r\n\t\t\t\t\tref={ref => {\r\n\t\t\t\t\t\tthis.setRefs(ref);\r\n\t\t\t\t\t\tthis._root = ref;\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonScroll={e => this.onScroll(e)}\r\n\t\t\t\t\trenderRow={(rowData, secId, rowId) => this.renderRow(rowData, secId, rowId, this._rows)}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t} else if (this.state.dataSource) {\r\n\t\t\treturn (\r\n\t\t\t\t<ListView\r\n\t\t\t\t\t{...this.props}\r\n\t\t\t\t\tref={ref => (this._root = ref)}\r\n\t\t\t\t\tenableEmptySections\r\n\t\t\t\t\tdataSource={this.state.dataSource}\r\n\t\t\t\t\trenderRow={this.props.renderRow}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<View ref={c => (this._root = c)} {...this.props}>\r\n\t\t\t\t{this.renderChildren()}\r\n\t\t\t</View>\r\n\t\t);\r\n\t}\r\n}\r\nconst StyledList = connectStyle('NativeBase.List', {}, mapPropsToStyleNames)(List);\r\n\r\nexport { StyledList as List };\r\n"]}