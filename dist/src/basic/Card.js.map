{"version":3,"sources":["../../../src/basic/Card.js"],"names":["Card","props","dataArray","renderRow","item","index","toString","_root","c","children","Component","propTypes","ViewPropTypes","style","PropTypes","oneOfType","object","number","array","func","StyledCard","mapPropsToStyleNames"],"mappings":"q1BAAA,4B,2CACA,qC,mDACA,yCACA,iEAEA,mE,68BAEMA,K,iQACK,iBACP,GAAI,KAAKC,KAAL,CAAWC,SAAX,EAAwB,KAAKD,KAAL,CAAWE,SAAvC,CAAkD,CAChD,MACE,+BAAC,qBAAD,aACM,KAAKF,KADX,EAEE,KAAM,KAAKA,KAAL,CAAWC,SAFnB,CAGE,WAAY,KAAKD,KAAL,CAAWE,SAHzB,CAIE,aAAc,sBAACC,IAAD,CAAOC,KAAP,QAAiBA,OAAMC,QAAN,EAAjB,EAJhB,kDADF,CAQD,CACD,MACE,+BAAC,iBAAD,WAAM,IAAK,sBAAM,QAAKC,KAAL,CAAaC,CAAnB,EAAX,EAAsC,KAAKP,KAA3C,mDACG,KAAKA,KAAL,CAAWQ,QADd,CADF,CAKD,C,kBAjBgBC,gB,EAoBnBV,KAAKW,SAAL,aACKC,0BADL,EAEEC,MAAOC,oBAAUC,SAAV,CAAoB,CACzBD,oBAAUE,MADe,CAEzBF,oBAAUG,MAFe,CAGzBH,oBAAUI,KAHe,CAApB,CAFT,CAQEhB,UAAWY,oBAAUI,KARvB,CASEf,UAAWW,oBAAUK,IATvB,GAYA,GAAMC,YAAa,yCAAa,iBAAb,CAAgC,EAAhC,CAAoCC,8BAApC,EACjBrB,IADiB,CAAnB,C,QAIuBA,I,CAAdoB,U","file":"Card.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FlatList, View, ViewPropTypes } from 'react-native';\r\nimport { connectStyle } from 'native-base-shoutem-theme';\r\n\r\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\r\n\r\nclass Card extends Component {\r\n  render() {\r\n    if (this.props.dataArray && this.props.renderRow) {\r\n      return (\r\n        <FlatList\r\n          {...this.props}\r\n          data={this.props.dataArray}\r\n          renderItem={this.props.renderRow}\r\n          keyExtractor={(item, index) => index.toString()}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <View ref={c => (this._root = c)} {...this.props}>\r\n        {this.props.children}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nCard.propTypes = {\r\n  ...ViewPropTypes,\r\n  style: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.number,\r\n    PropTypes.array\r\n  ]),\r\n  // eslint-disable-next-line react/forbid-prop-types\r\n  dataArray: PropTypes.array,\r\n  renderRow: PropTypes.func\r\n};\r\n\r\nconst StyledCard = connectStyle('NativeBase.Card', {}, mapPropsToStyleNames)(\r\n  Card\r\n);\r\n\r\nexport { StyledCard as Card };\r\n"]}