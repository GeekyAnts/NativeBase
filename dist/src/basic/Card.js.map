{"version":3,"sources":["../../../src/basic/Card.js"],"names":["Card","props","dataArray","renderRow","ds","DataSource","rowHasChanged","r1","r2","dataSource","cloneWithRows","_root","c","children","propTypes","style","PropTypes","object","StyledCard"],"mappings":"8yBAAA,4B;AACA;;AAEA;AACA,mE;;AAEMA,I;;AAEK;AACP,GAAI,KAAKC,KAAL,CAAWC,SAAX,EAAwB,KAAKD,KAAL,CAAWE,SAAvC,CAAkD;AAChD,GAAMC,IAAK,GAAI,uBAASC,UAAb,CAAwB,CAAEC,cAAe,uBAACC,EAAD,CAAKC,EAAL,QAAYD,MAAOC,EAAnB,EAAjB,CAAxB,CAAX;AACA,GAAMC,YAAaL,GAAGM,aAAH,CAAiB,KAAKT,KAAL,CAAWC,SAA5B,CAAnB;AACA;AACE;AACM,KAAKD,KADX;AAEE,wBAFF;AAGE,WAAYQ,UAHd;AAIE,UAAW,KAAKR,KAAL,CAAWE,SAJxB,GADF;;;AAQD;AACD;AACE,0DAAM,IAAK,sBAAK,QAAKQ,KAAL,CAAaC,CAAlB,EAAX,EAAoC,KAAKX,KAAzC;AACG,KAAKA,KAAL,CAAWY,QADd,CADF;;;AAKD,C;;;AAGHb,KAAKc,SAAL;AACK,kBAAKA,SADV;AAEEC,MAAO,gBAAMC,SAAN,CAAgBC,MAFzB;AAGEf,UAAW,gBAAMc,SAAN,CAAgBC,MAH7B;AAIEd,UAAW,gBAAMa,SAAN,CAAgBC,MAJ7B;;;AAOA,GAAMC,YAAa,wBAAa,iBAAb,CAAgC,EAAhC,iCAA0DlB,IAA1D,CAAnB,C;;;AAGgBA,I,CAAdkB,U","file":"Card.js","sourcesContent":["import React, { Component } from 'react';\nimport { View, ListView } from 'react-native';\n\nimport { connectStyle } from '@shoutem/theme';\nimport mapPropsToStyleNames from '../Utils/mapPropsToStyleNames';\n\nclass Card extends Component {\n\n  render() {\n    if (this.props.dataArray && this.props.renderRow) {\n      const ds = new ListView.DataSource({ rowHasChanged: (r1, r2) => r1 !== r2 });\n      const dataSource = ds.cloneWithRows(this.props.dataArray);\n      return (\n        <ListView\n          {...this.props}\n          enableEmptySections\n          dataSource={dataSource}\n          renderRow={this.props.renderRow}\n        />\n      );\n    }\n    return (\n      <View ref={c => this._root = c} {...this.props}>\n        {this.props.children}\n      </View>\n    );\n  }\n}\n\nCard.propTypes = {\n  ...View.propTypes,\n  style: React.PropTypes.object,\n  dataArray: React.PropTypes.object,\n  renderRow: React.PropTypes.object,\n};\n\nconst StyledCard = connectStyle('NativeBase.Card', {}, mapPropsToStyleNames)(Card);\n\nexport {\n  StyledCard as Card,\n};\n"]}