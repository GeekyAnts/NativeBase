{"version":3,"sources":["../../../src/basic/Card.js"],"names":["Card","props","dataArray","renderRow","ds","DataSource","rowHasChanged","r1","r2","dataSource","cloneWithRows","_root","c","children","propTypes","style","oneOfType","object","number","array","func","StyledCard"],"mappings":"q1BAAA,4B;AACA,qC;AACA;AACA;;AAEA;AACA,mE;;AAEMA,I;AACI;AACR,GAAI,KAAKC,KAAL,CAAWC,SAAX,EAAwB,KAAKD,KAAL,CAAWE,SAAvC,CAAkD;AACjD,GAAMC,IAAK,GAAI,uBAASC,UAAb,CAAwB;AAClCC,cAAe,uBAACC,EAAD,CAAKC,EAAL,QAAYD,MAAOC,EAAnB,EADmB,CAAxB,CAAX;;AAGA,GAAMC,YAAaL,GAAGM,aAAH,CAAiB,KAAKT,KAAL,CAAWC,SAA5B,CAAnB;AACA;AACC;AACK,KAAKD,KADV;AAEC,wBAFD;AAGC,WAAYQ,UAHb;AAIC,UAAW,KAAKR,KAAL,CAAWE,SAJvB,kDADD;;;AAQA;AACD;AACC,0DAAM,IAAK,sBAAM,QAAKQ,KAAL,CAAaC,CAAnB,EAAX,EAAsC,KAAKX,KAA3C;AACE,KAAKA,KAAL,CAAWY,QADb,CADD;;;AAKA,C;;;AAGFb,KAAKc,SAAL;;AAECC,MAAO,oBAAUC,SAAV,CAAoB,CAAC,oBAAUC,MAAX,CAAmB,oBAAUC,MAA7B,CAAqC,oBAAUC,KAA/C,CAApB,CAFR;AAGCjB,UAAW,oBAAUiB,KAHtB;AAIChB,UAAW,oBAAUiB,IAJtB;;;AAOA,GAAMC,YAAa,yCAAa,iBAAb,CAAgC,EAAhC,iCAA0DrB,IAA1D,CAAnB,C;;AAEuBA,I,CAAdqB,U","file":"Card.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { View, ListView } from \"react-native\";\r\nimport { ViewPropTypes } from '../Utils';\r\n\r\nimport { connectStyle } from \"native-base-shoutem-theme\";\r\nimport mapPropsToStyleNames from \"../Utils/mapPropsToStyleNames\";\r\n\r\nclass Card extends Component {\r\n\trender() {\r\n\t\tif (this.props.dataArray && this.props.renderRow) {\r\n\t\t\tconst ds = new ListView.DataSource({\r\n\t\t\t\trowHasChanged: (r1, r2) => r1 !== r2,\r\n\t\t\t});\r\n\t\t\tconst dataSource = ds.cloneWithRows(this.props.dataArray);\r\n\t\t\treturn (\r\n\t\t\t\t<ListView\r\n\t\t\t\t\t{...this.props}\r\n\t\t\t\t\tenableEmptySections\r\n\t\t\t\t\tdataSource={dataSource}\r\n\t\t\t\t\trenderRow={this.props.renderRow}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<View ref={c => (this._root = c)} {...this.props}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</View>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nCard.propTypes = {\r\n\t...ViewPropTypes,\r\n\tstyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\r\n\tdataArray: PropTypes.array,\r\n\trenderRow: PropTypes.func,\r\n};\r\n\r\nconst StyledCard = connectStyle(\"NativeBase.Card\", {}, mapPropsToStyleNames)(Card);\r\n\r\nexport { StyledCard as Card };\r\n"]}