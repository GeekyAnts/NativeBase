{"version":3,"sources":["../../../src/basic/Card.js"],"names":["Card","props","dataArray","renderRow","item","index","toString","_root","c","children","Component","propTypes","ViewPropTypes","style","PropTypes","oneOfType","object","number","array","func","StyledCard","mapPropsToStyleNames"],"mappings":"m1BAAA,4B,2CACA,qC,mDACA,yCACA,iEAEA,mE,68BAEMA,K,iQACK,iBACP,GAAI,KAAKC,KAAL,CAAWC,SAAX,EAAwB,KAAKD,KAAL,CAAWE,SAAvC,CAAkD,CAChD,MACE,+BAAC,qBAAD,aACM,KAAKF,KADX,EAEE,KAAM,KAAKA,KAAL,CAAWC,SAFnB,CAGE,WAAY,KAAKD,KAAL,CAAWE,SAHzB,CAIE,aAAc,sBAACC,IAAD,CAAOC,KAAP,QAAiBA,OAAMC,QAAN,EAAjB,EAJhB,kDADF,CAQD,CACD,MACE,+BAAC,iBAAD,WAAM,IAAK,sBAAM,QAAKC,KAAL,CAAaC,CAAnB,EAAX,EAAsC,KAAKP,KAA3C,mDACG,KAAKA,KAAL,CAAWQ,QADd,CADF,CAKD,C,kBAjBgBC,gB,EAoBnBV,KAAKW,SAAL,aACKC,0BADL,EAEEC,MAAOC,oBAAUC,SAAV,CAAoB,CACzBD,oBAAUE,MADe,CAEzBF,oBAAUG,MAFe,CAGzBH,oBAAUI,KAHe,CAApB,CAFT,CAQEhB,UAAWY,oBAAUI,KARvB,CASEf,UAAWW,oBAAUK,IATvB,GAYA,GAAMC,YAAa,yCAAa,iBAAb,CAAgC,EAAhC,CAAoCC,8BAApC,EACjBrB,IADiB,CAAnB,C,QAIuBA,I,CAAdoB,U","file":"Card.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FlatList, View, ViewPropTypes } from 'react-native';\nimport { connectStyle } from 'native-base-shoutem-theme';\n\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\n\nclass Card extends Component {\n  render() {\n    if (this.props.dataArray && this.props.renderRow) {\n      return (\n        <FlatList\n          {...this.props}\n          data={this.props.dataArray}\n          renderItem={this.props.renderRow}\n          keyExtractor={(item, index) => index.toString()}\n        />\n      );\n    }\n    return (\n      <View ref={c => (this._root = c)} {...this.props}>\n        {this.props.children}\n      </View>\n    );\n  }\n}\n\nCard.propTypes = {\n  ...ViewPropTypes,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ]),\n  // eslint-disable-next-line react/forbid-prop-types\n  dataArray: PropTypes.array,\n  renderRow: PropTypes.func\n};\n\nconst StyledCard = connectStyle('NativeBase.Card', {}, mapPropsToStyleNames)(\n  Card\n);\n\nexport { StyledCard as Card };\n"]}