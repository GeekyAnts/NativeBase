{"version":3,"sources":["../../../../src/basic/Swipe/SwipeoutBtn.js"],"names":["SwipeoutBtn","btn","props","styleSwipeoutBtn","styles","swipeoutBtn","type","push","colorDelete","colorPrimary","colorSecondary","backgroundColor","height","width","styleSwipeoutBtnComponent","styleSwipeoutBtnText","swipeoutBtnText","color","onPress","swipeoutBtnTouchable","underlayColor","disabled","component","text","key","propTypes","style","PropTypes","object","StyledSwipeoutBtn"],"mappings":"qzBAAA,4B;AACA;;AAEA,4C;AACA;AACA,sE;;AAEMA,W;;;;;;;;;;;;;;;;AAgBK;AACP,GAAIC,KAAM,KAAKC,KAAf;;AAEA,GAAIC,kBAAmB,CAACC,OAAOC,WAAR,CAAvB;;;AAGA,GAAIJ,IAAIK,IAAJ,GAAa,QAAjB,CAA2BH,iBAAiBI,IAAjB,CAAsBH,OAAOI,WAA7B,EAA3B;AACK,GAAIP,IAAIK,IAAJ,GAAa,SAAjB,CAA4BH,iBAAiBI,IAAjB,CAAsBH,OAAOK,YAA7B,EAA5B;AACA,GAAIR,IAAIK,IAAJ,GAAa,WAAjB,CAA8BH,iBAAiBI,IAAjB,CAAsBH,OAAOM,cAA7B;;;AAGnC,GAAIT,IAAIU,eAAR,CAAyBR,iBAAiBI,IAAjB,CAAsB,CAAC,CAAEI,gBAAiBV,IAAIU,eAAvB,CAAD,CAAtB;;AAEzBR,iBAAiBI,IAAjB,CAAsB,CAAC;AACrBK,OAAQX,IAAIW,MADS;AAErBC,MAAOZ,IAAIY,KAFU,CAAD,CAAtB;;;AAKA,GAAIC,2BAA4B,EAAhC;;;AAGAA,0BAA0BP,IAA1B,CAA+B,CAAC;AAC9BK,OAAQX,IAAIW,MADkB;AAE9BC,MAAOZ,IAAIY,KAFmB,CAAD,CAA/B;;;AAKA,GAAIE,sBAAuB,CAACX,OAAOY,eAAR,CAA3B;;;AAGA,GAAIf,IAAIgB,KAAR,CAAeF,qBAAqBR,IAArB,CAA0B,CAAC,CAAEU,MAAOhB,IAAIgB,KAAb,CAAD,CAA1B;;;AAGf,GAAIhB,IAAIgB,KAAR,CAAeF,qBAAqBR,IAArB,CAA0B,CAAC,CAAEU,MAAOhB,IAAIgB,KAAb,CAAD,CAA1B;AACf;AACE;AACE,QAAS,KAAKf,KAAL,CAAWgB,OADtB;AAEE,MAAOd,OAAOe,oBAFhB;AAGE,cAAe,KAAKjB,KAAL,CAAWkB,aAH5B;AAIE,SAAU,KAAKlB,KAAL,CAAWmB,QAJvB;AAKE,MAAOlB,gBALT;AAME,UAAWY,oBANb;;AAQKd,IAAIqB,SAAJ;AACC,iDAAM,MAAOR,yBAAb,EAAyCb,IAAIqB,SAA7C,CADD;;AAGCrB,IAAIsB,IAXV,CADF;;;;;AAiBD,C,0CAjEyB,CACxB,MAAO,CACLZ,gBAAiB,IADZ,CAELM,MAAO,IAFF,CAGLK,UAAW,IAHN,CAILF,cAAe,IAJV,CAKLR,OAAQ,CALH,CAMLY,IAAK,IANA,CAOLN,QAAS,IAPJ,CAQLG,SAAU,KARL,CASLE,KAAM,UATD,CAULjB,KAAM,EAVD,CAWLO,MAAO,CAXF,CAAP,CAaD,C;;;;AAuDHb,YAAYyB,SAAZ;AACK,kBAAKA,SADV;AAEEC,MAAO,gBAAMC,SAAN,CAAgBC,MAFzB;;;AAKA,GAAMC,mBAAoB,wBAAa,wBAAb,CAAuC,EAAvC,iCAAiE7B,WAAjE,CAA1B,C;;;AAGuBA,W,CAArB6B,iB","file":"SwipeoutBtn.js","sourcesContent":["import React, { Component } from 'react';\nimport { Text, TouchableHighlight, View } from 'react-native';\n\nimport NativeButton from './NativeButton';\nimport { connectStyle } from '@shoutem/theme';\nimport mapPropsToStyleNames from '../../Utils/mapPropsToStyleNames';\n\nclass SwipeoutBtn extends Component {\n  static get defaultProps() {\n    return {\n      backgroundColor: null,\n      color: null,\n      component: null,\n      underlayColor: null,\n      height: 0,\n      key: null,\n      onPress: null,\n      disabled: false,\n      text: 'Click me',\n      type: '',\n      width: 0,\n    };\n  }\n  render() {\n    var btn = this.props;\n\n    var styleSwipeoutBtn = [styles.swipeoutBtn];\n\n    //  apply \"type\" styles (delete || primary || secondary)\n    if (btn.type === 'delete') styleSwipeoutBtn.push(styles.colorDelete);\n    else if (btn.type === 'primary') styleSwipeoutBtn.push(styles.colorPrimary);\n    else if (btn.type === 'secondary') styleSwipeoutBtn.push(styles.colorSecondary);\n\n    //  apply background color\n    if (btn.backgroundColor) styleSwipeoutBtn.push([{ backgroundColor: btn.backgroundColor }]);\n\n    styleSwipeoutBtn.push([{\n      height: btn.height,\n      width: btn.width,\n    }]);\n\n    var styleSwipeoutBtnComponent = [];\n\n    //  set button dimensions\n    styleSwipeoutBtnComponent.push([{\n      height: btn.height,\n      width: btn.width,\n    }]);\n\n    var styleSwipeoutBtnText = [styles.swipeoutBtnText];\n\n    //  apply text color\n    if (btn.color) styleSwipeoutBtnText.push([{ color: btn.color }]);\n\n    //  apply text color\n    if (btn.color) styleSwipeoutBtnText.push([{ color: btn.color }])\n    return (\n      <NativeButton\n        onPress={this.props.onPress}\n        style={styles.swipeoutBtnTouchable}\n        underlayColor={this.props.underlayColor}\n        disabled={this.props.disabled}\n        style={styleSwipeoutBtn}\n        textStyle={styleSwipeoutBtnText}>\n        {\n          (btn.component ?\n            <View style={styleSwipeoutBtnComponent}>{btn.component}</View>\n            :\n            btn.text\n          )\n        }\n      </NativeButton>\n    );\n  }\n}\n\n\nSwipeoutBtn.propTypes = {\n  ...Text.propTypes,\n  style: React.PropTypes.object,\n};\n\nconst StyledSwipeoutBtn = connectStyle('NativeBase.SwipeoutBtn', {}, mapPropsToStyleNames)(SwipeoutBtn);\n\nexport {\n  StyledSwipeoutBtn as SwipeoutBtn,\n};\n"]}