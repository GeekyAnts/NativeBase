{"version":3,"sources":["../../../src/basic/DatePicker.js"],"names":["DatePicker","props","showDatePicker","setState","modalVisible","state","defaultDate","Date","chosenDate","placeHolderText","undefined","date","onDateChange","formatChosenDate","getDate","getMonth","getFullYear","join","animationType","disabled","locale","maximumDate","minimumDate","modalTransparent","placeHolderTextStyle","textStyle","timeZoneOffsetInMinutes","variables","context","theme","variable","padding","datePickerPadding","color","datePickerTextColor","backgroundColor","datePickerBg","flex","datePickerFlex","setDate","React","Component","defaultProps"],"mappings":"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","file":"DatePicker.js","sourcesContent":["import React from 'react';\nimport { Modal, View } from 'react-native';\n\nimport DateTimePicker from '@react-native-community/datetimepicker';\n\nimport variable from '../theme/variables/platform';\n\nimport { Text } from './Text';\n\nexport class DatePicker extends React.Component {\n  static defaultProps = {\n    disabled: false\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalVisible: false,\n      defaultDate: props.defaultDate ? props.defaultDate : new Date(),\n      chosenDate:\n        !props.placeHolderText && props.defaultDate\n          ? props.defaultDate\n          : undefined\n    };\n  }\n\n  setDate(date) {\n    this.setState({ chosenDate: new Date(date) });\n    if (this.props.onDateChange) {\n      this.props.onDateChange(date);\n    }\n  }\n\n  showDatePicker = () => {\n    this.setState({ modalVisible: true });\n  };\n\n  formatChosenDate(date) {\n    if (this.props.formatChosenDate) {\n      return this.props.formatChosenDate(date);\n    }\n    return [date.getDate(), date.getMonth() + 1, date.getFullYear()].join('/');\n  }\n\n  render() {\n    const {\n      animationType,\n      disabled,\n      locale,\n      maximumDate,\n      minimumDate,\n      modalTransparent,\n      placeHolderText,\n      placeHolderTextStyle,\n      textStyle,\n      timeZoneOffsetInMinutes\n    } = this.props;\n\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n\n    return (\n      <View>\n        <View>\n          <Text\n            onPress={() => (!disabled ? this.showDatePicker() : undefined)}\n            style={[\n              {\n                padding: variables.datePickerPadding,\n                color: variables.datePickerTextColor\n              },\n              this.state.chosenDate ? textStyle : placeHolderTextStyle\n            ]}\n          >\n            {this.state.chosenDate\n              ? this.formatChosenDate(this.state.chosenDate)\n              : placeHolderText || 'Select Date'}\n          </Text>\n          <View>\n            <Modal\n              supportedOrientations={['portrait', 'landscape']}\n              animationType={animationType}\n              transparent={modalTransparent} // from api\n              visible={this.state.modalVisible}\n              onRequestClose={() => {}}\n            >\n              <Text\n                onPress={() => this.setState({ modalVisible: false })}\n                style={{\n                  backgroundColor: variables.datePickerBg,\n                  flex: variables.datePickerFlex\n                }}\n              />\n              <DateTimePicker\n                date={\n                  this.state.chosenDate\n                    ? this.state.chosenDate\n                    : this.state.defaultDate\n                }\n                onDateChange={date => this.setDate(date)}\n                minimumDate={minimumDate}\n                maximumDate={maximumDate}\n                mode=\"date\"\n                locale={locale}\n                timeZoneOffsetInMinutes={timeZoneOffsetInMinutes}\n                {...this.props}\n              />\n            </Modal>\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n"]}