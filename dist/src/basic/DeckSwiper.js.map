{"version":3,"sources":["../../../src/basic/DeckSwiper.js"],"names":["SWIPE_THRESHOLD","DeckSwiper","props","state","pan","ValueXY","pan2","enter","Value","selectedItem","dataSource","selectedItem2","card1Top","card2Top","fadeAnim","topCard","position","top","right","left","currentIndex","indexOf","newIdx","newIdx2","length","nextIndexes","findNextIndexes","setTimeout","setState","onSwiping","timing","toValue","start","spring","friction","selectNext","decay","velocity","x","y","deceleration","_resetState","bind","_panResponder","create","onMoveShouldSetResponderCapture","onMoveShouldSetPanResponderCapture","evt","gestureState","Math","abs","dx","onPanResponderGrant","e","setOffset","_value","setValue","onPanResponderMove","val","opa","event","onPanResponderRelease","vx","vy","onSwipeRight","undefined","onSwipeLeft","translateX","translateY","rotate","interpolate","inputRange","outputRange","opacity","scale","animatedCardStyles","transform","animatedCardStyles2","_root","c","flexDirection","getCardStyles","getInitialStyle","panHandlers","renderBottom","renderItem","renderTop","propTypes","style","PropTypes","object","array","StyledDeckSwiper"],"mappings":"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","file":"DeckSwiper.js","sourcesContent":["import React, { Component } from 'react';\nimport { View, Animated, PanResponder } from 'react-native';\nimport clamp from 'clamp';\nimport { connectStyle } from '@shoutem/theme';\nimport mapPropsToStyleNames from '../Utils/mapPropsToStyleNames';\n\nconst SWIPE_THRESHOLD = 120;\n\nclass DeckSwiper extends Component {\nconstructor(props) {\n        super(props);\n        this.state = {\n            pan: new Animated.ValueXY(),\n            pan2: new Animated.ValueXY(),\n            enter: new Animated.Value(0.8),\n            selectedItem : this.props.dataSource[0],\n            selectedItem2 : this.props.dataSource[1],\n            card1Top: true,\n            card2Top: false,\n            fadeAnim: new Animated.Value(0.8)\n        }\n    }\n\n    getInitialStyle() {\n        return {\n            topCard: {\n                position: 'absolute',\n                top: 0,\n                right: 0,\n                left: 0\n            }\n        }\n    }\n\n\n    findNextIndexes() {\n        let currentIndex = this.props.dataSource.indexOf(this.state.selectedItem);\n        let newIdx = currentIndex + 1;\n        let newIdx2 = currentIndex + 2;\n\n        if(newIdx2 > this.props.dataSource.length - 1 && newIdx === this.props.dataSource.length - 1) {\n            return [newIdx, 0];\n        } else if (newIdx > this.props.dataSource.length - 1) {\n            return [0, 1];\n        } else {\n            return [newIdx, newIdx2];\n        }\n    }\n\n    selectNext() {\n        let nextIndexes = this.findNextIndexes();\n        setTimeout( () => {\n            this.setState({\n                selectedItem: this.props.dataSource[nextIndexes[0]]\n            });\n            setTimeout( () => {\n                this.setState({\n                    selectedItem2: this.props.dataSource[nextIndexes[1]]\n                });\n            }, 350);\n        }, 50);\n    }\n\n\n    swipeRight() {\n      if(this.props.onSwiping)\n        this.props.onSwiping('right');\n      setTimeout( () => {\n        Animated.timing(\n          this.state.fadeAnim,\n          {toValue: 1}\n        ).start();\n        Animated.spring(\n          this.state.enter,\n          { toValue: 1, friction: 7 }\n        ).start();\n        this.selectNext();\n        Animated.decay(this.state.pan, {\n            velocity: {x: 8, y: 1},\n            deceleration: 0.98\n        }).start(this._resetState.bind(this))\n      }, 300);\n    }\n\n    swipeLeft() {\n      if(this.props.onSwiping)\n        this.props.onSwiping('left');\n      setTimeout( () => {\n        Animated.timing(\n          this.state.fadeAnim,\n          {toValue: 1}\n        ).start();\n        Animated.spring(\n          this.state.enter,\n          { toValue: 1, friction: 7 }\n        ).start();\n        this.selectNext();\n        Animated.decay(this.state.pan, {\n            velocity: {x: -8, y: 1},\n            deceleration: 0.98\n        }).start(this._resetState.bind(this))\n      }, 300);\n    }\n\n    componentWillMount() {\n        this._panResponder = PanResponder.create({\n            onMoveShouldSetResponderCapture: () => true,\n            onMoveShouldSetPanResponderCapture: (evt, gestureState) => {\n                return Math.abs(gestureState.dx) > 5;\n            },\n\n            onPanResponderGrant: (e, gestureState) => {\n                this.state.pan.setOffset({x: this.state.pan.x._value, y: this.state.pan.y._value});\n                this.state.pan.setValue({x: 0, y: 0});\n            },\n\n\n            onPanResponderMove: (e, gestureState) => {\n                if (gestureState.dx > 20){\n                  if(this.props.onSwiping)\n                    this.props.onSwiping('right',gestureState.dx);\n                }\n                else if (gestureState.dx < -20){\n                  if(this.props.onSwiping)\n                    this.props.onSwiping('left',gestureState.dx);\n                }\n                let val = Math.abs((gestureState.dx*.0013));\n                let opa = Math.abs((gestureState.dx*.0022));\n                if (val>0.2) {\n                    val = 0.2;\n                }\n                Animated.timing(\n                    this.state.fadeAnim,\n                    {toValue: 0.8+val}\n                ).start();\n                Animated.spring(\n                    this.state.enter,\n                    { toValue: 0.8+val, friction: 7 }\n                ).start();\n                Animated.event([\n                    null, {dx: this.state.pan.x},\n                ])(e, gestureState)\n            },\n\n            onPanResponderRelease: (e, {vx, vy}) => {\n                if(this.props.onSwiping)\n                  this.props.onSwiping(null);\n                var velocity;\n\n                if (vx >= 0) {\n                    velocity = clamp(vx, 4.5, 10);\n                } else if (vx < 0) {\n                    velocity = clamp(vx * -1, 4.5, 10) * -1;\n                }\n\n                if (Math.abs(this.state.pan.x._value) > SWIPE_THRESHOLD) {\n\n                    if (velocity>0) {\n                        (this.props.onSwipeRight) ? this.props.onSwipeRight() : undefined;\n                        this.selectNext();\n                    } else {\n                        (this.props.onSwipeLeft) ? this.props.onSwipeLeft() : undefined;\n                        this.selectNext();\n                    }\n\n                    Animated.decay(this.state.pan, {\n                        velocity: {x: velocity, y: vy},\n                        deceleration: 0.98\n                    }).start(this._resetState.bind(this))\n                } else {\n                    Animated.spring(this.state.pan, {\n                        toValue: {x: 0, y: 0},\n                        friction: 4\n                    }).start()\n                }\n            }\n        })\n    }\n\n    _resetState() {\n        this.state.pan.setValue({x: 0, y: 0});\n        this.state.enter.setValue(0.8);\n        this.state.fadeAnim.setValue(0.8);\n        this.setState({\n            card1Top: !this.state.card1Top,\n            card2Top: !this.state.card2Top\n        });\n        if(this.props.onSwiping)\n          this.props.onSwiping(null);\n\n    }\n\n    getCardStyles() {\n\n        let { pan, pan2, enter } = this.state;\n\n        let [translateX, translateY] = [pan.x, pan.y];\n        // let [translateX, translateY] = [pan2.x, pan2.y];\n\n        let rotate = pan.x.interpolate({inputRange: [-700, 0, 700], outputRange: ['-10deg', '0deg', '10deg']});\n\n        let opacity = pan.x.interpolate({inputRange: [-320, 0, 320], outputRange: [0.9, 1, 0.9]})\n        let scale = enter;\n\n        let animatedCardStyles = {transform: [{translateX}, {translateY}, {rotate}], opacity};\n        let animatedCardStyles2 = {transform: [{scale}]};\n\n        return [animatedCardStyles, animatedCardStyles2]\n    }\n\n    render() {\n\n\n        return(\n            <View ref={c => this._root = c} style={{position: 'relative', flexDirection: 'column'}}>{(this.state.selectedItem)===undefined ? (<View />) :\n                (<View>\n                    <Animated.View style={[this.getCardStyles()[1],this.getInitialStyle().topCard,{opacity: this.state.fadeAnim}]} {...this._panResponder.panHandlers}>\n                        {(this.props.renderBottom)  ?\n                          this.props.renderBottom(this.state.selectedItem2)\n                        :\n                          this.props.renderItem(this.state.selectedItem2)\n                        }\n                    </Animated.View>\n                    <Animated.View style={[ this.getCardStyles()[0], this.getInitialStyle().topCard] } {...this._panResponder.panHandlers} >\n                        {(this.props.renderTop) ?\n                          this.props.renderTop(this.state.selectedItem)\n                        :\n                          this.props.renderItem(this.state.selectedItem)\n                        }\n                    </Animated.View>\n                    </View>\n                )\n            }\n            </View>\n        );\n    }\n\n}\n\nDeckSwiper.propTypes = {\n  ...View.propTypes,\n  style: React.PropTypes.object,\n  dataSource: React.PropTypes.array,\n};\n\nconst StyledDeckSwiper = connectStyle('NativeBase.DeckSwiper', {}, mapPropsToStyleNames)(DeckSwiper);\n\nexport {\n  StyledDeckSwiper as DeckSwiper,\n};\n"]}