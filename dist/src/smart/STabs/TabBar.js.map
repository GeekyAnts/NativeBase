{"version":3,"sources":["../../../../src/smart/STabs/TabBar.js"],"names":["TabBar","name","page","isTabActive","props","activeTab","flex","tabBarStyle","goToPage","tabBarTextStyle","newTab","tabs","forEach","tabLabel","index","push","label","icon","tabIcon","renderNewTab","map","tab","i","renderButtonTab","flexDirection","vertical","tabBarIconStyle","containerWidth","get","width","numberOfTabs","length","tabUnderlineStyle","position","height","backgroundColor","sTabBarActiveTextColor","bottom","left","scrollValue","interpolate","inputRange","outputRange","_root","c","iconPresent","renderTab","renderLabelOption","underlineStyle","propTypes","StyledTabBar"],"mappings":"gzBAAA,4B;AACA;AACA;AACA;AACA;AACA,wD;AACA;AACA,sE;AACMA,M;;AAEcC,I,CAAMC,I,CAAM;AAC5B,GAAMC,aAAc,KAAKC,KAAL,CAAWC,SAAX,GAAyBH,IAA7C;;AAEA;AACE,iDAAM,MAAO,CAAC,CAAEI,KAAM,CAAR,CAAD,CAAc,KAAKF,KAAL,CAAWG,WAAzB,CAAb,CAAoD,IAAKN,IAAzD;AACE;AACE,gBADF,CACc,QAAS,yBAAM,QAAKG,KAAL,CAAWI,QAAX,CAAoBN,IAApB,CAAN,EADvB;AAEE,YAAa,KAAKE,KAAL,CAAWC,SAAX,GAAyBH,IAFxC;;AAIE,0CAAM,MAAO,KAAKE,KAAL,CAAWK,eAAxB,EAA0CR,IAA1C,CAJF,CADF,CADF;;;;AAUD,C;;AAESG,K,CAAO;AACf,GAAMM,QAAS,EAAf;AACAN,MAAMO,IAAN,CAAWC,OAAX,CAAmB,SAACC,QAAD,CAAWC,KAAX,CAAqB;AACtCJ,OAAOK,IAAP,CAAY,CAAEC,MAAOH,QAAT,CAAmBI,KAAMb,MAAMc,OAAN,CAAcJ,KAAd,CAAzB,CAAZ;AACD,CAFD;AAGA,MAAO,MAAKK,YAAL,CAAkBT,MAAlB,CAAP;AACD,C;;AAEYA,M,CAAQ;AACnB,MAAOA,QAAOU,GAAP,CAAW,SAACC,GAAD,CAAMC,CAAN,QAAY,QAAKC,eAAL,CAAqBF,IAAIL,KAAzB,CAAgCK,IAAIJ,IAApC,CAA0CK,CAA1C,CAAZ,EAAX,CAAP;AACD,C;;AAEeN,K,CAAOC,I,CAAMf,I,CAAM;AACjC,GAAMC,aAAc,KAAKC,KAAL,CAAWC,SAAX,GAAyBH,IAA7C;;AAEA;AACE,iDAAM,IAAKA,IAAX,CAAiB,MAAO,CAAC,CAAEI,KAAM,CAAR,CAAD,CAAc,KAAKF,KAAL,CAAWG,WAAzB,CAAxB;AACE,8CAAQ,gBAAR,CAAoB,QAAS,yBAAM,QAAKH,KAAL,CAAWI,QAAX,CAAoBN,IAApB,CAAN,EAA7B,CAA8D,YAAa,KAAKE,KAAL,CAAWC,SAAX,GAAyBH,IAApG,CAA0G,MAAO,CAAEsB,cAAgB,KAAKpB,KAAL,CAAWqB,QAAZ,CAAwB,QAAxB,CAAmC,KAApD,CAAjH;AACE,8CAAQ,KAAMR,IAAd,CAAoB,MAAO,KAAKb,KAAL,CAAWsB,eAAtC,EADF;AAEE,0CAAM,MAAO,KAAKtB,KAAL,CAAWK,eAAxB,EAA0CO,KAA1C,CAFF,CADF,CADF;;;;AAQD,C;;AAEQ;AACP,GAAMW,gBAAiB,wBAAWC,GAAX,CAAe,QAAf,EAAyBC,KAAhD;AACA,GAAMC,cAAe,KAAK1B,KAAL,CAAWO,IAAX,CAAgBoB,MAArC;AACA,GAAMC,mBAAoB;AACxBC,SAAU,UADc;AAExBJ,MAAOF,eAAiBG,YAFA;AAGxBI,OAAQ,CAHgB;AAIxBC,gBAAiB,mBAAUC,sBAJH;AAKxBC,OAAQ,CALgB,CAA1B;;AAOA,GAAMC,MAAO,KAAKlC,KAAL,CAAWmC,WAAX,CAAuBC,WAAvB,CAAmC;AAC9CC,WAAY,CAAC,CAAD,CAAI,CAAJ,CADkC,CAC1BC,YAAa,CAAC,CAAD,CAAIf,eAAiBG,YAArB,CADa,CAAnC,CAAb;;AAGA;AACE,0DAAM,IAAK,sBAAK,QAAKa,KAAL,CAAaC,CAAlB,EAAX,EAAoC,KAAKxC,KAAzC;AACI,KAAKA,KAAL,CAAWyC,WAAZ,CAA2B,KAAKC,SAAL,CAAe,KAAK1C,KAApB,CAA3B;AACC,KAAKA,KAAL,CAAWO,IAAX,CAAgBS,GAAhB,CAAoB,SAACC,GAAD,CAAMC,CAAN,QAAY,QAAKyB,iBAAL,CAAuB1B,GAAvB,CAA4BC,CAA5B,CAAZ,EAApB,CAFJ;AAGE,oDAAU,IAAV,EAAe,MAAO,CAACU,iBAAD,CAAoB,CAAEM,SAAF,CAApB,CAA8B,KAAKlC,KAAL,CAAW4C,cAAzC,CAAtB,EAHF,CADF;;;AAOD,C;;;AAGHhD,OAAOiD,SAAP;AACK,kBAAKA,SADV;;;AAIA,GAAMC,cAAe,wBAAa,mBAAb,CAAkC,EAAlC,iCAA4DlD,MAA5D,CAArB,C;;;AAGkBA,M,CAAhBkD,Y","file":"TabBar.js","sourcesContent":["import React, { Component } from 'react';\nimport { View, Animated, Dimensions } from 'react-native';\nimport { IconNB } from '../../basic/IconNB';\nimport { Button } from '../../basic/Button';\nimport { Text } from '../../basic/Text';\nimport variables from '../../theme/variables/platform';\nimport { connectStyle } from '@shoutem/theme';\nimport mapPropsToStyleNames from '../../Utils/mapPropsToStyleNames';\nclass TabBar extends Component {\n\n  renderLabelOption(name, page) {\n    const isTabActive = this.props.activeTab === page;\n\n    return (\n      <View style={[{ flex: 1 }, this.props.tabBarStyle]} key={name}>\n        <Button\n          transparent onPress={() => this.props.goToPage(page)}\n          isTabActive={this.props.activeTab === page}\n        >\n          <Text style={this.props.tabBarTextStyle}>{name}</Text>\n        </Button>\n      </View>\n    );\n  }\n\n  renderTab(props) {\n    const newTab = [];\n    props.tabs.forEach((tabLabel, index) => {\n      newTab.push({ label: tabLabel, icon: props.tabIcon[index] });\n    });\n    return this.renderNewTab(newTab);\n  }\n\n  renderNewTab(newTab) {\n    return newTab.map((tab, i) => this.renderButtonTab(tab.label, tab.icon, i));\n  }\n\n  renderButtonTab(label, icon, page) {\n    const isTabActive = this.props.activeTab === page;\n\n    return (\n      <View key={page} style={[{ flex: 1 }, this.props.tabBarStyle]}>\n        <Button transparent onPress={() => this.props.goToPage(page)} isTabActive={this.props.activeTab === page} style={{ flexDirection: (this.props.vertical) ? 'column' : 'row' }}>\n          <IconNB name={icon} style={this.props.tabBarIconStyle} />\n          <Text style={this.props.tabBarTextStyle}>{label}</Text>\n        </Button>\n      </View>\n    );\n  }\n\n  render() {\n    const containerWidth = Dimensions.get('window').width;\n    const numberOfTabs = this.props.tabs.length;\n    const tabUnderlineStyle = {\n      position: 'absolute',\n      width: containerWidth / numberOfTabs,\n      height: 4,\n      backgroundColor: variables.sTabBarActiveTextColor,\n      bottom: 0,\n    };\n    const left = this.props.scrollValue.interpolate({\n      inputRange: [0, 1], outputRange: [0, containerWidth / numberOfTabs],\n    });\n    return (\n      <View ref={c => this._root = c} {...this.props}>\n        {(this.props.iconPresent) ? this.renderTab(this.props) :\n          this.props.tabs.map((tab, i) => this.renderLabelOption(tab, i))}\n        <Animated.View style={[tabUnderlineStyle, { left }, this.props.underlineStyle]} />\n      </View>\n    );\n  }\n}\n\nTabBar.propTypes = {\n  ...View.propTypes,\n};\n\nconst StyledTabBar = connectStyle('NativeBase.TabBar', {}, mapPropsToStyleNames)(TabBar);\n\nexport {\n  StyledTabBar as TabBar,\n};\n"]}