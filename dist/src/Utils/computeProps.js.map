{"version":3,"sources":["../../../src/Utils/computeProps.js"],"names":["module","exports","incomingProps","defaultProps","computedProps","clone","children","incomingPropsStyle","style","assign","computedPropsStyle","Array","isArray","forEach","merge","getByID"],"mappings":"AAAA;AACA,8B;AACA,sG;;;AAGAA,OAAOC,OAAP,CAAiB,SAASC,aAAT,CAAwBC,YAAxB,CAAsC;;AAErD,GAAIC,eAAgB,EAApB;;AAEAF,cAAgB,iBAAEG,KAAF,CAAQH,aAAR,CAAhB;AACA,MAAOA,eAAcI,QAArB;;AAEA,GAAMC,oBAAqBL,cAAcM,KAAzC;AACA,MAAON,eAAcM,KAArB;;;AAGA,GAAIN,aAAJ,CAAmB;AACjB,iBAAEO,MAAF,CAASL,aAAT,CAAwBD,YAAxB,CAAsCD,aAAtC;AACD,CAFD,IAEO;AACLE,cAAgBD,YAAhB;AACD;;AAED,GAAII,kBAAJ,CAAwB;AACtB,GAAIG,oBAAqB,EAAzB;AACAN,cAAcI,KAAd,CAAsB,EAAtB;AACA,GAAIG,MAAMC,OAAN,CAAcL,kBAAd,CAAJ,CAAuC;AACrC,iBAAEM,OAAF,CAAUN,kBAAV,CAA8B,eAAS;AACrC,GAAI,MAAOC,MAAP,GAAiB,QAArB,CAA+B;AAC7B,iBAAEM,KAAF,CAAQJ,kBAAR,CAA4B,kCAAwBK,OAAxB,CAAgCP,KAAhC,CAA5B;AACD,CAFD,IAEO;AACL,iBAAEM,KAAF,CAAQJ,kBAAR,CAA4BF,KAA5B;AACD;AACF,CAND;AAOD,CARD,IAQO,IAAI,MAAOD,mBAAP,GAA8B,QAAlC,CAA4C;AACjDG,mBAAqB,kCAAwBK,OAAxB,CAAgCR,kBAAhC,CAArB;AACD,CAFM,IAEA;AACLG,mBAAqBH,kBAArB;AACD;;AAED,iBAAEO,KAAF,CAAQV,cAAcI,KAAtB,CAA6BL,aAAaK,KAA1C,CAAiDE,kBAAjD;AACD;;AAED,MAAON,cAAP;AACD,CAtCD","file":"computeProps.js","sourcesContent":["\"use_strict\";\r\nimport _ from \"lodash\";\r\nimport ReactNativePropRegistry from \"react-native/Libraries/Renderer/shims/ReactNativePropRegistry\";\r\n// For compatibility with RN 0.25\r\n// import ReactNativePropRegistry from \"react-native/Libraries/ReactNative/ReactNativePropRegistry\";\r\nmodule.exports = function(incomingProps, defaultProps) {\r\n  // External props has a higher precedence\r\n  let computedProps = {};\r\n\r\n  incomingProps = _.clone(incomingProps);\r\n  delete incomingProps.children;\r\n\r\n  const incomingPropsStyle = incomingProps.style;\r\n  delete incomingProps.style;\r\n\r\n  // console.log(defaultProps, incomingProps);\r\n  if (incomingProps) {\r\n    _.assign(computedProps, defaultProps, incomingProps);\r\n  } else {\r\n    computedProps = defaultProps;\r\n  }\r\n  // Pass the merged Style Object instead\r\n  if (incomingPropsStyle) {\r\n    let computedPropsStyle = {};\r\n    computedProps.style = {};\r\n    if (Array.isArray(incomingPropsStyle)) {\r\n      _.forEach(incomingPropsStyle, style => {\r\n        if (typeof style === \"number\") {\r\n          _.merge(computedPropsStyle, ReactNativePropRegistry.getByID(style));\r\n        } else {\r\n          _.merge(computedPropsStyle, style);\r\n        }\r\n      });\r\n    } else if (typeof incomingPropsStyle === \"number\") {\r\n      computedPropsStyle = ReactNativePropRegistry.getByID(incomingPropsStyle);\r\n    } else {\r\n      computedPropsStyle = incomingPropsStyle;\r\n    }\r\n\r\n    _.merge(computedProps.style, defaultProps.style, computedPropsStyle);\r\n  }\r\n  // console.log(\"computedProps \", computedProps);\r\n  return computedProps;\r\n};\r\n"]}