{"version":3,"sources":["../../../../Components/Widgets/Gravatar/index.js"],"names":["GRAVATAR_URI","GravatarNB","gravatar","borderRadius","props","size","width","height","resizeMode","contain","undefined","gravatarStyle","circular","square","defaultProps","style","merge","getInitialStyle","prepareRootProps","uri","email","_root","c"],"mappings":";AACA,a;;AAEA,4B;AACA;AACA,oE;AACA,yD;AACA,8B;AACA,sC;;AAEA,GAAMA,cAAe,kCAArB,C;;AAEqBC,U;;;;;;;;;;AAUC;AACd,MAAO;AACHC,SAAU;AACNC,aAAc,KAAKC,KAAL,CAAWC,IAAX,CAAkB,KAAKD,KAAL,CAAWC,IAAX,CAAgB,CAAlC,CAAsC,EAD9C;AAENC,MAAO,KAAKF,KAAL,CAAWC,IAAX,CAAkB,KAAKD,KAAL,CAAWC,IAA7B,CAAoC,EAFrC;AAGNE,OAAQ,KAAKH,KAAL,CAAWC,IAAX,CAAkB,KAAKD,KAAL,CAAWC,IAA7B,CAAoC,EAHtC;AAING,WAAY,KAAKJ,KAAL,CAAWK,OAAX,CAAqB,SAArB,CAAiCC,SAJvC,CADP,CAAP;;;AAQH,C;;AAEkB;AACf,GAAIC,eAAgB,EAApB;AACA,GAAG,KAAKP,KAAL,CAAWQ,QAAd,CAAwB;AACpBD,cAAcL,KAAd,CAAsB,KAAKF,KAAL,CAAWC,IAAjC;AACAM,cAAcJ,MAAd,CAAuB,KAAKH,KAAL,CAAWC,IAAlC;AACAM,cAAcR,YAAd,CAA6B,KAAKC,KAAL,CAAWC,IAAX,CAAgB,CAA7C;AACH,CAJD;AAKK,GAAG,KAAKD,KAAL,CAAWS,MAAd,CAAsB;AACvBF,cAAcL,KAAd,CAAsB,KAAKF,KAAL,CAAWC,IAAjC;AACAM,cAAcJ,MAAd,CAAuB,KAAKH,KAAL,CAAWC,IAAlC;AACAM,cAAcR,YAAd,CAA6B,CAA7B;AACH;;AAED,GAAIW,cAAe;AACfC,MAAO,iBAAEC,KAAF,CAAQ,KAAKC,eAAL,GAAuBf,QAA/B,CAAyCS,aAAzC,CADQ,CAAnB;;;AAIA,MAAO,2BAAa,KAAKP,KAAlB,CAAyBU,YAAzB,CAAP;AACH,C;;AAEQ;AACL,GAAMV,OAAQ,KAAKc,gBAAL,EAAd;;AAEA,GAAMC,KAAMnB,aAAe,wBAAI,KAAKI,KAAL,CAAWgB,KAAf,CAAf,CAAuC,KAAvC,CAA6ChB,MAAMW,KAAN,CAAYR,MAArE;AACA;AACI,2DAAO,IAAK,sBAAK,QAAKc,KAAL,CAAaC,CAAlB,EAAZ,EAAqClB,KAArC,EAA4C,OAAQ,CAACe,IAAIA,GAAL,CAApD,GADJ;;AAGH,C,uEAhDgBlB,U","file":"index.js","sourcesContent":["/* @flow */\n'use strict';\n\nimport React from 'react';\nimport {Image} from 'react-native';\nimport NativeBaseComponent from '../../Base/NativeBaseComponent';\nimport computeProps from '../../../Utils/computeProps';\nimport _ from 'lodash';\nimport md5 from 'blueimp-md5';\n\nconst GRAVATAR_URI = 'https://www.gravatar.com/avatar/';\n\nexport default class GravatarNB extends NativeBaseComponent {\n\n    propTypes: {\n        email: React.PropTypes.string.isRequired,\n        style : React.PropTypes.object,\n        size : React.PropTypes.number,\n        circular : React.PropTypes.bool,\n        square : React.PropTypes.bool\n    }\n\n    getInitialStyle() {\n        return {\n            gravatar: {\n                borderRadius: this.props.size ? this.props.size/2 : 15,\n                width: this.props.size ? this.props.size : 30,\n                height: this.props.size ? this.props.size : 30,\n                resizeMode: this.props.contain ? 'contain' : undefined\n            }\n        }\n    }\n\n    prepareRootProps() {\n        var gravatarStyle = {};\n        if(this.props.circular) {\n            gravatarStyle.width = this.props.size;\n            gravatarStyle.height = this.props.size;\n            gravatarStyle.borderRadius = this.props.size/2;\n        }\n        else if(this.props.square) {\n            gravatarStyle.width = this.props.size;\n            gravatarStyle.height = this.props.size;\n            gravatarStyle.borderRadius = 0;\n        }\n\n        var defaultProps = {\n            style: _.merge(this.getInitialStyle().gravatar, gravatarStyle)\n        };\n\n        return computeProps(this.props, defaultProps);\n    }\n\n    render() {\n        const props = this.prepareRootProps();\n\n        const uri = GRAVATAR_URI + md5(this.props.email) + '?s='+props.style.height;\n        return(\n            <Image ref={c => this._root = c} {...props} source={{uri:uri}}/>\n            );\n    }\n}\n"]}