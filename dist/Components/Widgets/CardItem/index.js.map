{"version":3,"sources":["../../../../Components/Widgets/CardItem/index.js"],"names":["CardItemNB","listItem","borderBottomWidth","getTheme","borderWidth","padding","imagePresent","ifShowCase","listItemPadding","backgroundColor","listBg","justifyContent","buttonPresent","flexDirection","thumbnailPresent","gravatarPresent","iconPresent","notePresent","borderColor","listBorderColor","listItemDivider","paddingVertical","itemText","fontSize","marginTop","color","getContextForegroundColor","flex","dividerItemText","fontWeight","itemIcon","iconFontSize","itemNote","listNoteColor","itemSubNote","thumbnail","alignSelf","gravatar","fullImage","height","right","paddingLeft","right2","alignItems","right3","thumbnailComponentPresent","Children","forEach","props","children","child","_","get","gravatarComponentPresent","iconComponentPresent","buttonComponentPresent","cardBody","note","squareThumbs","square","defaultProps","Array","isArray","resizeMode","style","getInitialStyle","itemButton","header","footer","foregroundColor","newChildren","childrenArray","toArray","filter","map","i","cloneElement","getChildProps","key","push","getRightStyle","slice","c","_root","prepareRootProps","button","renderChildren"],"mappings":"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","file":"index.js","sourcesContent":["/* @flow */\n'use strict';\n\nimport React from 'react';\nimport { Image, TouchableOpacity } from 'react-native';\nimport NativeBaseComponent from '../../Base/NativeBaseComponent';\nimport computeProps from '../../../Utils/computeProps';\nimport Icon from './../Icon';\nimport Text from './../Text';\nimport View from './../View';\nimport Button from './../Button';\nimport Thumbnail from './../Thumbnail';\nimport Gravatar from './../Gravatar';\n\nexport default class CardItemNB extends NativeBaseComponent {\n\n    propTypes: {\n        style : React.PropTypes.object,\n        header : React.PropTypes.bool,\n        cardBody : React.PropTypes.bool\n    }\n\n    getInitialStyle() {\n        return {\n            listItem: {\n                borderBottomWidth: this.getTheme().borderWidth,\n                padding: (this.imagePresent() && !this.ifShowCase()) ? 0 :\n                    this.getTheme().listItemPadding,\n                backgroundColor: this.getTheme().listBg,\n                justifyContent: (this.buttonPresent()) ? 'space-between' : 'flex-start',\n                flexDirection: (this.thumbnailPresent() || this.gravatarPresent() || this.iconPresent() || (this.notePresent() && this.ifShowCase())) ? 'row' : 'column',\n                borderColor: this.getTheme().listBorderColor\n            },\n            listItemDivider: {\n                borderBottomWidth: this.getTheme().borderWidth,\n                padding: this.getTheme().listItemPadding,\n                backgroundColor: 'transparent',\n                paddingVertical: this.getTheme().listItemPadding + 2,\n                justifyContent: (this.buttonPresent()) ? 'space-between' : 'flex-start',\n                flexDirection: 'row',\n                borderColor: 'transparent'\n            },\n            itemText: {\n                fontSize: this.ifShowCase() ? 14 : 15,\n                marginTop: this.ifShowCase() ? 10 : 0,\n                color: this.getContextForegroundColor(),\n                flex: 1\n            },\n            dividerItemText: {\n                fontSize: 17,\n                fontWeight: '500',\n                color: this.getContextForegroundColor(),\n                flex: 1\n            },\n            itemIcon: {\n                fontSize: this.getTheme().iconFontSize,\n                color: this.getContextForegroundColor()\n            },\n            itemNote: {\n                fontSize: 15,\n                color: this.getTheme().listNoteColor,\n                fontWeight: '100',\n                flex: 1\n            },\n            itemSubNote: {\n                fontSize: 15,\n                color: '#999'\n            },\n            thumbnail: {\n                alignSelf: 'center'\n            },\n            gravatar: {\n                alignSelf: 'center'\n            },\n            fullImage: {\n                alignSelf: 'stretch',\n                height: this.ifShowCase() ? 120 : 300\n            }\n        };\n    }\n    getRightStyle() {\n        return {\n            right: {\n                flex: 1,\n                paddingLeft: 10,\n                backgroundColor: 'transparent'\n            },\n            right2: {\n                flex: 1,\n                flexDirection: 'row',\n                paddingLeft: 10,\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                backgroundColor: 'transparent'\n            },\n            right3: {\n                flex: 1,\n                flexDirection: 'column',\n                paddingLeft: 10,\n                justifyContent: 'flex-start',\n                backgroundColor: 'transparent'\n            }\n        };\n    }\n\n    thumbnailPresent() {\n        let thumbnailComponentPresent = false;\n        React.Children.forEach(this.props.children, (child) => {\n            if (child && _.get(child, 'type', null) === Thumbnail) {\n                thumbnailComponentPresent = true;\n            }\n        });\n\n        return thumbnailComponentPresent;\n    }\n\n    gravatarPresent() {\n        var gravatarComponentPresent = false;\n        React.Children.forEach(this.props.children, function (child) {\n            if(_.get(child, 'type', null) == Gravatar)\n                gravatarComponentPresent = true;\n        })\n\n        return gravatarComponentPresent;\n    }\n\n    imagePresent() {\n        let imagePresent = false;\n        React.Children.forEach(this.props.children, (child) => {\n            if (child && _.get(child, 'type', null) === Image) {\n                imagePresent = true;\n            }\n        });\n\n        return imagePresent;\n    }\n\n    iconPresent() {\n        let iconComponentPresent = false;\n        React.Children.forEach(this.props.children, (child) => {\n            if (child && _.get(child, 'type', null) === Icon) {\n                iconComponentPresent = true;\n            }\n        });\n\n        return iconComponentPresent;\n    }\n\n    buttonPresent() {\n        let buttonComponentPresent = false;\n        React.Children.forEach(this.props.children, (child) => {\n            if (child && _.get(child, 'type', null) === Button) {\n                buttonComponentPresent = true;\n            }\n        });\n\n        return buttonComponentPresent;\n    }\n\n    ifShowCase() {\n      return !!this.props.cardBody;\n    }\n\n    notePresent() {\n        let notePresent = false;\n\n        React.Children.forEach(this.props.children, (child) => {\n            if (child && (_.get(child, 'type', null) === Text) && child.props.note) {\n                notePresent = true;\n            }\n        });\n\n        return notePresent;\n    }\n\n    squareThumbs() {\n        let squareThumbs = false;\n        if (this.thumbnailPresent() || this.gravatarPresent()) {\n            React.Children.forEach(this.props.children, (child) => {\n                if (child && child.props.square) {\n                    squareThumbs = true;\n                }\n            });\n        }\n\n        return squareThumbs;\n    }\n\n    getChildProps(child) {\n        let defaultProps = {};\n        if (_.get(child, 'type', null) === Image && !Array.isArray(this.props.children)) {\n            defaultProps = {\n                resizeMode: 'cover',\n                style: this.getInitialStyle().fullImage\n            };\n        } else\n          if (_.get(child, 'type', null) === Button) {\n            defaultProps = {\n                style: this.getInitialStyle().itemButton\n            };\n        } else\n            if (_.get(child, 'type', null) === Text) {\n                if ((this.props.header) || (this.props.footer)) {\n                    defaultProps = {\n                        style: this.getInitialStyle().dividerItemText\n                    };\n                } else if (child.props.note && (this.thumbnailPresent() || this.gravatarPresent())) {\n                    defaultProps = {\n                        style: this.getInitialStyle().itemSubNote\n                    };\n                } else if (child.props.note) {\n                    defaultProps = {\n                        style: this.getInitialStyle().itemNote\n                    };\n                } else {\n                    defaultProps = {\n                        style: this.getInitialStyle().itemText\n                    };\n                }\n        } else if (_.get(child, 'type', null) === Icon) {\n            defaultProps = {\n                style: this.getInitialStyle().itemIcon\n            };\n        } else if (_.get(child, 'type', null) === Thumbnail) {\n            defaultProps = {\n                style: this.getInitialStyle().thumbnail\n            };\n        } else if(_.get(child, 'type', null) == Gravatar) {\n            defaultProps = {\n                style: this.getInitialStyle().gravatar\n            };\n        } else if (_.get(child, 'type', null) === Image) {\n            defaultProps = {\n                style: this.getInitialStyle().fullImage\n            };\n        } else {\n            defaultProps = {\n                foregroundColor: this.getContextForegroundColor()\n            };\n        }\n\n        return computeProps(child.props, defaultProps);\n    }\n\n    prepareRootProps() {\n        let defaultProps = {};\n\n        if ((this.props.header) || (this.props.footer)) {\n            defaultProps = {\n                style: this.getInitialStyle().listItemDivider\n            };\n        } else {\n            defaultProps = {\n                style: this.getInitialStyle().listItem\n            };\n        }\n\n        return computeProps(this.props, defaultProps);\n    }\n\n\n\n\n    renderChildren() {\n        let newChildren = [];\n        let childrenArray = React.Children.toArray(this.props.children);\n        childrenArray = childrenArray.filter(child => !!child);\n\n        if ((!this.thumbnailPresent() || !this.gravatarPresent()) && !this.iconPresent()) {\n            newChildren = childrenArray.map((child, i) =>\n                React.cloneElement(child, { ...this.getChildProps(child), key: i })\n            );\n        } else {\n            newChildren = [];\n            if (!Array.isArray(this.props.children)) {\n                newChildren.push(\n                    <View key='cardItem' style={{ justifyContent: 'flex-start' }}>\n                        {React.cloneElement(childrenArray, this.getChildProps(childrenArray))}\n                    </View>\n                );\n            } else {\n                newChildren.push(\n                    React.cloneElement(childrenArray[0], this.getChildProps(childrenArray[0])));\n                newChildren.push(\n                    <View key='cardItem' style={this.notePresent() ? this.getRightStyle().right : this.squareThumbs() ? this.getRightStyle().right3 : this.getRightStyle().right2}>\n                        {childrenArray.slice(1).map((child, i) =>\n                            React.cloneElement(child, { ...this.getChildProps(child), key: i })\n                        )}\n                    </View>\n                );\n            }\n        }\n\n        return newChildren;\n    }\n\n\n    render() {\n        return (\n            <TouchableOpacity\n                ref={(c) => { this._root = c; }} {...this.prepareRootProps()}\n                activeOpacity={(this.props.button) ? 0.2 : 1}\n            >\n                {this.renderChildren()}\n            </TouchableOpacity>\n        );\n    }\n}\n"]}