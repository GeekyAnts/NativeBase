{"version":3,"sources":["../../../../Components/Widgets/Badge/index.js"],"names":["BadgeNB","type","backgroundColor","props","primary","getTheme","brandPrimary","success","brandSuccess","info","brandInfo","warning","brandWarning","danger","brandDanger","badgeBg","padding","OS","paddingHorizontal","alignSelf","borderRadius","height","defaultProps","style","_root","c","prepareRootProps","textStyle","color","badgeColor","fontSize","fontSizeBase","lineHeight","textAlign","children","propTypes","PropTypes","object"],"mappings":";AACA,a;;AAEA,4B;AACA;AACA,oE;AACA,yD;AACA,+B;;;AAGqBA,O;;;;;;AAME;;AAEf,GAAIC,MAAO;;AAEPC,gBAAgB,KAAKC,KAAL,CAAWC,OAAX;AACA,KAAKC,QAAL,GAAgBC,YADhB;AAEA,KAAKH,KAAL,CAAWI,OAAX;AACA,KAAKF,QAAL,GAAgBG,YADhB;AAEA,KAAKL,KAAL,CAAWM,IAAX;AACA,KAAKJ,QAAL,GAAgBK,SADhB;AAEA,KAAKP,KAAL,CAAWQ,OAAX;AACA,KAAKN,QAAL,GAAgBO,YADhB;AAEA,KAAKT,KAAL,CAAWU,MAAX;AACA,KAAKR,QAAL,GAAgBS,WADhB;AAEA,KAAKT,QAAL,GAAgBU,OAZzB;AAaPC,QAAU,sBAASC,EAAT,GAAgB,KAAjB,CAA0B,CAA1B,CAA8B,CAbhC;AAcPC,kBAAmB,EAdZ;AAePC,UAAW,YAfJ;AAgBPC,aAAc,IAhBP;AAiBPC,OAAQ,EAjBD,CAAX;;;;AAqBA,GAAIC,cAAe;AACfC,MAAOtB,IADQ,CAAnB;;;AAIA,MAAO,2BAAa,KAAKE,KAAlB,CAAyBmB,YAAzB,CAAP;;AAEH,C;AACQ;AACL;AACI,0DAAM,IAAK,sBAAK,QAAKE,KAAL,CAAaC,CAAlB,EAAX,EAAoC,KAAKC,gBAAL,EAApC;AACI,8CAAM,MAAO,CAAE,KAAKvB,KAAL,CAAWwB,SAAb,CAAwB;AACrBC,MAAQ,KAAKzB,KAAL,CAAWwB,SAAX,EAAwB,KAAKxB,KAAL,CAAWwB,SAAX,CAAqBC,KAA9C,CAAuD,KAAKzB,KAAL,CAAWwB,SAAX,CAAqBC,KAA5E,CAAoF,KAAKvB,QAAL,GAAgBwB,UADtF;AAErBC,SAAW,KAAK3B,KAAL,CAAWwB,SAAX,EAAwB,KAAKxB,KAAL,CAAWwB,SAAX,CAAqBG,QAA9C,CAA0D,KAAK3B,KAAL,CAAWwB,SAAX,CAAqBG,QAA/E,CAA0F,KAAKzB,QAAL,GAAgB0B,YAF/F;AAGrBC,WAAa,KAAK7B,KAAL,CAAWwB,SAAX,EAAwB,KAAKxB,KAAL,CAAWwB,SAAX,CAAqBK,UAA9C,CAA4D,KAAK7B,KAAL,CAAWwB,SAAX,CAAqBK,UAAjF,CAA8F,KAAK3B,QAAL,GAAgB2B,UAAhB,CAA2B,CAHhH;AAIrBC,UAAW,QAJU,CAAxB,CAAb;AAKkB,KAAK9B,KAAL,CAAW+B,QAL7B,CADJ,CADJ;;;;AAWH,C,oDAhDgBlC,O,CAEVmC,S,CAAY,CACfZ,MAAQ,gBAAMa,SAAN,CAAgBC,MADT,C,iBAFFrC,O","file":"index.js","sourcesContent":["/* @flow */\n'use strict';\n\nimport React from 'react';\nimport {View,Platform} from 'react-native';\nimport NativeBaseComponent from '../../Base/NativeBaseComponent';\nimport computeProps from '../../../Utils/computeProps';\nimport Text from './../Text';\n\n\nexport default class BadgeNB extends NativeBaseComponent {\n\n    static propTypes = {\n        style : React.PropTypes.object\n    }\n\n    prepareRootProps() {\n\n        var type = {\n\n            backgroundColor:this.props.primary ?\n                            this.getTheme().brandPrimary :\n                            this.props.success ?\n                            this.getTheme().brandSuccess :\n                            this.props.info ?\n                            this.getTheme().brandInfo :\n                            this.props.warning ?\n                            this.getTheme().brandWarning :\n                            this.props.danger ?\n                            this.getTheme().brandDanger :\n                            this.getTheme().badgeBg,\n            padding: (Platform.OS === 'ios') ? 3 : 0,\n            paddingHorizontal: 10,\n            alignSelf: 'flex-start',\n            borderRadius: 13.5,\n            height: 27\n\n        }\n\n        var defaultProps = {\n            style: type\n        }\n\n        return computeProps(this.props, defaultProps);\n\n    }\n    render() {\n        return(\n            <View ref={c => this._root = c} {...this.prepareRootProps()}>\n                <Text style={[ this.props.textStyle, {\n                                color: (this.props.textStyle && this.props.textStyle.color) ? this.props.textStyle.color : this.getTheme().badgeColor,\n                                fontSize: (this.props.textStyle && this.props.textStyle.fontSize) ? this.props.textStyle.fontSize : this.getTheme().fontSizeBase,\n                                lineHeight: (this.props.textStyle && this.props.textStyle.lineHeight) ? this.props.textStyle.lineHeight : this.getTheme().lineHeight-1,\n                                textAlign: 'center'\n                            } ]}>{this.props.children}\n                </Text>\n            </View>\n        );\n    }\n\n}\n"]}