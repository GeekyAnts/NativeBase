{"version":3,"sources":["../../../../Components/Widgets/Input/index.js"],"names":["Input","input","height","props","toolbar","getTheme","inputHeightBase","color","inputColor","paddingLeft","paddingRight","fontSize","inputFontSize","lineHeight","inputLineHeight","marginTop","inlineLabel","OS","undefined","defaultProps","style","getInitialStyle","flex","c","_textInput","_root","prepareRootProps","placeholderTextColor","inputColorPlaceholder"],"mappings":";AACA,a;AACA,4B;AACA;AACA,oE;AACA,yD;;AAEqBA,K;;;;;;AAMC;AACd,MAAO;AACHC,MAAO;AACHC,OAAQ,KAAKC,KAAL,CAAWC,OAAX,CAAqB,EAArB,CAA0B,KAAKC,QAAL,GAAgBC,eAD/C;AAEHC,MAAO,KAAKF,QAAL,GAAgBG,UAFpB;AAGHC,YAAa,CAHV;AAIHC,aAAc,CAJX;AAKHC,SAAU,KAAKN,QAAL,GAAgBO,aALvB;AAMHC,WAAY,KAAKR,QAAL,GAAgBS,eANzB;AAOHC,UAAY,KAAKZ,KAAL,CAAWa,WAAZ,CAA6B,sBAASC,EAAT,GAAgB,KAAjB,CAA0BC,SAA1B,CAAsC,CAAlE,CAAuEA,SAP/E,CADJ,CAAP;;;AAWH,C;;AAEkB;AACf,GAAIC,cAAe;AACfC,MAAO,KAAKC,eAAL,GAAuBpB,KADf,CAAnB;;;AAIA,MAAO,2BAAa,KAAKE,KAAlB,CAAyBgB,YAAzB,CAAP;AACH,C;AACQ;;AAEL;AACI,iDAAM,MAAO,CAAEG,KAAM,CAAR,CAAb;AACI,+DAAW,IAAK,aAACC,CAAD,CAAO,CAAC,OAAKC,UAAL,CAAkBD,CAAlB,CAAqB,OAAKE,KAAL,CAAaF,CAAb,CAAgB,CAA7D,EAAmE,KAAKG,gBAAL,EAAnE,EAA4F,qBAAuB,KAAKvB,KAAL,CAAWwB,oBAAX,CAAkC,KAAKxB,KAAL,CAAWwB,oBAA7C,CAAoE,KAAKtB,QAAL,GAAgBuB,qBAAvM,CAA+N,sBAAsB,eAArP,GADJ,CADJ;;;AAKH,C,kEAlCgB5B,K","file":"index.js","sourcesContent":["/* @flow */\n'use strict';\nimport React from 'react';\nimport {View, TextInput,Platform} from 'react-native';\nimport NativeBaseComponent from '../../Base/NativeBaseComponent';\nimport computeProps from '../../../Utils/computeProps';\n\nexport default class Input extends NativeBaseComponent {\n\n    propTypes: {\n        style : React.PropTypes.object\n    }\n\n    getInitialStyle() {\n        return {\n            input: {\n                height: this.props.toolbar ? 30 : this.getTheme().inputHeightBase,\n                color: this.getTheme().inputColor,\n                paddingLeft: 5,\n                paddingRight: 5,\n                fontSize: this.getTheme().inputFontSize,\n                lineHeight: this.getTheme().inputLineHeight,\n                marginTop: (this.props.inlineLabel) ? ((Platform.OS === 'ios') ? undefined : 5) : undefined\n            }\n        }\n    }\n\n    prepareRootProps() {\n        var defaultProps = {\n            style: this.getInitialStyle().input\n        }\n\n        return computeProps(this.props, defaultProps);\n    }\n    render() {\n\n        return (\n            <View style={{ flex: 1}}>\n                <TextInput ref={(c) => {this._textInput = c; this._root = c;}} {...this.prepareRootProps()} placeholderTextColor={ this.props.placeholderTextColor ? this.props.placeholderTextColor : this.getTheme().inputColorPlaceholder } underlineColorAndroid='rgba(0,0,0,0)' />\n            </View>\n        );\n    }\n\n}\n"]}