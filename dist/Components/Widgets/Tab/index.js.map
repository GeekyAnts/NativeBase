{"version":3,"sources":["../../../../Components/Widgets/Tab/index.js"],"names":["get","height","width","Footer","state","length","undefined","activeIndex","tab","flexDirection","elevation","shadowColor","shadowOffset","shadowOpacity","backgroundColor","getTheme","tabDefaultBg","shadowRadius","position","button","flex","borderRadius","checkIconPresent","justifyContent","borderColor","topTabBarBorderColor","textStyle","color","topTabBarTextColor","lineHeight","OS","activeTextStyle","fontWeight","topTabBarActiveTextColor","defaultProps","style","getInitialStyle","props","childrenArray","Children","toArray","children","setState","getWidth","icon","forEach","child","findIndex","active","newChildren","map","i","push","cloneElement","borderBottomWidth","capitalize","transparent","tabButton","activeTabButton","vertical","key","_root","c","prepareRootProps","renderTab"],"mappings":"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","file":"index.js","sourcesContent":["/* @flow */\n'use strict';\n\nimport React from 'react';\nimport NativeBaseComponent from '../../Base/NativeBaseComponent';\nimport computeProps from '../../../Utils/computeProps';\nimport Button from './../Button';\nimport { Platform, Animated, Dimensions } from 'react-native';\nimport View from './../View';\nimport Icon from './../Icon';\nimport Badge from './../Badge';\nimport Text from './../Text';\nimport _ from 'lodash';\n\nconst { height, width } = Dimensions.get('window');\n\nexport default class Footer extends NativeBaseComponent {\n\n    propTypes: {\n        style : React.PropTypes.object\n    }\n\n    state = {\n      length: undefined,\n      activeIndex: undefined\n    }\n\n    getInitialStyle() {\n        return {\n            tab: {\n                flexDirection: 'row',\n                elevation: 2,\n                shadowColor: '#000',\n                shadowOffset: {width: 0, height: 2},\n                shadowOpacity: 0.1,\n                backgroundColor: this.getTheme().tabDefaultBg,\n                shadowRadius: 1.5,\n                position: 'relative'\n            },\n            button: {\n                flex: 1,\n                borderRadius: 0,\n                height: this.checkIconPresent() ? 63 : 45,\n                justifyContent: 'center',\n                shadowColor: 'transparent',\n                shadowOffset: undefined,\n                shadowOpacity: 0,\n                shadowRadius: 0,\n                borderColor: this.getTheme().topTabBarBorderColor\n            },\n            textStyle: {\n                color: this.getTheme().topTabBarTextColor,\n                lineHeight: (Platform.OS == 'ios') ? 17 : undefined\n            },\n            activeTextStyle: {\n                fontWeight: '600',\n                color: this.getTheme().topTabBarActiveTextColor,\n                lineHeight: (Platform.OS == 'ios') ? 16 : undefined\n            }\n        }\n    }\n\n    prepareRootProps() {\n\n        var defaultProps = {\n            style: this.getInitialStyle().tab\n        };\n\n        return computeProps(this.props, defaultProps);\n\n    }\n\n    componentDidMount() {\n          let childrenArray = React.Children.toArray(this.props.children);\n          let length = childrenArray.length;\n          this.setState({\n            length: length\n          });\n          this.getWidth();\n    }\n\n    checkIconPresent() {\n        let icon = false;\n        React.Children.forEach(this.props.children, function (child) {\n            if(typeof _.get(child.props, 'children', null) == 'object')\n                icon = true;\n        })\n        return icon;\n    }\n\n    getWidth() {\n      let childrenArray = React.Children.toArray(this.props.children);\n      let activeIndex = _.findIndex(childrenArray, (child) => child.props.active);\n      this.setState({\n          activeIndex : activeIndex\n      });\n\n\n    }\n\n    renderTab() {\n        let childrenArray = React.Children.toArray(this.props.children);\n        let length = childrenArray.length;\n        let newChildren = [];\n\n        {childrenArray.map((child, i) => {\n              newChildren.push(React.cloneElement(child, {\n                  style: [this.getInitialStyle().button, {borderBottomWidth: (child.props.active) ? 3 : 0}],\n                  capitalize: true,\n                  transparent:true,\n                  tabButton: true,\n                  activeTabButton: (child.props.active) ? true : false,\n                  vertical:true,\n                  textStyle: (child.props.active) ? this.getInitialStyle().activeTextStyle : this.getInitialStyle().textStyle,\n                  key: i}));\n            }\n        )}\n        return newChildren;\n    }\n\n    render() {\n        return(\n            <View ref={c => this._root = c} {...this.prepareRootProps()}>\n                {this.renderTab()}\n            </View>\n        );\n    }\n}\n"]}