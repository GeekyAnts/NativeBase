{"version":3,"sources":["../../../../Components/Widgets/Picker/index.ios.js"],"names":["PickerNB","props","state","modalVisible","currentLabel","getLabel","nextProps","nextLabel","setState","picker","pickerItem","itemTextStyle","color","itemTextColor","visible","defaultProps","style","getInitialStyle","itemStyle","item","find","children","child","value","selectedValue","get","childrenArray","Children","toArray","headerComponent","newChildren","forEach","push","cloneElement","onPress","_setModalVisible","iosIcon","fontSize","lineHeight","modifyHeader","additionalProps","inlineLabel","paddingHorizontal","justifyContent","alignSelf","_root","c","undefined","textStyle","width","height","renderIcon","modalStyle","renderHeader","paddingVertical","onValueChange","current","label","iconColor","Item","createClass","render"],"mappings":"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","file":"index.ios.js","sourcesContent":["/* @flow */\n'use strict';\n\nimport React from 'react';\nimport {Picker, Modal} from 'react-native';\nimport NativeBaseComponent from '../../Base/NativeBaseComponent';\nimport computeProps from '../../../Utils/computeProps';\nimport View from './../View';\nimport Text from './../Text';\nimport List from './../List';\nimport Icon from './../Icon';\nimport Container from './../Container';\nimport Content from './../Content';\nimport ListItem from './../ListItem';\nimport Button from './../Button';\nimport Header from './../Header';\nimport Title from './../Title';\nimport _ from 'lodash';\n\nexport default class PickerNB extends NativeBaseComponent {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n          modalVisible : false,\n          currentLabel: this.getLabel(props)\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n      const currentLabel = this.state.currentLabel;\n      const nextLabel = this.getLabel(nextProps);\n\n      if (currentLabel !== nextLabel) {\n        this.setState({\n          currentLabel: nextLabel\n        });\n      }\n    }\n\n    getInitialStyle() {\n        return {\n            picker: {\n                // alignItems: 'flex-end'\n            },\n            pickerItem: {\n\n            },\n            itemTextStyle: {\n                color: this.props.itemTextColor,\n            },\n        }\n    }\n    _setModalVisible(visible) {\n        this.setState({modalVisible: visible});\n    }\n\n    prepareRootProps() {\n        var defaultProps = {\n            style: this.getInitialStyle().picker,\n            itemStyle: this.getInitialStyle().pickerItem\n        };\n\n        return computeProps(this.props, defaultProps);\n    }\n\n    getLabel(props) {\n        const item = _.find(props.children, child => {\n            return child.props.value == props.selectedValue;\n        });\n\n        return _.get(item, 'props.label');\n    }\n\n    modifyHeader() {\n        let childrenArray = React.Children.toArray(this.props.headerComponent.props.children);\n        let newChildren = [];\n        childrenArray.forEach((child) => {\n            if (_.get(child, 'type', null)==Button) {\n                newChildren.push(React.cloneElement(child, {onPress: () => {this._setModalVisible(false)}}))\n            } else {\n                newChildren.push(child)\n            }\n        });\n        return <Header {...this.props.headerComponent.props} > {newChildren}</Header>\n    }\n\n    renderIcon() {\n        return React.cloneElement(this.props.iosIcon, {style: {fontSize: 22, lineHeight: 26, color: '#7a7a7a' }})\n    }\n\n    renderHeader() {\n        return (this.props.headerComponent) ? this.modifyHeader() : (<Header >\n            <Button transparent onPress={() => {this._setModalVisible(false)}}>Back</Button>\n            <Title>Select One</Title>\n        </Header>)\n    }\n\n    render() {\n        let additionalProps = {};\n        if(this.props.inlineLabel) {\n          additionalProps = {paddingHorizontal: 4, justifyContent: 'flex-start', alignSelf: 'stretch'};\n        }\n        return (\n        <View ref={c => this._root = c}>\n            <Button\n                iconRight={(this.props.iosIcon== undefined) ? false : true}\n                transparent\n                textStyle={this.props.textStyle}\n                style={[this.props.style,additionalProps]}\n                onPress={() => {this._setModalVisible(true)}}>\n                {this.state.currentLabel}\n                {(this.props.iosIcon == undefined) ? <View style={{ width: 0, height: 0 }} /> : this.renderIcon()}\n            </Button>\n            <Modal animationType='slide'\n                transparent={false}\n                visible={this.state.modalVisible}\n                onRequestClose={() => {this._setModalVisible(false)}}\n                >\n                <Container style={this.props.modalStyle}>\n                    {this.renderHeader()}\n                    <Content>\n                        <List dataArray={this.props.children}\n                            renderRow={(child) =>\n                                <ListItem style={{paddingVertical: 5}} iconRight button onPress={() => {this._setModalVisible(false);this.props.onValueChange(child.props.value); this.setState({current: child.props.label})}} >\n                                    <Text style={[this.getInitialStyle().itemTextStyle, child.props.textStyle]} >{child.props.label}</Text>\n                                    {(child.props.value===this.props.selectedValue) ?\n                                        (<Icon name='ios-checkmark-outline' style={{color: this.props.iconColor}} />)\n                                        :\n                                        (<Icon name='ios-checkmark-outline' style={{color: 'transparent'}} />)\n                                    }\n                                </ListItem>\n                            }>\n                        </List>\n                    </Content>\n                </Container>\n            </Modal>\n        </View>\n        );\n    }\n\n}\n\nPickerNB.Item = React.createClass({\n\n    render: function() {\n        return(\n          <Picker.Item {...this.props()}/>\n          );\n    }\n});\n"]}