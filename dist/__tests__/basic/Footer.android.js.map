{"version":3,"sources":["../../../__tests__/basic/Footer.android.js"],"names":["jest","mock","Platform","require","requireActual","OS","it","tree","renderer","create","toJSON","expect","toMatchSnapshot","backgroundColor"],"mappings":"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","file":"Footer.android.js","sourcesContent":["import \"react-native\";\nimport React from \"react\";\nimport renderer from \"react-test-renderer\";\nimport { Container } from \"./../../src/basic/Container\";\nimport { Header } from \"./../../src/basic/Header\";\nimport { Button } from \"./../../src/basic/Button\";\nimport { Icon } from \"./../../src/basic/Icon\";\nimport { Content } from \"./../../src/basic/Content\";\nimport { Text } from \"./../../src/basic/Text\";\nimport { Footer } from \"./../../src/basic/Footer\";\nimport { FooterTab } from \"./../../src/basic/FooterTab\";\nimport { Badge } from \"./../../src/basic/Badge\";\n\n// Note: test renderer must be required after react-native.\n\njest.mock(\"Platform\", () => {\n  const Platform = require.requireActual(\"Platform\");\n  Platform.OS = \"android\";\n  return Platform;\n});\n\nit(\"renders basic Footer\", () => {\n  const tree = renderer\n    .create(\n      <Container>\n        <Header />\n        <Content />\n        <Footer>\n          <FooterTab>\n            <Button active={true}>\n              <Text>Apps</Text>\n            </Button>\n            <Button active={false}>\n              <Text>Camera</Text>\n            </Button>\n            <Button active={false}>\n              <Text>Navigate</Text>\n            </Button>\n            <Button active={false}>\n              <Text>Contact</Text>\n            </Button>\n          </FooterTab>\n        </Footer>\n      </Container>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n\nit(\"renders Footer with Icons\", () => {\n  const tree = renderer\n    .create(\n      <Container>\n        <Header />\n        <Content />\n        <Footer>\n          <FooterTab>\n            <Button active={true}>\n              <Icon active={true} name=\"apps\" />\n            </Button>\n            <Button active={false}>\n              <Icon active={false} name=\"camera\" />\n            </Button>\n            <Button active={false}>\n              <Icon active={false} name=\"compass\" />\n            </Button>\n            <Button active={false}>\n              <Icon active={false} name=\"contact\" />\n            </Button>\n          </FooterTab>\n        </Footer>\n      </Container>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n\nit(\"renders Footer with Icon and Text\", () => {\n  const tree = renderer\n    .create(\n      <Container>\n        <Header />\n        <Content />\n        <Footer>\n          <FooterTab>\n            <Button active={true}>\n              <Icon active={true} name=\"apps\" />\n              <Text>Apps</Text>\n            </Button>\n            <Button active={false}>\n              <Icon active={false} name=\"camera\" />\n              <Text>Camera</Text>\n            </Button>\n            <Button active={false}>\n              <Icon active={false} name=\"compass\" />\n              <Text>Compass</Text>\n            </Button>\n            <Button active={false}>\n              <Icon active={false} name=\"contact\" />\n              <Text>Contact</Text>\n            </Button>\n          </FooterTab>\n        </Footer>\n      </Container>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n\nit(\"renders Footer with Badge\", () => {\n  const tree = renderer\n    .create(\n      <Container>\n        <Header />\n        <Content />\n        <Footer>\n          <FooterTab>\n            <Button active={true} vertical badge>\n              <Badge>\n                <Text>2</Text>\n              </Badge>\n              <Icon active={true} name=\"apps\" />\n              <Text>Apps</Text>\n            </Button>\n            <Button active={false}>\n              <Icon active={false} name=\"camera\" />\n              <Text>Camera</Text>\n            </Button>\n            <Button active={false} vertical badge>\n              <Badge style={{ backgroundColor: \"green\" }}>\n                <Text>51</Text>\n              </Badge>\n              <Icon active={false} name=\"compass\" />\n              <Text>Compass</Text>\n            </Button>\n            <Button active={false}>\n              <Icon active={false} name=\"contact\" />\n              <Text>Contact</Text>\n            </Button>\n          </FooterTab>\n        </Footer>\n      </Container>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n"]}