{"version":3,"sources":["../../../__tests__/basic/Radio.ios.js"],"names":["jest","mock","Platform","require","requireActual","OS","it","tree","renderer","create","toJSON","expect","toMatchSnapshot"],"mappings":"kDAAA;AACA,4B;AACA,sD;AACA;AACA;AACA;AACA;AACA;AACA,8C;;;;AAIAA,KAAKC,IAAL,CAAU,UAAV,CAAsB,UAAM;AAC1B,GAAMC,UAAWC,QAAQC,aAAR,CAAsB,UAAtB,CAAjB;AACAF,SAASG,EAAT,CAAc,KAAd;AACA,MAAOH,SAAP;AACD,CAJD;;AAMAI,GAAG,uBAAH,CAA4B,UAAM;AAChC,GAAMC,MAAOC;AACVC,MADU;AAET,8BAAC,gBAAD;AACE,8BAAC,kBAAD,EAAU,SAAU,IAApB;AACE,8BAAC,UAAD;AACE,8BAAC,UAAD,gEADF,CADF;;AAIE,8BAAC,YAAD;AACE,8BAAC,YAAD,EAAO,SAAU,IAAjB,iDADF,CAJF,CADF;;;AASE,8BAAC,kBAAD,EAAU,SAAU,KAApB;AACE,8BAAC,UAAD;AACE,8BAAC,UAAD,mEADF,CADF;;AAIE,8BAAC,YAAD;AACE,8BAAC,YAAD,EAAO,SAAU,KAAjB,iDADF,CAJF,CATF,CAFS;;;;;AAqBVC,MArBU,EAAb;AAsBAC,OAAOJ,IAAP,EAAaK,eAAb;AACD,CAxBD;;AA0BAN,GAAG,sBAAH,CAA2B,UAAM;AAC/B,GAAMC,MAAOC;AACVC,MADU;AAET,8BAAC,gBAAD;AACE,8BAAC,kBAAD,EAAU,SAAU,IAApB;AACE,8BAAC,UAAD;AACE,8BAAC,UAAD,gEADF,CADF;;AAIE,8BAAC,YAAD;AACE,8BAAC,YAAD;AACE,SAAU,IADZ;AAEE,MAAO,SAFT;AAGE,cAAe,SAHjB,iDADF,CAJF,CADF;;;;AAaE,8BAAC,kBAAD,EAAU,SAAU,KAApB;AACE,8BAAC,UAAD;AACE,8BAAC,UAAD,mEADF,CADF;;AAIE,8BAAC,YAAD;AACE,8BAAC,YAAD;AACE,SAAU,KADZ;AAEE,MAAO,SAFT;AAGE,cAAe,SAHjB,iDADF,CAJF,CAbF,CAFS;;;;;;AA6BVC,MA7BU,EAAb;AA8BAC,OAAOJ,IAAP,EAAaK,eAAb;AACD,CAhCD","file":"Radio.ios.js","sourcesContent":["import \"react-native\";\r\nimport React from \"react\";\r\nimport renderer from \"react-test-renderer\";\r\nimport { Content } from \"./../../src/basic/Content\";\r\nimport { ListItem } from \"./../../src/basic/ListItem\";\r\nimport { Left } from \"./../../src/basic/Left\";\r\nimport { Right } from \"./../../src/basic/Right\";\r\nimport { Text } from \"./../../src/basic/Text\";\r\nimport { Radio } from \"./../../src/basic/Radio\";\r\n\r\n// Note: test renderer must be required after react-native.\r\n\r\njest.mock(\"Platform\", () => {\r\n  const Platform = require.requireActual(\"Platform\");\r\n  Platform.OS = \"ios\";\r\n  return Platform;\r\n});\r\n\r\nit(\"renders default radio\", () => {\r\n  const tree = renderer\r\n    .create(\r\n      <Content>\r\n        <ListItem selected={true}>\r\n          <Left>\r\n            <Text>Lunch Break</Text>\r\n          </Left>\r\n          <Right>\r\n            <Radio selected={true} />\r\n          </Right>\r\n        </ListItem>\r\n        <ListItem selected={false}>\r\n          <Left>\r\n            <Text>Daily Stand Up</Text>\r\n          </Left>\r\n          <Right>\r\n            <Radio selected={false} />\r\n          </Right>\r\n        </ListItem>\r\n      </Content>\r\n    )\r\n    .toJSON();\r\n  expect(tree).toMatchSnapshot();\r\n});\r\n\r\nit(\"renders custom radio\", () => {\r\n  const tree = renderer\r\n    .create(\r\n      <Content>\r\n        <ListItem selected={true}>\r\n          <Left>\r\n            <Text>Lunch Break</Text>\r\n          </Left>\r\n          <Right>\r\n            <Radio\r\n              selected={true}\r\n              color={\"#f0ad4e\"}\r\n              selectedColor={\"#5cb85c\"}\r\n            />\r\n          </Right>\r\n        </ListItem>\r\n        <ListItem selected={false}>\r\n          <Left>\r\n            <Text>Daily Stand Up</Text>\r\n          </Left>\r\n          <Right>\r\n            <Radio\r\n              selected={false}\r\n              color={\"#f0ad4e\"}\r\n              selectedColor={\"#5cb85c\"}\r\n            />\r\n          </Right>\r\n        </ListItem>\r\n      </Content>\r\n    )\r\n    .toJSON();\r\n  expect(tree).toMatchSnapshot();\r\n});\r\n"]}