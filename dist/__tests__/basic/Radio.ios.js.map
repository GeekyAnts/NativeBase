{"version":3,"sources":["../../../__tests__/basic/Radio.ios.js"],"names":["jest","mock","Platform","require","requireActual","OS","it","tree","renderer","create","toJSON","expect","toMatchSnapshot"],"mappings":"gDAAA,wBACA,4B,2CACA,sD,mEACA,kDACA,oDACA,4CACA,8CACA,4CACA,8C,mFAIAA,KAAKC,IAAL,CAAU,UAAV,CAAsB,UAAM,CAC1B,GAAMC,UAAWC,QAAQC,aAAR,CAAsB,UAAtB,CAAjB,CACAF,SAASG,EAAT,CAAc,KAAd,CACA,MAAOH,SAAP,CACD,CAJD,EAMAI,GAAG,uBAAH,CAA4B,UAAM,CAChC,GAAMC,MAAOC,4BACVC,MADU,CAET,8BAAC,gBAAD,kDACE,8BAAC,kBAAD,EAAU,SAAU,IAApB,iDACE,8BAAC,UAAD,kDACE,8BAAC,UAAD,gEADF,CADF,CAIE,8BAAC,YAAD,kDACE,8BAAC,YAAD,EAAO,SAAU,IAAjB,iDADF,CAJF,CADF,CASE,8BAAC,kBAAD,EAAU,SAAU,KAApB,iDACE,8BAAC,UAAD,kDACE,8BAAC,UAAD,mEADF,CADF,CAIE,8BAAC,YAAD,kDACE,8BAAC,YAAD,EAAO,SAAU,KAAjB,iDADF,CAJF,CATF,CAFS,EAqBVC,MArBU,EAAb,CAsBAC,OAAOJ,IAAP,EAAaK,eAAb,GACD,CAxBD,EA0BAN,GAAG,sBAAH,CAA2B,UAAM,CAC/B,GAAMC,MAAOC,4BACVC,MADU,CAET,8BAAC,gBAAD,kDACE,8BAAC,kBAAD,EAAU,SAAU,IAApB,iDACE,8BAAC,UAAD,kDACE,8BAAC,UAAD,gEADF,CADF,CAIE,8BAAC,YAAD,kDACE,8BAAC,YAAD,EACE,SAAU,IADZ,CAEE,MAAO,SAFT,CAGE,cAAe,SAHjB,iDADF,CAJF,CADF,CAaE,8BAAC,kBAAD,EAAU,SAAU,KAApB,iDACE,8BAAC,UAAD,kDACE,8BAAC,UAAD,mEADF,CADF,CAIE,8BAAC,YAAD,kDACE,8BAAC,YAAD,EACE,SAAU,KADZ,CAEE,MAAO,SAFT,CAGE,cAAe,SAHjB,iDADF,CAJF,CAbF,CAFS,EA6BVC,MA7BU,EAAb,CA8BAC,OAAOJ,IAAP,EAAaK,eAAb,GACD,CAhCD","file":"Radio.ios.js","sourcesContent":["import \"react-native\";\nimport React from \"react\";\nimport renderer from \"react-test-renderer\";\nimport { Content } from \"./../../src/basic/Content\";\nimport { ListItem } from \"./../../src/basic/ListItem\";\nimport { Left } from \"./../../src/basic/Left\";\nimport { Right } from \"./../../src/basic/Right\";\nimport { Text } from \"./../../src/basic/Text\";\nimport { Radio } from \"./../../src/basic/Radio\";\n\n// Note: test renderer must be required after react-native.\n\njest.mock(\"Platform\", () => {\n  const Platform = require.requireActual(\"Platform\");\n  Platform.OS = \"ios\";\n  return Platform;\n});\n\nit(\"renders default radio\", () => {\n  const tree = renderer\n    .create(\n      <Content>\n        <ListItem selected={true}>\n          <Left>\n            <Text>Lunch Break</Text>\n          </Left>\n          <Right>\n            <Radio selected={true} />\n          </Right>\n        </ListItem>\n        <ListItem selected={false}>\n          <Left>\n            <Text>Daily Stand Up</Text>\n          </Left>\n          <Right>\n            <Radio selected={false} />\n          </Right>\n        </ListItem>\n      </Content>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n\nit(\"renders custom radio\", () => {\n  const tree = renderer\n    .create(\n      <Content>\n        <ListItem selected={true}>\n          <Left>\n            <Text>Lunch Break</Text>\n          </Left>\n          <Right>\n            <Radio\n              selected={true}\n              color={\"#f0ad4e\"}\n              selectedColor={\"#5cb85c\"}\n            />\n          </Right>\n        </ListItem>\n        <ListItem selected={false}>\n          <Left>\n            <Text>Daily Stand Up</Text>\n          </Left>\n          <Right>\n            <Radio\n              selected={false}\n              color={\"#f0ad4e\"}\n              selectedColor={\"#5cb85c\"}\n            />\n          </Right>\n        </ListItem>\n      </Content>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n"]}