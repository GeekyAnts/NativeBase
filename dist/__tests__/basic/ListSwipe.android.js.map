{"version":3,"sources":["../../../__tests__/basic/ListSwipe.android.js"],"names":["jest","mock","Platform","require","requireActual","OS","it","tree","renderer","create","alert","color","paddingLeft","toJSON","expect","toMatchSnapshot","backgroundColor"],"mappings":"wDAAA,yCACA,4B,2CACA,sD,mEACA,kDACA,oDACA,gDACA,4CACA,4C,mFAIAA,KAAKC,IAAL,CAAU,UAAV,CAAsB,UAAM,CAC1B,GAAMC,UAAWC,QAAQC,aAAR,CAAsB,UAAtB,CAAjB,CACAF,SAASG,EAAT,CAAc,SAAd,CACA,MAAOH,SAAP,CACD,CAJD,EAMAI,GAAG,iCAAH,CAAsC,UAAM,CAC1C,GAAMC,MAAOC,4BACVC,MADU,CAET,8BAAC,gBAAD,EAAS,cAAe,KAAxB,iDACE,8BAAC,kBAAD,EACE,cAAe,EADjB,CAEE,eAAgB,CAAC,EAFnB,CAGE,KACE,8BAAC,cAAD,EAAQ,YAAR,CAAgB,QAAS,yBAAMC,OAAM,KAAN,CAAN,EAAzB,iDACE,8BAAC,UAAD,EAAM,WAAN,CAAa,KAAK,KAAlB,CAAwB,MAAO,CAAEC,MAAO,MAAT,CAA/B,iDADF,CAJJ,CAQE,MACE,8BAAC,cAAD,EAAQ,WAAR,CAAe,QAAS,yBAAMD,OAAM,OAAN,CAAN,EAAxB,iDACE,8BAAC,UAAD,EAAM,WAAN,CAAa,KAAK,OAAlB,iDADF,CATJ,CAaE,KACE,8BAAC,iBAAD,EAAM,MAAO,CAAEE,YAAa,EAAf,CAAb,iDACE,8BAAC,UAAD,+EADF,CAdJ,iDADF,CAFS,EAwBVC,MAxBU,EAAb,CAyBAC,OAAOP,IAAP,EAAaQ,eAAb,GACD,CA3BD,EA6BAT,GAAG,8CAAH,CAAmD,UAAM,CACvD,GAAMC,MAAOC,4BACVC,MADU,CAET,8BAAC,gBAAD,EAAS,cAAe,KAAxB,iDACE,8BAAC,kBAAD,EACE,MAAO,CAAEO,gBAAiB,SAAnB,CADT,CAEE,cAAe,EAFjB,CAGE,eAAgB,CAAC,EAHnB,CAIE,KACE,8BAAC,cAAD,EAAQ,YAAR,CAAgB,QAAS,yBAAMN,OAAM,KAAN,CAAN,EAAzB,iDACE,8BAAC,UAAD,EAAM,WAAN,CAAa,KAAK,KAAlB,CAAwB,MAAO,CAAEC,MAAO,MAAT,CAA/B,iDADF,CALJ,CASE,MACE,8BAAC,cAAD,EAAQ,WAAR,CAAe,QAAS,yBAAMD,OAAM,OAAN,CAAN,EAAxB,iDACE,8BAAC,UAAD,EAAM,WAAN,CAAa,KAAK,OAAlB,iDADF,CAVJ,CAcE,KACE,8BAAC,iBAAD,EAAM,MAAO,CAAEE,YAAa,EAAf,CAAb,iDACE,8BAAC,UAAD,EAAM,MAAO,CAAED,MAAO,MAAT,CAAb,8EADF,CAfJ,iDADF,CAFS,EAyBVE,MAzBU,EAAb,CA0BAC,OAAOP,IAAP,EAAaQ,eAAb,GACD,CA5BD","file":"ListSwipe.android.js","sourcesContent":["import { View } from \"react-native\";\nimport React from \"react\";\nimport renderer from \"react-test-renderer\";\nimport { Content } from \"./../../src/basic/Content\";\nimport { SwipeRow } from \"./../../src/basic/SwipeRow\";\nimport { Button } from \"./../../src/basic/Button\";\nimport { Icon } from \"./../../src/basic/Icon\";\nimport { Text } from \"./../../src/basic/Text\";\n\n// Note: test renderer must be required after react-native.\n\njest.mock(\"Platform\", () => {\n  const Platform = require.requireActual(\"Platform\");\n  Platform.OS = \"android\";\n  return Platform;\n});\n\nit(\"renders regular Single SwipeRow\", () => {\n  const tree = renderer\n    .create(\n      <Content scrollEnabled={false}>\n        <SwipeRow\n          leftOpenValue={75}\n          rightOpenValue={-75}\n          left={\n            <Button success onPress={() => alert(\"Add\")}>\n              <Icon active name=\"add\" style={{ color: \"#FFF\" }} />\n            </Button>\n          }\n          right={\n            <Button danger onPress={() => alert(\"Trash\")}>\n              <Icon active name=\"trash\" />\n            </Button>\n          }\n          body={\n            <View style={{ paddingLeft: 20 }}>\n              <Text>Swipe me to left and right</Text>\n            </View>\n          }\n        />\n      </Content>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n\nit(\"renders regular Single SwipeRow Custom Style\", () => {\n  const tree = renderer\n    .create(\n      <Content scrollEnabled={false}>\n        <SwipeRow\n          style={{ backgroundColor: \"#9370DB\" }}\n          leftOpenValue={75}\n          rightOpenValue={-75}\n          left={\n            <Button success onPress={() => alert(\"Add\")}>\n              <Icon active name=\"add\" style={{ color: \"#FFF\" }} />\n            </Button>\n          }\n          right={\n            <Button danger onPress={() => alert(\"Trash\")}>\n              <Icon active name=\"trash\" />\n            </Button>\n          }\n          body={\n            <View style={{ paddingLeft: 20 }}>\n              <Text style={{ color: \"#FFF\" }}>Swipe me to left and right</Text>\n            </View>\n          }\n        />\n      </Content>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n"]}