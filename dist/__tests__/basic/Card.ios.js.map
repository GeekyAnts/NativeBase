{"version":3,"sources":["../../../__tests__/basic/Card.ios.js"],"names":["deviceWidth","Dimensions","get","width","logo","require","cardImage","jest","mock","Platform","requireActual","OS","it","tree","renderer","create","toJSON","expect","toMatchSnapshot","alert","color","resizeMode","height","flex","paddingVertical","alignSelf","marginVertical"],"mappings":"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","file":"Card.ios.js","sourcesContent":["import { Image, Dimensions } from \"react-native\";\nimport React from \"react\";\nimport renderer from \"react-test-renderer\";\nimport { Container } from \"./../../src/basic/Container\";\nimport { Header } from \"./../../src/basic/Header\";\nimport { Content } from \"./../../src/basic/Content\";\nimport { Card } from \"./../../src/basic/Card\";\nimport { CardItem } from \"./../../src/basic/CardItem\";\nimport { Left } from \"./../../src/basic/Left\";\nimport { Body } from \"./../../src/basic/Body\";\nimport { Right } from \"./../../src/basic/Right\";\nimport { Button } from \"./../../src/basic/Button\";\nimport { Text } from \"./../../src/basic/Text\";\nimport { Icon } from \"./../../src/basic/Icon\";\nimport { Thumbnail } from \"./../../src/basic/Thumbnail\";\n\nconst deviceWidth = Dimensions.get(\"window\").width;\nconst logo = require(\"../assets/logo.png\");\nconst cardImage = require(\"../assets/drawer-cover.png\");\n\n// Note: test renderer must be required after react-native.\n\njest.mock(\"Platform\", () => {\n  const Platform = require.requireActual(\"Platform\");\n  Platform.OS = \"ios\";\n  return Platform;\n});\n\nit(\"renders basic Card\", () => {\n  const tree = renderer\n    .create(\n      <Container>\n        <Header />\n        <Content padder>\n          <Card>\n            <CardItem>\n              <Body>\n                <Text>This is just a basic card with some text to boot.</Text>\n                <Text>Like it? Keep Scrolling...</Text>\n              </Body>\n            </CardItem>\n          </Card>\n        </Content>\n      </Container>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n\nit(\"renders Card Header and Footer\", () => {\n  const tree = renderer\n    .create(\n      <Container>\n        <Header />\n        <Content padder>\n          <Card>\n            <CardItem header>\n              <Text>NativeBase</Text>\n            </CardItem>\n            <CardItem>\n              <Body>\n                <Text>\n                  NativeBase is a free and open source framework that enable\n                  developers to build high-quality mobile apps using React\n                  Native iOS and Android apps with a fusion of ES6.\n                </Text>\n              </Body>\n            </CardItem>\n            <CardItem>\n              <Body>\n                <Text>\n                  NativeBase builds a layer on top of React Native that provides\n                  you with basic set of components for mobile application\n                  development.\n                </Text>\n              </Body>\n            </CardItem>\n            <CardItem>\n              <Body>\n                <Text>\n                  Get on the mobile fast track with NativeBase, the\n                  fastest-growing platform and tool set for iOS and Android\n                  development.\n                </Text>\n              </Body>\n            </CardItem>\n            <CardItem footer>\n              <Text>GeekyAnts</Text>\n            </CardItem>\n          </Card>\n        </Content>\n      </Container>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n\nit(\"renders bordered CardItem\", () => {\n  const tree = renderer\n    .create(\n      <Container>\n        <Header />\n        <Content padder>\n          <Card>\n            <CardItem header bordered>\n              <Text>NativeBase</Text>\n            </CardItem>\n            <CardItem bordered>\n              <Body>\n                <Text>\n                  NativeBase is a free and open source framework that enable\n                  developers to build high-quality mobile apps using React\n                  Native iOS and Android apps with a fusion of ES6.\n                </Text>\n              </Body>\n            </CardItem>\n            <CardItem bordered>\n              <Body>\n                <Text>\n                  NativeBase builds a layer on top of React Native that provides\n                  you with basic set of components for mobile application\n                  development.\n                </Text>\n              </Body>\n            </CardItem>\n            <CardItem bordered>\n              <Body>\n                <Text>\n                  Get on the mobile fast track with NativeBase, the\n                  fastest-growing platform and tool set for iOS and Android\n                  development.\n                </Text>\n              </Body>\n            </CardItem>\n            <CardItem footer bordered>\n              <Text>GeekyAnts</Text>\n            </CardItem>\n          </Card>\n        </Content>\n      </Container>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n\nit(\"renders transparent Card\", () => {\n  const tree = renderer\n    .create(\n      <Container>\n        <Header />\n        <Content padder>\n          <Card transparent>\n            <CardItem>\n              <Body>\n                <Text>\n                  This is just a transparent card with some text to boot.\n                </Text>\n              </Body>\n            </CardItem>\n          </Card>\n        </Content>\n      </Container>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n\nit(\"renders button CardItem\", () => {\n  const tree = renderer\n    .create(\n      <Container>\n        <Header />\n        <Content padder>\n          <Card>\n            <CardItem\n              header\n              button\n              onPress={() => alert(\"This is Card Header\")}\n            >\n              <Text>NativeBase</Text>\n            </CardItem>\n            <CardItem button onPress={() => alert(\"This is Card Body\")}>\n              <Body>\n                <Text>Click on any carditem</Text>\n              </Body>\n            </CardItem>\n            <CardItem\n              footer\n              button\n              onPress={() => alert(\"This is Card Footer\")}\n            >\n              <Text>GeekyAnts</Text>\n            </CardItem>\n          </Card>\n        </Content>\n      </Container>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n\nit(\"renders Card List\", () => {\n  const tree = renderer\n    .create(\n      <Container>\n        <Header />\n        <Content padder>\n          <Card>\n            <CardItem header bordered>\n              <Text>Social Applications</Text>\n            </CardItem>\n            <CardItem>\n              <Left>\n                <Icon\n                  active\n                  name=\"logo-googleplus\"\n                  style={{ color: \"#DD5044\" }}\n                />\n                <Text>Google Plus</Text>\n              </Left>\n              <Right>\n                <Icon name=\"arrow-forward\" />\n              </Right>\n            </CardItem>\n            <CardItem>\n              <Left>\n                <Icon\n                  active\n                  name=\"logo-facebook\"\n                  style={{ color: \"#3B579D\" }}\n                />\n                <Text>facebook</Text>\n              </Left>\n              <Right>\n                <Icon name=\"arrow-forward\" />\n              </Right>\n            </CardItem>\n            <CardItem>\n              <Left>\n                <Icon active name=\"logo-twitter\" style={{ color: \"#55ACEE\" }} />\n                <Text>Twitter</Text>\n              </Left>\n              <Right>\n                <Icon name=\"arrow-forward\" />\n              </Right>\n            </CardItem>\n            <CardItem>\n              <Left>\n                <Icon active name=\"logo-reddit\" style={{ color: \"#FF4500\" }} />\n                <Text>Reddit</Text>\n              </Left>\n              <Right>\n                <Icon name=\"arrow-forward\" />\n              </Right>\n            </CardItem>\n            <CardItem>\n              <Left>\n                <Icon\n                  active\n                  name=\"logo-linkedin\"\n                  style={{ color: \"#007BB6\" }}\n                />\n                <Text>LinkedIn</Text>\n              </Left>\n              <Right>\n                <Icon name=\"arrow-forward\" />\n              </Right>\n            </CardItem>\n            <CardItem>\n              <Left>\n                <Icon active name=\"logo-youtube\" style={{ color: \"#D62727\" }} />\n                <Text>YouTube</Text>\n              </Left>\n              <Right>\n                <Icon name=\"arrow-forward\" />\n              </Right>\n            </CardItem>\n          </Card>\n        </Content>\n      </Container>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n\nit(\"renders Card Image\", () => {\n  const tree = renderer\n    .create(\n      <Container>\n        <Header />\n        <Content padder>\n          <Card>\n            <CardItem>\n              <Left>\n                <Thumbnail source={logo} />\n                <Body>\n                  <Text>NativeBase</Text>\n                  <Text note>GeekyAnts</Text>\n                </Body>\n              </Left>\n            </CardItem>\n\n            <CardItem cardBody>\n              <Image\n                style={{\n                  resizeMode: \"cover\",\n                  width: null,\n                  height: 200,\n                  flex: 1\n                }}\n                source={cardImage}\n              />\n            </CardItem>\n\n            <CardItem style={{ paddingVertical: 0 }}>\n              <Left>\n                <Button transparent>\n                  <Icon active name=\"thumbs-up\" />\n                  <Text>4923 Likes</Text>\n                </Button>\n              </Left>\n              <Body>\n                <Button transparent>\n                  <Icon active name=\"chatbubbles\" />\n                  <Text>89 Comments</Text>\n                </Button>\n              </Body>\n              <Right>\n                <Text>11h ago</Text>\n              </Right>\n            </CardItem>\n          </Card>\n        </Content>\n      </Container>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n\nit(\"renders Card Showcase\", () => {\n  const tree = renderer\n    .create(\n      <Container>\n        <Header />\n        <Content padder>\n          <Card>\n            <CardItem bordered>\n              <Left>\n                <Thumbnail source={logo} />\n                <Body>\n                  <Text>NativeBase</Text>\n                  <Text note>April 15, 2016</Text>\n                </Body>\n              </Left>\n            </CardItem>\n\n            <CardItem>\n              <Body>\n                <Image\n                  style={{\n                    alignSelf: \"center\",\n                    height: 150,\n                    resizeMode: \"cover\",\n                    width: deviceWidth / 1.18,\n                    marginVertical: 5\n                  }}\n                  source={cardImage}\n                />\n                <Text>\n                  NativeBase is a free and source framework that enable\n                  developers to build high-quality mobile apps using React\n                  Native iOS and Android apps with a fusion of ES6. NativeBase\n                  builds a layer on top of React Native that provides you with\n                  basic set of components for mobile application development.\n                </Text>\n              </Body>\n            </CardItem>\n            <CardItem style={{ paddingVertical: 0 }}>\n              <Left>\n                <Button transparent>\n                  <Icon name=\"logo-github\" />\n                  <Text>4,923 stars</Text>\n                </Button>\n              </Left>\n            </CardItem>\n          </Card>\n        </Content>\n      </Container>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n"]}