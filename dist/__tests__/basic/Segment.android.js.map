{"version":3,"sources":["../../../__tests__/basic/Segment.android.js"],"names":["jest","mock","Platform","require","requireActual","OS","it","tree","renderer","create","toJSON","expect","toMatchSnapshot"],"mappings":"sDAAA,wBACA,4B,2CACA,sD,mEACA,sDACA,gDACA,4CACA,gDACA,4CACA,4CACA,8CACA,4CACA,kD,mFAIAA,KAAKC,IAAL,CAAU,UAAV,CAAsB,UAAM,CAC1B,GAAMC,UAAWC,QAAQC,aAAR,CAAsB,UAAtB,CAAjB,CACAF,SAASG,EAAT,CAAc,SAAd,CACA,MAAOH,SAAP,CACD,CAJD,EAMAI,GAAG,gCAAH,CAAqC,UAAM,CACzC,GAAMC,MAAOC,4BACVC,MADU,CAET,8BAAC,oBAAD,kDACE,8BAAC,cAAD,EAAQ,eAAR,iDACE,8BAAC,UAAD,kDACE,8BAAC,cAAD,EAAQ,gBAAR,iDACE,8BAAC,UAAD,EAAM,KAAK,YAAX,iDADF,CADF,CADF,CAME,8BAAC,UAAD,kDACE,8BAAC,gBAAD,kDACE,8BAAC,cAAD,EAAQ,OAAQ,IAAhB,CAAsB,UAAtB,iDACE,8BAAC,UAAD,4DADF,CADF,CAIE,8BAAC,cAAD,EAAQ,SAAR,CAAa,OAAQ,KAArB,iDACE,8BAAC,UAAD,yDADF,CAJF,CADF,CANF,CAgBE,8BAAC,YAAD,kDACE,8BAAC,cAAD,EAAQ,gBAAR,iDACE,8BAAC,UAAD,EAAM,KAAK,QAAX,iDADF,CADF,CAhBF,CADF,CAFS,EA2BVC,MA3BU,EAAb,CA4BAC,OAAOJ,IAAP,EAAaK,eAAb,GACD,CA9BD,EAgCAN,GAAG,iCAAH,CAAsC,UAAM,CAC1C,GAAMC,MAAOC,4BACVC,MADU,CAET,8BAAC,oBAAD,kDACE,8BAAC,cAAD,EAAQ,eAAR,iDADF,CAEE,8BAAC,gBAAD,kDACE,8BAAC,cAAD,EAAQ,UAAR,CAAc,OAAQ,IAAtB,iDACE,8BAAC,UAAD,4DADF,CADF,CAIE,8BAAC,cAAD,EAAQ,OAAQ,KAAhB,iDACE,8BAAC,UAAD,4DADF,CAJF,CAOE,8BAAC,cAAD,EAAQ,SAAR,CAAa,OAAQ,KAArB,iDACE,8BAAC,UAAD,yDADF,CAPF,CAFF,CAFS,EAiBVC,MAjBU,EAAb,CAkBAC,OAAOJ,IAAP,EAAaK,eAAb,GACD,CApBD","file":"Segment.android.js","sourcesContent":["import \"react-native\";\nimport React from \"react\";\nimport renderer from \"react-test-renderer\";\nimport { Container } from \"./../../src/basic/Container\";\nimport { Header } from \"./../../src/basic/Header\";\nimport { Left } from \"./../../src/basic/Left\";\nimport { Button } from \"./../../src/basic/Button\";\nimport { Icon } from \"./../../src/basic/Icon\";\nimport { Body } from \"./../../src/basic/Body\";\nimport { Right } from \"./../../src/basic/Right\";\nimport { Text } from \"./../../src/basic/Text\";\nimport { Segment } from \"./../../src/basic/Segment\";\n\n// Note: test renderer must be required after react-native.\n\njest.mock(\"Platform\", () => {\n  const Platform = require.requireActual(\"Platform\");\n  Platform.OS = \"android\";\n  return Platform;\n});\n\nit(\"renders Segments inside Header\", () => {\n  const tree = renderer\n    .create(\n      <Container>\n        <Header hasSegment>\n          <Left>\n            <Button transparent>\n              <Icon name=\"arrow-back\" />\n            </Button>\n          </Left>\n          <Body>\n            <Segment>\n              <Button active={true} first>\n                <Text>Puppies</Text>\n              </Button>\n              <Button last active={false}>\n                <Text>Cubs</Text>\n              </Button>\n            </Segment>\n          </Body>\n          <Right>\n            <Button transparent>\n              <Icon name=\"search\" />\n            </Button>\n          </Right>\n        </Header>\n      </Container>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n\nit(\"renders Segments outside Header\", () => {\n  const tree = renderer\n    .create(\n      <Container>\n        <Header hasSegment />\n        <Segment>\n          <Button first active={true}>\n            <Text>Puppies</Text>\n          </Button>\n          <Button active={false}>\n            <Text>Kittens</Text>\n          </Button>\n          <Button last active={false}>\n            <Text>Cubs</Text>\n          </Button>\n        </Segment>\n      </Container>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n"]}