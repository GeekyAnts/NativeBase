{"version":3,"sources":["../../../__tests__/basic/Anatomy.android.js"],"names":["jest","mock","Platform","require","requireActual","OS","it","tree","renderer","create","toJSON","expect","toMatchSnapshot"],"mappings":"sDAAA,wBACA,4B,2CACA,sD,mEACA,sDACA,gDACA,4CACA,gDACA,4CACA,4CACA,8CACA,8CACA,kDACA,4CACA,gDACA,sD,mFAIAA,KAAKC,IAAL,CAAU,UAAV,CAAsB,UAAM,CAC1B,GAAMC,UAAWC,QAAQC,aAAR,CAAsB,UAAtB,CAAjB,CACAF,SAASG,EAAT,CAAc,SAAd,CACA,MAAOH,SAAP,CACD,CAJD,EAMAI,GAAG,iBAAH,CAAsB,UAAM,CAC1B,GAAMC,MAAOC,4BACVC,MADU,CAET,8BAAC,oBAAD,kDACE,8BAAC,cAAD,kDACE,8BAAC,UAAD,kDACE,8BAAC,cAAD,EAAQ,gBAAR,iDACE,8BAAC,UAAD,EAAM,KAAK,UAAX,iDADF,CADF,CADF,CAME,8BAAC,UAAD,kDACE,8BAAC,YAAD,2DADF,CANF,CASE,8BAAC,YAAD,kDATF,CADF,CAaE,8BAAC,gBAAD,EAAS,WAAT,iDACE,8BAAC,UAAD,sEADF,CAbF,CAiBE,8BAAC,cAAD,kDACE,8BAAC,oBAAD,kDACE,8BAAC,cAAD,EAAQ,WAAR,CAAe,SAAf,iDACE,8BAAC,UAAD,2DADF,CADF,CADF,CAjBF,CAFS,EA4BVC,MA5BU,EAAb,CA6BAC,OAAOJ,IAAP,EAAaK,eAAb,GACD,CA/BD","file":"Anatomy.android.js","sourcesContent":["import \"react-native\";\nimport React from \"react\";\nimport renderer from \"react-test-renderer\";\nimport { Container } from \"./../../src/basic/Container\";\nimport { Header } from \"./../../src/basic/Header\";\nimport { Left } from \"./../../src/basic/Left\";\nimport { Button } from \"./../../src/basic/Button\";\nimport { Icon } from \"./../../src/basic/Icon\";\nimport { Body } from \"./../../src/basic/Body\";\nimport { Title } from \"./../../src/basic/Title\";\nimport { Right } from \"./../../src/basic/Right\";\nimport { Content } from \"./../../src/basic/Content\";\nimport { Text } from \"./../../src/basic/Text\";\nimport { Footer } from \"./../../src/basic/Footer\";\nimport { FooterTab } from \"./../../src/basic/FooterTab\";\n\n// Note: test renderer must be required after react-native.\n\njest.mock(\"Platform\", () => {\n  const Platform = require.requireActual(\"Platform\");\n  Platform.OS = \"android\";\n  return Platform;\n});\n\nit(\"renders anatomy\", () => {\n  const tree = renderer\n    .create(\n      <Container>\n        <Header>\n          <Left>\n            <Button transparent>\n              <Icon name=\"ios-menu\" />\n            </Button>\n          </Left>\n          <Body>\n            <Title>Header</Title>\n          </Body>\n          <Right />\n        </Header>\n\n        <Content padder>\n          <Text>Content goes here</Text>\n        </Content>\n\n        <Footer>\n          <FooterTab>\n            <Button active full>\n              <Text>Footer</Text>\n            </Button>\n          </FooterTab>\n        </Footer>\n      </Container>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n"]}