// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Actionsheet Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Actionsheet
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Actionsheet Custom Backdrop 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#0891b2",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 10,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 10,
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
        test={true}
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#fafafa",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Actionsheet
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Actionsheet DisableOverlay 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Actionsheet
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Actionsheet Icon 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Actionsheet
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Actionsheet Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Actionsheet
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Alert Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        space={3}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#bae6fd",
            "borderRadius": 4,
            "justifyContent": "flex-start",
            "maxWidth": 400,
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "flexShrink": 1,
              "width": "100%",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "flexShrink": 1,
                "justifyContent": "space-between",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "flexShrink": 1,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={16}
                  bbWidth={16}
                  color={4278413729}
                  dataSet={Object {}}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#0369a1",
                        "height": 16,
                        "width": 16,
                      },
                      Object {
                        "flex": 0,
                        "height": 16,
                        "width": 16,
                      },
                    ]
                  }
                  tintColor={4278413729}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M12 0C9.62663 0 7.30655 0.703788 5.33316 2.02236C3.35977 3.34094 1.8217 5.21509 0.913451 7.4078C0.00519948 9.60051 -0.232441 12.0133 0.230582 14.3411C0.693605 16.6689 1.83649 18.807 3.51472 20.4853C5.19295 22.1635 7.33115 23.3064 9.65892 23.7694C11.9867 24.2324 14.3995 23.9948 16.5922 23.0865C18.7849 22.1783 20.6591 20.6402 21.9776 18.6668C23.2962 16.6935 24 14.3734 24 12C23.9966 8.81846 22.7312 5.76821 20.4815 3.51852C18.2318 1.26883 15.1815 0.00344108 12 0ZM12.25 5C12.5467 5 12.8367 5.08797 13.0834 5.25279C13.33 5.41762 13.5223 5.65189 13.6358 5.92597C13.7494 6.20006 13.7791 6.50166 13.7212 6.79263C13.6633 7.08361 13.5204 7.35088 13.3107 7.56066C13.1009 7.77044 12.8336 7.9133 12.5426 7.97118C12.2517 8.02905 11.9501 7.99935 11.676 7.88582C11.4019 7.77229 11.1676 7.58003 11.0028 7.33335C10.838 7.08668 10.75 6.79667 10.75 6.5C10.75 6.10217 10.908 5.72064 11.1893 5.43934C11.4706 5.15803 11.8522 5 12.25 5ZM14.5 18.5H10.5C10.2348 18.5 9.98043 18.3946 9.7929 18.2071C9.60536 18.0196 9.5 17.7652 9.5 17.5C9.5 17.2348 9.60536 16.9804 9.7929 16.7929C9.98043 16.6054 10.2348 16.5 10.5 16.5H11.25C11.3163 16.5 11.3799 16.4737 11.4268 16.4268C11.4737 16.3799 11.5 16.3163 11.5 16.25V11.75C11.5 11.6837 11.4737 11.6201 11.4268 11.5732C11.3799 11.5263 11.3163 11.5 11.25 11.5H10.5C10.2348 11.5 9.98043 11.3946 9.7929 11.2071C9.60536 11.0196 9.5 10.7652 9.5 10.5C9.5 10.2348 9.60536 9.98043 9.7929 9.79289C9.98043 9.60536 10.2348 9.5 10.5 9.5H11.5C12.0304 9.5 12.5391 9.71071 12.9142 10.0858C13.2893 10.4609 13.5 10.9696 13.5 11.5V16.25C13.5 16.3163 13.5263 16.3799 13.5732 16.4268C13.6201 16.4737 13.6837 16.5 13.75 16.5H14.5C14.7652 16.5 15.0196 16.6054 15.2071 16.7929C15.3946 16.9804 15.5 17.2348 15.5 17.5C15.5 17.7652 15.3946 18.0196 15.2071 18.2071C15.0196 18.3946 14.7652 18.5 14.5 18.5Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 20,
                    "textDecorationLine": undefined,
                  }
                }
              >
                We are going live in July!
              </Text>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 10,
                  "paddingRight": 10,
                  "paddingTop": 10,
                }
              }
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={20}
                bbWidth={20}
                color={4283127139}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#4b5563",
                      "height": 20,
                      "width": 20,
                    },
                    Object {
                      "flex": 0,
                      "height": 20,
                      "width": 20,
                    },
                  ]
                }
                tintColor={4283127139}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M12 9.77778L4.22222 2L2 4.22222L9.77778 12L2 19.7778L4.22222 22L12 14.2222L19.7778 22L22 19.7778L14.2222 12L22 4.22222L19.7778 2L12 9.77778Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 4,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "paddingLeft": 24,
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#4b5563",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              We are happy to announce that we are going live on July 28th. Get ready!
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Alert ColorScheme 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "marginLeft": 12,
          "marginRight": 12,
          "width": "100%",
        }
      }
    >
      <View
        dataSet={Object {}}
        space={3}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#fecaca",
            "borderRadius": 4,
            "justifyContent": "flex-start",
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "100%",
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "flexShrink": 1,
              "width": "100%",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "flexShrink": 1,
                "justifyContent": "space-between",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "flexShrink": 1,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={16}
                  bbWidth={16}
                  color={4290321436}
                  dataSet={Object {}}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#b91c1c",
                        "height": 16,
                        "width": 16,
                      },
                      Object {
                        "flex": 0,
                        "height": 16,
                        "width": 16,
                      },
                    ]
                  }
                  tintColor={4290321436}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M12 0C9.62663 0 7.30655 0.703788 5.33316 2.02236C3.35977 3.34094 1.8217 5.21509 0.913451 7.4078C0.00519948 9.60051 -0.232441 12.0133 0.230582 14.3411C0.693605 16.6689 1.83649 18.807 3.51472 20.4853C5.19295 22.1635 7.33115 23.3064 9.65892 23.7694C11.9867 24.2324 14.3995 23.9948 16.5922 23.0865C18.7849 22.1783 20.6591 20.6402 21.9776 18.6668C23.2962 16.6935 24 14.3734 24 12C23.9966 8.81846 22.7312 5.76821 20.4815 3.51852C18.2318 1.26883 15.1815 0.00344108 12 0ZM12.25 5C12.5467 5 12.8367 5.08797 13.0834 5.25279C13.33 5.41762 13.5223 5.65189 13.6358 5.92597C13.7494 6.20006 13.7791 6.50166 13.7212 6.79263C13.6633 7.08361 13.5204 7.35088 13.3107 7.56066C13.1009 7.77044 12.8336 7.9133 12.5426 7.97118C12.2517 8.02905 11.9501 7.99935 11.676 7.88582C11.4019 7.77229 11.1676 7.58003 11.0028 7.33335C10.838 7.08668 10.75 6.79667 10.75 6.5C10.75 6.10217 10.908 5.72064 11.1893 5.43934C11.4706 5.15803 11.8522 5 12.25 5ZM14.5 18.5H10.5C10.2348 18.5 9.98043 18.3946 9.7929 18.2071C9.60536 18.0196 9.5 17.7652 9.5 17.5C9.5 17.2348 9.60536 16.9804 9.7929 16.7929C9.98043 16.6054 10.2348 16.5 10.5 16.5H11.25C11.3163 16.5 11.3799 16.4737 11.4268 16.4268C11.4737 16.3799 11.5 16.3163 11.5 16.25V11.75C11.5 11.6837 11.4737 11.6201 11.4268 11.5732C11.3799 11.5263 11.3163 11.5 11.25 11.5H10.5C10.2348 11.5 9.98043 11.3946 9.7929 11.2071C9.60536 11.0196 9.5 10.7652 9.5 10.5C9.5 10.2348 9.60536 9.98043 9.7929 9.79289C9.98043 9.60536 10.2348 9.5 10.5 9.5H11.5C12.0304 9.5 12.5391 9.71071 12.9142 10.0858C13.2893 10.4609 13.5 10.9696 13.5 11.5V16.25C13.5 16.3163 13.5263 16.3799 13.5732 16.4268C13.6201 16.4737 13.6837 16.5 13.75 16.5H14.5C14.7652 16.5 15.0196 16.6054 15.2071 16.7929C15.3946 16.9804 15.5 17.2348 15.5 17.5C15.5 17.7652 15.3946 18.0196 15.2071 18.2071C15.0196 18.3946 14.7652 18.5 14.5 18.5Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Please try again later!
              </Text>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 10,
                  "paddingRight": 10,
                  "paddingTop": 10,
                }
              }
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={20}
                bbWidth={20}
                color={4283127139}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#4b5563",
                      "height": 20,
                      "width": 20,
                    },
                    Object {
                      "flex": 0,
                      "height": 20,
                      "width": 20,
                    },
                  ]
                }
                tintColor={4283127139}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M12 9.77778L4.22222 2L2 4.22222L9.77778 12L2 19.7778L4.22222 22L12 14.2222L19.7778 22L22 19.7778L14.2222 12L22 4.22222L19.7778 2L12 9.77778Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 8,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "paddingLeft": 24,
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#4b5563",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Your coupon could not be processed at this time.
            </Text>
          </View>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        dataSet={Object {}}
        space={3}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#fed7aa",
            "borderRadius": 4,
            "justifyContent": "flex-start",
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "100%",
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "flexShrink": 1,
              "width": "100%",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "flexShrink": 1,
                "justifyContent": "space-between",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "flexShrink": 1,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={16}
                  bbWidth={16}
                  color={4290920716}
                  dataSet={Object {}}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#c2410c",
                        "height": 16,
                        "width": 16,
                      },
                      Object {
                        "flex": 0,
                        "height": 16,
                        "width": 16,
                      },
                    ]
                  }
                  tintColor={4290920716}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M12 0C9.62663 0 7.30655 0.703788 5.33316 2.02236C3.35977 3.34094 1.8217 5.21509 0.913451 7.4078C0.00519948 9.60051 -0.232441 12.0133 0.230582 14.3411C0.693605 16.6689 1.83649 18.807 3.51472 20.4853C5.19295 22.1635 7.33115 23.3064 9.65892 23.7694C11.9867 24.2324 14.3995 23.9948 16.5922 23.0865C18.7849 22.1783 20.6591 20.6402 21.9776 18.6668C23.2962 16.6935 24 14.3734 24 12C23.9966 8.81846 22.7312 5.76821 20.4815 3.51852C18.2318 1.26883 15.1815 0.00344108 12 0ZM12.25 5C12.5467 5 12.8367 5.08797 13.0834 5.25279C13.33 5.41762 13.5223 5.65189 13.6358 5.92597C13.7494 6.20006 13.7791 6.50166 13.7212 6.79263C13.6633 7.08361 13.5204 7.35088 13.3107 7.56066C13.1009 7.77044 12.8336 7.9133 12.5426 7.97118C12.2517 8.02905 11.9501 7.99935 11.676 7.88582C11.4019 7.77229 11.1676 7.58003 11.0028 7.33335C10.838 7.08668 10.75 6.79667 10.75 6.5C10.75 6.10217 10.908 5.72064 11.1893 5.43934C11.4706 5.15803 11.8522 5 12.25 5ZM14.5 18.5H10.5C10.2348 18.5 9.98043 18.3946 9.7929 18.2071C9.60536 18.0196 9.5 17.7652 9.5 17.5C9.5 17.2348 9.60536 16.9804 9.7929 16.7929C9.98043 16.6054 10.2348 16.5 10.5 16.5H11.25C11.3163 16.5 11.3799 16.4737 11.4268 16.4268C11.4737 16.3799 11.5 16.3163 11.5 16.25V11.75C11.5 11.6837 11.4737 11.6201 11.4268 11.5732C11.3799 11.5263 11.3163 11.5 11.25 11.5H10.5C10.2348 11.5 9.98043 11.3946 9.7929 11.2071C9.60536 11.0196 9.5 10.7652 9.5 10.5C9.5 10.2348 9.60536 9.98043 9.7929 9.79289C9.98043 9.60536 10.2348 9.5 10.5 9.5H11.5C12.0304 9.5 12.5391 9.71071 12.9142 10.0858C13.2893 10.4609 13.5 10.9696 13.5 11.5V16.25C13.5 16.3163 13.5263 16.3799 13.5732 16.4268C13.6201 16.4737 13.6837 16.5 13.75 16.5H14.5C14.7652 16.5 15.0196 16.6054 15.2071 16.7929C15.3946 16.9804 15.5 17.2348 15.5 17.5C15.5 17.7652 15.3946 18.0196 15.2071 18.2071C15.0196 18.3946 14.7652 18.5 14.5 18.5Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Please try again later!
              </Text>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 10,
                  "paddingRight": 10,
                  "paddingTop": 10,
                }
              }
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={20}
                bbWidth={20}
                color={4283127139}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#4b5563",
                      "height": 20,
                      "width": 20,
                    },
                    Object {
                      "flex": 0,
                      "height": 20,
                      "width": 20,
                    },
                  ]
                }
                tintColor={4283127139}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M12 9.77778L4.22222 2L2 4.22222L9.77778 12L2 19.7778L4.22222 22L12 14.2222L19.7778 22L22 19.7778L14.2222 12L22 4.22222L19.7778 2L12 9.77778Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 8,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "paddingLeft": 24,
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#4b5563",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Your coupon could not be processed at this time.
            </Text>
          </View>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        dataSet={Object {}}
        space={3}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#fbcfe8",
            "borderRadius": 4,
            "justifyContent": "flex-start",
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "100%",
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "flexShrink": 1,
              "width": "100%",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "flexShrink": 1,
                "justifyContent": "space-between",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "flexShrink": 1,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={16}
                  bbWidth={16}
                  color={4290648157}
                  dataSet={Object {}}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#be185d",
                        "height": 16,
                        "width": 16,
                      },
                      Object {
                        "flex": 0,
                        "height": 16,
                        "width": 16,
                      },
                    ]
                  }
                  tintColor={4290648157}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M12 0C9.62663 0 7.30655 0.703788 5.33316 2.02236C3.35977 3.34094 1.8217 5.21509 0.913451 7.4078C0.00519948 9.60051 -0.232441 12.0133 0.230582 14.3411C0.693605 16.6689 1.83649 18.807 3.51472 20.4853C5.19295 22.1635 7.33115 23.3064 9.65892 23.7694C11.9867 24.2324 14.3995 23.9948 16.5922 23.0865C18.7849 22.1783 20.6591 20.6402 21.9776 18.6668C23.2962 16.6935 24 14.3734 24 12C23.9966 8.81846 22.7312 5.76821 20.4815 3.51852C18.2318 1.26883 15.1815 0.00344108 12 0ZM12.25 5C12.5467 5 12.8367 5.08797 13.0834 5.25279C13.33 5.41762 13.5223 5.65189 13.6358 5.92597C13.7494 6.20006 13.7791 6.50166 13.7212 6.79263C13.6633 7.08361 13.5204 7.35088 13.3107 7.56066C13.1009 7.77044 12.8336 7.9133 12.5426 7.97118C12.2517 8.02905 11.9501 7.99935 11.676 7.88582C11.4019 7.77229 11.1676 7.58003 11.0028 7.33335C10.838 7.08668 10.75 6.79667 10.75 6.5C10.75 6.10217 10.908 5.72064 11.1893 5.43934C11.4706 5.15803 11.8522 5 12.25 5ZM14.5 18.5H10.5C10.2348 18.5 9.98043 18.3946 9.7929 18.2071C9.60536 18.0196 9.5 17.7652 9.5 17.5C9.5 17.2348 9.60536 16.9804 9.7929 16.7929C9.98043 16.6054 10.2348 16.5 10.5 16.5H11.25C11.3163 16.5 11.3799 16.4737 11.4268 16.4268C11.4737 16.3799 11.5 16.3163 11.5 16.25V11.75C11.5 11.6837 11.4737 11.6201 11.4268 11.5732C11.3799 11.5263 11.3163 11.5 11.25 11.5H10.5C10.2348 11.5 9.98043 11.3946 9.7929 11.2071C9.60536 11.0196 9.5 10.7652 9.5 10.5C9.5 10.2348 9.60536 9.98043 9.7929 9.79289C9.98043 9.60536 10.2348 9.5 10.5 9.5H11.5C12.0304 9.5 12.5391 9.71071 12.9142 10.0858C13.2893 10.4609 13.5 10.9696 13.5 11.5V16.25C13.5 16.3163 13.5263 16.3799 13.5732 16.4268C13.6201 16.4737 13.6837 16.5 13.75 16.5H14.5C14.7652 16.5 15.0196 16.6054 15.2071 16.7929C15.3946 16.9804 15.5 17.2348 15.5 17.5C15.5 17.7652 15.3946 18.0196 15.2071 18.2071C15.0196 18.3946 14.7652 18.5 14.5 18.5Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Please try again later!
              </Text>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 10,
                  "paddingRight": 10,
                  "paddingTop": 10,
                }
              }
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={20}
                bbWidth={20}
                color={4283127139}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#4b5563",
                      "height": 20,
                      "width": 20,
                    },
                    Object {
                      "flex": 0,
                      "height": 20,
                      "width": 20,
                    },
                  ]
                }
                tintColor={4283127139}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M12 9.77778L4.22222 2L2 4.22222L9.77778 12L2 19.7778L4.22222 22L12 14.2222L19.7778 22L22 19.7778L14.2222 12L22 4.22222L19.7778 2L12 9.77778Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 8,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "paddingLeft": 24,
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#4b5563",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Your coupon could not be processed at this time.
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Alert Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "maxWidth": 400,
          }
        }
      >
        <View
          dataSet={Object {}}
          space={3}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#bbf7d0",
              "borderRadius": 4,
              "justifyContent": "flex-start",
              "paddingBottom": 12,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 12,
              "width": "100%",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "flexShrink": 1,
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "flexShrink": 1,
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4279599165}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#15803d",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4279599165}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24ZM7.17719 11.2464L9.91869 13.9114L16.8228 7.2L18 8.34432L9.91869 16.2L6 12.3907L7.17719 11.2464Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "width": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "500",
                      "letterSpacing": 0,
                      "lineHeight": 24,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Application received!
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "width": 4,
                  }
                }
              />
              <View
                accessibilityRole="button"
                accessible={true}
                colorScheme="primary"
                dataSet={Object {}}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onHoverIn={[Function]}
                onHoverOut={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "borderRadius": 4,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 10,
                    "paddingLeft": 10,
                    "paddingRight": 10,
                    "paddingTop": 10,
                  }
                }
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={20}
                  bbWidth={20}
                  color={4283127139}
                  dataSet={Object {}}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#4b5563",
                        "height": 20,
                        "width": 20,
                      },
                      Object {
                        "flex": 0,
                        "height": 20,
                        "width": 20,
                      },
                    ]
                  }
                  tintColor={4283127139}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M12 9.77778L4.22222 2L2 4.22222L9.77778 12L2 19.7778L4.22222 22L12 14.2222L19.7778 22L22 19.7778L14.2222 12L22 4.22222L19.7778 2L12 9.77778Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "paddingLeft": 24,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Your application has been received. We will review your application and respond within the next 48 hours.
              </Text>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 20,
            }
          }
        />
        <View
          dataSet={Object {}}
          space={3}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#bbf7d0",
              "borderRadius": 4,
              "justifyContent": "flex-start",
              "paddingBottom": 12,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 12,
              "width": "100%",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexShrink": 1,
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={20}
                bbWidth={20}
                color={4279599165}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#15803d",
                      "height": 20,
                      "width": 20,
                    },
                    Object {
                      "flex": 0,
                      "height": 20,
                      "width": 20,
                    },
                  ]
                }
                tintColor={4279599165}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24ZM7.17719 11.2464L9.91869 13.9114L16.8228 7.2L18 8.34432L9.91869 16.2L6 12.3907L7.17719 11.2464Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 4,
                }
              }
            />
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "textDecorationLine": undefined,
                }
              }
            >
              Application received!
            </Text>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 4,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textAlign": "center",
                    "textDecorationLine": undefined,
                  }
                }
              >
                Your application has been received. We will review your application and respond within the next 48 hours.
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Alert Status 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "maxWidth": 400,
          "width": "100%",
        }
      }
    >
      <View
        dataSet={Object {}}
        space={3}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#bbf7d0",
            "borderRadius": 4,
            "justifyContent": "flex-start",
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "100%",
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "flexShrink": 1,
              "width": "100%",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "flexDirection": "row",
                "flexShrink": 1,
                "justifyContent": "space-between",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "flexDirection": "row",
                  "flexShrink": 1,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={16}
                  bbWidth={16}
                  color={4279599165}
                  dataSet={Object {}}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#15803d",
                        "height": 16,
                        "marginTop": 4,
                        "width": 16,
                      },
                      Object {
                        "flex": 0,
                        "height": 16,
                        "width": 16,
                      },
                    ]
                  }
                  tintColor={4279599165}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24ZM7.17719 11.2464L9.91869 13.9114L16.8228 7.2L18 8.34432L9.91869 16.2L6 12.3907L7.17719 11.2464Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Selection successfully moved!
              </Text>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 10,
                  "paddingRight": 10,
                  "paddingTop": 10,
                }
              }
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={20}
                bbWidth={20}
                color={4283127139}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#4b5563",
                      "height": 20,
                      "width": 20,
                    },
                    Object {
                      "flex": 0,
                      "height": 20,
                      "width": 20,
                    },
                  ]
                }
                tintColor={4283127139}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M12 9.77778L4.22222 2L2 4.22222L9.77778 12L2 19.7778L4.22222 22L12 14.2222L19.7778 22L22 19.7778L14.2222 12L22 4.22222L19.7778 2L12 9.77778Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 12,
          }
        }
      />
      <View
        dataSet={Object {}}
        space={3}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#fecaca",
            "borderRadius": 4,
            "justifyContent": "flex-start",
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "100%",
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "flexShrink": 1,
              "width": "100%",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "flexDirection": "row",
                "flexShrink": 1,
                "justifyContent": "space-between",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "flexDirection": "row",
                  "flexShrink": 1,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={16}
                  bbWidth={16}
                  color={4290321436}
                  dataSet={Object {}}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#b91c1c",
                        "height": 16,
                        "marginTop": 4,
                        "width": 16,
                      },
                      Object {
                        "flex": 0,
                        "height": 16,
                        "width": 16,
                      },
                    ]
                  }
                  tintColor={4290321436}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGGroup
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGPath
                          d="M13.9193 18.4271C13.8992 17.9392 13.6816 17.4813 13.3178 17.1478C12.9545 16.8148 12.4731 16.631 11.975 16.6304H11.9746H11.945V16.6304L11.9392 16.6305C11.6898 16.6348 11.4434 16.6864 11.2142 16.7827L11.333 17.0655L11.2142 16.7827C10.9851 16.879 10.7773 17.0183 10.6035 17.1931C10.4296 17.368 10.2932 17.5751 10.2031 17.8026C10.113 18.0302 10.0712 18.2732 10.0806 18.5171L10.0807 18.5176C10.1001 19.0055 10.3169 19.4638 10.6802 19.7979C11.043 20.1315 11.5241 20.3162 12.0222 20.3177H12.0233H12.0529V20.3178L12.058 20.3177C12.3081 20.3138 12.5552 20.2624 12.785 20.1661C13.0148 20.0698 13.2232 19.9303 13.3974 19.7549C13.5716 19.5795 13.7081 19.3718 13.7981 19.1436C13.8881 18.9153 13.9295 18.6716 13.9193 18.4271ZM13.9193 18.4271L13.5863 18.4408M13.9193 18.4271C13.9193 18.4271 13.9193 18.4271 13.9193 18.427L13.5863 18.4408M13.5863 18.4408C13.5945 18.6386 13.5611 18.836 13.488 19.0213C13.415 19.2066 13.3037 19.3762 13.1609 19.52C13.018 19.6638 12.8464 19.779 12.6561 19.8587C12.4658 19.9385 12.2607 19.9812 12.0529 19.9844H12.0233C11.6062 19.9831 11.2058 19.8284 10.9059 19.5525C10.6059 19.2767 10.4296 18.9011 10.4137 18.5043C10.4061 18.3069 10.4399 18.1101 10.513 17.9254C10.5862 17.7406 10.6973 17.5715 10.8399 17.4281C10.9824 17.2847 11.1536 17.1698 11.3434 17.09C11.5331 17.0103 11.7376 16.9674 11.945 16.9638H11.9746C12.3916 16.9642 12.7922 17.1182 13.0926 17.3936C13.393 17.6689 13.5699 18.0442 13.5863 18.4408ZM23.4665 20.2125L23.4665 20.2125C23.6068 20.4676 23.6751 20.7517 23.6658 21.0376C23.6566 21.3234 23.57 21.6033 23.4131 21.8501C23.2562 22.097 23.0337 22.3031 22.7658 22.4469C22.4978 22.5907 22.1942 22.6667 21.8847 22.6667H21.8846H2.11538H2.11533C1.80576 22.6667 1.50222 22.5907 1.23422 22.4469C0.96631 22.3031 0.743845 22.097 0.586879 21.8501L0.305565 22.0289L0.586879 21.8501C0.429998 21.6033 0.343434 21.3234 0.334166 21.0376C0.324898 20.7517 0.393165 20.4676 0.533517 20.2125L0.53353 20.2125L10.4192 2.23977C10.5681 1.96911 10.7933 1.74021 11.0721 1.5796C11.3511 1.41893 11.6722 1.33333 12.0005 1.33333C12.3289 1.33333 12.65 1.41893 12.9289 1.5796C13.2078 1.74021 13.4329 1.96911 13.5819 2.23977L23.4665 20.2125ZM11.0224 7.44182C10.7599 7.69176 10.6091 8.03434 10.6091 8.39521V14.4365C10.6091 14.7974 10.7599 15.1399 11.0224 15.3899C11.2843 15.6393 11.6363 15.7767 12 15.7767C12.3637 15.7767 12.7157 15.6393 12.9776 15.3899C13.2401 15.1399 13.3909 14.7974 13.3909 14.4365V8.39521C13.3909 8.03434 13.2401 7.69176 12.9776 7.44182C12.7157 7.19242 12.3637 7.05499 12 7.05499C11.6363 7.05499 11.2843 7.19242 11.0224 7.44182Z"
                          propList={
                            Array [
                              "stroke",
                              "strokeWidth",
                            ]
                          }
                          stroke={
                            Array [
                              2,
                            ]
                          }
                          strokeWidth="0.666667"
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Please try again later!
              </Text>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 10,
                  "paddingRight": 10,
                  "paddingTop": 10,
                }
              }
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={20}
                bbWidth={20}
                color={4283127139}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#4b5563",
                      "height": 20,
                      "width": 20,
                    },
                    Object {
                      "flex": 0,
                      "height": 20,
                      "width": 20,
                    },
                  ]
                }
                tintColor={4283127139}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M12 9.77778L4.22222 2L2 4.22222L9.77778 12L2 19.7778L4.22222 22L12 14.2222L19.7778 22L22 19.7778L14.2222 12L22 4.22222L19.7778 2L12 9.77778Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 12,
          }
        }
      />
      <View
        dataSet={Object {}}
        space={3}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#bae6fd",
            "borderRadius": 4,
            "justifyContent": "flex-start",
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "100%",
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "flexShrink": 1,
              "width": "100%",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "flexDirection": "row",
                "flexShrink": 1,
                "justifyContent": "space-between",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "flexDirection": "row",
                  "flexShrink": 1,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={16}
                  bbWidth={16}
                  color={4278413729}
                  dataSet={Object {}}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#0369a1",
                        "height": 16,
                        "marginTop": 4,
                        "width": 16,
                      },
                      Object {
                        "flex": 0,
                        "height": 16,
                        "width": 16,
                      },
                    ]
                  }
                  tintColor={4278413729}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M12 0C9.62663 0 7.30655 0.703788 5.33316 2.02236C3.35977 3.34094 1.8217 5.21509 0.913451 7.4078C0.00519948 9.60051 -0.232441 12.0133 0.230582 14.3411C0.693605 16.6689 1.83649 18.807 3.51472 20.4853C5.19295 22.1635 7.33115 23.3064 9.65892 23.7694C11.9867 24.2324 14.3995 23.9948 16.5922 23.0865C18.7849 22.1783 20.6591 20.6402 21.9776 18.6668C23.2962 16.6935 24 14.3734 24 12C23.9966 8.81846 22.7312 5.76821 20.4815 3.51852C18.2318 1.26883 15.1815 0.00344108 12 0ZM12.25 5C12.5467 5 12.8367 5.08797 13.0834 5.25279C13.33 5.41762 13.5223 5.65189 13.6358 5.92597C13.7494 6.20006 13.7791 6.50166 13.7212 6.79263C13.6633 7.08361 13.5204 7.35088 13.3107 7.56066C13.1009 7.77044 12.8336 7.9133 12.5426 7.97118C12.2517 8.02905 11.9501 7.99935 11.676 7.88582C11.4019 7.77229 11.1676 7.58003 11.0028 7.33335C10.838 7.08668 10.75 6.79667 10.75 6.5C10.75 6.10217 10.908 5.72064 11.1893 5.43934C11.4706 5.15803 11.8522 5 12.25 5ZM14.5 18.5H10.5C10.2348 18.5 9.98043 18.3946 9.7929 18.2071C9.60536 18.0196 9.5 17.7652 9.5 17.5C9.5 17.2348 9.60536 16.9804 9.7929 16.7929C9.98043 16.6054 10.2348 16.5 10.5 16.5H11.25C11.3163 16.5 11.3799 16.4737 11.4268 16.4268C11.4737 16.3799 11.5 16.3163 11.5 16.25V11.75C11.5 11.6837 11.4737 11.6201 11.4268 11.5732C11.3799 11.5263 11.3163 11.5 11.25 11.5H10.5C10.2348 11.5 9.98043 11.3946 9.7929 11.2071C9.60536 11.0196 9.5 10.7652 9.5 10.5C9.5 10.2348 9.60536 9.98043 9.7929 9.79289C9.98043 9.60536 10.2348 9.5 10.5 9.5H11.5C12.0304 9.5 12.5391 9.71071 12.9142 10.0858C13.2893 10.4609 13.5 10.9696 13.5 11.5V16.25C13.5 16.3163 13.5263 16.3799 13.5732 16.4268C13.6201 16.4737 13.6837 16.5 13.75 16.5H14.5C14.7652 16.5 15.0196 16.6054 15.2071 16.7929C15.3946 16.9804 15.5 17.2348 15.5 17.5C15.5 17.7652 15.3946 18.0196 15.2071 18.2071C15.0196 18.3946 14.7652 18.5 14.5 18.5Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "textDecorationLine": undefined,
                  }
                }
              >
                We are going live in July!
              </Text>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 10,
                  "paddingRight": 10,
                  "paddingTop": 10,
                }
              }
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={20}
                bbWidth={20}
                color={4283127139}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#4b5563",
                      "height": 20,
                      "width": 20,
                    },
                    Object {
                      "flex": 0,
                      "height": 20,
                      "width": 20,
                    },
                  ]
                }
                tintColor={4283127139}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M12 9.77778L4.22222 2L2 4.22222L9.77778 12L2 19.7778L4.22222 22L12 14.2222L19.7778 22L22 19.7778L14.2222 12L22 4.22222L19.7778 2L12 9.77778Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 12,
          }
        }
      />
      <View
        dataSet={Object {}}
        space={3}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#fed7aa",
            "borderRadius": 4,
            "justifyContent": "flex-start",
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "100%",
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "flexShrink": 1,
              "width": "100%",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "flexDirection": "row",
                "flexShrink": 1,
                "justifyContent": "space-between",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "flexDirection": "row",
                  "flexShrink": 1,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={16}
                  bbWidth={16}
                  color={4290920716}
                  dataSet={Object {}}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#c2410c",
                        "height": 16,
                        "marginTop": 4,
                        "width": 16,
                      },
                      Object {
                        "flex": 0,
                        "height": 16,
                        "width": 16,
                      },
                    ]
                  }
                  tintColor={4290920716}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M11.9836 0.00267822C8.77744 0.0551662 5.72075 1.36728 3.47427 3.65538C2.35024 4.77447 1.46338 6.10869 0.866705 7.57831C0.270027 9.04793 -0.0242179 10.6228 0.00155827 12.2087C-0.000286057 13.7583 0.303697 15.2931 0.896087 16.7251C1.48848 18.1571 2.35763 19.458 3.45373 20.5535C4.54983 21.6489 5.85133 22.5173 7.28365 23.1089C8.71596 23.7004 10.2509 24.0035 11.8006 24.0007H12.0146C15.2217 23.9677 18.2847 22.6638 20.5316 20.3751C22.7785 18.0864 24.0257 14.9999 23.9996 11.7927C24.0033 10.2243 23.6933 8.6709 23.0879 7.22398C22.4825 5.77706 21.5939 4.4658 20.4744 3.36731C19.3548 2.26882 18.0269 1.40527 16.5688 0.827453C15.1106 0.249636 13.5517 -0.0307856 11.9836 0.00267822ZM10.5007 16.5433C10.4935 16.3473 10.5254 16.1517 10.5947 15.9682C10.6639 15.7846 10.7691 15.6167 10.904 15.4742C11.0389 15.3318 11.2009 15.2177 11.3804 15.1386C11.5599 15.0594 11.7534 15.0169 11.9496 15.0135H11.9766C12.3712 15.0142 12.7501 15.1677 13.034 15.4417C13.3179 15.7157 13.4847 16.089 13.4995 16.4833C13.5068 16.6794 13.4749 16.875 13.4057 17.0586C13.3365 17.2423 13.2314 17.4102 13.0965 17.5527C12.9615 17.6952 12.7995 17.8093 12.6199 17.8884C12.4403 17.9674 12.2468 18.0099 12.0506 18.0132H12.0236C11.6291 18.0119 11.2505 17.8583 10.9667 17.5844C10.6829 17.3105 10.5159 16.9375 10.5007 16.5433ZM11.0007 12.5017V6.50215C11.0007 6.23695 11.106 5.98262 11.2935 5.7951C11.481 5.60758 11.7354 5.50223 12.0006 5.50223C12.2658 5.50223 12.5201 5.60758 12.7076 5.7951C12.8951 5.98262 13.0005 6.23695 13.0005 6.50215V12.5017C13.0005 12.7669 12.8951 13.0212 12.7076 13.2087C12.5201 13.3962 12.2658 13.5016 12.0006 13.5016C11.7354 13.5016 11.481 13.3962 11.2935 13.2087C11.106 13.0212 11.0007 12.7669 11.0007 12.5017Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Poor internet connection.
              </Text>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 10,
                  "paddingRight": 10,
                  "paddingTop": 10,
                }
              }
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={20}
                bbWidth={20}
                color={4283127139}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#4b5563",
                      "height": 20,
                      "width": 20,
                    },
                    Object {
                      "flex": 0,
                      "height": 20,
                      "width": 20,
                    },
                  ]
                }
                tintColor={4283127139}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M12 9.77778L4.22222 2L2 4.22222L9.77778 12L2 19.7778L4.22222 22L12 14.2222L19.7778 22L22 19.7778L14.2222 12L22 4.22222L19.7778 2L12 9.77778Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Alert Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        space={3}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#bae6fd",
            "borderRadius": 4,
            "justifyContent": "flex-start",
            "maxWidth": 400,
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "flexShrink": 1,
              "width": "100%",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "flexShrink": 1,
                "justifyContent": "space-between",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "flexShrink": 1,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={16}
                  bbWidth={16}
                  color={4278413729}
                  dataSet={Object {}}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#0369a1",
                        "height": 16,
                        "width": 16,
                      },
                      Object {
                        "flex": 0,
                        "height": 16,
                        "width": 16,
                      },
                    ]
                  }
                  tintColor={4278413729}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M12 0C9.62663 0 7.30655 0.703788 5.33316 2.02236C3.35977 3.34094 1.8217 5.21509 0.913451 7.4078C0.00519948 9.60051 -0.232441 12.0133 0.230582 14.3411C0.693605 16.6689 1.83649 18.807 3.51472 20.4853C5.19295 22.1635 7.33115 23.3064 9.65892 23.7694C11.9867 24.2324 14.3995 23.9948 16.5922 23.0865C18.7849 22.1783 20.6591 20.6402 21.9776 18.6668C23.2962 16.6935 24 14.3734 24 12C23.9966 8.81846 22.7312 5.76821 20.4815 3.51852C18.2318 1.26883 15.1815 0.00344108 12 0ZM12.25 5C12.5467 5 12.8367 5.08797 13.0834 5.25279C13.33 5.41762 13.5223 5.65189 13.6358 5.92597C13.7494 6.20006 13.7791 6.50166 13.7212 6.79263C13.6633 7.08361 13.5204 7.35088 13.3107 7.56066C13.1009 7.77044 12.8336 7.9133 12.5426 7.97118C12.2517 8.02905 11.9501 7.99935 11.676 7.88582C11.4019 7.77229 11.1676 7.58003 11.0028 7.33335C10.838 7.08668 10.75 6.79667 10.75 6.5C10.75 6.10217 10.908 5.72064 11.1893 5.43934C11.4706 5.15803 11.8522 5 12.25 5ZM14.5 18.5H10.5C10.2348 18.5 9.98043 18.3946 9.7929 18.2071C9.60536 18.0196 9.5 17.7652 9.5 17.5C9.5 17.2348 9.60536 16.9804 9.7929 16.7929C9.98043 16.6054 10.2348 16.5 10.5 16.5H11.25C11.3163 16.5 11.3799 16.4737 11.4268 16.4268C11.4737 16.3799 11.5 16.3163 11.5 16.25V11.75C11.5 11.6837 11.4737 11.6201 11.4268 11.5732C11.3799 11.5263 11.3163 11.5 11.25 11.5H10.5C10.2348 11.5 9.98043 11.3946 9.7929 11.2071C9.60536 11.0196 9.5 10.7652 9.5 10.5C9.5 10.2348 9.60536 9.98043 9.7929 9.79289C9.98043 9.60536 10.2348 9.5 10.5 9.5H11.5C12.0304 9.5 12.5391 9.71071 12.9142 10.0858C13.2893 10.4609 13.5 10.9696 13.5 11.5V16.25C13.5 16.3163 13.5263 16.3799 13.5732 16.4268C13.6201 16.4737 13.6837 16.5 13.75 16.5H14.5C14.7652 16.5 15.0196 16.6054 15.2071 16.7929C15.3946 16.9804 15.5 17.2348 15.5 17.5C15.5 17.7652 15.3946 18.0196 15.2071 18.2071C15.0196 18.3946 14.7652 18.5 14.5 18.5Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "textDecorationLine": undefined,
                  }
                }
              >
                We are going live in July!
              </Text>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 10,
                  "paddingRight": 10,
                  "paddingTop": 10,
                }
              }
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={20}
                bbWidth={20}
                color={4283127139}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#4b5563",
                      "height": 20,
                      "width": 20,
                    },
                    Object {
                      "flex": 0,
                      "height": 20,
                      "width": 20,
                    },
                  ]
                }
                tintColor={4283127139}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M12 9.77778L4.22222 2L2 4.22222L9.77778 12L2 19.7778L4.22222 22L12 14.2222L19.7778 22L22 19.7778L14.2222 12L22 4.22222L19.7778 2L12 9.77778Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 8,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "paddingLeft": 24,
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#4b5563",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              We are happy to announce that we are going live on July 28th. Get ready!
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Alert Variant 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RCTScrollView
      contentContainerStyle={
        Array [
          Object {},
          Object {
            "dataSet": Object {},
          },
        ]
      }
      dataSet={Object {}}
      style={
        Object {
          "marginTop": 20,
        }
      }
    >
      <View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "column",
              "justifyContent": "center",
              "marginRight": 20,
              "maxWidth": 400,
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 30,
                "marginBottom": 16,
                "textAlign": "center",
                "textDecorationLine": undefined,
              }
            }
          >
            solid
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            dataSet={Object {}}
            space={3}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#15803d",
                "borderRadius": 4,
                "justifyContent": "flex-start",
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "flexShrink": 1,
                  "width": "100%",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "justifyContent": "space-between",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    }
                  }
                >
                  <View
                    dataSet={Object {}}
                    style={Object {}}
                  >
                    <RNSVGSvgView
                      accessibilityRole="image"
                      align="xMidYMid"
                      bbHeight={16}
                      bbWidth={16}
                      color={4294638330}
                      dataSet={Object {}}
                      focusable={false}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      stroke=""
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          Object {
                            "color": "#fafafa",
                            "height": 16,
                            "width": 16,
                          },
                          Object {
                            "flex": 0,
                            "height": 16,
                            "width": 16,
                          },
                        ]
                      }
                      tintColor={4294638330}
                      vbHeight={24}
                      vbWidth={24}
                    >
                      <RNSVGGroup
                        propList={
                          Array [
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGGroup>
                          <RNSVGPath
                            d="M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24ZM7.17719 11.2464L9.91869 13.9114L16.8228 7.2L18 8.34432L9.91869 16.2L6 12.3907L7.17719 11.2464Z"
                            fill={
                              Array [
                                2,
                              ]
                            }
                            propList={
                              Array [
                                "fill",
                                "stroke",
                              ]
                            }
                            stroke={null}
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "width": 8,
                      }
                    }
                  />
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#fafaf9",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Selection successfully moved!
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#d4d4d4",
                "height": 1,
                "marginBottom": 10,
                "marginTop": 20,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 30,
                "marginBottom": 16,
                "textAlign": "center",
                "textDecorationLine": undefined,
              }
            }
          >
            left-accent
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            dataSet={Object {}}
            space={3}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#bbf7d0",
                "borderLeftColor": "#15803d",
                "borderLeftWidth": 4,
                "borderRadius": 4,
                "justifyContent": "flex-start",
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "flexShrink": 1,
                  "width": "100%",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "justifyContent": "space-between",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    }
                  }
                >
                  <View
                    dataSet={Object {}}
                    style={Object {}}
                  >
                    <RNSVGSvgView
                      accessibilityRole="image"
                      align="xMidYMid"
                      bbHeight={16}
                      bbWidth={16}
                      color={4279599165}
                      dataSet={Object {}}
                      focusable={false}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      stroke=""
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          Object {
                            "color": "#15803d",
                            "height": 16,
                            "width": 16,
                          },
                          Object {
                            "flex": 0,
                            "height": 16,
                            "width": 16,
                          },
                        ]
                      }
                      tintColor={4279599165}
                      vbHeight={24}
                      vbWidth={24}
                    >
                      <RNSVGGroup
                        propList={
                          Array [
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGGroup>
                          <RNSVGPath
                            d="M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24ZM7.17719 11.2464L9.91869 13.9114L16.8228 7.2L18 8.34432L9.91869 16.2L6 12.3907L7.17719 11.2464Z"
                            fill={
                              Array [
                                2,
                              ]
                            }
                            propList={
                              Array [
                                "fill",
                                "stroke",
                              ]
                            }
                            stroke={null}
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "width": 8,
                      }
                    }
                  />
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#1f2937",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Selection successfully moved!
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#d4d4d4",
                "height": 1,
                "marginBottom": 10,
                "marginTop": 20,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 30,
                "marginBottom": 16,
                "textAlign": "center",
                "textDecorationLine": undefined,
              }
            }
          >
            top-accent
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            dataSet={Object {}}
            space={3}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#bbf7d0",
                "borderRadius": 4,
                "borderTopColor": "#15803d",
                "borderTopWidth": 4,
                "justifyContent": "flex-start",
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "flexShrink": 1,
                  "width": "100%",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "justifyContent": "space-between",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    }
                  }
                >
                  <View
                    dataSet={Object {}}
                    style={Object {}}
                  >
                    <RNSVGSvgView
                      accessibilityRole="image"
                      align="xMidYMid"
                      bbHeight={16}
                      bbWidth={16}
                      color={4279599165}
                      dataSet={Object {}}
                      focusable={false}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      stroke=""
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          Object {
                            "color": "#15803d",
                            "height": 16,
                            "width": 16,
                          },
                          Object {
                            "flex": 0,
                            "height": 16,
                            "width": 16,
                          },
                        ]
                      }
                      tintColor={4279599165}
                      vbHeight={24}
                      vbWidth={24}
                    >
                      <RNSVGGroup
                        propList={
                          Array [
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGGroup>
                          <RNSVGPath
                            d="M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24ZM7.17719 11.2464L9.91869 13.9114L16.8228 7.2L18 8.34432L9.91869 16.2L6 12.3907L7.17719 11.2464Z"
                            fill={
                              Array [
                                2,
                              ]
                            }
                            propList={
                              Array [
                                "fill",
                                "stroke",
                              ]
                            }
                            stroke={null}
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "width": 8,
                      }
                    }
                  />
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#1f2937",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Selection successfully moved!
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#d4d4d4",
                "height": 1,
                "marginBottom": 10,
                "marginTop": 20,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 30,
                "marginBottom": 16,
                "textAlign": "center",
                "textDecorationLine": undefined,
              }
            }
          >
            outline
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            dataSet={Object {}}
            space={3}
            style={
              Object {
                "alignItems": "center",
                "borderColor": "#15803d",
                "borderRadius": 4,
                "borderWidth": 1,
                "justifyContent": "flex-start",
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "flexShrink": 1,
                  "width": "100%",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "justifyContent": "space-between",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    }
                  }
                >
                  <View
                    dataSet={Object {}}
                    style={Object {}}
                  >
                    <RNSVGSvgView
                      accessibilityRole="image"
                      align="xMidYMid"
                      bbHeight={16}
                      bbWidth={16}
                      color={4279599165}
                      dataSet={Object {}}
                      focusable={false}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      stroke=""
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          Object {
                            "color": "#15803d",
                            "height": 16,
                            "width": 16,
                          },
                          Object {
                            "flex": 0,
                            "height": 16,
                            "width": 16,
                          },
                        ]
                      }
                      tintColor={4279599165}
                      vbHeight={24}
                      vbWidth={24}
                    >
                      <RNSVGGroup
                        propList={
                          Array [
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGGroup>
                          <RNSVGPath
                            d="M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24ZM7.17719 11.2464L9.91869 13.9114L16.8228 7.2L18 8.34432L9.91869 16.2L6 12.3907L7.17719 11.2464Z"
                            fill={
                              Array [
                                2,
                              ]
                            }
                            propList={
                              Array [
                                "fill",
                                "stroke",
                              ]
                            }
                            stroke={null}
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "width": 8,
                      }
                    }
                  />
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#171717",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Selection successfully moved!
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#d4d4d4",
                "height": 1,
                "marginBottom": 10,
                "marginTop": 20,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 30,
                "marginBottom": 16,
                "textAlign": "center",
                "textDecorationLine": undefined,
              }
            }
          >
            subtle
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            dataSet={Object {}}
            space={3}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#bbf7d0",
                "borderRadius": 4,
                "justifyContent": "flex-start",
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "flexShrink": 1,
                  "width": "100%",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "justifyContent": "space-between",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    }
                  }
                >
                  <View
                    dataSet={Object {}}
                    style={Object {}}
                  >
                    <RNSVGSvgView
                      accessibilityRole="image"
                      align="xMidYMid"
                      bbHeight={16}
                      bbWidth={16}
                      color={4279599165}
                      dataSet={Object {}}
                      focusable={false}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      stroke=""
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          Object {
                            "color": "#15803d",
                            "height": 16,
                            "width": 16,
                          },
                          Object {
                            "flex": 0,
                            "height": 16,
                            "width": 16,
                          },
                        ]
                      }
                      tintColor={4279599165}
                      vbHeight={24}
                      vbWidth={24}
                    >
                      <RNSVGGroup
                        propList={
                          Array [
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGGroup>
                          <RNSVGPath
                            d="M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24ZM7.17719 11.2464L9.91869 13.9114L16.8228 7.2L18 8.34432L9.91869 16.2L6 12.3907L7.17719 11.2464Z"
                            fill={
                              Array [
                                2,
                              ]
                            }
                            propList={
                              Array [
                                "fill",
                                "stroke",
                              ]
                            }
                            stroke={null}
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "width": 8,
                      }
                    }
                  />
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#1f2937",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Selection successfully moved!
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#d4d4d4",
                "height": 1,
                "marginBottom": 10,
                "marginTop": 20,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 30,
                "marginBottom": 16,
                "textAlign": "center",
                "textDecorationLine": undefined,
              }
            }
          >
            outline-light
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            dataSet={Object {}}
            space={3}
            style={
              Object {
                "alignItems": "center",
                "borderColor": "rgba(21, 128, 61, 0.4)",
                "borderRadius": 4,
                "borderWidth": 1,
                "justifyContent": "flex-start",
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "flexShrink": 1,
                  "width": "100%",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "justifyContent": "space-between",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    }
                  }
                >
                  <View
                    dataSet={Object {}}
                    style={Object {}}
                  >
                    <RNSVGSvgView
                      accessibilityRole="image"
                      align="xMidYMid"
                      bbHeight={16}
                      bbWidth={16}
                      color={4279599165}
                      dataSet={Object {}}
                      focusable={false}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      stroke=""
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          Object {
                            "color": "#15803d",
                            "height": 16,
                            "width": 16,
                          },
                          Object {
                            "flex": 0,
                            "height": 16,
                            "width": 16,
                          },
                        ]
                      }
                      tintColor={4279599165}
                      vbHeight={24}
                      vbWidth={24}
                    >
                      <RNSVGGroup
                        propList={
                          Array [
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGGroup>
                          <RNSVGPath
                            d="M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24ZM7.17719 11.2464L9.91869 13.9114L16.8228 7.2L18 8.34432L9.91869 16.2L6 12.3907L7.17719 11.2464Z"
                            fill={
                              Array [
                                2,
                              ]
                            }
                            propList={
                              Array [
                                "fill",
                                "stroke",
                              ]
                            }
                            stroke={null}
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "width": 8,
                      }
                    }
                  />
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#171717",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Selection successfully moved!
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#d4d4d4",
                "height": 1,
                "marginBottom": 10,
                "marginTop": 20,
                "width": "100%",
              }
            }
            thickness="1"
          />
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Alert action 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "width": "100%",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Object {
              "height": undefined,
            },
          ]
        }
      >
        <View
          dataSet={Object {}}
          onLayout={[Function]}
          style={
            Object {
              "overflow": "scroll",
            }
          }
        >
          <View
            dataSet={Object {}}
            space={3}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#fecaca",
                "borderRadius": 4,
                "justifyContent": "flex-start",
                "maxWidth": 400,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "flexShrink": 1,
                  "width": "100%",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "justifyContent": "space-between",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    }
                  }
                >
                  <View
                    dataSet={Object {}}
                    style={Object {}}
                  >
                    <RNSVGSvgView
                      accessibilityRole="image"
                      align="xMidYMid"
                      bbHeight={16}
                      bbWidth={16}
                      color={4290321436}
                      dataSet={Object {}}
                      focusable={false}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      stroke=""
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          Object {
                            "color": "#b91c1c",
                            "height": 16,
                            "width": 16,
                          },
                          Object {
                            "flex": 0,
                            "height": 16,
                            "width": 16,
                          },
                        ]
                      }
                      tintColor={4290321436}
                      vbHeight={24}
                      vbWidth={24}
                    >
                      <RNSVGGroup
                        propList={
                          Array [
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGGroup>
                          <RNSVGGroup
                            fill={
                              Array [
                                2,
                              ]
                            }
                            propList={
                              Array [
                                "fill",
                                "stroke",
                              ]
                            }
                            stroke={null}
                          >
                            <RNSVGPath
                              d="M13.9193 18.4271C13.8992 17.9392 13.6816 17.4813 13.3178 17.1478C12.9545 16.8148 12.4731 16.631 11.975 16.6304H11.9746H11.945V16.6304L11.9392 16.6305C11.6898 16.6348 11.4434 16.6864 11.2142 16.7827L11.333 17.0655L11.2142 16.7827C10.9851 16.879 10.7773 17.0183 10.6035 17.1931C10.4296 17.368 10.2932 17.5751 10.2031 17.8026C10.113 18.0302 10.0712 18.2732 10.0806 18.5171L10.0807 18.5176C10.1001 19.0055 10.3169 19.4638 10.6802 19.7979C11.043 20.1315 11.5241 20.3162 12.0222 20.3177H12.0233H12.0529V20.3178L12.058 20.3177C12.3081 20.3138 12.5552 20.2624 12.785 20.1661C13.0148 20.0698 13.2232 19.9303 13.3974 19.7549C13.5716 19.5795 13.7081 19.3718 13.7981 19.1436C13.8881 18.9153 13.9295 18.6716 13.9193 18.4271ZM13.9193 18.4271L13.5863 18.4408M13.9193 18.4271C13.9193 18.4271 13.9193 18.4271 13.9193 18.427L13.5863 18.4408M13.5863 18.4408C13.5945 18.6386 13.5611 18.836 13.488 19.0213C13.415 19.2066 13.3037 19.3762 13.1609 19.52C13.018 19.6638 12.8464 19.779 12.6561 19.8587C12.4658 19.9385 12.2607 19.9812 12.0529 19.9844H12.0233C11.6062 19.9831 11.2058 19.8284 10.9059 19.5525C10.6059 19.2767 10.4296 18.9011 10.4137 18.5043C10.4061 18.3069 10.4399 18.1101 10.513 17.9254C10.5862 17.7406 10.6973 17.5715 10.8399 17.4281C10.9824 17.2847 11.1536 17.1698 11.3434 17.09C11.5331 17.0103 11.7376 16.9674 11.945 16.9638H11.9746C12.3916 16.9642 12.7922 17.1182 13.0926 17.3936C13.393 17.6689 13.5699 18.0442 13.5863 18.4408ZM23.4665 20.2125L23.4665 20.2125C23.6068 20.4676 23.6751 20.7517 23.6658 21.0376C23.6566 21.3234 23.57 21.6033 23.4131 21.8501C23.2562 22.097 23.0337 22.3031 22.7658 22.4469C22.4978 22.5907 22.1942 22.6667 21.8847 22.6667H21.8846H2.11538H2.11533C1.80576 22.6667 1.50222 22.5907 1.23422 22.4469C0.96631 22.3031 0.743845 22.097 0.586879 21.8501L0.305565 22.0289L0.586879 21.8501C0.429998 21.6033 0.343434 21.3234 0.334166 21.0376C0.324898 20.7517 0.393165 20.4676 0.533517 20.2125L0.53353 20.2125L10.4192 2.23977C10.5681 1.96911 10.7933 1.74021 11.0721 1.5796C11.3511 1.41893 11.6722 1.33333 12.0005 1.33333C12.3289 1.33333 12.65 1.41893 12.9289 1.5796C13.2078 1.74021 13.4329 1.96911 13.5819 2.23977L23.4665 20.2125ZM11.0224 7.44182C10.7599 7.69176 10.6091 8.03434 10.6091 8.39521V14.4365C10.6091 14.7974 10.7599 15.1399 11.0224 15.3899C11.2843 15.6393 11.6363 15.7767 12 15.7767C12.3637 15.7767 12.7157 15.6393 12.9776 15.3899C13.2401 15.1399 13.3909 14.7974 13.3909 14.4365V8.39521C13.3909 8.03434 13.2401 7.69176 12.9776 7.44182C12.7157 7.19242 12.3637 7.05499 12 7.05499C11.6363 7.05499 11.2843 7.19242 11.0224 7.44182Z"
                              propList={
                                Array [
                                  "stroke",
                                  "strokeWidth",
                                ]
                              }
                              stroke={
                                Array [
                                  2,
                                ]
                              }
                              strokeWidth="0.666667"
                            />
                          </RNSVGGroup>
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "width": 8,
                      }
                    }
                  />
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#171717",
                        "fontFamily": undefined,
                        "fontSize": 16,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 24,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Please try again later!
                  </Text>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "width": 8,
                    }
                  }
                />
                <View
                  accessibilityRole="button"
                  accessible={true}
                  colorScheme="primary"
                  dataSet={Object {}}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onHoverIn={[Function]}
                  onHoverOut={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "borderRadius": 4,
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "paddingBottom": 10,
                      "paddingLeft": 10,
                      "paddingRight": 10,
                      "paddingTop": 10,
                    }
                  }
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={20}
                    bbWidth={20}
                    color={4283127139}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#4b5563",
                          "height": 20,
                          "width": 20,
                        },
                        Object {
                          "flex": 0,
                          "height": 20,
                          "width": 20,
                        },
                      ]
                    }
                    tintColor={4283127139}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M12 9.77778L4.22222 2L2 4.22222L9.77778 12L2 19.7778L4.22222 22L12 14.2222L19.7778 22L22 19.7778L14.2222 12L22 4.22222L19.7778 2L12 9.77778Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "height": 4,
                  }
                }
              />
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "paddingLeft": 24,
                  }
                }
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Your coupon could not be processed at this time.
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginLeft": "auto",
            "marginRight": "auto",
            "marginTop": 32,
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 18,
                  "textDecorationLine": undefined,
                }
              }
            >
              Re-Open
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots AlertDialog Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="danger"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#e11d48",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Delete Customer
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots AlertDialog Transition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Discard
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots AspectRatio Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Array [
          Object {
            "height": 200,
          },
          Object {
            "aspectRatio": 1.3333333333333333,
            "style": undefined,
          },
        ]
      }
    >
      <View
        dataSet={Object {}}
        style={
          Array [
            Object {
              "backgroundColor": "#f87171",
            },
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
          ]
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots AspectRatio EmbedImage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Array [
          Object {
            "height": 200,
          },
          Object {
            "aspectRatio": 0.75,
            "style": undefined,
          },
        ]
      }
    >
      <Image
        accessibilityLabel="Picture of a Flower"
        alt="Picture of a Flower"
        dataSet={Object {}}
        onError={[Function]}
        resizeMode="cover"
        source={
          Object {
            "uri": "https://images.pexels.com/photos/60597/dahlia-red-blossom-bloom-60597.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260",
          }
        }
        style={
          Array [
            Object {
              "maxWidth": "100%",
            },
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
          ]
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Avatar AvatarBadge 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#38bdf8",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "height": 24,
            "justifyContent": "center",
            "position": "relative",
            "width": 24,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          dataSet={Object {}}
          onError={[Function]}
          source={
            Object {
              "uri": "https://images.unsplash.com/photo-1603415526960-f7e0328c63b1?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
        <View
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": "#22c55e",
              "borderColor": "#fafafa",
              "borderRadius": 9999,
              "borderWidth": 2,
              "bottom": 0,
              "height": 8,
              "position": "absolute",
              "right": 0,
              "width": 8,
            }
          }
        />
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#f59e0b",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "height": 32,
            "justifyContent": "center",
            "position": "relative",
            "width": 32,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          dataSet={Object {}}
          onError={[Function]}
          source={
            Object {
              "uri": "https://images.unsplash.com/photo-1614289371518-722f2615943d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
        <View
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": "#22c55e",
              "borderColor": "#fafafa",
              "borderRadius": 9999,
              "borderWidth": 2,
              "bottom": 0,
              "height": 12,
              "position": "absolute",
              "right": 0,
              "width": 12,
            }
          }
        />
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#f59e0b",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "height": 48,
            "justifyContent": "center",
            "position": "relative",
            "width": 48,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          dataSet={Object {}}
          onError={[Function]}
          source={
            Object {
              "uri": "https://images.unsplash.com/photo-1614289371518-722f2615943d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
        <View
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": "#22c55e",
              "borderColor": "#fafafa",
              "borderRadius": 9999,
              "borderWidth": 2,
              "bottom": 0,
              "height": 16,
              "position": "absolute",
              "right": 0,
              "width": 16,
            }
          }
        />
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#f59e0b",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "height": 64,
            "justifyContent": "center",
            "position": "relative",
            "width": 64,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          dataSet={Object {}}
          onError={[Function]}
          source={
            Object {
              "uri": "https://images.unsplash.com/photo-1614289371518-722f2615943d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
        <View
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": "#22c55e",
              "borderColor": "#fafafa",
              "borderRadius": 9999,
              "borderWidth": 2,
              "bottom": 0,
              "height": 20,
              "position": "absolute",
              "right": 0,
              "width": 20,
            }
          }
        />
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#f59e0b",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "height": 96,
            "justifyContent": "center",
            "position": "relative",
            "width": 96,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          dataSet={Object {}}
          onError={[Function]}
          source={
            Object {
              "uri": "https://images.unsplash.com/photo-1614289371518-722f2615943d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
        <View
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": "#22c55e",
              "borderColor": "#fafafa",
              "borderRadius": 9999,
              "borderWidth": 2,
              "bottom": 0,
              "height": 24,
              "position": "absolute",
              "right": 0,
              "width": 24,
            }
          }
        />
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#f59e0b",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "height": 128,
            "justifyContent": "center",
            "position": "relative",
            "width": 128,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          dataSet={Object {}}
          onError={[Function]}
          source={
            Object {
              "uri": "https://images.unsplash.com/photo-1614289371518-722f2615943d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
        <View
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": "#22c55e",
              "borderColor": "#fafafa",
              "borderRadius": 9999,
              "borderWidth": 2,
              "bottom": 0,
              "height": 28,
              "position": "absolute",
              "right": 0,
              "width": 28,
            }
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Avatar AvatarGroup 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "flexDirection": "row-reverse",
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#52525b",
              "borderColor": "#fafafa",
              "borderRadius": 9999,
              "borderWidth": 2,
              "height": 64,
              "justifyContent": "center",
              "marginLeft": -16,
              "marginTop": 0,
              "position": "relative",
              "width": 64,
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#fafafa",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "600",
                "letterSpacing": 0,
                "lineHeight": 30,
                "textDecorationLine": undefined,
              }
            }
          >
            + 5
          </Text>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#6366f1",
              "borderColor": "#fafafa",
              "borderRadius": 9999,
              "borderWidth": 2,
              "height": 64,
              "justifyContent": "center",
              "marginLeft": -16,
              "marginTop": 0,
              "position": "relative",
              "width": 64,
            }
          }
        >
          <Image
            accessibilityLabel="--"
            alt="--"
            dataSet={Object {}}
            onError={[Function]}
            source={
              Object {
                "uri": "https://images.unsplash.com/photo-1614289371518-722f2615943d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80",
              }
            }
            style={
              Array [
                Object {
                  "borderRadius": 9999,
                  "maxWidth": "100%",
                },
                Object {
                  "height": "100%",
                  "width": "100%",
                },
              ]
            }
          />
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderColor": "#fafafa",
              "borderRadius": 9999,
              "borderWidth": 2,
              "height": 64,
              "justifyContent": "center",
              "marginLeft": -16,
              "marginTop": 0,
              "position": "relative",
              "width": 64,
            }
          }
        >
          <Image
            accessibilityLabel="--"
            alt="--"
            dataSet={Object {}}
            onError={[Function]}
            source={
              Object {
                "uri": "https://images.unsplash.com/photo-1603415526960-f7e0328c63b1?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80",
              }
            }
            style={
              Array [
                Object {
                  "borderRadius": 9999,
                  "maxWidth": "100%",
                },
                Object {
                  "height": "100%",
                  "width": "100%",
                },
              ]
            }
          />
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#22c55e",
              "borderColor": "#fafafa",
              "borderRadius": 9999,
              "borderWidth": 2,
              "height": 64,
              "justifyContent": "center",
              "position": "relative",
              "width": 64,
            }
          }
        >
          <Image
            accessibilityLabel="--"
            alt="--"
            dataSet={Object {}}
            onError={[Function]}
            source={
              Object {
                "uri": "https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80",
              }
            }
            style={
              Array [
                Object {
                  "borderRadius": 9999,
                  "maxWidth": "100%",
                },
                Object {
                  "height": "100%",
                  "width": "100%",
                },
              ]
            }
          />
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Avatar Fallback 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "center",
          "marginLeft": "auto",
          "marginRight": "auto",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#22c55e",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "height": 48,
            "justifyContent": "center",
            "marginRight": 4,
            "position": "relative",
            "width": 48,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          dataSet={Object {}}
          onError={[Function]}
          source={
            Object {
              "uri": "https://bit.ly/broken-link",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "width": 8,
          }
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#f59e0b",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "height": 48,
            "justifyContent": "center",
            "position": "relative",
            "width": 48,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          dataSet={Object {}}
          onError={[Function]}
          source={
            Object {
              "uri": "https://bit.ly/broken-link",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "width": 8,
          }
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#38bdf8",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "height": 48,
            "justifyContent": "center",
            "position": "relative",
            "width": 48,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          dataSet={Object {}}
          onError={[Function]}
          source={
            Object {
              "uri": "https://bit.ly/broken-link",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Avatar Playground 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#0d9488",
          "borderColor": "#000000",
          "borderRadius": 999,
          "borderWidth": 2,
          "height": 48,
          "justifyContent": "center",
          "position": "relative",
          "width": 48,
        }
      }
    >
      <Image
        accessibilityLabel="--"
        alt="--"
        dataSet={Object {}}
        onError={[Function]}
        source={
          Object {
            "uri": "https://alpha.nativebase.io/img/native-base-icon.png",
          }
        }
        style={
          Array [
            Object {
              "borderRadius": 9999,
              "maxWidth": "100%",
            },
            Object {
              "height": "100%",
              "width": "100%",
            },
          ]
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": "#fecaca",
            "borderColor": "#fafafa",
            "borderRadius": 9999,
            "borderWidth": 2,
            "bottom": 0,
            "height": 16,
            "position": "absolute",
            "right": 0,
            "width": 16,
          }
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Avatar Size 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#22c55e",
              "borderColor": "#27272a",
              "borderRadius": 9999,
              "height": 24,
              "justifyContent": "center",
              "position": "relative",
              "width": 24,
            }
          }
        >
          <Image
            accessibilityLabel="--"
            alt="--"
            dataSet={Object {}}
            onError={[Function]}
            source={
              Object {
                "uri": "https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80",
              }
            }
            style={
              Array [
                Object {
                  "borderRadius": 9999,
                  "maxWidth": "100%",
                },
                Object {
                  "height": "100%",
                  "width": "100%",
                },
              ]
            }
          />
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#06b6d4",
              "borderColor": "#27272a",
              "borderRadius": 9999,
              "height": 32,
              "justifyContent": "center",
              "position": "relative",
              "width": 32,
            }
          }
        >
          <Image
            accessibilityLabel="--"
            alt="--"
            dataSet={Object {}}
            onError={[Function]}
            source={
              Object {
                "uri": "https://images.unsplash.com/photo-1603415526960-f7e0328c63b1?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80",
              }
            }
            style={
              Array [
                Object {
                  "borderRadius": 9999,
                  "maxWidth": "100%",
                },
                Object {
                  "height": "100%",
                  "width": "100%",
                },
              ]
            }
          />
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#6366f1",
              "borderColor": "#27272a",
              "borderRadius": 9999,
              "height": 48,
              "justifyContent": "center",
              "position": "relative",
              "width": 48,
            }
          }
        >
          <Image
            accessibilityLabel="--"
            alt="--"
            dataSet={Object {}}
            onError={[Function]}
            source={
              Object {
                "uri": "https://images.unsplash.com/photo-1614289371518-722f2615943d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80",
              }
            }
            style={
              Array [
                Object {
                  "borderRadius": 9999,
                  "maxWidth": "100%",
                },
                Object {
                  "height": "100%",
                  "width": "100%",
                },
              ]
            }
          />
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#f59e0b",
              "borderColor": "#27272a",
              "borderRadius": 9999,
              "height": 64,
              "justifyContent": "center",
              "position": "relative",
              "width": 64,
            }
          }
        >
          <Image
            accessibilityLabel="--"
            alt="--"
            dataSet={Object {}}
            onError={[Function]}
            source={
              Object {
                "uri": "https://images.unsplash.com/photo-1607746882042-944635dfe10e?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80",
              }
            }
            style={
              Array [
                Object {
                  "borderRadius": 9999,
                  "maxWidth": "100%",
                },
                Object {
                  "height": "100%",
                  "width": "100%",
                },
              ]
            }
          />
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#db2777",
              "borderColor": "#27272a",
              "borderRadius": 9999,
              "height": 96,
              "justifyContent": "center",
              "position": "relative",
              "width": 96,
            }
          }
        >
          <Image
            accessibilityLabel="--"
            alt="--"
            dataSet={Object {}}
            onError={[Function]}
            source={
              Object {
                "uri": "https://images.unsplash.com/photo-1601233749202-95d04d5b3c00?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2876&q=80",
              }
            }
            style={
              Array [
                Object {
                  "borderRadius": 9999,
                  "maxWidth": "100%",
                },
                Object {
                  "height": "100%",
                  "width": "100%",
                },
              ]
            }
          />
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#9333ea",
              "borderColor": "#27272a",
              "borderRadius": 9999,
              "height": 128,
              "justifyContent": "center",
              "position": "relative",
              "width": 128,
            }
          }
        >
          <Image
            accessibilityLabel="--"
            alt="--"
            dataSet={Object {}}
            onError={[Function]}
            source={
              Object {
                "uri": "https://images.unsplash.com/photo-1510771463146-e89e6e86560e?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=627&q=80",
              }
            }
            style={
              Array [
                Object {
                  "borderRadius": 9999,
                  "maxWidth": "100%",
                },
                Object {
                  "height": "100%",
                  "width": "100%",
                },
              ]
            }
          />
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Avatar Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#22c55e",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "height": 48,
            "justifyContent": "center",
            "position": "relative",
            "width": 48,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          dataSet={Object {}}
          onError={[Function]}
          source={
            Object {
              "uri": "https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "width": 8,
          }
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "height": 48,
            "justifyContent": "center",
            "position": "relative",
            "width": 48,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          dataSet={Object {}}
          onError={[Function]}
          source={
            Object {
              "uri": "https://images.unsplash.com/photo-1603415526960-f7e0328c63b1?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "width": 8,
          }
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#6366f1",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "height": 48,
            "justifyContent": "center",
            "position": "relative",
            "width": 48,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          dataSet={Object {}}
          onError={[Function]}
          source={
            Object {
              "uri": "https://images.unsplash.com/photo-1614289371518-722f2615943d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "width": 8,
          }
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#f59e0b",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "height": 48,
            "justifyContent": "center",
            "position": "relative",
            "width": 48,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          dataSet={Object {}}
          onError={[Function]}
          source={
            Object {
              "uri": "https://images.unsplash.com/photo-1607746882042-944635dfe10e?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Badge Color 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "flexDirection": "row",
          "marginLeft": "auto",
          "marginRight": "auto",
        }
      }
    >
      <View
        colorScheme="success"
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#dcfce7",
            "borderColor": "transparent",
            "borderRadius": 2,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 2,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 2,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#14532d",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 18,
                "textDecorationLine": undefined,
              }
            }
          >
            SUCCESS
          </Text>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "width": 16,
          }
        }
      />
      <View
        colorScheme="danger"
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#ffe4e6",
            "borderColor": "transparent",
            "borderRadius": 2,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 2,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 2,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#881337",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 18,
                "textDecorationLine": undefined,
              }
            }
          >
            DANGER
          </Text>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "width": 16,
          }
        }
      />
      <View
        colorScheme="info"
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#e0f2fe",
            "borderColor": "transparent",
            "borderRadius": 2,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 2,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 2,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#0c4a6e",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 18,
                "textDecorationLine": undefined,
              }
            }
          >
            INFO
          </Text>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "width": 16,
          }
        }
      />
      <View
        colorScheme="coolGray"
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#f3f4f6",
            "borderColor": "transparent",
            "borderRadius": 2,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 2,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 2,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#111827",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 18,
                "textDecorationLine": undefined,
              }
            }
          >
            DARK
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Badge Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={Object {}}
      >
        <View
          colorScheme="danger"
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "flex-end",
              "backgroundColor": "#e11d48",
              "borderColor": "transparent",
              "borderRadius": 9999,
              "borderWidth": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "marginBottom": -16,
              "marginRight": -16,
              "paddingBottom": 2,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 2,
              "zIndex": 1,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 18,
                  "textDecorationLine": undefined,
                }
              }
            >
              2
            </Text>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={Object {}}
        />
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "marginLeft": "auto",
              "marginRight": "auto",
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
            test={true}
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafafa",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Notifications
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Badge Icon 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "flexDirection": "column",
        }
      }
    >
      <View
        colorScheme="success"
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#dcfce7",
            "borderColor": "transparent",
            "borderRadius": 2,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 2,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 2,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#14532d",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 18,
                "textDecorationLine": undefined,
              }
            }
          >
            SUCCESS
          </Text>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "width": 4,
            }
          }
        />
        <RNSVGSvgView
          accessibilityRole="image"
          align="xMidYMid"
          bbHeight={8}
          bbWidth={8}
          color={4279522093}
          dataSet={Object {}}
          focusable={false}
          meetOrSlice={0}
          minX={0}
          minY={0}
          stroke=""
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "color": "#14532d",
                "height": 8,
                "width": 8,
              },
              Object {
                "flex": 0,
                "height": 8,
                "width": 8,
              },
            ]
          }
          tintColor={4279522093}
          vbHeight={24}
          vbWidth={24}
        >
          <RNSVGGroup
            propList={
              Array [
                "stroke",
              ]
            }
            stroke={null}
          >
            <RNSVGGroup>
              <RNSVGPath
                d="M13.25 10.75V2H10.75V10.75H2V13.25H10.75V22H13.25V13.25H22V10.75H13.25Z"
                fill={
                  Array [
                    2,
                  ]
                }
                propList={
                  Array [
                    "fill",
                    "stroke",
                  ]
                }
                stroke={null}
              />
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        colorScheme="warning"
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#ea580c",
            "borderRadius": 2,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 2,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 2,
          }
        }
      >
        <RNSVGSvgView
          accessibilityRole="image"
          align="xMidYMid"
          bbHeight={8}
          bbWidth={8}
          color={4293548044}
          dataSet={Object {}}
          focusable={false}
          meetOrSlice={0}
          minX={0}
          minY={0}
          stroke=""
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "color": "#ea580c",
                "height": 8,
                "width": 8,
              },
              Object {
                "flex": 0,
                "height": 8,
                "width": 8,
              },
            ]
          }
          tintColor={4293548044}
          vbHeight={24}
          vbWidth={24}
        >
          <RNSVGGroup
            propList={
              Array [
                "stroke",
              ]
            }
            stroke={null}
          >
            <RNSVGGroup>
              <RNSVGPath
                d="M13.25 10.75V2H10.75V10.75H2V13.25H10.75V22H13.25V13.25H22V10.75H13.25Z"
                fill={
                  Array [
                    2,
                  ]
                }
                propList={
                  Array [
                    "fill",
                    "stroke",
                  ]
                }
                stroke={null}
              />
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
        <View
          dataSet={Object {}}
          style={
            Object {
              "width": 4,
            }
          }
        />
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#ea580c",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 18,
                "textDecorationLine": undefined,
              }
            }
          >
            SUCCESS
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Badge Playground 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      colorScheme="success"
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#16a34a",
          "borderColor": "transparent",
          "borderRadius": 2,
          "borderWidth": 1,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 2,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 2,
        }
      }
    >
      <View
        dataSet={Object {}}
        style={Object {}}
      >
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#fafafa",
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "500",
              "letterSpacing": 0,
              "lineHeight": 18,
              "textDecorationLine": undefined,
            }
          }
        >
          NATIVEBASE
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Badge Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        colorScheme="muted"
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#f5f5f5",
            "borderColor": "transparent",
            "borderRadius": 2,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 2,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 2,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 18,
                "textDecorationLine": undefined,
              }
            }
          >
            NEW FEATURE
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Badge Variants 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "flexDirection": "row",
            "marginLeft": "auto",
            "marginRight": "auto",
          }
        }
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <View
            colorScheme="muted"
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "center",
                "backgroundColor": "#525252",
                "borderColor": "transparent",
                "borderRadius": 2,
                "borderWidth": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 2,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 2,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafafa",
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 18,
                    "textDecorationLine": undefined,
                  }
                }
              >
                DEFAULT
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            colorScheme="success"
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "center",
                "backgroundColor": "#16a34a",
                "borderColor": "transparent",
                "borderRadius": 2,
                "borderWidth": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 2,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 2,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafafa",
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 18,
                    "textDecorationLine": undefined,
                  }
                }
              >
                SUCCESS
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            colorScheme="error"
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "center",
                "backgroundColor": "#dc2626",
                "borderColor": "transparent",
                "borderRadius": 2,
                "borderWidth": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 2,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 2,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafafa",
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 18,
                    "textDecorationLine": undefined,
                  }
                }
              >
                ERROR
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            colorScheme="info"
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "center",
                "backgroundColor": "#0284c7",
                "borderColor": "transparent",
                "borderRadius": 2,
                "borderWidth": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 2,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 2,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafafa",
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 18,
                    "textDecorationLine": undefined,
                  }
                }
              >
                INFO
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            colorScheme="warning"
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "center",
                "backgroundColor": "#ea580c",
                "borderColor": "transparent",
                "borderRadius": 2,
                "borderWidth": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 2,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 2,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafafa",
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 18,
                    "textDecorationLine": undefined,
                  }
                }
              >
                WARNING
              </Text>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "width": 16,
            }
          }
        />
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <View
            colorScheme="muted"
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "center",
                "borderColor": "#525252",
                "borderRadius": 2,
                "borderWidth": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 2,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 2,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#525252",
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 18,
                    "textDecorationLine": undefined,
                  }
                }
              >
                DEFAULT
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            colorScheme="success"
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "center",
                "borderColor": "#16a34a",
                "borderRadius": 2,
                "borderWidth": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 2,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 2,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#16a34a",
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 18,
                    "textDecorationLine": undefined,
                  }
                }
              >
                SUCCESS
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            colorScheme="error"
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "center",
                "borderColor": "#dc2626",
                "borderRadius": 2,
                "borderWidth": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 2,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 2,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#dc2626",
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 18,
                    "textDecorationLine": undefined,
                  }
                }
              >
                ERROR
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            colorScheme="info"
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "center",
                "borderColor": "#0284c7",
                "borderRadius": 2,
                "borderWidth": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 2,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 2,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#0284c7",
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 18,
                    "textDecorationLine": undefined,
                  }
                }
              >
                INFO
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            colorScheme="warning"
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "center",
                "borderColor": "#ea580c",
                "borderRadius": 2,
                "borderWidth": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 2,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 2,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#ea580c",
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 18,
                    "textDecorationLine": undefined,
                  }
                }
              >
                WARNING
              </Text>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "width": 16,
            }
          }
        />
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <View
            colorScheme="muted"
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "center",
                "backgroundColor": "#f5f5f5",
                "borderColor": "transparent",
                "borderRadius": 2,
                "borderWidth": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 2,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 2,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 18,
                    "textDecorationLine": undefined,
                  }
                }
              >
                DEFAULT
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            colorScheme="success"
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "center",
                "backgroundColor": "#dcfce7",
                "borderColor": "transparent",
                "borderRadius": 2,
                "borderWidth": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 2,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 2,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#14532d",
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 18,
                    "textDecorationLine": undefined,
                  }
                }
              >
                SUCCESS
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            colorScheme="error"
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "center",
                "backgroundColor": "#fee2e2",
                "borderColor": "transparent",
                "borderRadius": 2,
                "borderWidth": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 2,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 2,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#7f1d1d",
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 18,
                    "textDecorationLine": undefined,
                  }
                }
              >
                ERROR
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            colorScheme="info"
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "center",
                "backgroundColor": "#e0f2fe",
                "borderColor": "transparent",
                "borderRadius": 2,
                "borderWidth": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 2,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 2,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#0c4a6e",
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 18,
                    "textDecorationLine": undefined,
                  }
                }
              >
                INFO
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            colorScheme="warning"
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "center",
                "backgroundColor": "#ffedd5",
                "borderColor": "transparent",
                "borderRadius": 2,
                "borderWidth": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 2,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 2,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#7c2d12",
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 18,
                    "textDecorationLine": undefined,
                  }
                }
              >
                WARNING
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Box Basic Box 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={Object {}}
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignSelf": "center",
            "backgroundColor": "#06b6d4",
          }
        }
      >
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#fafaf9",
              "fontFamily": undefined,
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "500",
              "letterSpacing": 0.4,
              "lineHeight": 24,
              "textDecorationLine": undefined,
            }
          }
        >
          This is a Box
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Box Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": "#fafafa",
            "borderColor": "#e5e7eb",
            "borderRadius": 8,
            "borderWidth": 1,
            "maxWidth": 320,
            "overflow": "hidden",
          }
        }
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <View
            dataSet={Object {}}
            style={
              Array [
                Object {
                  "width": "100%",
                },
                Object {
                  "aspectRatio": 1.7777777777777777,
                  "style": undefined,
                },
              ]
            }
          >
            <Image
              accessibilityLabel="image"
              alt="image"
              dataSet={Object {}}
              onError={[Function]}
              source={
                Object {
                  "uri": "https://www.holidify.com/images/cmsuploads/compressed/Bangalore_citycover_20190613234056.jpg",
                }
              }
              style={
                Array [
                  Object {
                    "maxWidth": "100%",
                  },
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                ]
              }
            />
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#8b5cf6",
                "bottom": 0,
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 6,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 6,
                "position": "absolute",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafaf9",
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 18,
                  "textDecorationLine": undefined,
                }
              }
            >
              PHOTOS
            </Text>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "paddingBottom": 16,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 16,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 20,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 25,
                  "marginLeft": -4,
                  "textDecorationLine": undefined,
                }
              }
            >
              The Garden City
            </Text>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#8b5cf6",
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 18,
                  "marginLeft": -2,
                  "marginTop": -4,
                  "textDecorationLine": undefined,
                }
              }
            >
              The Silicon Valley of India.
            </Text>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Bengaluru (also called Bangalore) is the center of India's high-tech industry. The city is also known for its parks and nightlife.
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#4b5563",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                6 mins ago
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Box LinearGradient Box 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <ViewManagerAdapter_ExpoLinearGradient
      proxiedProperties={
        Object {
          "colors": Array [
            4286436348,
            4284162486,
          ],
          "dataSet": Object {},
          "endPoint": Array [
            1,
            0,
          ],
          "locations": undefined,
          "startPoint": Array [
            0,
            0,
          ],
        }
      }
      style={
        Object {
          "borderRadius": 12,
          "paddingBottom": 48,
          "paddingLeft": 48,
          "paddingRight": 48,
          "paddingTop": 48,
          "width": 288,
        }
      }
    >
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#fafaf9",
            "fontFamily": undefined,
            "fontSize": 16,
            "fontStyle": "normal",
            "fontWeight": "500",
            "letterSpacing": 0,
            "lineHeight": 24,
            "textAlign": "center",
            "textDecorationLine": undefined,
          }
        }
      >
        This is a Box with Linear Gradient
      </Text>
    </ViewManagerAdapter_ExpoLinearGradient>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Box With Ref 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "backgroundColor": "#06b6d4",
          "elevation": 3,
          "paddingBottom": 16,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 16,
          "shadowColor": "#000000",
          "shadowOffset": Object {
            "height": 1,
            "width": 0,
          },
          "shadowOpacity": 0.22,
          "shadowRadius": 2.22,
          "width": "100%",
        }
      }
    >
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#FFFFFF",
            "fontFamily": undefined,
            "fontSize": 16,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 24,
            "textDecorationLine": undefined,
          }
        }
      >
        This is a Box
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Breadcrumb Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={Object {}}
    >
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": null,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginBottom": 16,
            "textDecorationLine": undefined,
          }
        }
      >
        Default Breadcrumb
      </Text>
      <View
        accessibilityLabel="Breadcrumb"
        dataSet={Object {}}
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
            "flexWrap": "wrap",
            "height": "auto",
            "width": "auto",
          }
        }
        wrap="wrap"
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              dataSet={Object {}}
              direction="row"
              spacing="2"
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#ef4444",
                  "display": "flex",
                  "flexDirection": "row",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "height": "auto",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                  "width": "auto",
                }
              }
              wrap="wrap"
            >
              Home (This is currently active)
            </Text>
          </View>
        </View>
        <Text
          dataSet={Object {}}
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#171717",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          /
        </Text>
        <View
          dataSet={Object {}}
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              dataSet={Object {}}
              direction="row"
              spacing="2"
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "display": "flex",
                  "flexDirection": "row",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": "auto",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                  "width": "auto",
                }
              }
              wrap="wrap"
            >
              Docs
            </Text>
          </View>
        </View>
        <Text
          dataSet={Object {}}
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#171717",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          /
        </Text>
        <View
          dataSet={Object {}}
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              dataSet={Object {}}
              direction="row"
              spacing="2"
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "display": "flex",
                  "flexDirection": "row",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": "auto",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                  "width": "auto",
                }
              }
              wrap="wrap"
            >
              Github
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Breadcrumb Collapsible 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={Object {}}
    >
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": null,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginBottom": 16,
            "textDecorationLine": undefined,
          }
        }
      >
        Breadcrumb Collapsible
      </Text>
      <View
        accessibilityLabel="Breadcrumb"
        dataSet={Object {}}
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
            "flexWrap": "wrap",
            "height": "auto",
            "marginTop": 12,
            "width": "auto",
          }
        }
        wrap="wrap"
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <Text
                allowFontScaling={false}
                dataSet={Object {}}
                direction="row"
                spacing="2"
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Object {
                      "color": "#737373",
                      "display": "flex",
                      "flexDirection": "row",
                      "fontSize": 12,
                      "height": 12,
                      "lineHeight": 12,
                      "marginRight": 4,
                      "width": 12,
                    },
                    Object {
                      "fontFamily": "material",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
                wrap="wrap"
              >
                
              </Text>
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <Text
                dataSet={Object {}}
                direction="row"
                spacing="2"
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "display": "flex",
                    "flexDirection": "row",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "height": "auto",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                    "width": "auto",
                  }
                }
                wrap="wrap"
              >
                Home
              </Text>
            </View>
          </View>
        </View>
        <Text
          dataSet={Object {}}
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#171717",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          /
        </Text>
        <View
          _text={Object {}}
          accessible={true}
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          setCollapsed={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
            }
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={16}
            bbWidth={16}
            color={4285756275}
            dataSet={Object {}}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Object {
                  "color": "#737373",
                  "height": 16,
                  "width": 16,
                },
                Object {
                  "flex": 0,
                  "height": 16,
                  "width": 16,
                },
              ]
            }
            tintColor={4285756275}
            vbHeight={32.055}
            vbWidth={32.055}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGGroup
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGPath
                    d="M3.968,12.061C1.775,12.061,0,13.835,0,16.027c0,2.192,1.773,3.967,3.968,3.967c2.189,0,3.966-1.772,3.966-3.967   C7.934,13.835,6.157,12.061,3.968,12.061z M16.233,12.061c-2.188,0-3.968,1.773-3.968,3.965c0,2.192,1.778,3.967,3.968,3.967   s3.97-1.772,3.97-3.967C20.201,13.835,18.423,12.061,16.233,12.061z M28.09,12.061c-2.192,0-3.969,1.774-3.969,3.967   c0,2.19,1.774,3.965,3.969,3.965c2.188,0,3.965-1.772,3.965-3.965S30.278,12.061,28.09,12.061z"
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <Text
          dataSet={Object {}}
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#171717",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          /
        </Text>
        <View
          dataSet={Object {}}
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <Text
                allowFontScaling={false}
                dataSet={Object {}}
                direction="row"
                spacing="2"
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Object {
                      "color": "#ef4444",
                      "display": "flex",
                      "flexDirection": "row",
                      "fontSize": 12,
                      "height": 12,
                      "lineHeight": 12,
                      "marginRight": 4,
                      "width": 12,
                    },
                    Object {
                      "fontFamily": "anticon",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
                wrap="wrap"
              >
                
              </Text>
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <Text
                dataSet={Object {}}
                direction="row"
                spacing="2"
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#ef4444",
                    "display": "flex",
                    "flexDirection": "row",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "height": "auto",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                    "width": "auto",
                  }
                }
                wrap="wrap"
              >
                Github (This is currently active)
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "marginTop": 12,
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="gray"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#d4d4d4",
            "borderRadius": 4,
            "borderWidth": 0,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#52525b",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Expand
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Breadcrumb ComponentSeparator 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={Object {}}
    >
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": null,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginBottom": 16,
            "textDecorationLine": undefined,
          }
        }
      >
        Breadcrumb with Custom Separator
      </Text>
      <View
        accessibilityLabel="Breadcrumb"
        dataSet={Object {}}
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
            "flexWrap": "wrap",
            "height": "auto",
            "width": "auto",
          }
        }
        wrap="wrap"
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": "none",
                }
              }
            >
              Home (This is currently active)
            </Text>
          </View>
        </View>
        <Text />
        <View
          dataSet={Object {}}
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": "none",
                }
              }
            >
              Docs
            </Text>
          </View>
        </View>
        <Text />
        <View
          dataSet={Object {}}
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": "none",
                }
              }
            >
              Github
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Breadcrumb Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={Object {}}
    >
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": null,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginBottom": 16,
            "textDecorationLine": undefined,
          }
        }
      >
        Breadcrumb Composition
      </Text>
      <View
        accessibilityLabel="Breadcrumb"
        dataSet={Object {}}
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
            "flexWrap": "wrap",
            "height": "auto",
            "width": "auto",
          }
        }
        wrap="wrap"
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
            >
              <Text />
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <Text
                dataSet={Object {}}
                direction="row"
                spacing="2"
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "display": "flex",
                    "flexDirection": "row",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "height": "auto",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                    "width": "auto",
                  }
                }
                wrap="wrap"
              >
                Home
              </Text>
            </View>
          </View>
        </View>
        <Text
          dataSet={Object {}}
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#171717",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          /
        </Text>
        <View
          dataSet={Object {}}
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
            >
              <Text />
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <Text
                dataSet={Object {}}
                direction="row"
                spacing="2"
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "display": "flex",
                    "flexDirection": "row",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "height": "auto",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                    "width": "auto",
                  }
                }
                wrap="wrap"
              >
                Docs
              </Text>
            </View>
          </View>
        </View>
        <Text
          dataSet={Object {}}
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#171717",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          /
        </Text>
        <View
          dataSet={Object {}}
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
            >
              <Text />
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <Text
                dataSet={Object {}}
                direction="row"
                spacing="2"
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "display": "flex",
                    "flexDirection": "row",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "height": "auto",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                    "width": "auto",
                  }
                }
                wrap="wrap"
              >
                Github (This is currently active)
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Breadcrumb Separators 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={Object {}}
    >
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": null,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginBottom": 16,
            "textDecorationLine": undefined,
          }
        }
      >
        Breadcrumb with String Separator
      </Text>
      <View
        accessibilityLabel="Breadcrumb"
        dataSet={Object {}}
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
            "flexWrap": "wrap",
            "height": "auto",
            "width": "auto",
          }
        }
        wrap="wrap"
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              dataSet={Object {}}
              direction="row"
              spacing="2"
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#ef4444",
                  "display": "flex",
                  "flexDirection": "row",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "height": "auto",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                  "width": "auto",
                }
              }
              wrap="wrap"
            >
              Home (This is currently active)
            </Text>
          </View>
        </View>
        <Text
          dataSet={Object {}}
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#171717",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          -
        </Text>
        <View
          dataSet={Object {}}
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": "none",
                }
              }
            >
              Docs
            </Text>
          </View>
        </View>
        <Text
          dataSet={Object {}}
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#171717",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          -
        </Text>
        <View
          dataSet={Object {}}
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": "none",
                }
              }
            >
              Github
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Button Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Click Me
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Button Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderColor": "#d4d4d4",
          "borderRadius": 999,
          "borderWidth": 2,
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "center",
          "marginLeft": "auto",
          "marginRight": "auto",
          "paddingBottom": 10,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 10,
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
        test={true}
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#0891b2",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            SHOP NOW
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Button Icons 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "flexDirection": "column",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <Text
            allowFontScaling={false}
            dataSet={Object {}}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Object {
                  "color": "#fafafa",
                  "fontSize": 16,
                  "height": 16,
                  "lineHeight": 16,
                  "width": 16,
                },
                Object {
                  "fontFamily": "ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 6,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Upload
            </Text>
          </View>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#cffafe",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#164e63",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Download
            </Text>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 6,
              }
            }
          />
          <Text
            allowFontScaling={false}
            dataSet={Object {}}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Object {
                  "color": "#164e63",
                  "fontSize": 16,
                  "height": 16,
                  "lineHeight": 16,
                  "width": 16,
                },
                Object {
                  "fontFamily": "ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Button Loading 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "column",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "opacity": 0.4,
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <ActivityIndicator
            accessibilityLabel="loading"
            accessible={true}
            animating={true}
            color="#fafafa"
            hidesWhenStopped={true}
            size="small"
            style={
              Array [
                Array [
                  Object {},
                  Object {
                    "dataSet": Object {},
                    "focusable": false,
                  },
                ],
                undefined,
              ]
            }
          />
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "opacity": 0.4,
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <ActivityIndicator
            accessibilityLabel="loading"
            accessible={true}
            animating={true}
            color="#fafafa"
            hidesWhenStopped={true}
            size="small"
            style={
              Array [
                Array [
                  Object {},
                  Object {
                    "dataSet": Object {},
                    "focusable": false,
                  },
                ],
                undefined,
              ]
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 6,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Submitting
            </Text>
          </View>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "opacity": 0.4,
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Submitting
            </Text>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 6,
              }
            }
          />
          <ActivityIndicator
            accessibilityLabel="loading"
            accessible={true}
            animating={true}
            color="#fafafa"
            hidesWhenStopped={true}
            size="small"
            style={
              Array [
                Array [
                  Object {},
                  Object {
                    "dataSet": Object {},
                    "focusable": false,
                  },
                ],
                undefined,
              ]
            }
          />
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(251, 191, 36, 0.7)",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "opacity": 0.4,
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <ActivityIndicator
            accessibilityLabel="loading"
            accessible={true}
            animating={true}
            color="#FFFFFF"
            hidesWhenStopped={true}
            size="small"
            style={
              Array [
                Array [
                  Object {},
                  Object {
                    "dataSet": Object {},
                    "focusable": false,
                  },
                ],
                undefined,
              ]
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 6,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#374151",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Submitting
            </Text>
          </View>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#d4d4d4",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "opacity": 0.4,
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <ActivityIndicator
            accessibilityLabel="loading"
            accessible={true}
            animating={true}
            color="#0891b2"
            hidesWhenStopped={true}
            size="small"
            style={
              Array [
                Array [
                  Object {},
                  Object {
                    "dataSet": Object {},
                    "focusable": false,
                  },
                ],
                undefined,
              ]
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 6,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#0891b2",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Submitting
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Button Sizes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 10,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 15,
                  "textDecorationLine": undefined,
                }
              }
            >
              BUTTON
            </Text>
          </View>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 18,
                  "textDecorationLine": undefined,
                }
              }
            >
              BUTTON
            </Text>
          </View>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              BUTTON
            </Text>
          </View>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "textDecorationLine": undefined,
                }
              }
            >
              BUTTON
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Button Variants 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RCTScrollView
      contentContainerStyle={
        Array [
          Object {},
          Object {
            "dataSet": Object {},
          },
        ]
      }
      dataSet={Object {}}
      showsVerticalScrollIndicator={false}
      style={
        Object {
          "paddingLeft": 12,
          "paddingRight": 12,
        }
      }
    >
      <View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "marginTop": 16,
              "paddingLeft": 8,
              "paddingRight": 8,
              "width": "100%",
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Solid
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "flexDirection": "column",
                "marginBottom": 10,
                "marginLeft": "auto",
                "marginRight": "auto",
                "marginTop": 6,
              }
            }
          >
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0891b2",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#fafafa",
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 18,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    PRIMARY
                  </Text>
                </View>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="secondary"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#db2777",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#fafafa",
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 18,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    SECONDARY
                  </Text>
                </View>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0891b2",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "opacity": 0.4,
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#fafafa",
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 18,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    DISABLED
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#d4d4d4",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Subtle
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "flexDirection": "column",
                "marginBottom": 10,
                "marginLeft": "auto",
                "marginRight": "auto",
                "marginTop": 6,
              }
            }
          >
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#cffafe",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#164e63",
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 18,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    PRIMARY
                  </Text>
                </View>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="secondary"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fce7f3",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#831843",
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 18,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    SECONDARY
                  </Text>
                </View>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#cffafe",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "opacity": 0.4,
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#164e63",
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 18,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    DISABLED
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#d4d4d4",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Outline
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "flexDirection": "column",
                "marginBottom": 10,
                "marginLeft": "auto",
                "marginRight": "auto",
                "marginTop": 6,
              }
            }
          >
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#0891b2",
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 18,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    PRIMARY
                  </Text>
                </View>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="secondary"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#db2777",
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 18,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    SECONDARY
                  </Text>
                </View>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "opacity": 0.4,
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#0891b2",
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 18,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    DISABLED
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#d4d4d4",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Link
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "flexDirection": "column",
                "marginBottom": 10,
                "marginLeft": "auto",
                "marginRight": "auto",
                "marginTop": 6,
              }
            }
          >
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#0891b2",
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 18,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    PRIMARY
                  </Text>
                </View>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="secondary"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#db2777",
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 18,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    SECONDARY
                  </Text>
                </View>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "opacity": 0.4,
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#0891b2",
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 18,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    DISABLED
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#d4d4d4",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Ghost
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "flexDirection": "column",
                "marginBottom": 10,
                "marginLeft": "auto",
                "marginRight": "auto",
                "marginTop": 6,
              }
            }
          >
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#0891b2",
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 18,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    PRIMARY
                  </Text>
                </View>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="secondary"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#db2777",
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 18,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    SECONDARY
                  </Text>
                </View>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "opacity": 0.4,
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#0891b2",
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 18,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    DISABLED
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#d4d4d4",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Unstyled
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "flexDirection": "column",
                "marginBottom": 10,
                "marginLeft": "auto",
                "marginRight": "auto",
                "marginTop": 6,
              }
            }
          >
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 10,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#171717",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Unstyled
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Button WithRef 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1F2937",
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 18,
                  "textDecorationLine": undefined,
                }
              }
            >
              Send
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots ButtonGroup Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "flexDirection": "row",
          "marginLeft": "auto",
          "marginRight": "auto",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="blue"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#2563eb",
            "borderBottomLeftRadius": 4,
            "borderRadius": 0,
            "borderTopLeftRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 18,
                  "textDecorationLine": undefined,
                }
              }
            >
              Edit
            </Text>
          </View>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "width": 0,
          }
        }
      />
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="blue"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "borderBottomRightRadius": 4,
            "borderColor": "#d4d4d4",
            "borderLeftWidth": 0,
            "borderRadius": 0,
            "borderTopRightRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#2563eb",
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 18,
                  "textDecorationLine": undefined,
                }
              }
            >
              Save
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots ButtonGroup Sizes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 20,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 25,
            "marginBottom": 40,
            "textDecorationLine": undefined,
          }
        }
      >
        Sizes
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "column",
          }
        }
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <View
            accessibilityRole="button"
            accessible={true}
            colorScheme="primary"
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#0891b2",
                "borderRadius": 4,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 8,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 8,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
              test={true}
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#fafafa",
                      "fontFamily": undefined,
                      "fontSize": 10,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 15,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  BUTTON
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <View
            accessibilityRole="button"
            accessible={true}
            colorScheme="primary"
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#0891b2",
                "borderRadius": 4,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 8,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 8,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
              test={true}
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#fafafa",
                      "fontFamily": undefined,
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 18,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  BUTTON
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <View
            accessibilityRole="button"
            accessible={true}
            colorScheme="primary"
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#0891b2",
                "borderRadius": 4,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 10,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 10,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
              test={true}
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#fafafa",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  BUTTON
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <View
            accessibilityRole="button"
            accessible={true}
            colorScheme="primary"
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#0891b2",
                "borderRadius": 4,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
              test={true}
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#fafafa",
                      "fontFamily": undefined,
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 24,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  BUTTON
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots ButtonGroup Variants 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RCTScrollView
      contentContainerStyle={
        Array [
          Object {},
          Object {
            "dataSet": Object {},
          },
        ]
      }
      dataSet={Object {}}
      style={Object {}}
    >
      <View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "marginTop": 16,
              "width": "100%",
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Solid
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "flexDirection": "row",
                "marginBottom": 10,
                "marginTop": 6,
              }
            }
          >
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="teal"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0d9488",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 10,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#fafafa",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Save
                  </Text>
                </View>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="danger"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#e11d48",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 10,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#fafafa",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Cancel
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#d4d4d4",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Subtle
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "flexDirection": "row",
                "marginBottom": 10,
                "marginTop": 6,
              }
            }
          >
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="teal"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ccfbf1",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 10,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#134e4a",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Save
                  </Text>
                </View>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="danger"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ffe4e6",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 10,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#881337",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Cancel
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#d4d4d4",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Outline
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "flexDirection": "row",
                "marginBottom": 10,
                "marginTop": 6,
              }
            }
          >
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="teal"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 10,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#0d9488",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Save
                  </Text>
                </View>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="danger"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 10,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#e11d48",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Cancel
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#d4d4d4",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Link
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "flexDirection": "row",
                "marginBottom": 10,
                "marginTop": 6,
              }
            }
          >
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="teal"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 10,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#0d9488",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Save
                  </Text>
                </View>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="danger"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 10,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#e11d48",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Cancel
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#d4d4d4",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Ghost
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "flexDirection": "row",
                "marginBottom": 10,
                "marginTop": 6,
              }
            }
          >
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="teal"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 10,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#0d9488",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Save
                  </Text>
                </View>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="danger"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 10,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#e11d48",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Cancel
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#d4d4d4",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Unstyled
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "flexDirection": "row",
                "marginBottom": 10,
                "marginTop": 6,
              }
            }
          >
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="teal"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 10,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#171717",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Save
                  </Text>
                </View>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="danger"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 10,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#171717",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Cancel
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots ButtonGroup direction 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "paddingLeft": 8,
          "paddingRight": 8,
          "width": "50%",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "center",
            "width": "100%",
          }
        }
      >
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#171717",
              "fontFamily": undefined,
              "fontSize": 20,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 25,
              "marginBottom": 16,
              "textDecorationLine": undefined,
            }
          }
        >
          Row
        </Text>
        <View
          dataSet={Object {}}
          style={
            Object {
              "flexDirection": "row",
              "marginLeft": "auto",
              "marginRight": "auto",
            }
          }
        >
          <View
            accessibilityRole="button"
            accessible={true}
            colorScheme="teal"
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#0d9488",
                "borderRadius": 4,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 10,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 10,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
              test={true}
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#fafafa",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Save
                </Text>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 8,
              }
            }
          />
          <View
            accessibilityRole="button"
            accessible={true}
            colorScheme="rose"
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#e11d48",
                "borderRadius": 4,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 10,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 10,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
              test={true}
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#fafafa",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Cancel
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          aria-orientation="horizontal"
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": "#d4d4d4",
              "height": 1,
              "marginTop": 20,
              "width": "100%",
            }
          }
          thickness="1"
        />
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 10,
          }
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "center",
          }
        }
      >
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#171717",
              "fontFamily": undefined,
              "fontSize": 20,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 25,
              "marginBottom": 16,
              "textDecorationLine": undefined,
            }
          }
        >
          Column
        </Text>
        <View
          dataSet={Object {}}
          style={
            Object {
              "flexDirection": "column",
              "marginLeft": "auto",
              "marginRight": "auto",
            }
          }
        >
          <View
            accessibilityRole="button"
            accessible={true}
            colorScheme="teal"
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#0d9488",
                "borderRadius": 4,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 10,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 10,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
              test={true}
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#fafafa",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Save
                </Text>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 8,
              }
            }
          />
          <View
            accessibilityRole="button"
            accessible={true}
            colorScheme="rose"
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#e11d48",
                "borderRadius": 4,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 10,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 10,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
              test={true}
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#fafafa",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Cancel
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots ButtonGroup isAttached 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RCTScrollView
      contentContainerStyle={
        Array [
          Object {},
          Object {
            "dataSet": Object {},
          },
        ]
      }
      dataSet={Object {}}
      style={Object {}}
    >
      <View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "marginTop": 16,
              "width": "100%",
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Solid
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "flexDirection": "row",
                "marginBottom": 10,
                "marginLeft": "auto",
                "marginRight": "auto",
                "marginTop": 6,
              }
            }
          >
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="teal"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0d9488",
                  "borderBottomLeftRadius": 4,
                  "borderRadius": 0,
                  "borderTopLeftRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 10,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#fafafa",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Save
                  </Text>
                </View>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 0,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="danger"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#e11d48",
                  "borderBottomRightRadius": 4,
                  "borderLeftWidth": 0,
                  "borderRadius": 0,
                  "borderTopRightRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 10,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#fafafa",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Cancel
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#d4d4d4",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Outline
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "flexDirection": "row",
                "marginBottom": 10,
                "marginLeft": "auto",
                "marginRight": "auto",
                "marginTop": 6,
              }
            }
          >
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="teal"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderBottomLeftRadius": 4,
                  "borderColor": "#d4d4d4",
                  "borderRadius": 0,
                  "borderTopLeftRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 10,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#0d9488",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Save
                  </Text>
                </View>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 0,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="danger"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderBottomRightRadius": 4,
                  "borderColor": "#d4d4d4",
                  "borderLeftWidth": 0,
                  "borderRadius": 0,
                  "borderTopRightRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 10,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#e11d48",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Cancel
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#d4d4d4",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Link
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "flexDirection": "row",
                "marginBottom": 10,
                "marginLeft": "auto",
                "marginRight": "auto",
                "marginTop": 6,
              }
            }
          >
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="teal"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderBottomLeftRadius": 4,
                  "borderRadius": 0,
                  "borderTopLeftRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 10,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#0d9488",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Save
                  </Text>
                </View>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 0,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="danger"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderBottomRightRadius": 4,
                  "borderLeftWidth": 0,
                  "borderRadius": 0,
                  "borderTopRightRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 10,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#e11d48",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Cancel
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#d4d4d4",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Ghost
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "flexDirection": "row",
                "marginBottom": 10,
                "marginTop": 6,
              }
            }
          >
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="teal"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 10,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#0d9488",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Save
                  </Text>
                </View>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="danger"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 10,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#e11d48",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Cancel
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#d4d4d4",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Unstyled
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "flexDirection": "row",
                "marginBottom": 10,
                "marginLeft": "auto",
                "marginRight": "auto",
                "marginTop": 6,
              }
            }
          >
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="teal"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderBottomLeftRadius": 4,
                  "borderRadius": 0,
                  "borderTopLeftRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 10,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#171717",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Save
                  </Text>
                </View>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 0,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="danger"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderBottomRightRadius": 4,
                  "borderLeftWidth": 0,
                  "borderRadius": 0,
                  "borderTopRightRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 10,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#171717",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Cancel
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Card Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "backgroundColor": "#0e7490",
          "borderRadius": 6,
          "elevation": 5,
          "overflow": "hidden",
          "paddingBottom": 16,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 16,
          "shadowColor": "#000000",
          "shadowOffset": Object {
            "height": 2,
            "width": 0,
          },
          "shadowOpacity": 0.25,
          "shadowRadius": 3.84,
          "width": 296,
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "flex-start",
            "flexDirection": "row",
          }
        }
      >
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#ecfeff",
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "500",
              "letterSpacing": 0,
              "lineHeight": 18,
              "textDecorationLine": undefined,
            }
          }
        >
          Open Source
        </Text>
        <View
          dataSet={Object {}}
          style={Object {}}
        />
        <View
          dataSet={Object {}}
          style={
            Object {
              "flexGrow": 1,
            }
          }
        />
        <View
          dataSet={Object {}}
          style={Object {}}
        />
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#cffafe",
              "fontFamily": undefined,
              "fontSize": 10,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 15,
              "textDecorationLine": undefined,
            }
          }
        >
          1 month ago
        </Text>
      </View>
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#ecfeff",
            "fontFamily": undefined,
            "fontSize": 18,
            "fontStyle": "normal",
            "fontWeight": "500",
            "letterSpacing": 0,
            "lineHeight": 22.5,
            "marginTop": 8,
            "textDecorationLine": undefined,
          }
        }
      >
        NativeBase
      </Text>
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#FFFFFF",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "marginTop": 4,
            "textDecorationLine": undefined,
          }
        }
      >
        NativeBase is a component library that enables devs to build universal design systems.
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "display": "flex",
            "flexDirection": "column",
          }
        }
      >
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#22d3ee",
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "500",
              "letterSpacing": 0,
              "lineHeight": 18,
              "marginTop": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          Read More
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Center Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#22d3ee",
            "display": "flex",
            "height": 200,
            "justifyContent": "center",
            "width": 200,
          }
        }
      >
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#FFFFFF",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": undefined,
            }
          }
        >
          This is the Center
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Center SquareCircle 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#f472b6",
            "borderRadius": 9999,
            "height": 40,
            "justifyContent": "center",
            "width": 40,
          }
        }
      >
        <Text
          allowFontScaling={false}
          dataSet={Object {}}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Object {
                "color": "#FFFFFF",
                "fontSize": 20,
                "height": 20,
                "lineHeight": 20,
                "width": 20,
              },
              Object {
                "fontFamily": "material",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "width": 12,
          }
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#22d3ee",
            "height": 40,
            "justifyContent": "center",
            "width": 40,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 18,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 27,
                "textDecorationLine": undefined,
              }
            }
          >
            20
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Center WithIcons 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#22d3ee",
            "display": "flex",
            "height": 40,
            "justifyContent": "center",
            "width": 40,
          }
        }
      >
        <Text
          allowFontScaling={false}
          dataSet={Object {}}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Object {
                "color": "#FFFFFF",
                "fontSize": 24,
                "height": 24,
                "lineHeight": 24,
                "width": 24,
              },
              Object {
                "fontFamily": "material",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "width": 4,
          }
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#f472b6",
            "display": "flex",
            "height": 40,
            "justifyContent": "center",
            "width": 40,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 18,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 27,
                "textDecorationLine": undefined,
              }
            }
          >
            20
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": false,
            "disabled": undefined,
          }
        }
        accessible={true}
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              accessibilityLabel="This is a dummy checkbox"
              checked={false}
              colorScheme="primary"
              dataSet={Object {}}
              defaultIsChecked={false}
              disabled={false}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#a3a3a3",
                  "borderRadius": 4,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                  "opacity": 1,
                  "paddingBottom": 2,
                  "paddingLeft": 2,
                  "paddingRight": 2,
                  "paddingTop": 2,
                }
              }
              value="test"
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "color": "#fafafa",
                    "height": 12,
                    "width": 12,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "width": 24,
          }
        }
      />
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": undefined,
          }
        }
        accessible={true}
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              accessibilityLabel="This is a dummy checkbox"
              checked={true}
              colorScheme="primary"
              dataSet={Object {}}
              defaultIsChecked={true}
              disabled={false}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0891b2",
                  "borderColor": "#0891b2",
                  "borderRadius": 4,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                  "opacity": 1,
                  "paddingBottom": 2,
                  "paddingLeft": 2,
                  "paddingRight": 2,
                  "paddingTop": 2,
                }
              }
              value="test"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={12}
                bbWidth={12}
                color={4294638330}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#fafafa",
                      "height": 12,
                      "width": 12,
                    },
                    Object {
                      "flex": 0,
                      "height": 12,
                      "width": 12,
                    },
                  ]
                }
                tintColor={4294638330}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M8.53115 15.1856L3.96198 10.744L2 12.6512L8.53115 19L22 5.9072L20.038 4L8.53115 15.1856Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Checkbox Group 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={Object {}}
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "baseline",
              "flexDirection": "row",
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 18,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 22.5,
                "textDecorationLine": undefined,
              }
            }
          >
            Hobbies
          </Text>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Selected: (
              2
              )
            </Text>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityLabel="pick an item"
          accessibilityState={
            Object {
              "disabled": undefined,
            }
          }
          aria-label="pick an item"
          dataSet={Object {}}
          defaultValue={
            Array [
              "Photography",
              "Gardening",
            ]
          }
          onChange={[Function]}
          style={
            Object {
              "alignItems": "flex-start",
            }
          }
        >
          <View
            accessibilityRole="checkbox"
            accessibilityState={
              Object {
                "checked": true,
                "disabled": false,
              }
            }
            accessible={true}
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={Object {}}
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                />
                <View
                  checked={true}
                  colorScheme="green"
                  dataSet={Object {}}
                  defaultIsChecked={false}
                  disabled={false}
                  isDisabled={false}
                  isReadOnly={false}
                  readOnly={false}
                  state={
                    Object {
                      "addValue": [Function],
                      "isDisabled": false,
                      "isReadOnly": false,
                      "isSelected": [Function],
                      "removeValue": [Function],
                      "setValue": [Function],
                      "toggleValue": [Function],
                      "value": Array [
                        "Photography",
                        "Gardening",
                      ],
                    }
                  }
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#16a34a",
                      "borderColor": "#16a34a",
                      "borderRadius": 4,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "opacity": 1,
                      "paddingBottom": 2,
                      "paddingLeft": 2,
                      "paddingRight": 2,
                      "paddingTop": 2,
                    }
                  }
                  value="Photography"
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={12}
                    bbWidth={12}
                    color={4294638330}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#fafafa",
                          "height": 12,
                          "width": 12,
                        },
                        Object {
                          "flex": 0,
                          "height": 12,
                          "width": 12,
                        },
                      ]
                    }
                    tintColor={4294638330}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M8.53115 15.1856L3.96198 10.744L2 12.6512L8.53115 19L22 5.9072L20.038 4L8.53115 15.1856Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#000000",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "marginLeft": 8,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Photography
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="checkbox"
            accessibilityState={
              Object {
                "checked": false,
                "disabled": false,
              }
            }
            accessible={true}
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={Object {}}
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                />
                <View
                  checked={false}
                  colorScheme="green"
                  dataSet={Object {}}
                  defaultIsChecked={false}
                  disabled={false}
                  isDisabled={false}
                  isReadOnly={false}
                  readOnly={false}
                  state={
                    Object {
                      "addValue": [Function],
                      "isDisabled": false,
                      "isReadOnly": false,
                      "isSelected": [Function],
                      "removeValue": [Function],
                      "setValue": [Function],
                      "toggleValue": [Function],
                      "value": Array [
                        "Photography",
                        "Gardening",
                      ],
                    }
                  }
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#a3a3a3",
                      "borderRadius": 4,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "opacity": 1,
                      "paddingBottom": 2,
                      "paddingLeft": 2,
                      "paddingRight": 2,
                      "paddingTop": 2,
                    }
                  }
                  value="Writing"
                >
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "color": "#fafafa",
                        "height": 12,
                        "width": 12,
                      }
                    }
                  />
                </View>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#000000",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "marginLeft": 8,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Writing
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="checkbox"
            accessibilityState={
              Object {
                "checked": true,
                "disabled": false,
              }
            }
            accessible={true}
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={Object {}}
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                />
                <View
                  checked={true}
                  colorScheme="green"
                  dataSet={Object {}}
                  defaultIsChecked={false}
                  disabled={false}
                  isDisabled={false}
                  isReadOnly={false}
                  readOnly={false}
                  state={
                    Object {
                      "addValue": [Function],
                      "isDisabled": false,
                      "isReadOnly": false,
                      "isSelected": [Function],
                      "removeValue": [Function],
                      "setValue": [Function],
                      "toggleValue": [Function],
                      "value": Array [
                        "Photography",
                        "Gardening",
                      ],
                    }
                  }
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#16a34a",
                      "borderColor": "#16a34a",
                      "borderRadius": 4,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "opacity": 1,
                      "paddingBottom": 2,
                      "paddingLeft": 2,
                      "paddingRight": 2,
                      "paddingTop": 2,
                    }
                  }
                  value="Gardening"
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={12}
                    bbWidth={12}
                    color={4294638330}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#fafafa",
                          "height": 12,
                          "width": 12,
                        },
                        Object {
                          "flex": 0,
                          "height": 12,
                          "width": 12,
                        },
                      ]
                    }
                    tintColor={4294638330}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M8.53115 15.1856L3.96198 10.744L2 12.6512L8.53115 19L22 5.9072L20.038 4L8.53115 15.1856Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#000000",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "marginLeft": 8,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Gardening
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="checkbox"
            accessibilityState={
              Object {
                "checked": false,
                "disabled": false,
              }
            }
            accessible={true}
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={Object {}}
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                />
                <View
                  checked={false}
                  colorScheme="green"
                  dataSet={Object {}}
                  defaultIsChecked={false}
                  disabled={false}
                  isDisabled={false}
                  isReadOnly={false}
                  readOnly={false}
                  state={
                    Object {
                      "addValue": [Function],
                      "isDisabled": false,
                      "isReadOnly": false,
                      "isSelected": [Function],
                      "removeValue": [Function],
                      "setValue": [Function],
                      "toggleValue": [Function],
                      "value": Array [
                        "Photography",
                        "Gardening",
                      ],
                    }
                  }
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#a3a3a3",
                      "borderRadius": 4,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "opacity": 1,
                      "paddingBottom": 2,
                      "paddingLeft": 2,
                      "paddingRight": 2,
                      "paddingTop": 2,
                    }
                  }
                  value="Cooking"
                >
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "color": "#fafafa",
                        "height": 12,
                        "width": 12,
                      }
                    }
                  />
                </View>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#000000",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "marginLeft": 8,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Cooking
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Controlled checkbox 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityLabel="choose numbers"
      accessibilityState={
        Object {
          "disabled": undefined,
        }
      }
      aria-label="choose numbers"
      dataSet={Object {}}
      onChange={[Function]}
      style={
        Object {
          "alignItems": "flex-start",
        }
      }
      value={Array []}
    >
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": false,
            "disabled": false,
          }
        }
        accessible={true}
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "marginBottom": 8,
              "marginTop": 8,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              checked={false}
              colorScheme="primary"
              dataSet={Object {}}
              defaultIsChecked={false}
              disabled={false}
              isDisabled={false}
              isReadOnly={false}
              readOnly={false}
              state={
                Object {
                  "addValue": [Function],
                  "isDisabled": false,
                  "isReadOnly": false,
                  "isSelected": [Function],
                  "removeValue": [Function],
                  "setValue": [Function],
                  "toggleValue": [Function],
                  "value": Array [],
                }
              }
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#a3a3a3",
                  "borderRadius": 4,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                  "opacity": 1,
                  "paddingBottom": 2,
                  "paddingLeft": 2,
                  "paddingRight": 2,
                  "paddingTop": 2,
                }
              }
              value="one"
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "color": "#fafafa",
                    "height": 12,
                    "width": 12,
                  }
                }
              />
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 8,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "marginLeft": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            UX Research
          </Text>
        </View>
      </View>
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": false,
            "disabled": false,
          }
        }
        accessible={true}
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              checked={false}
              colorScheme="primary"
              dataSet={Object {}}
              defaultIsChecked={false}
              disabled={false}
              isDisabled={false}
              isReadOnly={false}
              readOnly={false}
              state={
                Object {
                  "addValue": [Function],
                  "isDisabled": false,
                  "isReadOnly": false,
                  "isSelected": [Function],
                  "removeValue": [Function],
                  "setValue": [Function],
                  "toggleValue": [Function],
                  "value": Array [],
                }
              }
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#a3a3a3",
                  "borderRadius": 4,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                  "opacity": 1,
                  "paddingBottom": 2,
                  "paddingLeft": 2,
                  "paddingRight": 2,
                  "paddingTop": 2,
                }
              }
              value="two"
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "color": "#fafafa",
                    "height": 12,
                    "width": 12,
                  }
                }
              />
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 8,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "marginLeft": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            Software Development
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Custom Color 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "flex-start",
            "flexDirection": "column",
          }
        }
      >
        <View
          accessibilityRole="checkbox"
          accessibilityState={
            Object {
              "checked": true,
              "disabled": undefined,
            }
          }
          accessible={true}
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={Object {}}
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "flex-start",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <View
                checked={true}
                colorScheme="danger"
                dataSet={Object {}}
                defaultIsChecked={true}
                disabled={false}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#e11d48",
                    "borderColor": "#e11d48",
                    "borderRadius": 4,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "opacity": 1,
                    "paddingBottom": 2,
                    "paddingLeft": 2,
                    "paddingRight": 2,
                    "paddingTop": 2,
                  }
                }
                value="danger"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4294638330}
                  dataSet={Object {}}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#fafafa",
                        "height": 12,
                        "width": 12,
                      },
                      Object {
                        "flex": 0,
                        "height": 12,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4294638330}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M8.53115 15.1856L3.96198 10.744L2 12.6512L8.53115 19L22 5.9072L20.038 4L8.53115 15.1856Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              Danger
            </Text>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          accessibilityRole="checkbox"
          accessibilityState={
            Object {
              "checked": true,
              "disabled": undefined,
            }
          }
          accessible={true}
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={Object {}}
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "flex-start",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <View
                checked={true}
                colorScheme="info"
                dataSet={Object {}}
                defaultIsChecked={true}
                disabled={false}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#0284c7",
                    "borderColor": "#0284c7",
                    "borderRadius": 4,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "opacity": 1,
                    "paddingBottom": 2,
                    "paddingLeft": 2,
                    "paddingRight": 2,
                    "paddingTop": 2,
                  }
                }
                value="info"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4294638330}
                  dataSet={Object {}}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#fafafa",
                        "height": 12,
                        "width": 12,
                      },
                      Object {
                        "flex": 0,
                        "height": 12,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4294638330}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M8.53115 15.1856L3.96198 10.744L2 12.6512L8.53115 19L22 5.9072L20.038 4L8.53115 15.1856Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              Info
            </Text>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          accessibilityRole="checkbox"
          accessibilityState={
            Object {
              "checked": true,
              "disabled": undefined,
            }
          }
          accessible={true}
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={Object {}}
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "flex-start",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <View
                checked={true}
                colorScheme="orange"
                dataSet={Object {}}
                defaultIsChecked={true}
                disabled={false}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#ea580c",
                    "borderColor": "#ea580c",
                    "borderRadius": 4,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "opacity": 1,
                    "paddingBottom": 2,
                    "paddingLeft": 2,
                    "paddingRight": 2,
                    "paddingTop": 2,
                  }
                }
                value="orange"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4294638330}
                  dataSet={Object {}}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#fafafa",
                        "height": 12,
                        "width": 12,
                      },
                      Object {
                        "flex": 0,
                        "height": 12,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4294638330}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M8.53115 15.1856L3.96198 10.744L2 12.6512L8.53115 19L22 5.9072L20.038 4L8.53115 15.1856Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              Orange
            </Text>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          accessibilityRole="checkbox"
          accessibilityState={
            Object {
              "checked": true,
              "disabled": undefined,
            }
          }
          accessible={true}
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={Object {}}
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "flex-start",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <View
                checked={true}
                colorScheme="purple"
                dataSet={Object {}}
                defaultIsChecked={true}
                disabled={false}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#9333ea",
                    "borderColor": "#9333ea",
                    "borderRadius": 4,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "opacity": 1,
                    "paddingBottom": 2,
                    "paddingLeft": 2,
                    "paddingRight": 2,
                    "paddingTop": 2,
                  }
                }
                value="purple"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4294638330}
                  dataSet={Object {}}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#fafafa",
                        "height": 12,
                        "width": 12,
                      },
                      Object {
                        "flex": 0,
                        "height": 12,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4294638330}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M8.53115 15.1856L3.96198 10.744L2 12.6512L8.53115 19L22 5.9072L20.038 4L8.53115 15.1856Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              Purple
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Custom Icon 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "flex-start",
            "flexDirection": "column",
          }
        }
      >
        <View
          accessibilityRole="checkbox"
          accessibilityState={
            Object {
              "checked": true,
              "disabled": undefined,
            }
          }
          accessible={true}
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={Object {}}
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "flex-start",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <View
                checked={true}
                colorScheme="orange"
                dataSet={Object {}}
                defaultIsChecked={true}
                disabled={false}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#ea580c",
                    "borderColor": "#ea580c",
                    "borderRadius": 4,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "opacity": 1,
                    "paddingBottom": 2,
                    "paddingLeft": 2,
                    "paddingRight": 2,
                    "paddingTop": 2,
                  }
                }
                value="orange"
              >
                <Text
                  allowFontScaling={false}
                  dataSet={Object {}}
                  style={
                    Array [
                      Object {
                        "color": undefined,
                        "fontSize": 12,
                      },
                      Object {
                        "color": "#fafafa",
                        "fontSize": 16,
                        "height": 16,
                        "lineHeight": 16,
                        "width": 16,
                      },
                      Object {
                        "fontFamily": "material-community",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  󰗝
                </Text>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 18,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 27,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              Darts
            </Text>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          accessibilityRole="checkbox"
          accessibilityState={
            Object {
              "checked": true,
              "disabled": undefined,
            }
          }
          accessible={true}
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={Object {}}
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "flex-start",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <View
                checked={true}
                colorScheme="dark"
                dataSet={Object {}}
                defaultIsChecked={true}
                disabled={false}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#d4d4d8",
                    "borderColor": "#d4d4d8",
                    "borderRadius": 4,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "opacity": 1,
                    "paddingBottom": 2,
                    "paddingLeft": 2,
                    "paddingRight": 2,
                    "paddingTop": 2,
                  }
                }
                value="dark"
              >
                <Text
                  allowFontScaling={false}
                  dataSet={Object {}}
                  style={
                    Array [
                      Object {
                        "color": undefined,
                        "fontSize": 12,
                      },
                      Object {
                        "color": "#fafafa",
                        "fontSize": 16,
                        "height": 16,
                        "lineHeight": 16,
                        "width": 16,
                      },
                      Object {
                        "fontFamily": "material-community",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  󰭟
                </Text>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 18,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 27,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              Movie
            </Text>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          accessibilityRole="checkbox"
          accessibilityState={
            Object {
              "checked": true,
              "disabled": undefined,
            }
          }
          accessible={true}
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={Object {}}
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "flex-start",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <View
                checked={true}
                colorScheme="red"
                dataSet={Object {}}
                defaultIsChecked={true}
                disabled={false}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#dc2626",
                    "borderColor": "#dc2626",
                    "borderRadius": 4,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "opacity": 1,
                    "paddingBottom": 2,
                    "paddingLeft": 2,
                    "paddingRight": 2,
                    "paddingTop": 2,
                  }
                }
                value="red"
              >
                <Text
                  allowFontScaling={false}
                  dataSet={Object {}}
                  style={
                    Array [
                      Object {
                        "color": undefined,
                        "fontSize": 12,
                      },
                      Object {
                        "color": "#fafafa",
                        "fontSize": 16,
                        "height": 16,
                        "lineHeight": 16,
                        "width": 16,
                      },
                      Object {
                        "fontFamily": "material-community",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  󰻝
                </Text>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 18,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 27,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              Camping
            </Text>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          accessibilityRole="checkbox"
          accessibilityState={
            Object {
              "checked": true,
              "disabled": undefined,
            }
          }
          accessible={true}
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={Object {}}
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "flex-start",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <View
                checked={true}
                colorScheme="blue"
                dataSet={Object {}}
                defaultIsChecked={true}
                disabled={false}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#2563eb",
                    "borderColor": "#2563eb",
                    "borderRadius": 4,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "opacity": 1,
                    "paddingBottom": 2,
                    "paddingLeft": 2,
                    "paddingRight": 2,
                    "paddingTop": 2,
                  }
                }
                value="blue"
              >
                <Text
                  allowFontScaling={false}
                  dataSet={Object {}}
                  style={
                    Array [
                      Object {
                        "color": undefined,
                        "fontSize": 12,
                      },
                      Object {
                        "color": "#fafafa",
                        "fontSize": 16,
                        "height": 16,
                        "lineHeight": 16,
                        "width": 16,
                      },
                      Object {
                        "fontFamily": "material-community",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  󰡘
                </Text>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 18,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 27,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              Chess
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Disabled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={Object {}}
    >
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": false,
            "disabled": true,
          }
        }
        accessible={true}
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              checked={false}
              colorScheme="primary"
              dataSet={Object {}}
              defaultIsChecked={false}
              disabled={true}
              isDisabled={true}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#a3a3a3",
                  "borderRadius": 4,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                  "opacity": 0.4,
                  "paddingBottom": 2,
                  "paddingLeft": 2,
                  "paddingRight": 2,
                  "paddingTop": 2,
                }
              }
              value="one"
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "color": "#fafafa",
                    "height": 12,
                    "width": 12,
                  }
                }
              />
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 8,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "marginLeft": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            UX Research
          </Text>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": true,
          }
        }
        accessible={true}
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              checked={true}
              colorScheme="primary"
              dataSet={Object {}}
              defaultIsChecked={true}
              disabled={true}
              isDisabled={true}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0891b2",
                  "borderColor": "#0891b2",
                  "borderRadius": 4,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                  "opacity": 0.4,
                  "paddingBottom": 2,
                  "paddingLeft": 2,
                  "paddingRight": 2,
                  "paddingTop": 2,
                }
              }
              value="two"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={12}
                bbWidth={12}
                color={4294638330}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#fafafa",
                      "height": 12,
                      "width": 12,
                    },
                    Object {
                      "flex": 0,
                      "height": 12,
                      "width": 12,
                    },
                  ]
                }
                tintColor={4294638330}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M8.53115 15.1856L3.96198 10.744L2 12.6512L8.53115 19L22 5.9072L20.038 4L8.53115 15.1856Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 8,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "marginLeft": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            Software Development
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Form Controlled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "flex-start",
            "maxWidth": "80%",
          }
        }
      >
        <View
          dataSet={Object {}}
          isInvalid={true}
          style={
            Object {
              "width": "100%",
            }
          }
        >
          <View
            dataSet={Object {}}
            feedbackId="field-react-aria-0-2-feedback"
            hasFeedbackText={false}
            hasHelpText={false}
            helpTextId="field-react-aria-0-2-helptext"
            isDisabled={false}
            isInvalid={true}
            isReadOnly={false}
            isRequired={false}
            labelId="field-react-aria-0-2-label"
            nativeID="field-react-aria-0-2-label"
            setHasFeedbackText={[Function]}
            setHasHelpText={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#737373",
                  "fontFamily": undefined,
                  "fontSize": 18,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 27,
                  "textDecorationLine": undefined,
                }
              }
            >
              Preferred contact method
            </Text>
          </View>
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "textDecorationLine": undefined,
              }
            }
          >
            Selected Values: 
          </Text>
          <View
            accessibilityLabel="choose multiple items"
            accessibilityState={
              Object {
                "disabled": undefined,
              }
            }
            aria-label="choose multiple items"
            dataSet={Object {}}
            defaultValue={
              Array [
                "Phone",
                "Email",
              ]
            }
            onChange={[Function]}
            style={
              Object {
                "alignItems": "flex-start",
                "marginTop": 8,
              }
            }
          >
            <View
              accessibilityRole="checkbox"
              accessibilityState={
                Object {
                  "checked": true,
                  "disabled": false,
                }
              }
              accessible={true}
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={Object {}}
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "flex-start",
                    "marginBottom": 4,
                    "marginTop": 4,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "justifyContent": "center",
                    }
                  }
                >
                  <View
                    dataSet={Object {}}
                    style={Object {}}
                  />
                  <View
                    checked={true}
                    colorScheme="green"
                    dataSet={Object {}}
                    defaultIsChecked={false}
                    disabled={false}
                    feedbackId="field-react-aria-0-2-feedback"
                    hasFeedbackText={false}
                    hasHelpText={false}
                    helpTextId="field-react-aria-0-2-helptext"
                    isDisabled={false}
                    isInvalid={true}
                    isReadOnly={false}
                    isRequired={false}
                    labelId="field-react-aria-0-2-label"
                    nativeID="field-react-aria-0-2"
                    readOnly={false}
                    required={false}
                    setHasFeedbackText={[Function]}
                    setHasHelpText={[Function]}
                    state={
                      Object {
                        "addValue": [Function],
                        "isDisabled": false,
                        "isReadOnly": false,
                        "isSelected": [Function],
                        "removeValue": [Function],
                        "setValue": [Function],
                        "toggleValue": [Function],
                        "value": Array [
                          "Phone",
                          "Email",
                        ],
                      }
                    }
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#16a34a",
                        "borderColor": "#dc2626",
                        "borderRadius": 4,
                        "borderWidth": 2,
                        "display": "flex",
                        "justifyContent": "center",
                        "opacity": 1,
                        "paddingBottom": 2,
                        "paddingLeft": 2,
                        "paddingRight": 2,
                        "paddingTop": 2,
                      }
                    }
                    value="Phone"
                  >
                    <RNSVGSvgView
                      accessibilityRole="image"
                      align="xMidYMid"
                      bbHeight={12}
                      bbWidth={12}
                      color={4294638330}
                      dataSet={Object {}}
                      focusable={false}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      stroke=""
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          Object {
                            "color": "#fafafa",
                            "height": 12,
                            "width": 12,
                          },
                          Object {
                            "flex": 0,
                            "height": 12,
                            "width": 12,
                          },
                        ]
                      }
                      tintColor={4294638330}
                      vbHeight={24}
                      vbWidth={24}
                    >
                      <RNSVGGroup
                        propList={
                          Array [
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGGroup>
                          <RNSVGPath
                            d="M8.53115 15.1856L3.96198 10.744L2 12.6512L8.53115 19L22 5.9072L20.038 4L8.53115 15.1856Z"
                            fill={
                              Array [
                                2,
                              ]
                            }
                            propList={
                              Array [
                                "fill",
                                "stroke",
                              ]
                            }
                            stroke={null}
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "width": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#000000",
                      "fontFamily": undefined,
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 24,
                      "marginLeft": 8,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Phone
                </Text>
              </View>
            </View>
            <View
              accessibilityRole="checkbox"
              accessibilityState={
                Object {
                  "checked": true,
                  "disabled": false,
                }
              }
              accessible={true}
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={Object {}}
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "flex-start",
                    "marginBottom": 4,
                    "marginTop": 4,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "justifyContent": "center",
                    }
                  }
                >
                  <View
                    dataSet={Object {}}
                    style={Object {}}
                  />
                  <View
                    checked={true}
                    colorScheme="green"
                    dataSet={Object {}}
                    defaultIsChecked={false}
                    disabled={false}
                    feedbackId="field-react-aria-0-2-feedback"
                    hasFeedbackText={false}
                    hasHelpText={false}
                    helpTextId="field-react-aria-0-2-helptext"
                    isDisabled={false}
                    isInvalid={true}
                    isReadOnly={false}
                    isRequired={false}
                    labelId="field-react-aria-0-2-label"
                    nativeID="field-react-aria-0-2"
                    readOnly={false}
                    required={false}
                    setHasFeedbackText={[Function]}
                    setHasHelpText={[Function]}
                    state={
                      Object {
                        "addValue": [Function],
                        "isDisabled": false,
                        "isReadOnly": false,
                        "isSelected": [Function],
                        "removeValue": [Function],
                        "setValue": [Function],
                        "toggleValue": [Function],
                        "value": Array [
                          "Phone",
                          "Email",
                        ],
                      }
                    }
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#16a34a",
                        "borderColor": "#dc2626",
                        "borderRadius": 4,
                        "borderWidth": 2,
                        "display": "flex",
                        "justifyContent": "center",
                        "opacity": 1,
                        "paddingBottom": 2,
                        "paddingLeft": 2,
                        "paddingRight": 2,
                        "paddingTop": 2,
                      }
                    }
                    value="Email"
                  >
                    <RNSVGSvgView
                      accessibilityRole="image"
                      align="xMidYMid"
                      bbHeight={12}
                      bbWidth={12}
                      color={4294638330}
                      dataSet={Object {}}
                      focusable={false}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      stroke=""
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          Object {
                            "color": "#fafafa",
                            "height": 12,
                            "width": 12,
                          },
                          Object {
                            "flex": 0,
                            "height": 12,
                            "width": 12,
                          },
                        ]
                      }
                      tintColor={4294638330}
                      vbHeight={24}
                      vbWidth={24}
                    >
                      <RNSVGGroup
                        propList={
                          Array [
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGGroup>
                          <RNSVGPath
                            d="M8.53115 15.1856L3.96198 10.744L2 12.6512L8.53115 19L22 5.9072L20.038 4L8.53115 15.1856Z"
                            fill={
                              Array [
                                2,
                              ]
                            }
                            propList={
                              Array [
                                "fill",
                                "stroke",
                              ]
                            }
                            stroke={null}
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "width": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#000000",
                      "fontFamily": undefined,
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 24,
                      "marginLeft": 8,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Email
                </Text>
              </View>
            </View>
            <View
              accessibilityRole="checkbox"
              accessibilityState={
                Object {
                  "checked": false,
                  "disabled": false,
                }
              }
              accessible={true}
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={Object {}}
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "flex-start",
                    "marginBottom": 4,
                    "marginTop": 4,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "justifyContent": "center",
                    }
                  }
                >
                  <View
                    dataSet={Object {}}
                    style={Object {}}
                  />
                  <View
                    checked={false}
                    colorScheme="green"
                    dataSet={Object {}}
                    defaultIsChecked={false}
                    disabled={false}
                    feedbackId="field-react-aria-0-2-feedback"
                    hasFeedbackText={false}
                    hasHelpText={false}
                    helpTextId="field-react-aria-0-2-helptext"
                    isDisabled={false}
                    isInvalid={true}
                    isReadOnly={false}
                    isRequired={false}
                    labelId="field-react-aria-0-2-label"
                    nativeID="field-react-aria-0-2"
                    readOnly={false}
                    required={false}
                    setHasFeedbackText={[Function]}
                    setHasHelpText={[Function]}
                    state={
                      Object {
                        "addValue": [Function],
                        "isDisabled": false,
                        "isReadOnly": false,
                        "isSelected": [Function],
                        "removeValue": [Function],
                        "setValue": [Function],
                        "toggleValue": [Function],
                        "value": Array [
                          "Phone",
                          "Email",
                        ],
                      }
                    }
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#fafafa",
                        "borderColor": "#dc2626",
                        "borderRadius": 4,
                        "borderWidth": 2,
                        "display": "flex",
                        "justifyContent": "center",
                        "opacity": 1,
                        "paddingBottom": 2,
                        "paddingLeft": 2,
                        "paddingRight": 2,
                        "paddingTop": 2,
                      }
                    }
                    value="Message"
                  >
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "color": "#fafafa",
                          "height": 12,
                          "width": 12,
                        }
                      }
                    />
                  </View>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "width": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#000000",
                      "fontFamily": undefined,
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 24,
                      "marginLeft": 8,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Message
                </Text>
              </View>
            </View>
            <View
              accessibilityRole="checkbox"
              accessibilityState={
                Object {
                  "checked": false,
                  "disabled": false,
                }
              }
              accessible={true}
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={Object {}}
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "flex-start",
                    "marginBottom": 4,
                    "marginTop": 4,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "justifyContent": "center",
                    }
                  }
                >
                  <View
                    dataSet={Object {}}
                    style={Object {}}
                  />
                  <View
                    checked={false}
                    colorScheme="green"
                    dataSet={Object {}}
                    defaultIsChecked={false}
                    disabled={false}
                    feedbackId="field-react-aria-0-2-feedback"
                    hasFeedbackText={false}
                    hasHelpText={false}
                    helpTextId="field-react-aria-0-2-helptext"
                    isDisabled={false}
                    isInvalid={true}
                    isReadOnly={false}
                    isRequired={false}
                    labelId="field-react-aria-0-2-label"
                    nativeID="field-react-aria-0-2"
                    readOnly={false}
                    required={false}
                    setHasFeedbackText={[Function]}
                    setHasHelpText={[Function]}
                    state={
                      Object {
                        "addValue": [Function],
                        "isDisabled": false,
                        "isReadOnly": false,
                        "isSelected": [Function],
                        "removeValue": [Function],
                        "setValue": [Function],
                        "toggleValue": [Function],
                        "value": Array [
                          "Phone",
                          "Email",
                        ],
                      }
                    }
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#fafafa",
                        "borderColor": "#dc2626",
                        "borderRadius": 4,
                        "borderWidth": 2,
                        "display": "flex",
                        "justifyContent": "center",
                        "opacity": 1,
                        "paddingBottom": 2,
                        "paddingLeft": 2,
                        "paddingRight": 2,
                        "paddingTop": 2,
                      }
                    }
                    value="Fax"
                  >
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "color": "#fafafa",
                          "height": 12,
                          "width": 12,
                        }
                      }
                    />
                  </View>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "width": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#000000",
                      "fontFamily": undefined,
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 24,
                      "marginLeft": 8,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Fax
                </Text>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            feedbackId="field-react-aria-0-2-feedback"
            hasFeedbackText={false}
            hasHelpText={false}
            helpTextId="field-react-aria-0-2-helptext"
            isDisabled={false}
            isInvalid={true}
            isReadOnly={false}
            isRequired={false}
            labelId="field-react-aria-0-2-label"
            nativeID="field-react-aria-0-2"
            setHasFeedbackText={[Function]}
            setHasHelpText={[Function]}
            style={
              Object {
                "marginTop": 8,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={12}
                bbWidth={12}
                color={4292617766}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#dc2626",
                      "fontSize": 12,
                      "height": 12,
                      "width": 12,
                    },
                    Object {
                      "flex": 0,
                      "height": 12,
                      "width": 12,
                    },
                  ]
                }
                tintColor={4292617766}
                vbHeight={16}
                vbWidth={16}
              >
                <RNSVGGroup
                  font={
                    Object {
                      "fontSize": 12,
                    }
                  }
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M8 16C6.41775 16 4.87103 15.5308 3.55544 14.6518C2.23985 13.7727 1.21447 12.5233 0.608967 11.0615C0.00346627 9.59966 -0.15496 7.99113 0.153721 6.43928C0.462403 4.88743 1.22433 3.46197 2.34315 2.34315C3.46197 1.22433 4.88743 0.462403 6.43928 0.153721C7.99113 -0.15496 9.59966 0.00346627 11.0615 0.608967C12.5233 1.21447 13.7727 2.23985 14.6518 3.55544C15.5308 4.87103 16 6.41775 16 8C16 10.1217 15.1571 12.1566 13.6569 13.6569C12.1566 15.1571 10.1217 16 8 16ZM8 14.4C9.2658 14.4 10.5032 14.0246 11.5556 13.3214C12.6081 12.6182 13.4284 11.6186 13.9128 10.4492C14.3972 9.27973 14.524 7.9929 14.277 6.75142C14.0301 5.50995 13.4205 4.36958 12.5255 3.47452C11.6304 2.57946 10.4901 1.96992 9.24858 1.72298C8.0071 1.47603 6.72028 1.60277 5.55083 2.08717C4.38138 2.57158 3.38184 3.39188 2.6786 4.44435C1.97536 5.49683 1.6 6.7342 1.6 8C1.6 9.69739 2.27429 11.3253 3.47452 12.5255C4.67475 13.7257 6.30262 14.4 8 14.4ZM7.2 10.4H8.8V12H7.2V10.4ZM7.2 4H8.8V8.8H7.2V4Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "width": 4,
                  }
                }
              />
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#dc2626",
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 18,
                    "textDecorationLine": undefined,
                  }
                }
              >
                You must select at least three methods
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Invalid 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityRole="checkbox"
      accessibilityState={
        Object {
          "checked": false,
          "disabled": undefined,
        }
      }
      accessible={true}
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={Object {}}
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "flex-start",
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          />
          <View
            checked={false}
            colorScheme="primary"
            dataSet={Object {}}
            defaultIsChecked={false}
            disabled={false}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#fafafa",
                "borderColor": "#dc2626",
                "borderRadius": 4,
                "borderWidth": 2,
                "display": "flex",
                "justifyContent": "center",
                "opacity": 1,
                "paddingBottom": 2,
                "paddingLeft": 2,
                "paddingRight": 2,
                "paddingTop": 2,
              }
            }
            value="invalid"
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "color": "#fafafa",
                  "height": 12,
                  "width": 12,
                }
              }
            />
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "width": 8,
            }
          }
        />
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#000000",
              "fontFamily": undefined,
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 24,
              "marginLeft": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          Software Development
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Playground 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "space-between",
        }
      }
    >
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": false,
          }
        }
        accessible={true}
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              checked={true}
              colorScheme="primary"
              dataSet={Object {}}
              defaultIsChecked={false}
              disabled={false}
              isChecked={true}
              isDisabled={false}
              onChange={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0891b2",
                  "borderColor": "#0891b2",
                  "borderRadius": 4,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                  "opacity": 1,
                  "paddingBottom": 2,
                  "paddingLeft": 2,
                  "paddingRight": 2,
                  "paddingTop": 2,
                }
              }
              value="Cool"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={16}
                bbWidth={16}
                color={4294638330}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#fafafa",
                      "height": 16,
                      "width": 16,
                    },
                    Object {
                      "flex": 0,
                      "height": 16,
                      "width": 16,
                    },
                  ]
                }
                tintColor={4294638330}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M8.53115 15.1856L3.96198 10.744L2 12.6512L8.53115 19L22 5.9072L20.038 4L8.53115 15.1856Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 8,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 18,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 27,
                "marginLeft": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            Yes
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Size 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={Object {}}
      >
        <View
          accessibilityRole="checkbox"
          accessibilityState={
            Object {
              "checked": true,
              "disabled": undefined,
            }
          }
          accessible={true}
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={Object {}}
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "flex-start",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <View
                checked={true}
                colorScheme="primary"
                dataSet={Object {}}
                defaultIsChecked={true}
                disabled={false}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#0891b2",
                    "borderColor": "#0891b2",
                    "borderRadius": 4,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "opacity": 1,
                    "paddingBottom": 2,
                    "paddingLeft": 2,
                    "paddingRight": 2,
                    "paddingTop": 2,
                  }
                }
                value="red"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4294638330}
                  dataSet={Object {}}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#fafafa",
                        "height": 12,
                        "width": 12,
                      },
                      Object {
                        "flex": 0,
                        "height": 12,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4294638330}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M8.53115 15.1856L3.96198 10.744L2 12.6512L8.53115 19L22 5.9072L20.038 4L8.53115 15.1856Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              UX Research
            </Text>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          accessibilityRole="checkbox"
          accessibilityState={
            Object {
              "checked": true,
              "disabled": undefined,
            }
          }
          accessible={true}
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={Object {}}
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "flex-start",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <View
                checked={true}
                colorScheme="primary"
                dataSet={Object {}}
                defaultIsChecked={true}
                disabled={false}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#0891b2",
                    "borderColor": "#0891b2",
                    "borderRadius": 4,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "opacity": 1,
                    "paddingBottom": 2,
                    "paddingLeft": 2,
                    "paddingRight": 2,
                    "paddingTop": 2,
                  }
                }
                value="green"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={16}
                  bbWidth={16}
                  color={4294638330}
                  dataSet={Object {}}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#fafafa",
                        "height": 16,
                        "width": 16,
                      },
                      Object {
                        "flex": 0,
                        "height": 16,
                        "width": 16,
                      },
                    ]
                  }
                  tintColor={4294638330}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M8.53115 15.1856L3.96198 10.744L2 12.6512L8.53115 19L22 5.9072L20.038 4L8.53115 15.1856Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 18,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 27,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              UX Research
            </Text>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          accessibilityRole="checkbox"
          accessibilityState={
            Object {
              "checked": true,
              "disabled": undefined,
            }
          }
          accessible={true}
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={Object {}}
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "flex-start",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <View
                checked={true}
                colorScheme="primary"
                dataSet={Object {}}
                defaultIsChecked={true}
                disabled={false}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#0891b2",
                    "borderColor": "#0891b2",
                    "borderRadius": 4,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "opacity": 1,
                    "paddingBottom": 2,
                    "paddingLeft": 2,
                    "paddingRight": 2,
                    "paddingTop": 2,
                  }
                }
                value="yellow"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={20}
                  bbWidth={20}
                  color={4294638330}
                  dataSet={Object {}}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#fafafa",
                        "height": 20,
                        "width": 20,
                      },
                      Object {
                        "flex": 0,
                        "height": 20,
                        "width": 20,
                      },
                    ]
                  }
                  tintColor={4294638330}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M8.53115 15.1856L3.96198 10.744L2 12.6512L8.53115 19L22 5.9072L20.038 4L8.53115 15.1856Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 20,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 30,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              UX Research
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Uncontrolled checkbox 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityLabel="choose values"
      accessibilityState={
        Object {
          "disabled": undefined,
        }
      }
      aria-label="choose values"
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "flex-start",
        }
      }
    >
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": false,
            "disabled": false,
          }
        }
        accessible={true}
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "marginBottom": 8,
              "marginTop": 8,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              checked={false}
              colorScheme="primary"
              dataSet={Object {}}
              defaultIsChecked={false}
              disabled={false}
              isDisabled={false}
              isReadOnly={false}
              readOnly={false}
              state={
                Object {
                  "addValue": [Function],
                  "isDisabled": false,
                  "isReadOnly": false,
                  "isSelected": [Function],
                  "removeValue": [Function],
                  "setValue": [Function],
                  "toggleValue": [Function],
                  "value": Array [],
                }
              }
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#a3a3a3",
                  "borderRadius": 4,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                  "opacity": 1,
                  "paddingBottom": 2,
                  "paddingLeft": 2,
                  "paddingRight": 2,
                  "paddingTop": 2,
                }
              }
              value="one"
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "color": "#fafafa",
                    "height": 12,
                    "width": 12,
                  }
                }
              />
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 8,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "marginLeft": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            UX Research
          </Text>
        </View>
      </View>
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": false,
            "disabled": false,
          }
        }
        accessible={true}
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              checked={false}
              colorScheme="primary"
              dataSet={Object {}}
              defaultIsChecked={false}
              disabled={false}
              isDisabled={false}
              isReadOnly={false}
              readOnly={false}
              state={
                Object {
                  "addValue": [Function],
                  "isDisabled": false,
                  "isReadOnly": false,
                  "isSelected": [Function],
                  "removeValue": [Function],
                  "setValue": [Function],
                  "toggleValue": [Function],
                  "value": Array [],
                }
              }
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#a3a3a3",
                  "borderRadius": 4,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                  "opacity": 1,
                  "paddingBottom": 2,
                  "paddingLeft": 2,
                  "paddingRight": 2,
                  "paddingTop": 2,
                }
              }
              value="two"
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "color": "#fafafa",
                    "height": 12,
                    "width": 12,
                  }
                }
              />
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 8,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "marginLeft": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            Software Development
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox With Ref 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "flex-start",
        }
      }
    >
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": false,
            "disabled": undefined,
          }
        }
        accessible={true}
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              checked={false}
              colorScheme="success"
              dataSet={Object {}}
              defaultIsChecked={false}
              disabled={false}
              onChange={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#a3a3a3",
                  "borderRadius": 4,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                  "opacity": 1,
                  "paddingBottom": 2,
                  "paddingLeft": 2,
                  "paddingRight": 2,
                  "paddingTop": 2,
                }
              }
              value="success"
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "color": "#fafafa",
                    "height": 12,
                    "width": 12,
                  }
                }
              />
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 8,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "marginLeft": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            Archery
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Column Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={Object {}}
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": "#22c55e",
            "height": 100,
            "width": 100,
          }
        }
      />
      <View
        dataSet={Object {}}
        style={Object {}}
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": "#93c5fd",
            "height": 100,
            "width": 100,
          }
        }
      />
      <View
        dataSet={Object {}}
        style={Object {}}
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": "tomato",
            "height": 100,
            "width": 100,
          }
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Container Playground 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      centerContent={true}
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "maxWidth": "80%",
        }
      }
    >
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": null,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "textDecorationLine": undefined,
          }
        }
      >
        Benefits to a joint design and development system
      </Text>
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": undefined,
          }
        }
      >
        There are many benefits to a joint design and development system. Not only does it bring benefits to the design team, but it also brings benefits to engineering teams. It makes sure that our experiences have a consistent look and feel, not just in our design specs, but in production
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Container Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "flex-start",
            "maxWidth": "80%",
          }
        }
      >
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#171717",
              "fontFamily": undefined,
              "fontSize": null,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 30,
              "textDecorationLine": undefined,
            }
          }
        >
          A component library for the
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#10b981",
                "fontFamily": undefined,
                "fontSize": undefined,
                "fontStyle": undefined,
                "fontWeight": undefined,
                "textDecorationLine": undefined,
              }
            }
          >
             React Ecosystem
          </Text>
        </Text>
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#171717",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "500",
              "letterSpacing": 0,
              "lineHeight": 21,
              "marginTop": 12,
              "textDecorationLine": undefined,
            }
          }
        >
          NativeBase is a simple, modular and accessible component library that gives you building blocks to build you React applications.
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Custom Theme Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
/>
`;

exports[`Storyshots Custom Theme CustomizingBase 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
/>
`;

exports[`Storyshots Custom Theme CustomizingComponents 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
/>
`;

exports[`Storyshots Custom Theme CustomizingTheme 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
/>
`;

exports[`Storyshots Custom Theme CustomizingVariant 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
/>
`;

exports[`Storyshots Divider Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "width": 140,
          }
        }
      >
        <Text
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": undefined,
              "color": "#171717",
              "flexDirection": "row",
              "fontFamily": undefined,
              "fontSize": null,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 30,
              "marginLeft": 12,
              "marginRight": 12,
              "textDecorationLine": undefined,
            }
          }
        >
          Chrome
        </Text>
        <View
          aria-orientation="horizontal"
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": "#262626",
              "height": 1,
              "marginBottom": 8,
              "marginTop": 8,
              "width": "100%",
            }
          }
          thickness="1"
        />
        <Text
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": undefined,
              "color": "#171717",
              "flexDirection": "row",
              "fontFamily": undefined,
              "fontSize": null,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 30,
              "marginLeft": 12,
              "marginRight": 12,
              "textDecorationLine": undefined,
            }
          }
        >
          Firefox
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Divider Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
            "height": 58,
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          }
        }
      >
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#171717",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": undefined,
            }
          }
        >
          Simple
        </Text>
        <View
          aria-orientation="vertical"
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": "#10b981",
              "height": "100%",
              "marginLeft": 8,
              "marginRight": 8,
              "width": 2,
            }
          }
          thickness="2"
        />
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#171717",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": undefined,
            }
          }
        >
          Easy
        </Text>
        <View
          aria-orientation="vertical"
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": "#6366f1",
              "height": "100%",
              "marginLeft": 8,
              "marginRight": 8,
              "width": 2,
            }
          }
          thickness="2"
        />
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#171717",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": undefined,
            }
          }
        >
          Beautiful
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Divider Orientation 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "width": 160,
          }
        }
      >
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#171717",
              "fontFamily": undefined,
              "fontSize": null,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 30,
              "marginLeft": "auto",
              "marginRight": "auto",
              "textDecorationLine": undefined,
            }
          }
        >
          Shoes
        </Text>
        <View
          aria-orientation="horizontal"
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": "#262626",
              "height": 1,
              "marginBottom": 8,
              "marginTop": 8,
              "width": "100%",
            }
          }
          thickness="1"
        />
        <View
          dataSet={Object {}}
          style={
            Object {
              "display": "flex",
              "flexDirection": "row",
              "height": 60,
              "justifyContent": "space-evenly",
              "marginLeft": 12,
              "marginRight": 12,
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": null,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 30,
                "paddingBottom": 8,
                "paddingTop": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            Girls
          </Text>
          <View
            aria-orientation="vertical"
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#262626",
                "height": "100%",
                "marginLeft": 12,
                "marginRight": 12,
                "width": 1,
              }
            }
            thickness="1"
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": null,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 30,
                "paddingBottom": 8,
                "paddingTop": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            Boys
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Examples Signin Screen 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "maxWidth": 290,
            "paddingBottom": 32,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 32,
            "width": "90%",
          }
        }
      >
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": null,
              "fontStyle": "normal",
              "fontWeight": "600",
              "letterSpacing": 0,
              "lineHeight": 30,
              "textDecorationLine": undefined,
            }
          }
        >
          Welcome
        </Text>
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#4b5563",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "500",
              "letterSpacing": 0,
              "lineHeight": 17.5,
              "marginTop": 4,
              "textDecorationLine": undefined,
            }
          }
        >
          Sign in to continue!
        </Text>
        <View
          dataSet={Object {}}
          style={
            Object {
              "marginTop": 20,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              feedbackId="field-react-aria-0-2-feedback"
              hasFeedbackText={false}
              hasHelpText={false}
              helpTextId="field-react-aria-0-2-helptext"
              isDisabled={false}
              isInvalid={false}
              isReadOnly={false}
              isRequired={false}
              labelId="field-react-aria-0-2-label"
              nativeID="field-react-aria-0-2-label"
              setHasFeedbackText={[Function]}
              setHasHelpText={[Function]}
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#737373",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Email ID
              </Text>
            </View>
            <View
              dataSet={Object {}}
              isFocused={false}
              style={
                Object {
                  "alignItems": "center",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "overflow": "hidden",
                }
              }
            >
              <TextInput
                accessible={true}
                allowFontScaling={true}
                dataSet={Object {}}
                disabled={false}
                editable={true}
                isRequired={false}
                nativeID="field-react-aria-0-2"
                onBlur={[Function]}
                onFocus={[Function]}
                onKeyPress={[Function]}
                placeholderTextColor="#a3a3a3"
                readOnly={false}
                rejectResponderTermination={true}
                required={false}
                secureTextEntry={false}
                selectionColor="#1f2937"
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#171717",
                    "flex": 1,
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "height": "100%",
                    "paddingBottom": 8,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 8,
                    "width": "100%",
                  }
                }
                underlineColorAndroid="transparent"
              />
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              feedbackId="field-react-aria-0-3-feedback"
              hasFeedbackText={false}
              hasHelpText={false}
              helpTextId="field-react-aria-0-3-helptext"
              isDisabled={false}
              isInvalid={false}
              isReadOnly={false}
              isRequired={false}
              labelId="field-react-aria-0-3-label"
              nativeID="field-react-aria-0-3-label"
              setHasFeedbackText={[Function]}
              setHasHelpText={[Function]}
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#737373",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Password
              </Text>
            </View>
            <View
              dataSet={Object {}}
              isFocused={false}
              style={
                Object {
                  "alignItems": "center",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "overflow": "hidden",
                }
              }
            >
              <TextInput
                accessible={true}
                allowFontScaling={true}
                dataSet={Object {}}
                disabled={false}
                editable={true}
                isRequired={false}
                nativeID="field-react-aria-0-3"
                onBlur={[Function]}
                onFocus={[Function]}
                onKeyPress={[Function]}
                placeholderTextColor="#a3a3a3"
                readOnly={false}
                rejectResponderTermination={true}
                required={false}
                secureTextEntry={true}
                selectionColor="#1f2937"
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#171717",
                    "flex": 1,
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "height": "100%",
                    "paddingBottom": 8,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 8,
                    "width": "100%",
                  }
                }
                underlineColorAndroid="transparent"
              />
            </View>
            <View
              accessibilityRole="link"
              accessible={true}
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignSelf": "flex-end",
                  "flexDirection": "row",
                  "height": "auto",
                  "marginTop": 4,
                  "width": "auto",
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#6366f1",
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 18,
                    "textDecorationLine": "underline",
                  }
                }
              >
                Forget Password?
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            accessibilityRole="button"
            accessible={true}
            colorScheme="indigo"
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#4f46e5",
                "borderRadius": 4,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginTop": 8,
                "paddingBottom": 10,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 10,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
              test={true}
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#fafafa",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Sign in
                </Text>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "center",
                "marginTop": 24,
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#4b5563",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              I'm a new user.
               
            </Text>
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              accessibilityRole="link"
              accessible={true}
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "flexDirection": "row",
                  "height": "auto",
                  "width": "auto",
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#6366f1",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": "underline",
                  }
                }
              >
                Sign Up
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Examples Signup Screen 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "maxWidth": 290,
            "paddingBottom": 32,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 32,
            "width": "90%",
          }
        }
      >
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": null,
              "fontStyle": "normal",
              "fontWeight": "600",
              "letterSpacing": 0,
              "lineHeight": 30,
              "textDecorationLine": undefined,
            }
          }
        >
          Welcome
        </Text>
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#4b5563",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "500",
              "letterSpacing": 0,
              "lineHeight": 17.5,
              "marginTop": 4,
              "textDecorationLine": undefined,
            }
          }
        >
          Sign up to continue!
        </Text>
        <View
          dataSet={Object {}}
          style={
            Object {
              "marginTop": 20,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              feedbackId="field-react-aria-0-2-feedback"
              hasFeedbackText={false}
              hasHelpText={false}
              helpTextId="field-react-aria-0-2-helptext"
              isDisabled={false}
              isInvalid={false}
              isReadOnly={false}
              isRequired={false}
              labelId="field-react-aria-0-2-label"
              nativeID="field-react-aria-0-2-label"
              setHasFeedbackText={[Function]}
              setHasHelpText={[Function]}
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#737373",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Email
              </Text>
            </View>
            <View
              dataSet={Object {}}
              isFocused={false}
              style={
                Object {
                  "alignItems": "center",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "overflow": "hidden",
                }
              }
            >
              <TextInput
                accessible={true}
                allowFontScaling={true}
                dataSet={Object {}}
                disabled={false}
                editable={true}
                isRequired={false}
                nativeID="field-react-aria-0-2"
                onBlur={[Function]}
                onFocus={[Function]}
                onKeyPress={[Function]}
                placeholderTextColor="#a3a3a3"
                readOnly={false}
                rejectResponderTermination={true}
                required={false}
                secureTextEntry={false}
                selectionColor="#1f2937"
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#171717",
                    "flex": 1,
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "height": "100%",
                    "paddingBottom": 8,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 8,
                    "width": "100%",
                  }
                }
                underlineColorAndroid="transparent"
              />
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              feedbackId="field-react-aria-0-3-feedback"
              hasFeedbackText={false}
              hasHelpText={false}
              helpTextId="field-react-aria-0-3-helptext"
              isDisabled={false}
              isInvalid={false}
              isReadOnly={false}
              isRequired={false}
              labelId="field-react-aria-0-3-label"
              nativeID="field-react-aria-0-3-label"
              setHasFeedbackText={[Function]}
              setHasHelpText={[Function]}
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#737373",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Password
              </Text>
            </View>
            <View
              dataSet={Object {}}
              isFocused={false}
              style={
                Object {
                  "alignItems": "center",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "overflow": "hidden",
                }
              }
            >
              <TextInput
                accessible={true}
                allowFontScaling={true}
                dataSet={Object {}}
                disabled={false}
                editable={true}
                isRequired={false}
                nativeID="field-react-aria-0-3"
                onBlur={[Function]}
                onFocus={[Function]}
                onKeyPress={[Function]}
                placeholderTextColor="#a3a3a3"
                readOnly={false}
                rejectResponderTermination={true}
                required={false}
                secureTextEntry={true}
                selectionColor="#1f2937"
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#171717",
                    "flex": 1,
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "height": "100%",
                    "paddingBottom": 8,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 8,
                    "width": "100%",
                  }
                }
                underlineColorAndroid="transparent"
              />
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              feedbackId="field-react-aria-0-4-feedback"
              hasFeedbackText={false}
              hasHelpText={false}
              helpTextId="field-react-aria-0-4-helptext"
              isDisabled={false}
              isInvalid={false}
              isReadOnly={false}
              isRequired={false}
              labelId="field-react-aria-0-4-label"
              nativeID="field-react-aria-0-4-label"
              setHasFeedbackText={[Function]}
              setHasHelpText={[Function]}
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#737373",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Confirm Password
              </Text>
            </View>
            <View
              dataSet={Object {}}
              isFocused={false}
              style={
                Object {
                  "alignItems": "center",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "overflow": "hidden",
                }
              }
            >
              <TextInput
                accessible={true}
                allowFontScaling={true}
                dataSet={Object {}}
                disabled={false}
                editable={true}
                isRequired={false}
                nativeID="field-react-aria-0-4"
                onBlur={[Function]}
                onFocus={[Function]}
                onKeyPress={[Function]}
                placeholderTextColor="#a3a3a3"
                readOnly={false}
                rejectResponderTermination={true}
                required={false}
                secureTextEntry={true}
                selectionColor="#1f2937"
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#171717",
                    "flex": 1,
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "height": "100%",
                    "paddingBottom": 8,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 8,
                    "width": "100%",
                  }
                }
                underlineColorAndroid="transparent"
              />
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            accessibilityRole="button"
            accessible={true}
            colorScheme="indigo"
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#4f46e5",
                "borderRadius": 4,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginTop": 8,
                "paddingBottom": 10,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 10,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
              test={true}
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#fafafa",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Sign up
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Examples Todo App 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "maxWidth": 300,
            "width": "100%",
          }
        }
      >
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#171717",
              "fontFamily": undefined,
              "fontSize": 20,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 25,
              "marginBottom": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          Wednesday
        </Text>
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <View
              dataSet={Object {}}
              isFocused={false}
              style={
                Object {
                  "alignItems": "center",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flex": 1,
                  "flexDirection": "row",
                  "overflow": "hidden",
                }
              }
            >
              <TextInput
                accessible={true}
                allowFontScaling={true}
                dataSet={Object {}}
                editable={true}
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                onKeyPress={[Function]}
                placeholder="Add Task"
                placeholderTextColor="#a3a3a3"
                rejectResponderTermination={true}
                secureTextEntry={false}
                selectionColor="#1f2937"
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#171717",
                    "flex": 1,
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "height": "100%",
                    "paddingBottom": 8,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 8,
                    "width": "100%",
                  }
                }
                underlineColorAndroid="transparent"
                value=""
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0891b2",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 10,
                  "paddingLeft": 10,
                  "paddingRight": 10,
                  "paddingTop": 10,
                }
              }
            >
              <Text
                allowFontScaling={false}
                dataSet={Object {}}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Object {
                      "color": "#fafafa",
                      "fontSize": 20,
                      "height": 20,
                      "lineHeight": 20,
                      "width": 20,
                    },
                    Object {
                      "fontFamily": "feather",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "width": "100%",
                }
              }
            >
              <View
                accessibilityRole="checkbox"
                accessibilityState={
                  Object {
                    "checked": true,
                    "disabled": undefined,
                  }
                }
                accessible={true}
                dataSet={Object {}}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onHoverIn={[Function]}
                onHoverOut={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={Object {}}
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "flex-start",
                    }
                  }
                >
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "alignItems": "center",
                        "display": "flex",
                        "justifyContent": "center",
                      }
                    }
                  >
                    <View
                      dataSet={Object {}}
                      style={Object {}}
                    />
                    <View
                      checked={true}
                      colorScheme="primary"
                      dataSet={Object {}}
                      defaultIsChecked={false}
                      disabled={false}
                      isChecked={true}
                      onChange={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#0891b2",
                          "borderColor": "#0891b2",
                          "borderRadius": 4,
                          "borderWidth": 2,
                          "display": "flex",
                          "justifyContent": "center",
                          "opacity": 1,
                          "paddingBottom": 2,
                          "paddingLeft": 2,
                          "paddingRight": 2,
                          "paddingTop": 2,
                        }
                      }
                      value="Code"
                    >
                      <RNSVGSvgView
                        accessibilityRole="image"
                        align="xMidYMid"
                        bbHeight={12}
                        bbWidth={12}
                        color={4294638330}
                        dataSet={Object {}}
                        focusable={false}
                        meetOrSlice={0}
                        minX={0}
                        minY={0}
                        stroke=""
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "borderWidth": 0,
                            },
                            Object {
                              "color": "#fafafa",
                              "height": 12,
                              "width": 12,
                            },
                            Object {
                              "flex": 0,
                              "height": 12,
                              "width": 12,
                            },
                          ]
                        }
                        tintColor={4294638330}
                        vbHeight={24}
                        vbWidth={24}
                      >
                        <RNSVGGroup
                          propList={
                            Array [
                              "stroke",
                            ]
                          }
                          stroke={null}
                        >
                          <RNSVGGroup>
                            <RNSVGPath
                              d="M8.53115 15.1856L3.96198 10.744L2 12.6512L8.53115 19L22 5.9072L20.038 4L8.53115 15.1856Z"
                              fill={
                                Array [
                                  2,
                                ]
                              }
                              propList={
                                Array [
                                  "fill",
                                  "stroke",
                                ]
                              }
                              stroke={null}
                            />
                          </RNSVGGroup>
                        </RNSVGGroup>
                      </RNSVGSvgView>
                    </View>
                  </View>
                </View>
              </View>
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <Text
                dataSet={Object {}}
                onPress={[Function]}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#a1a1aa",
                    "flexShrink": 1,
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "textAlign": "left",
                    "textDecorationLine": "line-through",
                    "width": "100%",
                  }
                }
              >
                Code
              </Text>
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <View
                accessibilityRole="button"
                accessible={true}
                colorScheme="trueGray"
                dataSet={Object {}}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onHoverIn={[Function]}
                onHoverOut={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "borderRadius": 4,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 8,
                    "paddingLeft": 8,
                    "paddingRight": 8,
                    "paddingTop": 8,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  dataSet={Object {}}
                  style={
                    Array [
                      Object {
                        "color": undefined,
                        "fontSize": 12,
                      },
                      Object {
                        "color": "#525252",
                        "fontSize": 16,
                        "height": 16,
                        "lineHeight": 16,
                        "width": 16,
                      },
                      Object {
                        "fontFamily": "entypo",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  
                </Text>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "width": "100%",
                }
              }
            >
              <View
                accessibilityRole="checkbox"
                accessibilityState={
                  Object {
                    "checked": false,
                    "disabled": undefined,
                  }
                }
                accessible={true}
                dataSet={Object {}}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onHoverIn={[Function]}
                onHoverOut={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={Object {}}
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "flex-start",
                    }
                  }
                >
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "alignItems": "center",
                        "display": "flex",
                        "justifyContent": "center",
                      }
                    }
                  >
                    <View
                      dataSet={Object {}}
                      style={Object {}}
                    />
                    <View
                      checked={false}
                      colorScheme="primary"
                      dataSet={Object {}}
                      defaultIsChecked={false}
                      disabled={false}
                      isChecked={false}
                      onChange={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#fafafa",
                          "borderColor": "#a3a3a3",
                          "borderRadius": 4,
                          "borderWidth": 2,
                          "display": "flex",
                          "justifyContent": "center",
                          "opacity": 1,
                          "paddingBottom": 2,
                          "paddingLeft": 2,
                          "paddingRight": 2,
                          "paddingTop": 2,
                        }
                      }
                      value="Meeting with team at 9"
                    >
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "color": "#fafafa",
                            "height": 12,
                            "width": 12,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <Text
                dataSet={Object {}}
                onPress={[Function]}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "flexShrink": 1,
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "textAlign": "left",
                    "textDecorationLine": undefined,
                    "width": "100%",
                  }
                }
              >
                Meeting with team at 9
              </Text>
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <View
                accessibilityRole="button"
                accessible={true}
                colorScheme="trueGray"
                dataSet={Object {}}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onHoverIn={[Function]}
                onHoverOut={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "borderRadius": 4,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 8,
                    "paddingLeft": 8,
                    "paddingRight": 8,
                    "paddingTop": 8,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  dataSet={Object {}}
                  style={
                    Array [
                      Object {
                        "color": undefined,
                        "fontSize": 12,
                      },
                      Object {
                        "color": "#525252",
                        "fontSize": 16,
                        "height": 16,
                        "lineHeight": 16,
                        "width": 16,
                      },
                      Object {
                        "fontFamily": "entypo",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  
                </Text>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "width": "100%",
                }
              }
            >
              <View
                accessibilityRole="checkbox"
                accessibilityState={
                  Object {
                    "checked": false,
                    "disabled": undefined,
                  }
                }
                accessible={true}
                dataSet={Object {}}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onHoverIn={[Function]}
                onHoverOut={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={Object {}}
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "flex-start",
                    }
                  }
                >
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "alignItems": "center",
                        "display": "flex",
                        "justifyContent": "center",
                      }
                    }
                  >
                    <View
                      dataSet={Object {}}
                      style={Object {}}
                    />
                    <View
                      checked={false}
                      colorScheme="primary"
                      dataSet={Object {}}
                      defaultIsChecked={false}
                      disabled={false}
                      isChecked={false}
                      onChange={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#fafafa",
                          "borderColor": "#a3a3a3",
                          "borderRadius": 4,
                          "borderWidth": 2,
                          "display": "flex",
                          "justifyContent": "center",
                          "opacity": 1,
                          "paddingBottom": 2,
                          "paddingLeft": 2,
                          "paddingRight": 2,
                          "paddingTop": 2,
                        }
                      }
                      value="Check Emails"
                    >
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "color": "#fafafa",
                            "height": 12,
                            "width": 12,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <Text
                dataSet={Object {}}
                onPress={[Function]}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "flexShrink": 1,
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "textAlign": "left",
                    "textDecorationLine": undefined,
                    "width": "100%",
                  }
                }
              >
                Check Emails
              </Text>
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <View
                accessibilityRole="button"
                accessible={true}
                colorScheme="trueGray"
                dataSet={Object {}}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onHoverIn={[Function]}
                onHoverOut={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "borderRadius": 4,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 8,
                    "paddingLeft": 8,
                    "paddingRight": 8,
                    "paddingTop": 8,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  dataSet={Object {}}
                  style={
                    Array [
                      Object {
                        "color": undefined,
                        "fontSize": 12,
                      },
                      Object {
                        "color": "#525252",
                        "fontSize": 16,
                        "height": 16,
                        "lineHeight": 16,
                        "width": 16,
                      },
                      Object {
                        "fontFamily": "entypo",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  
                </Text>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "width": "100%",
                }
              }
            >
              <View
                accessibilityRole="checkbox"
                accessibilityState={
                  Object {
                    "checked": false,
                    "disabled": undefined,
                  }
                }
                accessible={true}
                dataSet={Object {}}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onHoverIn={[Function]}
                onHoverOut={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={Object {}}
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "flex-start",
                    }
                  }
                >
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "alignItems": "center",
                        "display": "flex",
                        "justifyContent": "center",
                      }
                    }
                  >
                    <View
                      dataSet={Object {}}
                      style={Object {}}
                    />
                    <View
                      checked={false}
                      colorScheme="primary"
                      dataSet={Object {}}
                      defaultIsChecked={false}
                      disabled={false}
                      isChecked={false}
                      onChange={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#fafafa",
                          "borderColor": "#a3a3a3",
                          "borderRadius": 4,
                          "borderWidth": 2,
                          "display": "flex",
                          "justifyContent": "center",
                          "opacity": 1,
                          "paddingBottom": 2,
                          "paddingLeft": 2,
                          "paddingRight": 2,
                          "paddingTop": 2,
                        }
                      }
                      value="Write an article"
                    >
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "color": "#fafafa",
                            "height": 12,
                            "width": 12,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <Text
                dataSet={Object {}}
                onPress={[Function]}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "flexShrink": 1,
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "textAlign": "left",
                    "textDecorationLine": undefined,
                    "width": "100%",
                  }
                }
              >
                Write an article
              </Text>
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <View
                accessibilityRole="button"
                accessible={true}
                colorScheme="trueGray"
                dataSet={Object {}}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onHoverIn={[Function]}
                onHoverOut={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "borderRadius": 4,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 8,
                    "paddingLeft": 8,
                    "paddingRight": 8,
                    "paddingTop": 8,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  dataSet={Object {}}
                  style={
                    Array [
                      Object {
                        "color": undefined,
                        "fontSize": 12,
                      },
                      Object {
                        "color": "#525252",
                        "fontSize": 16,
                        "height": 16,
                        "lineHeight": 16,
                        "width": 16,
                      },
                      Object {
                        "fontFamily": "entypo",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Fab Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "height": 100,
          "position": "relative",
          "width": "100%",
        }
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Fab CustomPosition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "height": 200,
          "position": "relative",
          "width": "100%",
        }
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Fab Placement 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "height": 400,
          "width": "100%",
        }
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots FlatList Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={Object {}}
    >
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 20,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 25,
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
            "textDecorationLine": undefined,
          }
        }
      >
        Inbox
      </Text>
      <RCTScrollView
        contentContainerStyle={
          Array [
            Object {},
            Object {
              "dataSet": Object {},
            },
          ]
        }
        data={
          Array [
            Object {
              "avatarUrl": "https://images.pexels.com/photos/220453/pexels-photo-220453.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500",
              "fullName": "Aafreen Khan",
              "id": "bd7acbea-c1b1-46c2-aed5-3ad53abb28ba",
              "recentText": "Good Day!",
              "timeStamp": "12:47 PM",
            },
            Object {
              "avatarUrl": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTyEaZqT3fHeNrPGcnjLLX1v_W4mvBlgpwxnA&usqp=CAU",
              "fullName": "Sujitha Mathur",
              "id": "3ac68afc-c605-48d3-a4f8-fbd91aa97f63",
              "recentText": "Cheer up, there!",
              "timeStamp": "11:11 PM",
            },
            Object {
              "avatarUrl": "https://miro.medium.com/max/1400/0*0fClPmIScV5pTLoE.jpg",
              "fullName": "Anci Barroco",
              "id": "58694a0f-3da1-471f-bd96-145571e29d72",
              "recentText": "Good Day!",
              "timeStamp": "6:22 PM",
            },
            Object {
              "avatarUrl": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSr01zI37DYuR8bMV5exWQBSw28C1v_71CAh8d7GP1mplcmTgQA6Q66Oo--QedAN1B4E1k&usqp=CAU",
              "fullName": "Aniket Kumar",
              "id": "68694a0f-3da1-431f-bd56-142371e29d72",
              "recentText": "All the best",
              "timeStamp": "8:56 PM",
            },
            Object {
              "avatarUrl": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRBwgu1A5zgPSvfE83nurkuzNEoXs9DMNr8Ww&usqp=CAU",
              "fullName": "Kiara",
              "id": "28694a0f-3da1-471f-bd96-142456e29d72",
              "recentText": "I will call today.",
              "timeStamp": "12:47 PM",
            },
          ]
        }
        dataSet={Object {}}
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        style={Object {}}
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "borderBottomWidth": 1,
                  "borderColor": "#262626",
                  "paddingBottom": 8,
                  "paddingLeft": 16,
                  "paddingRight": 20,
                  "paddingTop": 8,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#a1a1aa",
                      "borderColor": "#27272a",
                      "borderRadius": 9999,
                      "height": 48,
                      "justifyContent": "center",
                      "position": "relative",
                      "width": 48,
                    }
                  }
                >
                  <Image
                    accessibilityLabel="--"
                    alt="--"
                    dataSet={Object {}}
                    onError={[Function]}
                    source={
                      Object {
                        "uri": "https://images.pexels.com/photos/220453/pexels-photo-220453.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500",
                      }
                    }
                    style={
                      Array [
                        Object {
                          "borderRadius": 9999,
                          "maxWidth": "100%",
                        },
                        Object {
                          "height": "100%",
                          "width": "100%",
                        },
                      ]
                    }
                  />
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "width": 12,
                    }
                  }
                />
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#1f2937",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "700",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Aafreen Khan
                  </Text>
                  <View
                    dataSet={Object {}}
                    style={Object {}}
                  />
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#4b5563",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Good Day!
                  </Text>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "width": 12,
                    }
                  }
                />
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "flexGrow": 1,
                    }
                  }
                />
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "width": 12,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignSelf": "flex-start",
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 18,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  12:47 PM
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "borderBottomWidth": 1,
                  "borderColor": "#262626",
                  "paddingBottom": 8,
                  "paddingLeft": 16,
                  "paddingRight": 20,
                  "paddingTop": 8,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#a1a1aa",
                      "borderColor": "#27272a",
                      "borderRadius": 9999,
                      "height": 48,
                      "justifyContent": "center",
                      "position": "relative",
                      "width": 48,
                    }
                  }
                >
                  <Image
                    accessibilityLabel="--"
                    alt="--"
                    dataSet={Object {}}
                    onError={[Function]}
                    source={
                      Object {
                        "uri": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTyEaZqT3fHeNrPGcnjLLX1v_W4mvBlgpwxnA&usqp=CAU",
                      }
                    }
                    style={
                      Array [
                        Object {
                          "borderRadius": 9999,
                          "maxWidth": "100%",
                        },
                        Object {
                          "height": "100%",
                          "width": "100%",
                        },
                      ]
                    }
                  />
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "width": 12,
                    }
                  }
                />
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#1f2937",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "700",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Sujitha Mathur
                  </Text>
                  <View
                    dataSet={Object {}}
                    style={Object {}}
                  />
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#4b5563",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Cheer up, there!
                  </Text>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "width": 12,
                    }
                  }
                />
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "flexGrow": 1,
                    }
                  }
                />
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "width": 12,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignSelf": "flex-start",
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 18,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  11:11 PM
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "borderBottomWidth": 1,
                  "borderColor": "#262626",
                  "paddingBottom": 8,
                  "paddingLeft": 16,
                  "paddingRight": 20,
                  "paddingTop": 8,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#a1a1aa",
                      "borderColor": "#27272a",
                      "borderRadius": 9999,
                      "height": 48,
                      "justifyContent": "center",
                      "position": "relative",
                      "width": 48,
                    }
                  }
                >
                  <Image
                    accessibilityLabel="--"
                    alt="--"
                    dataSet={Object {}}
                    onError={[Function]}
                    source={
                      Object {
                        "uri": "https://miro.medium.com/max/1400/0*0fClPmIScV5pTLoE.jpg",
                      }
                    }
                    style={
                      Array [
                        Object {
                          "borderRadius": 9999,
                          "maxWidth": "100%",
                        },
                        Object {
                          "height": "100%",
                          "width": "100%",
                        },
                      ]
                    }
                  />
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "width": 12,
                    }
                  }
                />
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#1f2937",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "700",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Anci Barroco
                  </Text>
                  <View
                    dataSet={Object {}}
                    style={Object {}}
                  />
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#4b5563",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Good Day!
                  </Text>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "width": 12,
                    }
                  }
                />
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "flexGrow": 1,
                    }
                  }
                />
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "width": 12,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignSelf": "flex-start",
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 18,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  6:22 PM
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "borderBottomWidth": 1,
                  "borderColor": "#262626",
                  "paddingBottom": 8,
                  "paddingLeft": 16,
                  "paddingRight": 20,
                  "paddingTop": 8,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#a1a1aa",
                      "borderColor": "#27272a",
                      "borderRadius": 9999,
                      "height": 48,
                      "justifyContent": "center",
                      "position": "relative",
                      "width": 48,
                    }
                  }
                >
                  <Image
                    accessibilityLabel="--"
                    alt="--"
                    dataSet={Object {}}
                    onError={[Function]}
                    source={
                      Object {
                        "uri": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSr01zI37DYuR8bMV5exWQBSw28C1v_71CAh8d7GP1mplcmTgQA6Q66Oo--QedAN1B4E1k&usqp=CAU",
                      }
                    }
                    style={
                      Array [
                        Object {
                          "borderRadius": 9999,
                          "maxWidth": "100%",
                        },
                        Object {
                          "height": "100%",
                          "width": "100%",
                        },
                      ]
                    }
                  />
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "width": 12,
                    }
                  }
                />
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#1f2937",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "700",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Aniket Kumar
                  </Text>
                  <View
                    dataSet={Object {}}
                    style={Object {}}
                  />
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#4b5563",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    All the best
                  </Text>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "width": 12,
                    }
                  }
                />
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "flexGrow": 1,
                    }
                  }
                />
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "width": 12,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignSelf": "flex-start",
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 18,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  8:56 PM
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "borderBottomWidth": 1,
                  "borderColor": "#262626",
                  "paddingBottom": 8,
                  "paddingLeft": 16,
                  "paddingRight": 20,
                  "paddingTop": 8,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#a1a1aa",
                      "borderColor": "#27272a",
                      "borderRadius": 9999,
                      "height": 48,
                      "justifyContent": "center",
                      "position": "relative",
                      "width": 48,
                    }
                  }
                >
                  <Image
                    accessibilityLabel="--"
                    alt="--"
                    dataSet={Object {}}
                    onError={[Function]}
                    source={
                      Object {
                        "uri": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRBwgu1A5zgPSvfE83nurkuzNEoXs9DMNr8Ww&usqp=CAU",
                      }
                    }
                    style={
                      Array [
                        Object {
                          "borderRadius": 9999,
                          "maxWidth": "100%",
                        },
                        Object {
                          "height": "100%",
                          "width": "100%",
                        },
                      ]
                    }
                  />
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "width": 12,
                    }
                  }
                />
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#1f2937",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "700",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Kiara
                  </Text>
                  <View
                    dataSet={Object {}}
                    style={Object {}}
                  />
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#4b5563",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    I will call today.
                  </Text>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "width": 12,
                    }
                  }
                />
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "flexGrow": 1,
                    }
                  }
                />
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "width": 12,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignSelf": "flex-start",
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 18,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  12:47 PM
                </Text>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Flex Basic Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <RCTScrollView
        contentContainerStyle={
          Array [
            Object {},
            Object {
              "dataSet": Object {},
            },
          ]
        }
        dataSet={Object {}}
        style={Object {}}
      >
        <View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "paddingLeft": 12,
                "paddingRight": 12,
                "width": "100%",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 20,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 25,
                  "textDecorationLine": undefined,
                }
              }
            >
              row
            </Text>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 10,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "display": "flex",
                  "flexDirection": "row",
                  "marginBottom": 10,
                  "marginTop": 6,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#cffafe",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  100
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#a5f3fc",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  200
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#67e8f9",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  300
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#22d3ee",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  400
                </Text>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 10,
                }
              }
            />
            <View
              aria-orientation="horizontal"
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": "#d4d4d4",
                  "height": 1,
                  "width": "100%",
                }
              }
              thickness="1"
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 10,
                }
              }
            />
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 20,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 25,
                  "textDecorationLine": undefined,
                }
              }
            >
              column
            </Text>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 10,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "display": "flex",
                  "flexDirection": "column",
                  "marginBottom": 10,
                  "marginTop": 6,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#cffafe",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  100
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#a5f3fc",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  200
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#67e8f9",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  300
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#22d3ee",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  400
                </Text>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 10,
                }
              }
            />
            <View
              aria-orientation="horizontal"
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": "#d4d4d4",
                  "height": 1,
                  "width": "100%",
                }
              }
              thickness="1"
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 10,
                }
              }
            />
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 20,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 25,
                  "textDecorationLine": undefined,
                }
              }
            >
              row-reverse
            </Text>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 10,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "display": "flex",
                  "flexDirection": "row-reverse",
                  "marginBottom": 10,
                  "marginTop": 6,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#cffafe",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  100
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#a5f3fc",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  200
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#67e8f9",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  300
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#22d3ee",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  400
                </Text>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 10,
                }
              }
            />
            <View
              aria-orientation="horizontal"
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": "#d4d4d4",
                  "height": 1,
                  "width": "100%",
                }
              }
              thickness="1"
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 10,
                }
              }
            />
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 20,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 25,
                  "textDecorationLine": undefined,
                }
              }
            >
              column-reverse
            </Text>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 10,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "display": "flex",
                  "flexDirection": "column-reverse",
                  "marginBottom": 10,
                  "marginTop": 6,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#cffafe",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  100
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#a5f3fc",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  200
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#67e8f9",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  300
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#22d3ee",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  400
                </Text>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 10,
                }
              }
            />
            <View
              aria-orientation="horizontal"
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": "#d4d4d4",
                  "height": 1,
                  "width": "100%",
                }
              }
              thickness="1"
            />
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Flex Spacer Example 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "column",
          "height": 160,
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "display": "flex",
            "height": 64,
            "justifyContent": "center",
            "width": 64,
          }
        }
      >
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#fafaf9",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "500",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": undefined,
            }
          }
        >
          Box 1
        </Text>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "flexGrow": 1,
          }
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#ec4899",
            "borderRadius": 4,
            "display": "flex",
            "height": 64,
            "justifyContent": "center",
            "width": 64,
          }
        }
      >
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#fafaf9",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "500",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": undefined,
            }
          }
        >
          Box 2
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots FormControl CustomStyle 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RCTScrollView
      contentContainerStyle={
        Array [
          Object {},
          Object {
            "dataSet": Object {},
          },
        ]
      }
      dataSet={Object {}}
      style={
        Object {
          "width": "100%",
        }
      }
    >
      <View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignSelf": "center",
              "marginTop": 16,
              "paddingLeft": 16,
              "paddingRight": 16,
              "width": "100%",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 20,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 30,
                  "marginBottom": 16,
                  "textDecorationLine": undefined,
                }
              }
            >
              Default
            </Text>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "marginBottom": 20,
                  "width": "100%",
                }
              }
            >
              <View
                dataSet={Object {}}
                feedbackId="field-react-aria-0-2-feedback"
                hasFeedbackText={false}
                hasHelpText={false}
                helpTextId="field-react-aria-0-2-helptext"
                isDisabled={false}
                isInvalid={false}
                isReadOnly={false}
                isRequired={false}
                labelId="field-react-aria-0-2-label"
                nativeID="field-react-aria-0-2-label"
                setHasFeedbackText={[Function]}
                setHasHelpText={[Function]}
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "flex-start",
                    "marginBottom": 4,
                    "marginTop": 4,
                  }
                }
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#737373",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "500",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Project Title
                </Text>
              </View>
              <View
                dataSet={Object {}}
                isFocused={false}
                style={
                  Object {
                    "alignItems": "center",
                    "borderColor": "#d4d4d4",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "flexDirection": "row",
                    "overflow": "hidden",
                  }
                }
              >
                <TextInput
                  accessible={true}
                  allowFontScaling={true}
                  dataSet={Object {}}
                  disabled={false}
                  editable={true}
                  isRequired={false}
                  nativeID="field-react-aria-0-2"
                  onBlur={[Function]}
                  onFocus={[Function]}
                  onKeyPress={[Function]}
                  placeholderTextColor="#a3a3a3"
                  readOnly={false}
                  rejectResponderTermination={true}
                  required={false}
                  secureTextEntry={false}
                  selectionColor="#1f2937"
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#171717",
                      "flex": 1,
                      "fontFamily": undefined,
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "height": "100%",
                      "paddingBottom": 8,
                      "paddingLeft": 12,
                      "paddingRight": 12,
                      "paddingTop": 8,
                      "width": "100%",
                    }
                  }
                  underlineColorAndroid="transparent"
                />
              </View>
              <View
                dataSet={Object {}}
                feedbackId="field-react-aria-0-2-feedback"
                hasFeedbackText={false}
                hasHelpText={false}
                helpTextId="field-react-aria-0-2-helptext"
                isDisabled={false}
                isInvalid={false}
                isReadOnly={false}
                isRequired={false}
                labelId="field-react-aria-0-2-label"
                nativeID="field-react-aria-0-2-feedback"
                setHasFeedbackText={[Function]}
                setHasHelpText={[Function]}
                style={
                  Object {
                    "marginTop": 8,
                  }
                }
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#737373",
                      "fontFamily": undefined,
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 18,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Give your project a title.
                </Text>
              </View>
            </View>
            <View
              aria-orientation="horizontal"
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": "#d4d4d4",
                  "height": 1,
                  "width": "100%",
                }
              }
              thickness="1"
            />
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 20,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 30,
                  "marginBottom": 16,
                  "textDecorationLine": undefined,
                }
              }
            >
              Disabled
            </Text>
            <View
              dataSet={Object {}}
              isDisabled={true}
              style={
                Object {
                  "marginBottom": 20,
                  "width": "100%",
                }
              }
            >
              <View
                dataSet={Object {}}
                feedbackId="field-react-aria-0-3-feedback"
                hasFeedbackText={false}
                hasHelpText={false}
                helpTextId="field-react-aria-0-3-helptext"
                isDisabled={true}
                isInvalid={false}
                isReadOnly={false}
                isRequired={false}
                labelId="field-react-aria-0-3-label"
                nativeID="field-react-aria-0-3-label"
                setHasFeedbackText={[Function]}
                setHasHelpText={[Function]}
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "flex-start",
                    "marginBottom": 4,
                    "marginTop": 4,
                  }
                }
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#a1a1aa",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Project Title
                </Text>
              </View>
              <View
                dataSet={Object {}}
                isFocused={false}
                style={
                  Object {
                    "alignItems": "center",
                    "borderColor": "#d4d4d4",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "flexDirection": "row",
                    "opacity": 0.4,
                    "overflow": "hidden",
                  }
                }
              >
                <TextInput
                  accessible={true}
                  allowFontScaling={true}
                  dataSet={Object {}}
                  disabled={true}
                  editable={false}
                  isRequired={false}
                  nativeID="field-react-aria-0-3"
                  onBlur={[Function]}
                  onFocus={[Function]}
                  onKeyPress={[Function]}
                  placeholder="Title"
                  placeholderTextColor="#404040"
                  readOnly={false}
                  rejectResponderTermination={true}
                  required={false}
                  secureTextEntry={false}
                  selectionColor="#1f2937"
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#171717",
                      "flex": 1,
                      "fontFamily": undefined,
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "height": "100%",
                      "paddingBottom": 8,
                      "paddingLeft": 12,
                      "paddingRight": 12,
                      "paddingTop": 8,
                      "width": "100%",
                    }
                  }
                  underlineColorAndroid="transparent"
                />
              </View>
              <View
                dataSet={Object {}}
                feedbackId="field-react-aria-0-3-feedback"
                hasFeedbackText={false}
                hasHelpText={false}
                helpTextId="field-react-aria-0-3-helptext"
                isDisabled={true}
                isInvalid={false}
                isReadOnly={false}
                isRequired={false}
                labelId="field-react-aria-0-3-label"
                nativeID="field-react-aria-0-3-feedback"
                setHasFeedbackText={[Function]}
                setHasHelpText={[Function]}
                style={
                  Object {
                    "marginTop": 8,
                  }
                }
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#737373",
                      "fontFamily": undefined,
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 18,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Give your project a title.
                </Text>
              </View>
            </View>
            <View
              aria-orientation="horizontal"
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": "#d4d4d4",
                  "height": 1,
                  "width": "100%",
                }
              }
              thickness="1"
            />
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 20,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 30,
                  "marginBottom": 16,
                  "textDecorationLine": undefined,
                }
              }
            >
              Invalid
            </Text>
            <View
              dataSet={Object {}}
              isInvalid={true}
              style={
                Object {
                  "width": "100%",
                }
              }
            >
              <View
                dataSet={Object {}}
                feedbackId="field-react-aria-0-4-feedback"
                hasFeedbackText={false}
                hasHelpText={false}
                helpTextId="field-react-aria-0-4-helptext"
                isDisabled={false}
                isInvalid={true}
                isReadOnly={false}
                isRequired={false}
                labelId="field-react-aria-0-4-label"
                nativeID="field-react-aria-0-4-label"
                setHasFeedbackText={[Function]}
                setHasHelpText={[Function]}
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "flex-start",
                    "marginBottom": 4,
                    "marginTop": 4,
                  }
                }
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#737373",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "500",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Project Title
                </Text>
              </View>
              <View
                dataSet={Object {}}
                isFocused={false}
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderColor": "#dc2626",
                      "borderRadius": 4,
                      "borderWidth": 1,
                      "flexDirection": "row",
                      "overflow": "hidden",
                    },
                    Object {
                      "outlineColor": "#dc2626",
                      "outlineStyle": "solid",
                      "outlineWidth": "1px",
                    },
                  ]
                }
              >
                <TextInput
                  accessibilityInvalid={true}
                  accessible={true}
                  allowFontScaling={true}
                  dataSet={Object {}}
                  disabled={false}
                  editable={true}
                  isInvalid={true}
                  isRequired={false}
                  nativeID="field-react-aria-0-4"
                  onBlur={[Function]}
                  onFocus={[Function]}
                  onKeyPress={[Function]}
                  placeholder="Title"
                  placeholderTextColor="#a3a3a3"
                  readOnly={false}
                  rejectResponderTermination={true}
                  required={false}
                  secureTextEntry={false}
                  selectionColor="#1f2937"
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#171717",
                      "flex": 1,
                      "fontFamily": undefined,
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "height": "100%",
                      "paddingBottom": 8,
                      "paddingLeft": 12,
                      "paddingRight": 12,
                      "paddingTop": 8,
                      "width": "100%",
                    }
                  }
                  underlineColorAndroid="transparent"
                />
              </View>
              <View
                dataSet={Object {}}
                feedbackId="field-react-aria-0-4-feedback"
                hasFeedbackText={false}
                hasHelpText={false}
                helpTextId="field-react-aria-0-4-helptext"
                isDisabled={false}
                isInvalid={true}
                isReadOnly={false}
                isRequired={false}
                labelId="field-react-aria-0-4-label"
                nativeID="field-react-aria-0-4"
                setHasFeedbackText={[Function]}
                setHasHelpText={[Function]}
                style={
                  Object {
                    "marginTop": 8,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={12}
                    bbWidth={12}
                    color={4292617766}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#dc2626",
                          "fontSize": 12,
                          "height": 12,
                          "width": 12,
                        },
                        Object {
                          "flex": 0,
                          "height": 12,
                          "width": 12,
                        },
                      ]
                    }
                    tintColor={4292617766}
                    vbHeight={16}
                    vbWidth={16}
                  >
                    <RNSVGGroup
                      font={
                        Object {
                          "fontSize": 12,
                        }
                      }
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M8 16C6.41775 16 4.87103 15.5308 3.55544 14.6518C2.23985 13.7727 1.21447 12.5233 0.608967 11.0615C0.00346627 9.59966 -0.15496 7.99113 0.153721 6.43928C0.462403 4.88743 1.22433 3.46197 2.34315 2.34315C3.46197 1.22433 4.88743 0.462403 6.43928 0.153721C7.99113 -0.15496 9.59966 0.00346627 11.0615 0.608967C12.5233 1.21447 13.7727 2.23985 14.6518 3.55544C15.5308 4.87103 16 6.41775 16 8C16 10.1217 15.1571 12.1566 13.6569 13.6569C12.1566 15.1571 10.1217 16 8 16ZM8 14.4C9.2658 14.4 10.5032 14.0246 11.5556 13.3214C12.6081 12.6182 13.4284 11.6186 13.9128 10.4492C14.3972 9.27973 14.524 7.9929 14.277 6.75142C14.0301 5.50995 13.4205 4.36958 12.5255 3.47452C11.6304 2.57946 10.4901 1.96992 9.24858 1.72298C8.0071 1.47603 6.72028 1.60277 5.55083 2.08717C4.38138 2.57158 3.38184 3.39188 2.6786 4.44435C1.97536 5.49683 1.6 6.7342 1.6 8C1.6 9.69739 2.27429 11.3253 3.47452 12.5255C4.67475 13.7257 6.30262 14.4 8 14.4ZM7.2 10.4H8.8V12H7.2V10.4ZM7.2 4H8.8V8.8H7.2V4Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "width": 4,
                      }
                    }
                  />
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#dc2626",
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 18,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Something is wrong.
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots FormControl Playground 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      isDisabled={false}
      isInvalid={false}
      isReadOnly={false}
      isRequired={true}
      style={
        Object {
          "width": "70%",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "marginLeft": 16,
            "marginRight": 16,
          }
        }
      >
        <View
          dataSet={Object {}}
          feedbackId="field-react-aria-0-2-feedback"
          hasFeedbackText={false}
          hasHelpText={false}
          helpTextId="field-react-aria-0-2-helptext"
          isDisabled={false}
          isInvalid={false}
          isReadOnly={false}
          isRequired={true}
          labelId="field-react-aria-0-2-label"
          nativeID="field-react-aria-0-2-label"
          setHasFeedbackText={[Function]}
          setHasHelpText={[Function]}
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "marginBottom": 4,
              "marginTop": 4,
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#737373",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Favorite framework
          </Text>
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#dc2626",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            *
          </Text>
        </View>
        <View
          dataSet={Object {}}
          style={Object {}}
        />
        <View
          dataSet={Object {}}
          isFocused={false}
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d4",
              "borderRadius": 4,
              "borderWidth": 1,
              "flexDirection": "row",
              "overflow": "hidden",
            }
          }
        >
          <TextInput
            accessibilityRequired={true}
            accessible={true}
            allowFontScaling={true}
            dataSet={Object {}}
            disabled={false}
            editable={true}
            isRequired={true}
            nativeID="field-react-aria-0-2"
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyPress={[Function]}
            placeholder="Is it react?"
            placeholderTextColor="#a3a3a3"
            readOnly={false}
            rejectResponderTermination={true}
            required={true}
            secureTextEntry={false}
            selectionColor="#1f2937"
            style={
              Object {
                "backgroundColor": "transparent",
                "color": "#171717",
                "flex": 1,
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "400",
                "height": "100%",
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
                "width": "100%",
              }
            }
            underlineColorAndroid="transparent"
          />
        </View>
        <View
          dataSet={Object {}}
          style={Object {}}
        />
        <View
          dataSet={Object {}}
          feedbackId="field-react-aria-0-2-feedback"
          hasFeedbackText={false}
          hasHelpText={false}
          helpTextId="field-react-aria-0-2-helptext"
          isDisabled={false}
          isInvalid={false}
          isReadOnly={false}
          isRequired={true}
          labelId="field-react-aria-0-2-label"
          nativeID="field-react-aria-0-2-feedback"
          setHasFeedbackText={[Function]}
          setHasHelpText={[Function]}
          style={
            Object {
              "marginTop": 8,
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#737373",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 18,
                "textDecorationLine": undefined,
              }
            }
          >
            We'll keep this between us.
          </Text>
        </View>
        <View
          dataSet={Object {}}
          style={Object {}}
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots FormControl Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "maxWidth": 300,
            "width": "100%",
          }
        }
      >
        <View
          dataSet={Object {}}
          isRequired={true}
          style={
            Object {
              "width": "100%",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "marginLeft": 16,
                "marginRight": 16,
              }
            }
          >
            <View
              dataSet={Object {}}
              feedbackId="field-react-aria-0-2-feedback"
              hasFeedbackText={false}
              hasHelpText={false}
              helpTextId="field-react-aria-0-2-helptext"
              isDisabled={false}
              isInvalid={false}
              isReadOnly={false}
              isRequired={true}
              labelId="field-react-aria-0-2-label"
              nativeID="field-react-aria-0-2-label"
              setHasFeedbackText={[Function]}
              setHasHelpText={[Function]}
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#737373",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Password
              </Text>
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#dc2626",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                *
              </Text>
            </View>
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              dataSet={Object {}}
              isFocused={false}
              style={
                Object {
                  "alignItems": "center",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "overflow": "hidden",
                }
              }
            >
              <TextInput
                accessibilityRequired={true}
                accessible={true}
                allowFontScaling={true}
                dataSet={Object {}}
                defaultValue="12345"
                disabled={false}
                editable={true}
                isRequired={true}
                nativeID="field-react-aria-0-2"
                onBlur={[Function]}
                onFocus={[Function]}
                onKeyPress={[Function]}
                placeholder="password"
                placeholderTextColor="#a3a3a3"
                readOnly={false}
                rejectResponderTermination={true}
                required={true}
                secureTextEntry={true}
                selectionColor="#1f2937"
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#171717",
                    "flex": 1,
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "height": "100%",
                    "paddingBottom": 8,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 8,
                    "width": "100%",
                  }
                }
                underlineColorAndroid="transparent"
              />
            </View>
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              dataSet={Object {}}
              feedbackId="field-react-aria-0-2-feedback"
              hasFeedbackText={false}
              hasHelpText={false}
              helpTextId="field-react-aria-0-2-helptext"
              isDisabled={false}
              isInvalid={false}
              isReadOnly={false}
              isRequired={true}
              labelId="field-react-aria-0-2-label"
              nativeID="field-react-aria-0-2-feedback"
              setHasFeedbackText={[Function]}
              setHasHelpText={[Function]}
              style={
                Object {
                  "marginTop": 8,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#737373",
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 18,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Must be atleast 6 characters.
              </Text>
            </View>
            <View
              dataSet={Object {}}
              style={Object {}}
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots HStack Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#67e8f9",
            "borderRadius": 6,
            "display": "flex",
            "elevation": 4,
            "height": 160,
            "justifyContent": "center",
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.23,
            "shadowRadius": 2.62,
            "width": 80,
          }
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "width": 12,
          }
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 6,
            "display": "flex",
            "elevation": 4,
            "height": 160,
            "justifyContent": "center",
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.23,
            "shadowRadius": 2.62,
            "width": 80,
          }
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "width": 12,
          }
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0e7490",
            "borderRadius": 6,
            "display": "flex",
            "elevation": 4,
            "height": 160,
            "justifyContent": "center",
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.23,
            "shadowRadius": 2.62,
            "width": 80,
          }
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Heading Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Text
      dataSet={Object {}}
      style={
        Object {
          "backgroundColor": undefined,
          "color": "#171717",
          "fontFamily": undefined,
          "fontSize": null,
          "fontStyle": "normal",
          "fontWeight": "700",
          "letterSpacing": 0,
          "lineHeight": 30,
          "textDecorationLine": undefined,
        }
      }
    >
      I'm a Heading
    </Text>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Heading Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={Object {}}
    >
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": null,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 37.5,
            "marginBottom": 16,
            "textDecorationLine": undefined,
          }
        }
      >
        Heading
      </Text>
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 20,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 30,
            "textDecorationLine": undefined,
          }
        }
      >
        Headings are used for rendering headlines. Heading composes Text so you can use all the style props.
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Heading OverridenStyle 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Text
      dataSet={Object {}}
      style={
        Object {
          "backgroundColor": undefined,
          "color": "#171717",
          "fontFamily": undefined,
          "fontSize": 50,
          "fontStyle": "normal",
          "fontWeight": "700",
          "letterSpacing": 0,
          "lineHeight": 62.5,
          "textDecorationLine": undefined,
        }
      }
    >
      How are you?
    </Text>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Heading Sizes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 17.5,
            "textDecorationLine": undefined,
          }
        }
      >
        xs
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 16,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 20,
            "textDecorationLine": undefined,
          }
        }
      >
        sm
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 20,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 25,
            "textDecorationLine": undefined,
          }
        }
      >
        md
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": null,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "textDecorationLine": undefined,
          }
        }
      >
        lg
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": null,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 37.5,
            "textDecorationLine": undefined,
          }
        }
      >
        xl
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": null,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 45,
            "textDecorationLine": undefined,
          }
        }
      >
        2xl
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": null,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 2.4000000000000004,
            "lineHeight": 60,
            "textDecorationLine": undefined,
          }
        }
      >
        3xl
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": null,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 3,
            "lineHeight": 75,
            "textDecorationLine": undefined,
          }
        }
      >
        4xl
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Heading Truncate 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Text
      dataSet={Object {}}
      numberOfLines={1}
      style={
        Object {
          "backgroundColor": undefined,
          "color": "#171717",
          "fontFamily": undefined,
          "fontSize": null,
          "fontStyle": "normal",
          "fontWeight": "700",
          "letterSpacing": 0,
          "lineHeight": 30,
          "textDecorationLine": undefined,
        }
      }
    >
      NativeBase is a simple, modular and accessible component library that gives you building blocks to build you React applications.
    </Text>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Hidden Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={Object {}}
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": "#fdba74",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          }
        }
      >
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#171717",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": undefined,
            }
          }
        >
          This text will be always visible.
        </Text>
      </View>
      <View
        dataSet={Object {}}
        style={Object {}}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Hidden HiddenFromAndToBreakpoints 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={Object {}}
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": "#fdba74",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          }
        }
      >
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#171717",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": undefined,
            }
          }
        >
          This text will be always visible.
        </Text>
      </View>
      <View
        dataSet={Object {}}
        style={Object {}}
      />
      <View
        dataSet={Object {}}
        style={Object {}}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Hidden HiddenOnColorModes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="coolGray"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#4b5563",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Change mode
            </Text>
          </View>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "center",
            "marginTop": 20,
          }
        }
      >
        <Image
          accessibilityLabel="image"
          alt="image"
          dataSet={Object {}}
          onError={[Function]}
          source={
            Object {
              "uri": "https://images.unsplash.com/photo-1561566482-5fa7e82d88b7?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1471&q=80",
            }
          }
          style={
            Object {
              "height": 150,
              "maxWidth": "100%",
              "width": 150,
            }
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Hidden HiddenOnPlatforms 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={Object {}}
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": "#fdba74",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          }
        }
      >
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#171717",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": undefined,
            }
          }
        >
          This text will be visible on every platform.
        </Text>
      </View>
      <View
        dataSet={Object {}}
        style={Object {}}
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": "#f87171",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          }
        }
      >
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#171717",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": undefined,
            }
          }
        >
          This text will be hidden on android and web.
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Hidden HiddenOnlyOnBreakPoints 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={Object {}}
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": "#fdba74",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          }
        }
      >
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#171717",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": undefined,
            }
          }
        >
          This text will be visible on every screen size.
        </Text>
      </View>
      <View
        dataSet={Object {}}
        style={Object {}}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Icon All Icons 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "width": "100%",
        }
      }
    >
      <RCTScrollView
        contentContainerStyle={
          Array [
            Object {},
            Object {
              "dataSet": Object {},
            },
          ]
        }
        data={
          Array [
            Object {
              "icon": <Memo />,
              "iconName": "add",
            },
            Object {
              "icon": <Memo />,
              "iconName": "arrow-back",
            },
            Object {
              "icon": <Memo />,
              "iconName": "arrow-forward",
            },
            Object {
              "icon": <Memo />,
              "iconName": "arrow-up",
            },
            Object {
              "icon": <Memo />,
              "iconName": "arrow-down",
            },
            Object {
              "icon": <Memo />,
              "iconName": "check",
            },
            Object {
              "icon": <Memo />,
              "iconName": "check-circle",
            },
            Object {
              "icon": <Memo />,
              "iconName": "chevron-down",
            },
            Object {
              "icon": <Memo />,
              "iconName": "chevron-left",
            },
            Object {
              "icon": <Memo />,
              "iconName": "chevron-right",
            },
            Object {
              "icon": <Memo />,
              "iconName": "chevron-up",
            },
            Object {
              "icon": <Memo />,
              "iconName": "circle",
            },
            Object {
              "icon": <Memo />,
              "iconName": "close",
            },
            Object {
              "icon": <Memo />,
              "iconName": "small-close",
            },
            Object {
              "icon": <Memo />,
              "iconName": "menu",
            },
            Object {
              "icon": <Memo />,
              "iconName": "info",
            },
            Object {
              "icon": <Memo />,
              "iconName": "info-outline",
            },
            Object {
              "icon": <Memo />,
              "iconName": "minus",
            },
            Object {
              "icon": <Memo />,
              "iconName": "moon",
            },
            Object {
              "icon": <Memo />,
              "iconName": "question",
            },
            Object {
              "icon": <Memo />,
              "iconName": "question-outline",
            },
            Object {
              "icon": <Memo />,
              "iconName": "search",
            },
            Object {
              "icon": <Memo />,
              "iconName": "sun",
            },
            Object {
              "icon": <Memo />,
              "iconName": "warning-1",
            },
            Object {
              "icon": <Memo />,
              "iconName": "warning-2",
            },
            Object {
              "icon": <Memo />,
              "iconName": "warning-outline",
            },
            Object {
              "icon": <Memo />,
              "iconName": "three-dots",
            },
            Object {
              "icon": <Memo />,
              "iconName": "share",
            },
            Object {
              "icon": <Memo />,
              "iconName": "play",
            },
            Object {
              "icon": <Memo />,
              "iconName": "favourite",
            },
            Object {
              "icon": <Memo />,
              "iconName": "delete",
            },
          ]
        }
        dataSet={Object {}}
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        style={Object {}}
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M13.25 10.75V2H10.75V10.75H2V13.25H10.75V22H13.25V13.25H22V10.75H13.25Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  add
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGGroup
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        >
                          <RNSVGPath
                            d="M13.0666 3.76375L6.43395 10.3964L5.58039 11.25H6.7875H21.5V12.75H6.7875H5.58192L6.43363 13.6032L13.0557 20.2372L12 21.2929L2.70711 12L12.0012 2.70586L13.0666 3.76375Z"
                            propList={
                              Array [
                                "stroke",
                              ]
                            }
                            stroke={
                              Array [
                                2,
                              ]
                            }
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  arrow-back
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGGroup
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        >
                          <RNSVGPath
                            d="M10.9334 3.76375L17.5661 10.3964L18.4196 11.25H17.2125H2.5V12.75H17.2125H18.4181L17.5664 13.6032L10.9443 24.2372L12 21.2929L21.2929 12L11.9988 2.70586L10.9334 3.76375Z"
                            propList={
                              Array [
                                "stroke",
                              ]
                            }
                            stroke={
                              Array [
                                2,
                              ]
                            }
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  arrow-forward
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGGroup
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        >
                          <RNSVGPath
                            d="M20.2362 13.0666L13.6036 6.43395L12.75 5.58039V6.7875L12.75 21.5H11.25L11.25 6.7875V5.58192L10.3968 6.43363L3.76282 13.0557L2.70711 12L12 2.70711L21.2941 12.0012L20.2362 13.0666Z"
                            propList={
                              Array [
                                "stroke",
                              ]
                            }
                            stroke={
                              Array [
                                2,
                              ]
                            }
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  arrow-up
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGGroup
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        >
                          <RNSVGPath
                            d="M3.76375 10.9334L10.3964 17.5661L11.25 18.4196V17.2125L11.25 2.5H12.75L12.75 17.2125V18.4181L13.6032 17.5664L20.2372 10.9443L21.2929 12L12 21.2929L2.70586 11.9988L3.76375 10.9334Z"
                            propList={
                              Array [
                                "stroke",
                              ]
                            }
                            stroke={
                              Array [
                                2,
                              ]
                            }
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  arrow-down
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M8.53115 15.1856L3.96198 10.744L2 12.6512L8.53115 19L22 5.9072L20.038 4L8.53115 15.1856Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  check
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24ZM7.17719 11.2464L9.91869 13.9114L16.8228 7.2L18 8.34432L9.91869 16.2L6 12.3907L7.17719 11.2464Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  check-circle
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M20.2286 6L11.9973 14.3785L3.76862 6.00268L2 7.80293L12 18L22 7.80293L20.2286 6Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  chevron-down
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M18 3.77141L9.62148 12.0027L17.9973 20.2314L16.1971 22L6 12L16.1971 2L18 3.77141Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  chevron-left
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M6 3.77141L14.3785 12.0027L6.00268 20.2314L7.80293 22L18 12L7.80293 2L6 3.77141Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  chevron-right
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M20.2286 18L11.9973 9.62148L3.76862 17.9973L2 16.1971L12 6L22 16.1971L20.2286 18Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  chevron-up
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M0 12C-2.34822e-08 13.5759 0.310389 15.1363 0.913445 16.5922C1.5165 18.0481 2.40042 19.371 3.51472 20.4853C4.62902 21.5996 5.95189 22.4835 7.4078 23.0866C8.86371 23.6896 10.4241 24 12 24C13.5759 24 15.1363 23.6896 16.5922 23.0866C18.0481 22.4835 19.371 21.5996 20.4853 20.4853C21.5996 19.371 22.4835 18.0481 23.0866 16.5922C23.6896 15.1363 24 13.5759 24 12C24 10.4241 23.6896 8.86371 23.0866 7.4078C22.4835 5.95189 21.5996 4.62902 20.4853 3.51472C19.371 2.40042 18.0481 1.5165 16.5922 0.913446C15.1363 0.310389 13.5759 0 12 0C10.4241 0 8.86371 0.310389 7.4078 0.913446C5.95189 1.5165 4.62902 2.40042 3.51472 3.51472C2.40042 4.62902 1.5165 5.95189 0.913445 7.4078C0.310389 8.86371 -2.34822e-08 10.4241 0 12Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  circle
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M12 9.77778L4.22222 2L2 4.22222L9.77778 12L2 19.7778L4.22222 22L12 14.2222L19.7778 22L22 19.7778L14.2222 12L22 4.22222L19.7778 2L12 9.77778Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  close
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={16}
                    vbWidth={16}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M9.41 8l2.29-2.29c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71L8 6.59l-2.29-2.3a1.003 1.003 0 0 0-1.42 1.42L6.59 8 4.3 10.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71L8 9.41l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71L9.41 8z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          fillRule={0}
                          propList={
                            Array [
                              "fill",
                              "fillRule",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  small-close
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M22 5H2V7.47961H22V5ZM22 10.4795H2V12.9591H22V10.4795ZM2 15.959H22V18.4386H2V15.959Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  menu
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M12 0C9.62663 0 7.30655 0.703788 5.33316 2.02236C3.35977 3.34094 1.8217 5.21509 0.913451 7.4078C0.00519948 9.60051 -0.232441 12.0133 0.230582 14.3411C0.693605 16.6689 1.83649 18.807 3.51472 20.4853C5.19295 22.1635 7.33115 23.3064 9.65892 23.7694C11.9867 24.2324 14.3995 23.9948 16.5922 23.0865C18.7849 22.1783 20.6591 20.6402 21.9776 18.6668C23.2962 16.6935 24 14.3734 24 12C23.9966 8.81846 22.7312 5.76821 20.4815 3.51852C18.2318 1.26883 15.1815 0.00344108 12 0ZM12.25 5C12.5467 5 12.8367 5.08797 13.0834 5.25279C13.33 5.41762 13.5223 5.65189 13.6358 5.92597C13.7494 6.20006 13.7791 6.50166 13.7212 6.79263C13.6633 7.08361 13.5204 7.35088 13.3107 7.56066C13.1009 7.77044 12.8336 7.9133 12.5426 7.97118C12.2517 8.02905 11.9501 7.99935 11.676 7.88582C11.4019 7.77229 11.1676 7.58003 11.0028 7.33335C10.838 7.08668 10.75 6.79667 10.75 6.5C10.75 6.10217 10.908 5.72064 11.1893 5.43934C11.4706 5.15803 11.8522 5 12.25 5ZM14.5 18.5H10.5C10.2348 18.5 9.98043 18.3946 9.7929 18.2071C9.60536 18.0196 9.5 17.7652 9.5 17.5C9.5 17.2348 9.60536 16.9804 9.7929 16.7929C9.98043 16.6054 10.2348 16.5 10.5 16.5H11.25C11.3163 16.5 11.3799 16.4737 11.4268 16.4268C11.4737 16.3799 11.5 16.3163 11.5 16.25V11.75C11.5 11.6837 11.4737 11.6201 11.4268 11.5732C11.3799 11.5263 11.3163 11.5 11.25 11.5H10.5C10.2348 11.5 9.98043 11.3946 9.7929 11.2071C9.60536 11.0196 9.5 10.7652 9.5 10.5C9.5 10.2348 9.60536 9.98043 9.7929 9.79289C9.98043 9.60536 10.2348 9.5 10.5 9.5H11.5C12.0304 9.5 12.5391 9.71071 12.9142 10.0858C13.2893 10.4609 13.5 10.9696 13.5 11.5V16.25C13.5 16.3163 13.5263 16.3799 13.5732 16.4268C13.6201 16.4737 13.6837 16.5 13.75 16.5H14.5C14.7652 16.5 15.0196 16.6054 15.2071 16.7929C15.3946 16.9804 15.5 17.2348 15.5 17.5C15.5 17.7652 15.3946 18.0196 15.2071 18.2071C15.0196 18.3946 14.7652 18.5 14.5 18.5Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  info
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGGroup
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        >
                          <RNSVGPath
                            d="M11.9442 8.24C12.5628 8.24 13.0642 7.73856 13.0642 7.12C13.0642 6.50144 12.5628 6 11.9442 6C11.3257 6 10.8242 6.50144 10.8242 7.12C10.8242 7.73856 11.3257 8.24 11.9442 8.24Z"
                          />
                          <RNSVGPath
                            d="M14.4008 15.9996H12.8008V9.59961H10.4008C10.1886 9.59961 9.98513 9.68389 9.8351 9.83392C9.68507 9.98395 9.60078 10.1874 9.60078 10.3996C9.60078 10.6118 9.68507 10.8153 9.8351 10.9653C9.98513 11.1153 10.1886 11.1996 10.4008 11.1996H11.2008V15.9996H9.60078C9.38861 15.9996 9.18513 16.0839 9.0351 16.2339C8.88507 16.384 8.80078 16.5874 8.80078 16.7996C8.80078 17.0118 8.88507 17.2153 9.0351 17.3653C9.18513 17.5153 9.38861 17.5996 9.60078 17.5996H14.4008C14.613 17.5996 14.8164 17.5153 14.9665 17.3653C15.1165 17.2153 15.2008 17.0118 15.2008 16.7996C15.2008 16.5874 15.1165 16.384 14.9665 16.2339C14.8164 16.0839 14.613 15.9996 14.4008 15.9996Z"
                          />
                          <RNSVGPath
                            d="M12 2C10.0222 2 8.08879 2.58649 6.4443 3.6853C4.79981 4.78412 3.51809 6.3459 2.76121 8.17316C2.00433 10.0004 1.8063 12.0111 2.19215 13.9509C2.578 15.8907 3.53041 17.6725 4.92894 19.0711C6.32746 20.4696 8.10929 21.422 10.0491 21.8078C11.9889 22.1937 13.9996 21.9957 15.8268 21.2388C17.6541 20.4819 19.2159 19.2002 20.3147 17.5557C21.4135 15.9112 22 13.9778 22 12C22 9.34783 20.9464 6.80429 19.0711 4.92893C17.1957 3.05357 14.6522 2 12 2ZM12 20.3333C10.3518 20.3333 8.74066 19.8446 7.37025 18.9289C5.99984 18.0132 4.93174 16.7117 4.30101 15.189C3.67028 13.6663 3.50525 11.9908 3.82679 10.3742C4.14834 8.75774 4.94201 7.27288 6.10745 6.10744C7.27288 4.942 8.75774 4.14833 10.3743 3.82679C11.9908 3.50525 13.6663 3.67027 15.189 4.301C16.7117 4.93173 18.0132 5.99984 18.9289 7.37025C19.8446 8.74066 20.3333 10.3518 20.3333 12C20.3333 13.0943 20.1178 14.178 19.699 15.189C19.2802 16.2001 18.6664 17.1187 17.8926 17.8926C17.1187 18.6664 16.2001 19.2802 15.189 19.699C14.178 20.1178 13.0944 20.3333 12 20.3333Z"
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  info-outline
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M22 10.5H2V13H22V10.5Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  minus
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  moon
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M12 0C9.62663 0 7.30655 0.703787 5.33316 2.02236C3.35977 3.34094 1.8217 5.21508 0.913451 7.4078C0.00519943 9.60051 -0.232441 12.0133 0.230582 14.3411C0.693605 16.6688 1.83649 18.807 3.51472 20.4853C5.19295 22.1635 7.33115 23.3064 9.65892 23.7694C11.9867 24.2324 14.3995 23.9948 16.5922 23.0865C18.7849 22.1783 20.6591 20.6402 21.9776 18.6668C23.2962 16.6934 24 14.3734 24 12C23.9966 8.81846 22.7312 5.76821 20.4815 3.51852C18.2318 1.26883 15.1815 0.00344108 12 0V0ZM12 19C11.7033 19 11.4133 18.912 11.1666 18.7472C10.92 18.5824 10.7277 18.3481 10.6142 18.074C10.5007 17.7999 10.4709 17.4983 10.5288 17.2074C10.5867 16.9164 10.7296 16.6491 10.9393 16.4393C11.1491 16.2296 11.4164 16.0867 11.7074 16.0288C11.9983 15.9709 12.2999 16.0006 12.574 16.1142C12.8481 16.2277 13.0824 16.42 13.2472 16.6666C13.412 16.9133 13.5 17.2033 13.5 17.5C13.5 17.8978 13.342 18.2794 13.0607 18.5607C12.7794 18.842 12.3978 19 12 19ZM13.6 12.92C13.4216 12.9979 13.2698 13.1261 13.1632 13.289C13.0566 13.4519 12.9999 13.6423 13 13.837C13 14.1022 12.8946 14.3566 12.7071 14.5441C12.5196 14.7316 12.2652 14.837 12 14.837C11.7348 14.837 11.4804 14.7316 11.2929 14.5441C11.1054 14.3566 11 14.1022 11 13.837C10.9999 13.2532 11.1702 12.682 11.4899 12.1936C11.8096 11.7051 12.2649 11.3205 12.8 11.087C13.1305 10.9427 13.4159 10.7118 13.6259 10.4186C13.8359 10.1255 13.9627 9.78099 13.993 9.42163C14.0232 9.06228 13.9557 8.70144 13.7976 8.37731C13.6396 8.05317 13.3968 7.77781 13.095 7.58037C12.7932 7.38292 12.4437 7.27074 12.0834 7.25571C11.7231 7.24067 11.3654 7.32333 11.0482 7.49495C10.7311 7.66656 10.4662 7.92074 10.2817 8.23057C10.0971 8.54041 9.99982 8.89437 10 9.255C10 9.52021 9.89465 9.77457 9.70711 9.9621C9.51957 10.1496 9.26522 10.255 9 10.255C8.73479 10.255 8.48043 10.1496 8.2929 9.9621C8.10536 9.77457 8 9.52021 8 9.255C7.99999 8.53384 8.19495 7.82608 8.56423 7.20665C8.93352 6.58721 9.4634 6.07913 10.0978 5.73618C10.7322 5.39324 11.4475 5.22817 12.168 5.25847C12.8886 5.28876 13.5875 5.51329 14.1909 5.90828C14.7942 6.30327 15.2796 6.85404 15.5956 7.50229C15.9116 8.15054 16.0464 8.87216 15.9859 9.59077C15.9253 10.3094 15.6716 10.9983 15.2516 11.5845C14.8316 12.1707 14.261 12.6325 13.6 12.921V12.92Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  question
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGGroup
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        >
                          <RNSVGPath
                            d="M12 20.75C9.67936 20.75 7.45376 19.8281 5.81282 18.1872C4.17187 16.5462 3.25 14.3206 3.25 12C3.25 9.67936 4.17187 7.45376 5.81282 5.81282C7.45376 4.17187 9.67936 3.25 12 3.25C14.3206 3.25 16.5462 4.17187 18.1872 5.81282C19.8281 7.45376 20.75 9.67936 20.75 12C20.75 14.3206 19.8281 16.5462 18.1872 18.1872C16.5462 19.8281 14.3206 20.75 12 20.75ZM12 22C14.6522 22 17.1957 20.9464 19.0711 19.0711C20.9464 17.1957 22 14.6522 22 12C22 9.34784 20.9464 6.8043 19.0711 4.92893C17.1957 3.05357 14.6522 2 12 2C9.34784 2 6.8043 3.05357 4.92893 4.92893C3.05357 6.8043 2 9.34784 2 12C2 14.6522 3.05357 17.1957 4.92893 19.0711C6.8043 20.9464 9.34784 22 12 22Z"
                          />
                          <RNSVGPath
                            d="M8.70533 9.34281C8.70369 9.38156 8.70999 9.42024 8.72385 9.45647C8.73771 9.4927 8.75883 9.52571 8.78592 9.55347C8.81301 9.58123 8.84549 9.60316 8.88136 9.6179C8.91724 9.63265 8.95575 9.6399 8.99453 9.63921H9.98453C10.1501 9.63921 10.2821 9.50361 10.3037 9.33921C10.4117 8.55201 10.9517 7.97841 11.9141 7.97841C12.7373 7.97841 13.4909 8.39001 13.4909 9.38001C13.4909 10.142 13.0421 10.4924 12.3329 11.0252C11.5253 11.612 10.8857 12.2972 10.9313 13.4096L10.9349 13.67C10.9362 13.7487 10.9684 13.8238 11.0245 13.879C11.0806 13.9343 11.1562 13.9652 11.2349 13.9652H12.2081C12.2877 13.9652 12.364 13.9336 12.4203 13.8773C12.4765 13.8211 12.5081 13.7448 12.5081 13.6652V13.5392C12.5081 12.6776 12.8357 12.4268 13.7201 11.756C14.4509 11.2004 15.2129 10.5836 15.2129 9.28881C15.2129 7.47561 13.6817 6.59961 12.0053 6.59961C10.4849 6.59961 8.81933 7.30761 8.70533 9.34281ZM10.5737 16.2584C10.5737 16.898 11.0837 17.3708 11.7857 17.3708C12.5165 17.3708 13.0193 16.898 13.0193 16.2584C13.0193 15.596 12.5153 15.1304 11.7845 15.1304C11.0837 15.1304 10.5737 15.596 10.5737 16.2584Z"
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  question-outline
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M21.9399 20.5624L15.4474 14.0699C16.4549 12.7675 16.9999 11.175 16.9999 9.49997C16.9999 7.49498 16.2174 5.61498 14.8024 4.19749C13.3874 2.78 11.5025 2 9.49997 2C7.49748 2 5.61248 2.7825 4.19749 4.19749C2.78 5.61248 2 7.49498 2 9.49997C2 11.5025 2.7825 13.3874 4.19749 14.8024C5.61248 16.2199 7.49498 16.9999 9.49997 16.9999C11.175 16.9999 12.765 16.4549 14.0674 15.4499L20.5599 21.9399C20.579 21.959 20.6016 21.9741 20.6264 21.9844C20.6513 21.9947 20.678 22 20.7049 22C20.7318 22 20.7585 21.9947 20.7834 21.9844C20.8083 21.9741 20.8309 21.959 20.8499 21.9399L21.9399 20.8524C21.959 20.8334 21.9741 20.8108 21.9844 20.7859C21.9947 20.761 22 20.7343 22 20.7074C22 20.6805 21.9947 20.6538 21.9844 20.6289C21.9741 20.6041 21.959 20.5815 21.9399 20.5624ZM13.46 13.46C12.4 14.5174 10.995 15.0999 9.49997 15.0999C8.00497 15.0999 6.59998 14.5174 5.53998 13.46C4.48249 12.4 3.89999 10.995 3.89999 9.49997C3.89999 8.00497 4.48249 6.59748 5.53998 5.53998C6.59998 4.48249 8.00497 3.89999 9.49997 3.89999C10.995 3.89999 12.4025 4.47999 13.46 5.53998C14.5174 6.59998 15.0999 8.00497 15.0999 9.49997C15.0999 10.995 14.5174 12.4025 13.46 13.46Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  search
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGGroup
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        >
                          <RNSVGPath
                            d="M11.9996 7.21094C9.36096 7.21094 7.22266 9.34924 7.22266 11.9879C7.22266 14.6265 9.36096 16.7648 11.9996 16.7648C14.6382 16.7648 16.7765 14.6265 16.7765 11.9879C16.7765 9.34924 14.6382 7.21094 11.9996 7.21094ZM11.9996 14.7715C10.462 14.7715 9.21437 13.5255 9.21437 11.9863C9.21437 10.4487 10.462 9.20265 11.9996 9.20265C13.5356 9.20265 14.7832 10.4487 14.7832 11.9863C14.7832 13.5255 13.5356 14.7715 11.9996 14.7715Z"
                          />
                          <RNSVGPath
                            d="M13.1236 2.46526C13.1236 2.20873 12.9149 2 12.6599 2H11.3422C11.0857 2 10.877 2.20873 10.877 2.46526V5.48789C10.877 5.74283 11.0857 5.95315 11.3422 5.95315H12.6599C12.9149 5.95315 13.1236 5.74283 13.1236 5.48789V2.46526Z"
                          />
                          <RNSVGPath
                            d="M6.05371 4.46121C5.87206 4.28116 5.5757 4.28116 5.39565 4.46121L4.46512 5.39174C4.28507 5.57338 4.28507 5.86975 4.46512 6.0498L6.60183 8.18651C6.78347 8.36816 7.07984 8.36816 7.25989 8.18651L8.19042 7.25598C8.37206 7.07434 8.37206 6.77797 8.19042 6.59792L6.05371 4.46121Z"
                          />
                          <RNSVGPath
                            d="M2.46526 10.875C2.342 10.8754 2.2239 10.9246 2.13674 11.0117C2.04957 11.0989 2.00042 11.217 2 11.3403V12.658C2 12.9145 2.21033 13.1232 2.46686 13.1232H5.48789C5.74442 13.1232 5.95475 12.9145 5.95475 12.658V11.3419C5.95475 11.0869 5.74602 10.8766 5.48948 10.8766H2.46526V10.875Z"
                          />
                          <RNSVGPath
                            d="M4.46316 17.9472C4.28311 18.1288 4.28311 18.4252 4.46316 18.6052L5.39369 19.5358C5.57374 19.7158 5.87011 19.7158 6.05175 19.5358L8.18847 17.3975C8.37011 17.2158 8.37011 16.9194 8.18847 16.7394L7.25794 15.8089C7.07629 15.6288 6.77993 15.6288 6.59987 15.8089L4.46316 17.9472Z"
                          />
                          <RNSVGPath
                            d="M10.877 21.5344C10.877 21.7909 11.0857 21.9997 11.3438 21.9997H12.6599C12.9149 21.9997 13.1236 21.7893 13.1236 21.5344V18.5102C13.1236 18.2552 12.9149 18.0449 12.6583 18.0449L11.3422 18.0465C11.0857 18.0465 10.877 18.2552 10.877 18.5118V21.5344Z"
                          />
                          <RNSVGPath
                            d="M17.9484 19.5342C18.13 19.7142 18.4264 19.7142 18.6064 19.5342L19.537 18.6036C19.6242 18.5164 19.6732 18.398 19.6732 18.2746C19.6732 18.1512 19.6242 18.0329 19.537 17.9456L17.3987 15.8089C17.2186 15.6288 16.9222 15.6288 16.7406 15.8089L15.8101 16.7394C15.6284 16.921 15.6284 17.2174 15.8101 17.3975L17.9484 19.5342Z"
                          />
                          <RNSVGPath
                            d="M21.5348 13.1236C21.658 13.1232 21.7761 13.074 21.8633 12.9869C21.9505 12.8997 21.9996 12.7816 22 12.6583V11.3422C21.9996 11.219 21.9505 11.1009 21.8633 11.0137C21.7761 10.9265 21.658 10.8774 21.5348 10.877H18.5121C18.3889 10.8774 18.2708 10.9265 18.1836 11.0137C18.0964 11.1009 18.0473 11.219 18.0469 11.3422V12.6599C18.0469 12.9149 18.2556 13.1252 18.5121 13.1252L21.5348 13.1236Z"
                          />
                          <RNSVGPath
                            d="M19.5358 6.05175C19.7174 5.87011 19.7174 5.57374 19.5358 5.39369L18.6036 4.46316C18.4236 4.28311 18.1256 4.28311 17.9472 4.46316L15.8089 6.60147C15.6288 6.78152 15.6288 7.07789 15.8089 7.25953L16.7394 8.19006C16.921 8.3717 17.2174 8.3717 17.3975 8.19006L19.5358 6.05175Z"
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  sun
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M11.9836 0.00267822C8.77744 0.0551662 5.72075 1.36728 3.47427 3.65538C2.35024 4.77447 1.46338 6.10869 0.866705 7.57831C0.270027 9.04793 -0.0242179 10.6228 0.00155827 12.2087C-0.000286057 13.7583 0.303697 15.2931 0.896087 16.7251C1.48848 18.1571 2.35763 19.458 3.45373 20.5535C4.54983 21.6489 5.85133 22.5173 7.28365 23.1089C8.71596 23.7004 10.2509 24.0035 11.8006 24.0007H12.0146C15.2217 23.9677 18.2847 22.6638 20.5316 20.3751C22.7785 18.0864 24.0257 14.9999 23.9996 11.7927C24.0033 10.2243 23.6933 8.6709 23.0879 7.22398C22.4825 5.77706 21.5939 4.4658 20.4744 3.36731C19.3548 2.26882 18.0269 1.40527 16.5688 0.827453C15.1106 0.249636 13.5517 -0.0307856 11.9836 0.00267822ZM10.5007 16.5433C10.4935 16.3473 10.5254 16.1517 10.5947 15.9682C10.6639 15.7846 10.7691 15.6167 10.904 15.4742C11.0389 15.3318 11.2009 15.2177 11.3804 15.1386C11.5599 15.0594 11.7534 15.0169 11.9496 15.0135H11.9766C12.3712 15.0142 12.7501 15.1677 13.034 15.4417C13.3179 15.7157 13.4847 16.089 13.4995 16.4833C13.5068 16.6794 13.4749 16.875 13.4057 17.0586C13.3365 17.2423 13.2314 17.4102 13.0965 17.5527C12.9615 17.6952 12.7995 17.8093 12.6199 17.8884C12.4403 17.9674 12.2468 18.0099 12.0506 18.0132H12.0236C11.6291 18.0119 11.2505 17.8583 10.9667 17.5844C10.6829 17.3105 10.5159 16.9375 10.5007 16.5433ZM11.0007 12.5017V6.50215C11.0007 6.23695 11.106 5.98262 11.2935 5.7951C11.481 5.60758 11.7354 5.50223 12.0006 5.50223C12.2658 5.50223 12.5201 5.60758 12.7076 5.7951C12.8951 5.98262 13.0005 6.23695 13.0005 6.50215V12.5017C13.0005 12.7669 12.8951 13.0212 12.7076 13.2087C12.5201 13.3962 12.2658 13.5016 12.0006 13.5016C11.7354 13.5016 11.481 13.3962 11.2935 13.2087C11.106 13.0212 11.0007 12.7669 11.0007 12.5017Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  warning-1
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGGroup
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        >
                          <RNSVGPath
                            d="M13.9193 18.4271C13.8992 17.9392 13.6816 17.4813 13.3178 17.1478C12.9545 16.8148 12.4731 16.631 11.975 16.6304H11.9746H11.945V16.6304L11.9392 16.6305C11.6898 16.6348 11.4434 16.6864 11.2142 16.7827L11.333 17.0655L11.2142 16.7827C10.9851 16.879 10.7773 17.0183 10.6035 17.1931C10.4296 17.368 10.2932 17.5751 10.2031 17.8026C10.113 18.0302 10.0712 18.2732 10.0806 18.5171L10.0807 18.5176C10.1001 19.0055 10.3169 19.4638 10.6802 19.7979C11.043 20.1315 11.5241 20.3162 12.0222 20.3177H12.0233H12.0529V20.3178L12.058 20.3177C12.3081 20.3138 12.5552 20.2624 12.785 20.1661C13.0148 20.0698 13.2232 19.9303 13.3974 19.7549C13.5716 19.5795 13.7081 19.3718 13.7981 19.1436C13.8881 18.9153 13.9295 18.6716 13.9193 18.4271ZM13.9193 18.4271L13.5863 18.4408M13.9193 18.4271C13.9193 18.4271 13.9193 18.4271 13.9193 18.427L13.5863 18.4408M13.5863 18.4408C13.5945 18.6386 13.5611 18.836 13.488 19.0213C13.415 19.2066 13.3037 19.3762 13.1609 19.52C13.018 19.6638 12.8464 19.779 12.6561 19.8587C12.4658 19.9385 12.2607 19.9812 12.0529 19.9844H12.0233C11.6062 19.9831 11.2058 19.8284 10.9059 19.5525C10.6059 19.2767 10.4296 18.9011 10.4137 18.5043C10.4061 18.3069 10.4399 18.1101 10.513 17.9254C10.5862 17.7406 10.6973 17.5715 10.8399 17.4281C10.9824 17.2847 11.1536 17.1698 11.3434 17.09C11.5331 17.0103 11.7376 16.9674 11.945 16.9638H11.9746C12.3916 16.9642 12.7922 17.1182 13.0926 17.3936C13.393 17.6689 13.5699 18.0442 13.5863 18.4408ZM23.4665 20.2125L23.4665 20.2125C23.6068 20.4676 23.6751 20.7517 23.6658 21.0376C23.6566 21.3234 23.57 21.6033 23.4131 21.8501C23.2562 22.097 23.0337 22.3031 22.7658 22.4469C22.4978 22.5907 22.1942 22.6667 21.8847 22.6667H21.8846H2.11538H2.11533C1.80576 22.6667 1.50222 22.5907 1.23422 22.4469C0.96631 22.3031 0.743845 22.097 0.586879 21.8501L0.305565 22.0289L0.586879 21.8501C0.429998 21.6033 0.343434 21.3234 0.334166 21.0376C0.324898 20.7517 0.393165 20.4676 0.533517 20.2125L0.53353 20.2125L10.4192 2.23977C10.5681 1.96911 10.7933 1.74021 11.0721 1.5796C11.3511 1.41893 11.6722 1.33333 12.0005 1.33333C12.3289 1.33333 12.65 1.41893 12.9289 1.5796C13.2078 1.74021 13.4329 1.96911 13.5819 2.23977L23.4665 20.2125ZM11.0224 7.44182C10.7599 7.69176 10.6091 8.03434 10.6091 8.39521V14.4365C10.6091 14.7974 10.7599 15.1399 11.0224 15.3899C11.2843 15.6393 11.6363 15.7767 12 15.7767C12.3637 15.7767 12.7157 15.6393 12.9776 15.3899C13.2401 15.1399 13.3909 14.7974 13.3909 14.4365V8.39521C13.3909 8.03434 13.2401 7.69176 12.9776 7.44182C12.7157 7.19242 12.3637 7.05499 12 7.05499C11.6363 7.05499 11.2843 7.19242 11.0224 7.44182Z"
                            propList={
                              Array [
                                "stroke",
                                "strokeWidth",
                              ]
                            }
                            stroke={
                              Array [
                                2,
                              ]
                            }
                            strokeWidth="0.666667"
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  warning-2
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={16}
                    vbWidth={16}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M8 16C6.41775 16 4.87103 15.5308 3.55544 14.6518C2.23985 13.7727 1.21447 12.5233 0.608967 11.0615C0.00346627 9.59966 -0.15496 7.99113 0.153721 6.43928C0.462403 4.88743 1.22433 3.46197 2.34315 2.34315C3.46197 1.22433 4.88743 0.462403 6.43928 0.153721C7.99113 -0.15496 9.59966 0.00346627 11.0615 0.608967C12.5233 1.21447 13.7727 2.23985 14.6518 3.55544C15.5308 4.87103 16 6.41775 16 8C16 10.1217 15.1571 12.1566 13.6569 13.6569C12.1566 15.1571 10.1217 16 8 16ZM8 14.4C9.2658 14.4 10.5032 14.0246 11.5556 13.3214C12.6081 12.6182 13.4284 11.6186 13.9128 10.4492C14.3972 9.27973 14.524 7.9929 14.277 6.75142C14.0301 5.50995 13.4205 4.36958 12.5255 3.47452C11.6304 2.57946 10.4901 1.96992 9.24858 1.72298C8.0071 1.47603 6.72028 1.60277 5.55083 2.08717C4.38138 2.57158 3.38184 3.39188 2.6786 4.44435C1.97536 5.49683 1.6 6.7342 1.6 8C1.6 9.69739 2.27429 11.3253 3.47452 12.5255C4.67475 13.7257 6.30262 14.4 8 14.4ZM7.2 10.4H8.8V12H7.2V10.4ZM7.2 4H8.8V8.8H7.2V4Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  warning-outline
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={32.055}
                    vbWidth={32.055}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGGroup
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        >
                          <RNSVGPath
                            d="M3.968,12.061C1.775,12.061,0,13.835,0,16.027c0,2.192,1.773,3.967,3.968,3.967c2.189,0,3.966-1.772,3.966-3.967   C7.934,13.835,6.157,12.061,3.968,12.061z M16.233,12.061c-2.188,0-3.968,1.773-3.968,3.965c0,2.192,1.778,3.967,3.968,3.967   s3.97-1.772,3.97-3.967C20.201,13.835,18.423,12.061,16.233,12.061z M28.09,12.061c-2.192,0-3.969,1.774-3.969,3.967   c0,2.19,1.774,3.965,3.969,3.965c2.188,0,3.965-1.772,3.965-3.965S30.278,12.061,28.09,12.061z"
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  three-dots
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M18.0621 16.1487C17.2993 16.1487 16.6113 16.4451 16.0895 16.9223L8.93445 12.7495C8.98988 12.523 9.02482 12.2868 9.02482 12.0458C9.02482 11.8048 8.98988 11.5698 8.93445 11.3433L16.0136 7.21147C16.5679 7.73368 17.3006 8.02461 18.0621 8.02482C19.7237 8.02482 21.0745 6.67406 21.0745 5.01241C21.0745 3.35076 19.7237 2 18.0621 2C16.4004 2 15.0496 3.35076 15.0496 5.01241C15.0496 5.2534 15.0846 5.48958 15.14 5.71491L8.06085 9.84673C7.50628 9.32504 6.7738 9.0342 6.01241 9.03338C4.35077 9.03338 3 10.3841 3 12.0458C3 13.7074 4.35077 15.0582 6.01241 15.0582C6.77392 15.058 7.50661 14.7671 8.06085 14.2449L15.2159 18.4176C15.1632 18.633 15.1361 18.8538 15.1352 19.0756C15.1354 19.6541 15.3072 20.2196 15.6288 20.7005C15.9503 21.1814 16.4073 21.5562 16.9418 21.7775C17.4764 21.9988 18.0645 22.0567 18.6319 21.9437C19.1993 21.8308 19.7205 21.5522 20.1296 21.1431C20.5387 20.734 20.8173 20.2128 20.9302 19.6454C21.0432 19.078 20.9853 18.4898 20.764 17.9553C20.5427 17.4208 20.1679 16.9638 19.687 16.6423C19.2061 16.3207 18.6406 16.1489 18.0621 16.1487Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  share
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M12 0C5.376 0 0 5.376 0 12C0 18.624 5.376 24 12 24C18.624 24 24 18.624 24 12C24 5.376 18.624 0 12 0ZM9.6 17.4V6.6L16.8 12L9.6 17.4Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  play
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M1.75143 3.371C2.87321 2.22206 4.39447 1.57662 5.98067 1.57662C7.56686 1.57662 9.08812 2.22206 10.2099 3.371L11.9626 5.16516L13.7153 3.371C14.2671 2.78565 14.9272 2.31876 15.657 1.99756C16.3869 1.67637 17.1718 1.5073 17.9661 1.50023C18.7604 1.49316 19.5481 1.64823 20.2832 1.95638C21.0184 2.26453 21.6863 2.7196 22.2479 3.29504C22.8096 3.87047 23.2538 4.55474 23.5545 5.30793C23.8553 6.06112 24.0067 6.86813 23.9998 7.68189C23.9929 8.49564 23.8279 9.29984 23.5143 10.0476C23.2008 10.7953 22.7451 11.4715 22.1738 12.0369L11.9626 22.5L1.75143 12.0369C0.629991 10.8876 0 9.32904 0 7.70394C0 6.07885 0.629991 4.52029 1.75143 3.371Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  favourite
                </Text>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M5.11111 19.7778C5.11111 21 6.11111 22 7.33333 22H16.2222C17.4444 22 18.4444 21 18.4444 19.7778V6.44444H5.11111V19.7778ZM19.5556 3.11111H15.6667L14.5556 2H9L7.88889 3.11111H4V5.33333H19.5556V3.11111Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  delete
                </Text>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Icon Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={20}
        bbWidth={20}
        color={4279286145}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#10b981",
              "height": 20,
              "marginTop": 2,
              "width": 20,
            },
            Object {
              "flex": 0,
              "height": 20,
              "width": 20,
            },
          ]
        }
        tintColor={4279286145}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M8.53115 15.1856L3.96198 10.744L2 12.6512L8.53115 19L22 5.9072L20.038 4L8.53115 15.1856Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
      <View
        dataSet={Object {}}
        style={
          Object {
            "width": 8,
          }
        }
      />
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#10b981",
            "fontFamily": undefined,
            "fontSize": 16,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 24,
            "textDecorationLine": undefined,
          }
        }
      >
        Order Placed Successfully
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Icon CreateIcon 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RNSVGSvgView
      accessibilityRole="image"
      align="xMidYMid"
      bbHeight={48}
      bbWidth={48}
      color={4285756275}
      dataSet={Object {}}
      focusable={false}
      meetOrSlice={0}
      minX={0}
      minY={0}
      stroke=""
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "color": "#737373",
            "height": 48,
            "width": 48,
          },
          Object {
            "flex": 0,
            "height": 48,
            "width": 48,
          },
        ]
      }
      tintColor={4285756275}
      vbHeight={36}
      vbWidth={36}
    >
      <RNSVGGroup
        propList={
          Array [
            "stroke",
          ]
        }
        stroke={null}
      >
        <RNSVGGroup>
          <RNSVGCircle
            cx="18"
            cy="18"
            fill={4278630100}
            propList={
              Array [
                "fill",
                "stroke",
              ]
            }
            r="17.5"
            stroke={4279137424}
          />
          <RNSVGCircle
            cx="18"
            cy="18"
            fill={4294967295}
            propList={
              Array [
                "fill",
                "stroke",
              ]
            }
            r="13.5"
            stroke={4279137424}
          />
          <RNSVGCircle
            cx="18"
            cy="18"
            fill={4278630100}
            propList={
              Array [
                "fill",
                "stroke",
              ]
            }
            r="9.5"
            stroke={4279137424}
          />
          <RNSVGCircle
            cx="18"
            cy="18"
            fill={4294967295}
            propList={
              Array [
                "fill",
                "stroke",
              ]
            }
            r="5.5"
            stroke={4279137424}
          />
        </RNSVGGroup>
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Icon CustomIcon 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={40}
        bbWidth={40}
        color={4285756275}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#737373",
              "height": 40,
              "width": 40,
            },
            Object {
              "flex": 0,
              "height": 40,
              "width": 40,
            },
          ]
        }
        tintColor={4285756275}
        vbHeight={873}
        vbWidth={870}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGGroup
              fill={null}
              fillRule={1}
              propList={
                Array [
                  "fill",
                  "fillRule",
                  "stroke",
                  "strokeWidth",
                ]
              }
              stroke={null}
              strokeWidth={1}
            >
              <RNSVGPath
                d="M435 .1C194.8.1.1 194.8.1 435c0 187.3 118.4 346.9 284.4 408.1 3.3-29.9 15-57.2 32.7-79.6 12.1-15.4 26.9-28.5 43.9-38.4 2.1-5 4.6-10.6 7.1-16.6-50.3-26-84.7-78.1-84.7-138.6 0-51.7 25.3-97.7 64-125.9-10.9-20.6-21.3-40.2-31.8-58.2-18.1-31.5-46.7-59.7-68.4-78.9-21 11.9-47.8 4.7-59.7-16.3-11.9-21-4.7-47.8 16.3-59.7 21-11.9 47.4-4.7 59.7 15.9v.4c7.2 12.7 7.2 27.5 1.8 39.8 22.8 19.5 56.8 52.5 77.8 89 9.8 17 19.5 34.7 29.3 53.5 20.3-9.4 42.7-14.8 66.2-14.8 21.3 0 41.6 4.3 60.1 11.9 9.8-18.5 19.5-36.2 28.9-52.8 21-36.2 54.6-68.7 77.4-88.3-5.4-12.3-5.4-26.8 1.8-39.4v-.4c12.3-20.6 38.7-27.9 59.3-15.9 21 11.9 28.2 38.7 16.3 59.3-11.9 21-38.4 28.2-59.3 16.3-21.7 18.8-49.9 47.4-68 78.5-10.1 17.4-20.3 36.5-30.8 56.4 42 27.9 69.8 75.3 69.8 129.5 0 63-36.9 116.9-90.4 141.5.9 2.7 2 4.9 3 7.2 47 22.3 81.1 67.4 87.9 121.1C755.9 776 869.9 618.8 869.9 435 869.9 194.8 675.2.1 435 .1z"
                fill={4291428352}
                propList={
                  Array [
                    "fill",
                  ]
                }
              />
              <RNSVGPath
                d="M284.8 843.3h.1-.1zM284.8 843.3c-.1 0-.3-.1-.4-.1.2 0 .3 0 .4.1z"
                fill={4294967295}
                propList={
                  Array [
                    "fill",
                  ]
                }
              />
              <RNSVGGroup
                fill={4294967295}
                propList={
                  Array [
                    "fill",
                    "stroke",
                    "strokeWidth",
                  ]
                }
                stroke={4294967295}
                strokeWidth={5}
              >
                <RNSVGPath
                  d="M485.2 5.8c-20.6-11.9-47-4.7-59.3 15.9v.4c-7.2 12.7-7.2 27.1-1.8 39.4-22.8 19.5-56.4 52.1-77.4 88.3-9.4 16.6-19.2 34.4-28.9 52.8-18.5-7.6-38.7-11.9-60.1-11.9-23.5 0-45.9 5.4-66.2 14.8-9.8-18.8-19.5-36.5-29.3-53.5-21-36.5-55-69.5-77.8-89 5.4-12.3 5.4-27.1-1.8-39.8v-.4C70.3 2.2 43.9-5.1 22.9 6.9 1.9 18.8-5.3 45.6 6.6 66.6c11.9 21 38.7 28.2 59.7 16.3 21.7 19.2 50.3 47.4 68.4 78.9 10.5 18.1 21 37.6 31.8 58.2-38.7 28.2-64 74.2-64 125.9 0 60.4 34.4 112.5 84.7 138.6-2.5 6.2-5.1 11.9-7.2 17-41.6 24.4-70.8 67.4-76.4 117.6 46.9 17.3 97.6 26.8 150.6 26.8 56.2 0 109.9-10.7 159.2-30.1-7.1-52.8-40.5-97.3-86.8-119.8-1.1-2.9-2.5-5.4-3.6-8.7 53.5-24.6 90.4-78.5 90.4-141.5 0-54.3-27.9-101.7-69.8-129.5 10.5-19.9 20.6-39.1 30.8-56.4 18.1-31.1 46.3-59.7 68-78.5 21 11.9 47.4 4.7 59.3-16.3 11.7-20.5 4.5-47.3-16.5-59.3z"
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      181,
                      224,
                    ]
                  }
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Icon Integration with Third Party Icons 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <Text
          allowFontScaling={false}
          dataSet={Object {}}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Object {
                "color": "#1f2937",
                "fontSize": 16,
                "height": 16,
                "lineHeight": 16,
                "width": 16,
              },
              Object {
                "fontFamily": "anticon",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
        <View
          dataSet={Object {}}
          style={
            Object {
              "width": 12,
            }
          }
        />
        <Text />
        <View
          dataSet={Object {}}
          style={
            Object {
              "width": 12,
            }
          }
        />
        <Text
          allowFontScaling={false}
          dataSet={Object {}}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Object {
                "color": "#1f2937",
                "fontSize": 16,
                "height": 16,
                "lineHeight": 16,
                "width": 16,
              },
              Object {
                "fontFamily": "material-community",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          󰖟
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Icon Sizes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": null,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginBottom": 40,
            "textDecorationLine": undefined,
          }
        }
      >
        Sizes
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "justifyContent": "center",
          }
        }
      >
        <Text
          allowFontScaling={false}
          dataSet={Object {}}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Object {
                "alignSelf": "center",
                "color": "#737373",
                "fontSize": 40,
                "height": 40,
                "lineHeight": 40,
                "width": 40,
              },
              Object {
                "fontFamily": "ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 16,
            }
          }
        />
        <Text
          allowFontScaling={false}
          dataSet={Object {}}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Object {
                "alignSelf": "center",
                "color": "#737373",
                "fontSize": 50,
                "height": 50,
                "lineHeight": 50,
                "width": 50,
              },
              Object {
                "fontFamily": "ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 16,
            }
          }
        />
        <Text
          allowFontScaling={false}
          dataSet={Object {}}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Object {
                "alignSelf": "center",
                "color": "#737373",
                "fontSize": 32,
                "height": 32,
                "lineHeight": 32,
                "width": 32,
              },
              Object {
                "fontFamily": "ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots IconButton Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "borderRadius": 9999,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          }
        }
      >
        <Text
          allowFontScaling={false}
          dataSet={Object {}}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Object {
                "color": "#f97316",
                "fontSize": 32,
                "height": 32,
                "lineHeight": 32,
                "width": 32,
              },
              Object {
                "fontFamily": "entypo",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots IconButton SVGIcon 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={Object {}}
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          }
        }
      >
        <RNSVGSvgView
          accessibilityRole="image"
          align="xMidYMid"
          bbHeight={40}
          bbWidth={40}
          color={4294638330}
          dataSet={Object {}}
          focusable={false}
          meetOrSlice={0}
          minX={0}
          minY={0}
          stroke=""
          strokeWidth="10"
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "color": "#fafafa",
                "height": 40,
                "width": 40,
              },
              Object {
                "flex": 0,
                "height": 40,
                "width": 40,
              },
            ]
          }
          tintColor={4294638330}
          vbHeight={100}
          vbWidth={100}
        >
          <RNSVGGroup
            propList={
              Array [
                "stroke",
                "strokeWidth",
              ]
            }
            stroke={null}
            strokeWidth="10"
          >
            <RNSVGGroup>
              <RNSVGPath
                d="M46.667 90v-.008c-4.922 0-11.021-2.695-13.333-6.66V40c5.521 0 10-4.479 10-10V13.333A3.33 3.33 0 0 1 46.667 10C54.029 10 60 15.97 60 23.333v13.333A3.331 3.331 0 0 0 63.334 40H80c5.52 0 10 4.479 10 10v30h-.004c0 5.52-4.477 9.992-9.996 10H46.667zM10 40h16.666v43.333H10z"
                fill={
                  Array [
                    2,
                  ]
                }
                propList={
                  Array [
                    "fill",
                    "stroke",
                  ]
                }
                stroke={null}
              />
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          }
        }
      >
        <RNSVGSvgView
          accessibilityRole="image"
          align="xMidYMid"
          bbHeight={20}
          bbWidth={20}
          color={4294638330}
          dataSet={Object {}}
          focusable={false}
          meetOrSlice={0}
          minX={0}
          minY={0}
          stroke=""
          strokeWidth="10"
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "color": "#fafafa",
                "height": 20,
                "width": 20,
              },
              Object {
                "flex": 0,
                "height": 20,
                "width": 20,
              },
            ]
          }
          tintColor={4294638330}
          vbHeight={100}
          vbWidth={100}
        >
          <RNSVGGroup
            propList={
              Array [
                "stroke",
                "strokeWidth",
              ]
            }
            stroke={null}
            strokeWidth="10"
          >
            <RNSVGGroup>
              <RNSVGPath
                d="M46.667 90v-.008c-4.922 0-11.021-2.695-13.333-6.66V40c5.521 0 10-4.479 10-10V13.333A3.33 3.33 0 0 1 46.667 10C54.029 10 60 15.97 60 23.333v13.333A3.331 3.331 0 0 0 63.334 40H80c5.52 0 10 4.479 10 10v30h-.004c0 5.52-4.477 9.992-9.996 10H46.667zM10 40h16.666v43.333H10z"
                fill={
                  Array [
                    2,
                  ]
                }
                propList={
                  Array [
                    "fill",
                    "stroke",
                  ]
                }
                stroke={null}
              />
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots IconButton Sizes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
          }
        }
      >
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#0891b2",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 6,
              "paddingLeft": 6,
              "paddingRight": 6,
              "paddingTop": 6,
            }
          }
        >
          <Text
            allowFontScaling={false}
            dataSet={Object {}}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Object {
                  "color": "#fafafa",
                  "fontSize": 12,
                  "height": 12,
                  "lineHeight": 12,
                  "width": 12,
                },
                Object {
                  "fontFamily": "material",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#0891b2",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            }
          }
        >
          <Text
            allowFontScaling={false}
            dataSet={Object {}}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Object {
                  "color": "#fafafa",
                  "fontSize": 16,
                  "height": 16,
                  "lineHeight": 16,
                  "width": 16,
                },
                Object {
                  "fontFamily": "material",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#0891b2",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 10,
              "paddingLeft": 10,
              "paddingRight": 10,
              "paddingTop": 10,
            }
          }
        >
          <Text
            allowFontScaling={false}
            dataSet={Object {}}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Object {
                  "color": "#fafafa",
                  "fontSize": 20,
                  "height": 20,
                  "lineHeight": 20,
                  "width": 20,
                },
                Object {
                  "fontFamily": "material",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#0891b2",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 12,
            }
          }
        >
          <Text
            allowFontScaling={false}
            dataSet={Object {}}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Object {
                  "color": "#fafafa",
                  "fontSize": 24,
                  "height": 24,
                  "lineHeight": 24,
                  "width": 24,
                },
                Object {
                  "fontFamily": "material",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots IconButton Variant 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
          }
        }
      >
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="indigo"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#4f46e5",
              "borderRadius": 4,
              "borderWidth": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 10,
              "paddingLeft": 10,
              "paddingRight": 10,
              "paddingTop": 10,
            }
          }
        >
          <Text
            allowFontScaling={false}
            dataSet={Object {}}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Object {
                  "color": "#4f46e5",
                  "fontSize": 20,
                  "height": 20,
                  "lineHeight": 20,
                  "width": 20,
                },
                Object {
                  "fontFamily": "anticon",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="indigo"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#4f46e5",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 10,
              "paddingLeft": 10,
              "paddingRight": 10,
              "paddingTop": 10,
            }
          }
        >
          <Text
            allowFontScaling={false}
            dataSet={Object {}}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Object {
                  "color": "#fafafa",
                  "fontSize": 20,
                  "height": 20,
                  "lineHeight": 20,
                  "width": 20,
                },
                Object {
                  "fontFamily": "anticon",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="indigo"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 10,
              "paddingLeft": 10,
              "paddingRight": 10,
              "paddingTop": 10,
            }
          }
        >
          <Text
            allowFontScaling={false}
            dataSet={Object {}}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Object {
                  "color": "#4f46e5",
                  "fontSize": 20,
                  "height": 20,
                  "lineHeight": 20,
                  "width": 20,
                },
                Object {
                  "fontFamily": "anticon",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Image Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <Image
        accessibilityLabel="Alternate Text"
        alt="Alternate Text"
        dataSet={Object {}}
        onError={[Function]}
        source={
          Object {
            "uri": "https://wallpaperaccess.com/full/317501.jpg",
          }
        }
        style={
          Object {
            "height": 128,
            "maxWidth": "100%",
            "width": 128,
          }
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Image BorderRadius 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <Image
        accessibilityLabel="Alternate Text"
        alt="Alternate Text"
        dataSet={Object {}}
        onError={[Function]}
        source={
          Object {
            "uri": "https://wallpaperaccess.com/full/317501.jpg",
          }
        }
        style={
          Object {
            "borderRadius": 100,
            "height": 150,
            "maxWidth": "100%",
            "width": 150,
          }
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Image FallbackElement 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <Image
        accessibilityLabel="fallback text"
        alt="fallback text"
        dataSet={Object {}}
        onError={[Function]}
        source={
          Object {
            "uri": "https://cdn.pixaba.com/photo/2015/04/19/08/32/marguerite-729510__340.jpg",
          }
        }
        style={
          Object {
            "borderRadius": 2,
            "height": 150,
            "maxWidth": "100%",
            "width": 150,
          }
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Image FallbackSupport 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <Image
        accessibilityLabel="fallback text"
        alt="fallback text"
        dataSet={Object {}}
        onError={[Function]}
        source={
          Object {
            "uri": "https://-page-icon.png",
          }
        }
        style={
          Object {
            "borderRadius": 100,
            "height": 150,
            "maxWidth": "100%",
            "width": 150,
          }
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Image Sizes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Text
      dataSet={Object {}}
      style={
        Object {
          "backgroundColor": undefined,
          "color": "#171717",
          "fontFamily": undefined,
          "fontSize": null,
          "fontStyle": "normal",
          "fontWeight": "700",
          "letterSpacing": 0,
          "lineHeight": 30,
          "marginBottom": 40,
          "marginTop": 12,
          "textAlign": "center",
          "textDecorationLine": undefined,
        }
      }
    >
      Image Sizes
    </Text>
    <RCTScrollView
      contentContainerStyle={
        Array [
          Object {},
          Object {
            "dataSet": Object {},
          },
        ]
      }
      dataSet={Object {}}
      style={Object {}}
    >
      <View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "marginBottom": 24,
            }
          }
        >
          <Image
            accessibilityLabel="Alternate Text xs"
            alt="Alternate Text xs"
            dataSet={Object {}}
            onError={[Function]}
            resizeMode="cover"
            source={
              Object {
                "uri": "https://wallpaperaccess.com/full/317501.jpg",
              }
            }
            style={
              Object {
                "height": 40,
                "maxWidth": "100%",
                "width": 40,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 8,
              }
            }
          />
          <Image
            accessibilityLabel="Alternate Text sm"
            alt="Alternate Text sm"
            dataSet={Object {}}
            onError={[Function]}
            resizeMode="cover"
            source={
              Object {
                "uri": "https://wallpaperaccess.com/full/317501.jpg",
              }
            }
            style={
              Object {
                "height": 64,
                "maxWidth": "100%",
                "width": 64,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 8,
              }
            }
          />
          <Image
            accessibilityLabel="Alternate Text md"
            alt="Alternate Text md"
            dataSet={Object {}}
            onError={[Function]}
            resizeMode="cover"
            source={
              Object {
                "uri": "https://wallpaperaccess.com/full/317501.jpg",
              }
            }
            style={
              Object {
                "height": 80,
                "maxWidth": "100%",
                "width": 80,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 8,
              }
            }
          />
          <Image
            accessibilityLabel="Alternate Text lg"
            alt="Alternate Text lg"
            dataSet={Object {}}
            onError={[Function]}
            resizeMode="cover"
            source={
              Object {
                "uri": "https://wallpaperaccess.com/full/317501.jpg",
              }
            }
            style={
              Object {
                "height": 96,
                "maxWidth": "100%",
                "width": 96,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 8,
              }
            }
          />
          <Image
            accessibilityLabel="Alternate Text xl"
            alt="Alternate Text xl"
            dataSet={Object {}}
            onError={[Function]}
            resizeMode="cover"
            source={
              Object {
                "uri": "https://wallpaperaccess.com/full/317501.jpg",
              }
            }
            style={
              Object {
                "height": 128,
                "maxWidth": "100%",
                "width": 128,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 8,
              }
            }
          />
          <Image
            accessibilityLabel="Alternate Text 2xl"
            alt="Alternate Text 2xl"
            dataSet={Object {}}
            onError={[Function]}
            resizeMode="cover"
            source={
              Object {
                "uri": "https://wallpaperaccess.com/full/317501.jpg",
              }
            }
            style={
              Object {
                "height": 256,
                "maxWidth": "100%",
                "width": 256,
              }
            }
          />
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Image WithRef 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <Image
        accessibilityLabel="Alternate Text"
        alt="Alternate Text"
        dataSet={Object {}}
        onError={[Function]}
        source={
          Object {
            "uri": "https://wallpaperaccess.com/full/317501.jpg",
          }
        }
        style={
          Object {
            "height": 128,
            "maxWidth": "100%",
            "width": 128,
          }
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Input Addons 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "flexDirection": "row",
            "width": "70%",
          }
        }
      >
        <View
          0="h"
          1="t"
          2="t"
          3="p"
          4="s"
          5=":"
          6="/"
          7="/"
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#fafafa",
              "borderBottomLeftRadius": 4,
              "borderBottomRightRadius": 0,
              "borderColor": "#d4d4d4",
              "borderRightWidth": 0,
              "borderTopLeftRadius": 4,
              "borderTopRightRadius": 0,
              "borderWidth": 1,
              "justifyContent": "center",
              "marginRight": 0,
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            https://
          </Text>
        </View>
        <View
          dataSet={Object {}}
          style={Object {}}
        />
        <View
          dataSet={Object {}}
          isFocused={false}
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d4",
              "borderRadius": 0,
              "borderWidth": 1,
              "flexDirection": "row",
              "marginLeft": 0,
              "marginRight": 0,
              "overflow": "hidden",
              "width": "70%",
            }
          }
        >
          <TextInput
            accessible={true}
            allowFontScaling={true}
            dataSet={Object {}}
            editable={true}
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyPress={[Function]}
            placeholder="nativebase"
            placeholderTextColor="#a3a3a3"
            rejectResponderTermination={true}
            secureTextEntry={false}
            selectionColor="#1f2937"
            style={
              Object {
                "backgroundColor": "transparent",
                "borderBottomLeftRadius": 0,
                "borderBottomRightRadius": 0,
                "borderTopLeftRadius": 0,
                "borderTopRightRadius": 0,
                "color": "#171717",
                "flex": 1,
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "400",
                "height": "100%",
                "paddingBottom": 8,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 8,
                "width": "100%",
              }
            }
            underlineColorAndroid="transparent"
          />
        </View>
        <View
          dataSet={Object {}}
          style={Object {}}
        />
        <View
          0="."
          1="i"
          2="o"
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#fafafa",
              "borderBottomLeftRadius": 0,
              "borderBottomRightRadius": 4,
              "borderColor": "#d4d4d4",
              "borderLeftWidth": 0,
              "borderTopLeftRadius": 0,
              "borderTopRightRadius": 4,
              "borderWidth": 1,
              "justifyContent": "center",
              "marginLeft": 0,
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            .io
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Input Elements 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "width": "100%",
        }
      }
    >
      <View
        dataSet={Object {}}
        isFocused={false}
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#d4d4d4",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "overflow": "hidden",
            "width": "75%",
          }
        }
      >
        <Text
          allowFontScaling={false}
          dataSet={Object {}}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Object {
                "color": "#a3a3a3",
                "fontSize": 20,
                "height": 20,
                "lineHeight": 20,
                "marginLeft": 8,
                "width": 20,
              },
              Object {
                "fontFamily": "material",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
        <View
          dataSet={Object {}}
          style={Object {}}
        />
        <TextInput
          accessible={true}
          allowFontScaling={true}
          dataSet={Object {}}
          editable={true}
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="Name"
          placeholderTextColor="#a3a3a3"
          rejectResponderTermination={true}
          secureTextEntry={false}
          selectionColor="#1f2937"
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "#171717",
              "flex": 1,
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "400",
              "height": "100%",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
              "width": "100%",
            }
          }
          underlineColorAndroid="transparent"
        />
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        dataSet={Object {}}
        isFocused={false}
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#d4d4d4",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "overflow": "hidden",
            "width": "75%",
          }
        }
      >
        <TextInput
          accessible={true}
          allowFontScaling={true}
          dataSet={Object {}}
          editable={true}
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="Password"
          placeholderTextColor="#a3a3a3"
          rejectResponderTermination={true}
          secureTextEntry={true}
          selectionColor="#1f2937"
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "#171717",
              "flex": 1,
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "400",
              "height": "100%",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
              "width": "100%",
            }
          }
          underlineColorAndroid="transparent"
        />
        <View
          dataSet={Object {}}
          style={Object {}}
        />
        <Text
          allowFontScaling={false}
          dataSet={Object {}}
          onPress={[Function]}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Object {
                "color": "#a3a3a3",
                "fontSize": 20,
                "height": 20,
                "lineHeight": 20,
                "marginRight": 8,
                "width": 20,
              },
              Object {
                "fontFamily": "material",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Input Form Controlled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        isInvalid={true}
        style={
          Object {
            "maxWidth": 300,
            "width": "75%",
          }
        }
      >
        <View
          dataSet={Object {}}
          feedbackId="field-react-aria-0-2-feedback"
          hasFeedbackText={false}
          hasHelpText={false}
          helpTextId="field-react-aria-0-2-helptext"
          isDisabled={false}
          isInvalid={true}
          isReadOnly={false}
          isRequired={false}
          labelId="field-react-aria-0-2-label"
          nativeID="field-react-aria-0-2-label"
          setHasFeedbackText={[Function]}
          setHasHelpText={[Function]}
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "marginBottom": 4,
              "marginTop": 4,
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#737373",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Password
          </Text>
        </View>
        <View
          dataSet={Object {}}
          isFocused={false}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderColor": "#dc2626",
                "borderRadius": 4,
                "borderWidth": 1,
                "flexDirection": "row",
                "overflow": "hidden",
              },
              Object {
                "outlineColor": "#dc2626",
                "outlineStyle": "solid",
                "outlineWidth": "1px",
              },
            ]
          }
        >
          <TextInput
            accessibilityInvalid={true}
            accessible={true}
            allowFontScaling={true}
            dataSet={Object {}}
            disabled={false}
            editable={true}
            isInvalid={true}
            isRequired={false}
            nativeID="field-react-aria-0-2"
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyPress={[Function]}
            placeholder="Enter password"
            placeholderTextColor="#a3a3a3"
            readOnly={false}
            rejectResponderTermination={true}
            required={false}
            secureTextEntry={false}
            selectionColor="#1f2937"
            style={
              Object {
                "backgroundColor": "transparent",
                "color": "#171717",
                "flex": 1,
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "400",
                "height": "100%",
                "paddingBottom": 8,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 8,
                "width": "100%",
              }
            }
            underlineColorAndroid="transparent"
          />
        </View>
        <View
          dataSet={Object {}}
          feedbackId="field-react-aria-0-2-feedback"
          hasFeedbackText={false}
          hasHelpText={false}
          helpTextId="field-react-aria-0-2-helptext"
          isDisabled={false}
          isInvalid={true}
          isReadOnly={false}
          isRequired={false}
          labelId="field-react-aria-0-2-label"
          nativeID="field-react-aria-0-2"
          setHasFeedbackText={[Function]}
          setHasHelpText={[Function]}
          style={
            Object {
              "marginTop": 8,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <RNSVGSvgView
              accessibilityRole="image"
              align="xMidYMid"
              bbHeight={12}
              bbWidth={12}
              color={4292617766}
              dataSet={Object {}}
              focusable={false}
              meetOrSlice={0}
              minX={0}
              minY={0}
              stroke=""
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Object {
                    "color": "#dc2626",
                    "fontSize": 12,
                    "height": 12,
                    "width": 12,
                  },
                  Object {
                    "flex": 0,
                    "height": 12,
                    "width": 12,
                  },
                ]
              }
              tintColor={4292617766}
              vbHeight={16}
              vbWidth={16}
            >
              <RNSVGGroup
                font={
                  Object {
                    "fontSize": 12,
                  }
                }
                propList={
                  Array [
                    "stroke",
                  ]
                }
                stroke={null}
              >
                <RNSVGGroup>
                  <RNSVGPath
                    d="M8 16C6.41775 16 4.87103 15.5308 3.55544 14.6518C2.23985 13.7727 1.21447 12.5233 0.608967 11.0615C0.00346627 9.59966 -0.15496 7.99113 0.153721 6.43928C0.462403 4.88743 1.22433 3.46197 2.34315 2.34315C3.46197 1.22433 4.88743 0.462403 6.43928 0.153721C7.99113 -0.15496 9.59966 0.00346627 11.0615 0.608967C12.5233 1.21447 13.7727 2.23985 14.6518 3.55544C15.5308 4.87103 16 6.41775 16 8C16 10.1217 15.1571 12.1566 13.6569 13.6569C12.1566 15.1571 10.1217 16 8 16ZM8 14.4C9.2658 14.4 10.5032 14.0246 11.5556 13.3214C12.6081 12.6182 13.4284 11.6186 13.9128 10.4492C14.3972 9.27973 14.524 7.9929 14.277 6.75142C14.0301 5.50995 13.4205 4.36958 12.5255 3.47452C11.6304 2.57946 10.4901 1.96992 9.24858 1.72298C8.0071 1.47603 6.72028 1.60277 5.55083 2.08717C4.38138 2.57158 3.38184 3.39188 2.6786 4.44435C1.97536 5.49683 1.6 6.7342 1.6 8C1.6 9.69739 2.27429 11.3253 3.47452 12.5255C4.67475 13.7257 6.30262 14.4 8 14.4ZM7.2 10.4H8.8V12H7.2V10.4ZM7.2 4H8.8V8.8H7.2V4Z"
                    fill={
                      Array [
                        2,
                      ]
                    }
                    propList={
                      Array [
                        "fill",
                        "stroke",
                      ]
                    }
                    stroke={null}
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGSvgView>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 4,
                }
              }
            />
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#dc2626",
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 18,
                  "textDecorationLine": undefined,
                }
              }
            >
              Try different from previous passwords.
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Input Password 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        isFocused={false}
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#d4d4d4",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "overflow": "hidden",
            "width": "100%",
          }
        }
      >
        <TextInput
          accessible={true}
          allowFontScaling={true}
          dataSet={Object {}}
          editable={true}
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="Password"
          placeholderTextColor="#a3a3a3"
          rejectResponderTermination={true}
          secureTextEntry={true}
          selectionColor="#1f2937"
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "#171717",
              "flex": 1,
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "400",
              "height": "100%",
              "paddingBottom": 0,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 0,
              "width": "100%",
            }
          }
          underlineColorAndroid="transparent"
        />
        <View
          dataSet={Object {}}
          style={Object {}}
        />
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#0891b2",
              "borderRadius": 0,
              "flexDirection": "row",
              "height": "100%",
              "justifyContent": "center",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
              "width": "16.666%",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
            test={true}
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafafa",
                    "fontFamily": undefined,
                    "fontSize": 10,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 15,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Show
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Input Primary 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        isFocused={false}
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#d4d4d4",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "marginLeft": 12,
            "marginRight": 12,
            "overflow": "hidden",
            "width": "100%",
          }
        }
      >
        <TextInput
          accessible={true}
          allowFontScaling={true}
          dataSet={Object {}}
          editable={true}
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="Input"
          placeholderTextColor="#a3a3a3"
          rejectResponderTermination={true}
          secureTextEntry={false}
          selectionColor="#1f2937"
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "#171717",
              "flex": 1,
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "400",
              "height": "100%",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
              "width": "100%",
            }
          }
          underlineColorAndroid="transparent"
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Input Size  1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "marginLeft": "auto",
          "marginRight": "auto",
          "maxWidth": 300,
          "width": "75%",
        }
      }
    >
      <View
        dataSet={Object {}}
        isFocused={false}
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#d4d4d4",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "overflow": "hidden",
          }
        }
      >
        <TextInput
          accessible={true}
          allowFontScaling={true}
          dataSet={Object {}}
          editable={true}
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="xs Input"
          placeholderTextColor="#a3a3a3"
          rejectResponderTermination={true}
          secureTextEntry={false}
          selectionColor="#1f2937"
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "#171717",
              "flex": 1,
              "fontFamily": undefined,
              "fontSize": 10,
              "fontStyle": "normal",
              "fontWeight": "400",
              "height": "100%",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
              "width": "100%",
            }
          }
          underlineColorAndroid="transparent"
        />
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        dataSet={Object {}}
        isFocused={false}
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#d4d4d4",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "overflow": "hidden",
          }
        }
      >
        <TextInput
          accessible={true}
          allowFontScaling={true}
          dataSet={Object {}}
          editable={true}
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="sm Input"
          placeholderTextColor="#a3a3a3"
          rejectResponderTermination={true}
          secureTextEntry={false}
          selectionColor="#1f2937"
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "#171717",
              "flex": 1,
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "400",
              "height": "100%",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
              "width": "100%",
            }
          }
          underlineColorAndroid="transparent"
        />
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        dataSet={Object {}}
        isFocused={false}
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#d4d4d4",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "overflow": "hidden",
          }
        }
      >
        <TextInput
          accessible={true}
          allowFontScaling={true}
          dataSet={Object {}}
          editable={true}
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="md Input"
          placeholderTextColor="#a3a3a3"
          rejectResponderTermination={true}
          secureTextEntry={false}
          selectionColor="#1f2937"
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "#171717",
              "flex": 1,
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "height": "100%",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
              "width": "100%",
            }
          }
          underlineColorAndroid="transparent"
        />
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        dataSet={Object {}}
        isFocused={false}
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#d4d4d4",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "overflow": "hidden",
          }
        }
      >
        <TextInput
          accessible={true}
          allowFontScaling={true}
          dataSet={Object {}}
          editable={true}
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="lg Input"
          placeholderTextColor="#a3a3a3"
          rejectResponderTermination={true}
          secureTextEntry={false}
          selectionColor="#1f2937"
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "#171717",
              "flex": 1,
              "fontFamily": undefined,
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "height": "100%",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
              "width": "100%",
            }
          }
          underlineColorAndroid="transparent"
        />
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        dataSet={Object {}}
        isFocused={false}
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#d4d4d4",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "overflow": "hidden",
          }
        }
      >
        <TextInput
          accessible={true}
          allowFontScaling={true}
          dataSet={Object {}}
          editable={true}
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="xl Input"
          placeholderTextColor="#a3a3a3"
          rejectResponderTermination={true}
          secureTextEntry={false}
          selectionColor="#1f2937"
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "#171717",
              "flex": 1,
              "fontFamily": undefined,
              "fontSize": 18,
              "fontStyle": "normal",
              "fontWeight": "400",
              "height": "100%",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
              "width": "100%",
            }
          }
          underlineColorAndroid="transparent"
        />
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        dataSet={Object {}}
        isFocused={false}
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#d4d4d4",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "overflow": "hidden",
          }
        }
      >
        <TextInput
          accessible={true}
          allowFontScaling={true}
          dataSet={Object {}}
          editable={true}
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="2xl Input"
          placeholderTextColor="#a3a3a3"
          rejectResponderTermination={true}
          secureTextEntry={false}
          selectionColor="#1f2937"
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "#171717",
              "flex": 1,
              "fontFamily": undefined,
              "fontSize": 20,
              "fontStyle": "normal",
              "fontWeight": "400",
              "height": "100%",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
              "width": "100%",
            }
          }
          underlineColorAndroid="transparent"
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Input Value Controlled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        isFocused={false}
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#d4d4d4",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "overflow": "hidden",
            "width": "100%",
          }
        }
      >
        <TextInput
          accessible={true}
          allowFontScaling={true}
          dataSet={Object {}}
          editable={true}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="Value Controlled Input"
          placeholderTextColor="#a3a3a3"
          rejectResponderTermination={true}
          secureTextEntry={false}
          selectionColor="#1f2937"
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "#171717",
              "flex": 1,
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "400",
              "height": "100%",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
              "width": "100%",
            }
          }
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Input Variants 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "marginLeft": "auto",
          "marginRight": "auto",
          "maxWidth": 300,
          "width": "75%",
        }
      }
    >
      <View
        dataSet={Object {}}
        isFocused={false}
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#d4d4d4",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "overflow": "hidden",
          }
        }
      >
        <TextInput
          accessible={true}
          allowFontScaling={true}
          dataSet={Object {}}
          editable={true}
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="Outline"
          placeholderTextColor="#a3a3a3"
          rejectResponderTermination={true}
          secureTextEntry={false}
          selectionColor="#1f2937"
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "#171717",
              "flex": 1,
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "400",
              "height": "100%",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
              "width": "100%",
            }
          }
          underlineColorAndroid="transparent"
        />
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        dataSet={Object {}}
        isFocused={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#f5f5f5",
            "borderColor": "#f5f5f5",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "overflow": "hidden",
          }
        }
      >
        <TextInput
          accessible={true}
          allowFontScaling={true}
          dataSet={Object {}}
          editable={true}
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="Filled"
          placeholderTextColor="#a3a3a3"
          rejectResponderTermination={true}
          secureTextEntry={false}
          selectionColor="#1f2937"
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "#171717",
              "flex": 1,
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "400",
              "height": "100%",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
              "width": "100%",
            }
          }
          underlineColorAndroid="transparent"
        />
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        dataSet={Object {}}
        isFocused={false}
        style={
          Object {
            "alignItems": "center",
            "borderBottomWidth": 1,
            "borderColor": "#d4d4d4",
            "borderRadius": 0,
            "borderWidth": 0,
            "flexDirection": "row",
            "overflow": "hidden",
          }
        }
      >
        <TextInput
          accessible={true}
          allowFontScaling={true}
          dataSet={Object {}}
          editable={true}
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="Underlined"
          placeholderTextColor="#a3a3a3"
          rejectResponderTermination={true}
          secureTextEntry={false}
          selectionColor="#1f2937"
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "#171717",
              "flex": 1,
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "400",
              "height": "100%",
              "paddingBottom": 8,
              "paddingLeft": 0,
              "paddingRight": 12,
              "paddingTop": 8,
              "width": "100%",
            }
          }
          underlineColorAndroid="transparent"
        />
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        dataSet={Object {}}
        isFocused={false}
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#d4d4d4",
            "borderRadius": 4,
            "borderWidth": 0,
            "flexDirection": "row",
            "overflow": "hidden",
          }
        }
      >
        <TextInput
          accessible={true}
          allowFontScaling={true}
          dataSet={Object {}}
          editable={true}
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="Unstyled"
          placeholderTextColor="#a3a3a3"
          rejectResponderTermination={true}
          secureTextEntry={false}
          selectionColor="#1f2937"
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "#171717",
              "flex": 1,
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "400",
              "height": "100%",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
              "width": "100%",
            }
          }
          underlineColorAndroid="transparent"
        />
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        dataSet={Object {}}
        isFocused={false}
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#d4d4d4",
            "borderRadius": 9999,
            "borderWidth": 1,
            "flexDirection": "row",
            "overflow": "hidden",
          }
        }
      >
        <TextInput
          accessible={true}
          allowFontScaling={true}
          dataSet={Object {}}
          editable={true}
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="Round"
          placeholderTextColor="#a3a3a3"
          rejectResponderTermination={true}
          secureTextEntry={false}
          selectionColor="#1f2937"
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "#171717",
              "flex": 1,
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "400",
              "height": "100%",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
              "width": "100%",
            }
          }
          underlineColorAndroid="transparent"
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots KeyboardAvoidingView Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      onLayout={[Function]}
      style={
        Array [
          Object {
            "height": 400,
          },
          Object {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "center",
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "flex": 1,
              "justifyContent": "flex-end",
              "maxWidth": 300,
              "width": "100%",
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": null,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 30,
                "marginBottom": 12,
                "textDecorationLine": undefined,
              }
            }
          >
            Forgot Password
          </Text>
          <View
            dataSet={Object {}}
            style={Object {}}
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#a3a3a3",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Not to worry! Enter email address associated with your account and we’ll send a link to reset your password.
          </Text>
          <View
            dataSet={Object {}}
            style={Object {}}
          />
          <View
            dataSet={Object {}}
            isFocused={false}
            style={
              Object {
                "alignItems": "center",
                "borderColor": "#d4d4d4",
                "borderRadius": 4,
                "borderWidth": 1,
                "flexDirection": "row",
                "marginBottom": 16,
                "marginTop": 40,
                "overflow": "hidden",
              }
            }
          >
            <TextInput
              accessible={true}
              allowFontScaling={true}
              dataSet={Object {}}
              editable={true}
              onBlur={[Function]}
              onFocus={[Function]}
              onKeyPress={[Function]}
              placeholder="Email Address"
              placeholderTextColor="#a3a3a3"
              rejectResponderTermination={true}
              secureTextEntry={false}
              selectionColor="#1f2937"
              style={
                Object {
                  "backgroundColor": "transparent",
                  "color": "#171717",
                  "flex": 1,
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": "100%",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                  "width": "100%",
                }
              }
              underlineColorAndroid="transparent"
            />
          </View>
          <View
            dataSet={Object {}}
            style={Object {}}
          />
          <View
            accessibilityRole="button"
            accessible={true}
            colorScheme="primary"
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#0891b2",
                "borderRadius": 4,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 16,
                "paddingBottom": 10,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 10,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
              test={true}
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#fafafa",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Proceed
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Link Composite Link Example 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        accessibilityRole="link"
        accessible={true}
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "flexDirection": "row",
            "height": "auto",
            "width": "auto",
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": "#f3f4f6",
              "borderColor": "#d1d5db",
              "borderRadius": 8,
              "borderWidth": 1,
              "elevation": 4,
              "paddingBottom": 20,
              "paddingLeft": 20,
              "paddingRight": 20,
              "paddingTop": 20,
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.23,
              "shadowRadius": 2.62,
              "width": 384,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              colorScheme="darkBlue"
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#005db4",
                  "borderColor": "transparent",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 2,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 2,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#FFFFFF",
                      "fontFamily": undefined,
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "500",
                      "letterSpacing": 0,
                      "lineHeight": 18,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Open Source
                </Text>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "flexGrow": 1,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 10,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 15,
                  "textDecorationLine": undefined,
                }
              }
            >
              2020
            </Text>
          </View>
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 30,
                "marginTop": 12,
                "textDecorationLine": undefined,
              }
            }
          >
            NativeBase v3
          </Text>
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#374151",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "marginTop": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            NativeBase is a component library that enables devs to build universal design systems.
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "display": "flex",
                "flexDirection": "column",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#005db4",
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 18,
                  "marginTop": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              Read More
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Link Custom Function onPress Link 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": "#6366f1",
            "height": 100,
            "width": 100,
          }
        }
      />
      <View
        accessibilityRole="link"
        accessible={true}
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "flexDirection": "row",
            "height": "auto",
            "marginTop": 32,
            "width": "auto",
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": "#22d3ee",
              "borderRadius": 4,
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Change Color
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Link Default Link 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        accessibilityRole="link"
        accessible={true}
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "flexDirection": "row",
            "height": "auto",
            "width": "auto",
          }
        }
      >
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#171717",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": "underline",
            }
          }
        >
          Click here to open documentation.
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Link External Link 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "marginLeft": 64,
            "marginRight": 64,
            "textDecorationLine": undefined,
          }
        }
      >
        NativeBase is a component library that enables devs to build universal design systems. It is built on top of React Native, allowing you to develop apps for Android, iOS and the Web.
         
        <View
          accessibilityRole="link"
          accessible={true}
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "flexDirection": "row",
              "height": "auto",
              "marginTop": -2,
              "width": "auto",
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#60a5fa",
                "fontFamily": undefined,
                "fontSize": undefined,
                "fontStyle": undefined,
                "fontWeight": undefined,
                "textDecorationLine": "underline",
              }
            }
          >
            Read More
          </Text>
        </View>
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Link Underline Link 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        accessibilityRole="link"
        accessible={true}
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "flexDirection": "row",
            "height": "auto",
            "width": "auto",
          }
        }
      >
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#06b6d4",
              "fontFamily": undefined,
              "fontSize": 20,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 30,
              "textDecorationLine": "underline",
            }
          }
        >
          Click me to open NativeBase website.
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots List Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "width": "80%",
        }
      }
    >
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "textDecorationLine": undefined,
          }
        }
      >
        Topics (Plain List)
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "borderColor": "#d4d4d8",
            "borderWidth": 1,
            "marginBottom": 8,
            "marginTop": 8,
            "paddingBottom": 8,
            "paddingTop": 8,
          }
        }
      >
        <View
          accessibilityLabel="List-Item-1"
          accessibilityRole="text"
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "borderTopWidth": 0,
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Education
            </Text>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityLabel="List-Item-2"
          accessibilityRole="text"
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Health
            </Text>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityLabel="List-Item-3"
          accessibilityRole="text"
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Office
            </Text>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityLabel="List-Item-4"
          accessibilityRole="text"
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Sports
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots List List with Icon 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "borderColor": "#d4d4d8",
          "borderWidth": 1,
          "marginBottom": 8,
          "marginTop": 8,
          "paddingBottom": 8,
          "paddingTop": 8,
          "width": 320,
        }
      }
    >
      <View
        accessibilityLabel="List-Item-1"
        accessibilityRole="text"
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#d4d4d8",
            "borderTopWidth": 0,
            "flexDirection": "row",
            "paddingBottom": 8,
            "paddingTop": 8,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "paddingLeft": 8,
            }
          }
        />
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Inbox
          </Text>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={Object {}}
      />
      <View
        accessibilityLabel="List-Item-2"
        accessibilityRole="text"
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#d4d4d8",
            "flexDirection": "row",
            "paddingBottom": 8,
            "paddingTop": 8,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "paddingLeft": 8,
            }
          }
        />
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
            }
          }
        >
          <Text />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Drafts
          </Text>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={Object {}}
      />
      <View
        accessibilityLabel="List-Item-3"
        accessibilityRole="text"
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#d4d4d8",
            "flexDirection": "row",
            "paddingBottom": 8,
            "paddingTop": 8,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "paddingLeft": 8,
            }
          }
        />
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
            }
          }
        >
          <Text
            allowFontScaling={false}
            dataSet={Object {}}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Object {
                  "color": "#737373",
                  "fontSize": 20,
                  "height": 20,
                  "lineHeight": 20,
                  "marginRight": 32,
                  "width": 20,
                },
                Object {
                  "fontFamily": "ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Graphs and stats
          </Text>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={Object {}}
      />
      <View
        accessibilityLabel="List-Item-4"
        accessibilityRole="text"
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#d4d4d8",
            "flexDirection": "row",
            "paddingBottom": 8,
            "paddingTop": 8,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "paddingLeft": 8,
            }
          }
        />
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
            }
          }
        >
          <Text
            allowFontScaling={false}
            dataSet={Object {}}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Object {
                  "color": "#737373",
                  "fontSize": 20,
                  "height": 20,
                  "lineHeight": 20,
                  "marginRight": 32,
                  "width": 20,
                },
                Object {
                  "fontFamily": "ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Attachments
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots List OrderedList 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "width": "80%",
        }
      }
    >
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "textDecorationLine": undefined,
          }
        }
      >
        Bill-#187 (Ordered List)
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "borderColor": "#d4d4d8",
            "borderWidth": 1,
            "marginBottom": 8,
            "marginTop": 8,
            "paddingBottom": 8,
            "paddingTop": 8,
          }
        }
      >
        <View
          accessibilityLabel="List-Item-1"
          accessibilityRole="text"
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "borderTopWidth": 0,
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "marginRight": 8,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                1.
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Fruit Juice x 2
            </Text>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityLabel="List-Item-2"
          accessibilityRole="text"
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "marginRight": 8,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                2.
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Cheddar cheese - 200g
            </Text>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityLabel="List-Item-3"
          accessibilityRole="text"
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "marginRight": 8,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                3.
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Milk 1L x 2
            </Text>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityLabel="List-Item-4"
          accessibilityRole="text"
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "marginRight": 8,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                4.
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Brown Bread - 400g
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots List Pressable List Items 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "width": "80%",
        }
      }
    >
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": "#22d3ee",
            "color": "#FFFFFF",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "paddingBottom": 16,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 16,
            "textDecorationLine": undefined,
          }
        }
      >
        Default Theme Color (Pressable List Items)
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "borderColor": "#d4d4d8",
            "borderWidth": 1,
            "marginBottom": 8,
            "marginTop": 8,
            "paddingBottom": 0,
            "paddingTop": 0,
          }
        }
      >
        <View
          accessibilityLabel="List-Item-1"
          accessibilityRole="button"
          accessible={true}
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#22d3ee",
              "borderColor": "#d4d4d8",
              "borderTopWidth": 0,
              "flexDirection": "row",
              "paddingBottom": 16,
              "paddingTop": 16,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              primary.400
            </Text>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={Object {}}
        />
        <View
          accessibilityLabel="List-Item-2"
          accessibilityRole="button"
          accessible={true}
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#f472b6",
              "borderColor": "#d4d4d8",
              "flexDirection": "row",
              "paddingBottom": 16,
              "paddingTop": 16,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              secondary.400
            </Text>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={Object {}}
        />
        <View
          accessibilityLabel="List-Item-3"
          accessibilityRole="button"
          accessible={true}
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#34d399",
              "borderColor": "#d4d4d8",
              "flexDirection": "row",
              "paddingBottom": 16,
              "paddingTop": 16,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              emerald.400
            </Text>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={Object {}}
        />
        <View
          accessibilityLabel="List-Item-4"
          accessibilityRole="button"
          accessible={true}
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#60a5fa",
              "borderColor": "#d4d4d8",
              "flexDirection": "row",
              "paddingBottom": 16,
              "paddingTop": 16,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              blue.400
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots List StylingList 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "width": "80%",
        }
      }
    >
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "textDecorationLine": undefined,
          }
        }
      >
        Styled List
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "borderColor": "#d4d4d8",
            "borderWidth": 1,
            "marginBottom": 8,
            "marginTop": 8,
            "paddingBottom": 8,
            "paddingTop": 8,
          }
        }
      >
        <View
          accessibilityLabel="List-Item-11"
          accessibilityRole="text"
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "borderTopWidth": 0,
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "marginRight": 8,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#d97706",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                11.
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#d97706",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Ocean's 
            </Text>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityLabel="List-Item-12"
          accessibilityRole="text"
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "marginRight": 8,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fecaca",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                12.
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fecaca",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Ocean's 
            </Text>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityLabel="List-Item-13"
          accessibilityRole="text"
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "marginRight": 8,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#2dd4bf",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                13.
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#2dd4bf",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Ocean's
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots List UnorderedList 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "width": "80%",
        }
      }
    >
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "textDecorationLine": undefined,
          }
        }
      >
        My Todos (Unordered List)
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "borderColor": "#d4d4d8",
            "borderWidth": 1,
            "marginBottom": 8,
            "marginTop": 8,
            "paddingBottom": 8,
            "paddingTop": 8,
          }
        }
      >
        <View
          accessibilityLabel="List-Item-1"
          accessibilityRole="text"
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "borderTopWidth": 0,
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Array [
                  Object {
                    "marginRight": 8,
                  },
                  Object {
                    "transform": Array [
                      Object {
                        "scale": 1.5,
                      },
                    ],
                  },
                ]
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                •
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Get groceries by Tomorrow.
            </Text>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityLabel="List-Item-2"
          accessibilityRole="text"
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Array [
                  Object {
                    "marginRight": 8,
                  },
                  Object {
                    "transform": Array [
                      Object {
                        "scale": 1.5,
                      },
                    ],
                  },
                ]
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                •
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Book appointment with the Doc.
            </Text>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityLabel="List-Item-3"
          accessibilityRole="text"
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Array [
                  Object {
                    "marginRight": 8,
                  },
                  Object {
                    "transform": Array [
                      Object {
                        "scale": 1.5,
                      },
                    ],
                  },
                ]
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                •
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Bill payment - Electricity.
            </Text>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityLabel="List-Item-4"
          accessibilityRole="text"
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Array [
                  Object {
                    "marginRight": 8,
                  },
                  Object {
                    "transform": Array [
                      Object {
                        "scale": 1.5,
                      },
                    ],
                  },
                ]
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                •
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Pay Telephone Bill
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots List VirtualizedList  1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RCTScrollView
      data={Array []}
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={4}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      windowSize={21}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessibilityLabel="List-Item-NaN"
            accessibilityRole="text"
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#a7f3d0",
                "borderColor": "#d4d4d8",
                "borderRadius": 6,
                "borderTopWidth": 0,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 8,
                "marginTop": 8,
                "paddingBottom": 8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 8,
                "width": 128,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 8,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 24,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 36,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Item 1
              </Text>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessibilityLabel="List-Item-NaN"
            accessibilityRole="text"
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#a7f3d0",
                "borderColor": "#d4d4d8",
                "borderRadius": 6,
                "borderTopWidth": 0,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 8,
                "marginTop": 8,
                "paddingBottom": 8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 8,
                "width": 128,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 8,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 24,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 36,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Item 2
              </Text>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessibilityLabel="List-Item-NaN"
            accessibilityRole="text"
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#a7f3d0",
                "borderColor": "#d4d4d8",
                "borderRadius": 6,
                "borderTopWidth": 0,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 8,
                "marginTop": 8,
                "paddingBottom": 8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 8,
                "width": 128,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 8,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 24,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 36,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Item 3
              </Text>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessibilityLabel="List-Item-NaN"
            accessibilityRole="text"
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#a7f3d0",
                "borderColor": "#d4d4d8",
                "borderRadius": 6,
                "borderTopWidth": 0,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 8,
                "marginTop": 8,
                "paddingBottom": 8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 8,
                "width": 128,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 8,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 24,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 36,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Item 4
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 0,
            }
          }
        />
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Menu Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "width": "90%",
        }
      }
    >
      <View
        accessibilityLabel="More options menu"
        accessible={true}
        aria-haspopup="menu"
        dataSet={Object {}}
        focusable={true}
        nativeID="react-aria-0-2"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onKeyDownCapture={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <RNSVGSvgView
          accessibilityRole="image"
          align="xMidYMid"
          bbHeight={16}
          bbWidth={16}
          color={4285756275}
          dataSet={Object {}}
          focusable={false}
          meetOrSlice={0}
          minX={0}
          minY={0}
          stroke=""
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "color": "#737373",
                "height": 16,
                "width": 16,
              },
              Object {
                "flex": 0,
                "height": 16,
                "width": 16,
              },
            ]
          }
          tintColor={4285756275}
          vbHeight={24}
          vbWidth={24}
        >
          <RNSVGGroup
            propList={
              Array [
                "stroke",
              ]
            }
            stroke={null}
          >
            <RNSVGGroup>
              <RNSVGPath
                d="M22 5H2V7.47961H22V5ZM22 10.4795H2V12.9591H22V10.4795ZM2 15.959H22V18.4386H2V15.959Z"
                fill={
                  Array [
                    2,
                  ]
                }
                propList={
                  Array [
                    "fill",
                    "stroke",
                  ]
                }
                stroke={null}
              />
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Menu Group 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "width": "90%",
        }
      }
    >
      <View
        accessible={true}
        aria-haspopup="menu"
        dataSet={Object {}}
        focusable={true}
        nativeID="react-aria-0-2"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onKeyDownCapture={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <RNSVGSvgView
          accessibilityRole="image"
          align="xMidYMid"
          bbHeight={16}
          bbWidth={16}
          color={4285756275}
          dataSet={Object {}}
          focusable={false}
          meetOrSlice={0}
          minX={0}
          minY={0}
          stroke=""
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "color": "#737373",
                "height": 16,
                "width": 16,
              },
              Object {
                "flex": 0,
                "height": 16,
                "width": 16,
              },
            ]
          }
          tintColor={4285756275}
          vbHeight={24}
          vbWidth={24}
        >
          <RNSVGGroup
            propList={
              Array [
                "stroke",
              ]
            }
            stroke={null}
          >
            <RNSVGGroup>
              <RNSVGPath
                d="M22 5H2V7.47961H22V5ZM22 10.4795H2V12.9591H22V10.4795ZM2 15.959H22V18.4386H2V15.959Z"
                fill={
                  Array [
                    2,
                  ]
                }
                propList={
                  Array [
                    "fill",
                    "stroke",
                  ]
                }
                stroke={null}
              />
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Menu Menu positions 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignSelf": "flex-start",
          "width": "100%",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        aria-haspopup="menu"
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        nativeID="react-aria-0-2"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onKeyDownCapture={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Menu
            </Text>
          </View>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 24,
          }
        }
      />
      <View
        accessibilityLabel="Select a position for Menu"
        accessibilityRole="button"
        accessible={true}
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "marginLeft": 0,
            "marginRight": 0,
          }
        }
      >
        <View
          dataSet={Object {}}
          isFocused={false}
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d4",
              "borderRadius": 4,
              "borderWidth": 1,
              "flexDirection": "row",
              "marginLeft": 0,
              "marginRight": 0,
              "overflow": "hidden",
            }
          }
        >
          <TextInput
            accessible={true}
            allowFontScaling={true}
            aria-hidden={true}
            dataSet={Object {}}
            editable={false}
            focusable={false}
            importantForAccessibility="no"
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyPress={[Function]}
            placeholderTextColor="#a3a3a3"
            pointerEvents="none"
            rejectResponderTermination={true}
            secureTextEntry={false}
            selectionColor="#1f2937"
            style={
              Object {
                "backgroundColor": "transparent",
                "color": "#171717",
                "flex": 1,
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "400",
                "height": "100%",
                "paddingBottom": 8,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 8,
                "width": "100%",
              }
            }
            underlineColorAndroid="transparent"
            value="auto"
          />
          <View
            dataSet={Object {}}
            style={Object {}}
          />
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={16}
            bbWidth={16}
            color={4285756275}
            dataSet={Object {}}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Object {
                  "color": "#737373",
                  "height": 16,
                  "marginRight": 12,
                  "width": 16,
                },
                Object {
                  "flex": 0,
                  "height": 16,
                  "width": 16,
                },
              ]
            }
            tintColor={4285756275}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M20.2286 6L11.9973 14.3785L3.76862 6.00268L2 7.80293L12 18L22 7.80293L20.2286 6Z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Menu MenuOptionsGroup 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "width": "90%",
        }
      }
    >
      <View
        accessible={true}
        aria-haspopup="menu"
        dataSet={Object {}}
        focusable={true}
        nativeID="react-aria-0-2"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onKeyDownCapture={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <RNSVGSvgView
          accessibilityRole="image"
          align="xMidYMid"
          bbHeight={16}
          bbWidth={16}
          color={4285756275}
          dataSet={Object {}}
          focusable={false}
          meetOrSlice={0}
          minX={0}
          minY={0}
          stroke=""
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "color": "#737373",
                "height": 16,
                "width": 16,
              },
              Object {
                "flex": 0,
                "height": 16,
                "width": 16,
              },
            ]
          }
          tintColor={4285756275}
          vbHeight={24}
          vbWidth={24}
        >
          <RNSVGGroup
            propList={
              Array [
                "stroke",
              ]
            }
            stroke={null}
          >
            <RNSVGGroup>
              <RNSVGPath
                d="M22 5H2V7.47961H22V5ZM22 10.4795H2V12.9591H22V10.4795ZM2 15.959H22V18.4386H2V15.959Z"
                fill={
                  Array [
                    2,
                  ]
                }
                propList={
                  Array [
                    "fill",
                    "stroke",
                  ]
                }
                stroke={null}
              />
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Modal Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Button
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Modal Modal Custom Backdrop 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Button
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Modal Modal Placement 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "flexDirection": "column",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Top
            </Text>
          </View>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Bottom
            </Text>
          </View>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Center
            </Text>
          </View>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Left
            </Text>
          </View>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Right
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Modal Modal Ref Examples 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Open Modal
            </Text>
          </View>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "width": 16,
          }
        }
      />
      <View
        dataSet={Object {}}
        isFocused={false}
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#d4d4d4",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "overflow": "hidden",
            "width": 128,
          }
        }
      >
        <TextInput
          accessible={true}
          allowFontScaling={true}
          dataSet={Object {}}
          editable={true}
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="Enter the OTP"
          placeholderTextColor="#334155"
          rejectResponderTermination={true}
          secureTextEntry={false}
          selectionColor="#1f2937"
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "#171717",
              "flex": 1,
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "400",
              "height": "100%",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
              "width": "100%",
            }
          }
          underlineColorAndroid="transparent"
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Modal Modal Size Examples 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={Object {}}
      >
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#0891b2",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 10,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 10,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
            test={true}
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafafa",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Open xs Modal
              </Text>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#0891b2",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 10,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 10,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
            test={true}
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafafa",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Open sm Modal
              </Text>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#0891b2",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 10,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 10,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
            test={true}
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafafa",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Open md Modal
              </Text>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#0891b2",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 10,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 10,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
            test={true}
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafafa",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Open lg Modal
              </Text>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#0891b2",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 10,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 10,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
            test={true}
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafafa",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Open xl Modal
              </Text>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#0891b2",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 10,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 10,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
            test={true}
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafafa",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Open full Modal
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Modal Modal with Keyboard Avoid view 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
            "width": 104,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Open Modal
            </Text>
          </View>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 32,
          }
        }
      />
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textAlign": "center",
            "textDecorationLine": undefined,
          }
        }
      >
        Open modal and focus on the input element to see the effect.
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Modal Multiple modal 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Button
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Mode Basic 1`] = `
<View
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  />
</View>
`;

exports[`Storyshots Mode DefaultMode 1`] = `
<View
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  />
</View>
`;

exports[`Storyshots Mode Persistence 1`] = `
<View
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  />
</View>
`;

exports[`Storyshots Popover Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "width": "100%",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={Object {}}
      >
        <View
          accessibilityRole="button"
          accessible={true}
          aria-expanded={false}
          aria-haspopup={true}
          colorScheme="danger"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#e11d48",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 10,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 10,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
            test={true}
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafafa",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Delete Customer
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Popover Focus on Open 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "width": "100%",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={Object {}}
      >
        <View
          accessibilityRole="button"
          accessible={true}
          aria-expanded={false}
          aria-haspopup={true}
          colorScheme="primary"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#0891b2",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 10,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 10,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
            test={true}
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafafa",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Edit Info
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Popover Popover positions 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "width": "100%",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignSelf": "flex-start",
            "width": "100%",
          }
        }
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <View
            accessibilityRole="button"
            accessible={true}
            aria-expanded={false}
            aria-haspopup={true}
            colorScheme="danger"
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "center",
                "backgroundColor": "#e11d48",
                "borderRadius": 4,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 10,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 10,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
              test={true}
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#fafafa",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Delete Customer
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 24,
            }
          }
        />
        <View
          accessibilityLabel="Select a position for Popover"
          accessibilityRole="button"
          accessible={true}
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "marginLeft": 0,
              "marginRight": 0,
            }
          }
        >
          <View
            dataSet={Object {}}
            isFocused={false}
            style={
              Object {
                "alignItems": "center",
                "borderColor": "#d4d4d4",
                "borderRadius": 4,
                "borderWidth": 1,
                "flexDirection": "row",
                "marginLeft": 0,
                "marginRight": 0,
                "overflow": "hidden",
              }
            }
          >
            <TextInput
              accessible={true}
              allowFontScaling={true}
              aria-hidden={true}
              dataSet={Object {}}
              editable={false}
              focusable={false}
              importantForAccessibility="no"
              onBlur={[Function]}
              onFocus={[Function]}
              onKeyPress={[Function]}
              placeholderTextColor="#a3a3a3"
              pointerEvents="none"
              rejectResponderTermination={true}
              secureTextEntry={false}
              selectionColor="#1f2937"
              style={
                Object {
                  "backgroundColor": "transparent",
                  "color": "#171717",
                  "flex": 1,
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": "100%",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                  "width": "100%",
                }
              }
              underlineColorAndroid="transparent"
              value="auto"
            />
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <RNSVGSvgView
              accessibilityRole="image"
              align="xMidYMid"
              bbHeight={16}
              bbWidth={16}
              color={4285756275}
              dataSet={Object {}}
              focusable={false}
              meetOrSlice={0}
              minX={0}
              minY={0}
              stroke=""
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Object {
                    "color": "#737373",
                    "height": 16,
                    "marginRight": 12,
                    "width": 16,
                  },
                  Object {
                    "flex": 0,
                    "height": 16,
                    "width": 16,
                  },
                ]
              }
              tintColor={4285756275}
              vbHeight={24}
              vbWidth={24}
            >
              <RNSVGGroup
                propList={
                  Array [
                    "stroke",
                  ]
                }
                stroke={null}
              >
                <RNSVGGroup>
                  <RNSVGPath
                    d="M20.2286 6L11.9973 14.3785L3.76862 6.00268L2 7.80293L12 18L22 7.80293L20.2286 6Z"
                    fill={
                      Array [
                        2,
                      ]
                    }
                    propList={
                      Array [
                        "fill",
                        "stroke",
                      ]
                    }
                    stroke={null}
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Pressable Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        accessible={true}
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#f3f4f6",
            "borderColor": "#d1d5db",
            "borderRadius": 8,
            "borderWidth": 1,
            "elevation": 4,
            "maxWidth": 384,
            "overflow": "hidden",
            "paddingBottom": 20,
            "paddingLeft": 20,
            "paddingRight": 20,
            "paddingTop": 20,
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.23,
            "shadowRadius": 2.62,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              colorScheme="darkBlue"
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#005db4",
                  "borderColor": "transparent",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 2,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 2,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#FFFFFF",
                      "fontFamily": undefined,
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "500",
                      "letterSpacing": 0,
                      "lineHeight": 18,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Business
                </Text>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "flexGrow": 1,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 10,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 15,
                  "textDecorationLine": undefined,
                }
              }
            >
              1 month ago
            </Text>
          </View>
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 30,
                "marginTop": 12,
                "textDecorationLine": undefined,
              }
            }
          >
            Marketing License
          </Text>
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#374151",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "marginTop": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            Unlock powerfull time-saving tools for creating email delivery and collecting marketing data
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "display": "flex",
                "flexDirection": "column",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#005db4",
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 18,
                  "marginTop": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              Read More
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Pressable Events 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        accessible={true}
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "maxWidth": 384,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Array [
              Object {
                "backgroundColor": "#f3f4f6",
                "borderColor": "#d1d5db",
                "borderRadius": 8,
                "borderWidth": 1,
                "elevation": 4,
                "paddingBottom": 20,
                "paddingLeft": 20,
                "paddingRight": 20,
                "paddingTop": 20,
                "shadowColor": "#000000",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 0.23,
                "shadowRadius": 2.62,
              },
              Object {
                "transform": Array [
                  Object {
                    "scale": 1,
                  },
                ],
              },
            ]
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              colorScheme="darkBlue"
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#005db4",
                  "borderColor": "transparent",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 2,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 2,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#FFFFFF",
                      "fontFamily": undefined,
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "500",
                      "letterSpacing": 0,
                      "lineHeight": 18,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Business
                </Text>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "flexGrow": 1,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 10,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 15,
                  "textDecorationLine": undefined,
                }
              }
            >
              1 month ago
            </Text>
          </View>
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 30,
                "marginTop": 12,
                "textDecorationLine": undefined,
              }
            }
          >
            Marketing License
          </Text>
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#374151",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "marginTop": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            Unlock powerfull time-saving tools for creating email delivery and collecting marketing data
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "display": "flex",
                "flexDirection": "column",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#005db4",
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 18,
                  "marginTop": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              Read More
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Progress ColorSchemes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "maxWidth": 400,
            "width": "90%",
          }
        }
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "marginLeft": 16,
                "marginRight": 16,
              }
            }
          >
            <View
              accessibilityRole="progressbar"
              accessibilityValue={
                Object {
                  "max": 100,
                  "min": 0,
                  "now": 35,
                }
              }
              accessible={true}
              colorScheme="primary"
              dataSet={Object {}}
              isIndeterminate={false}
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderRadius": 9999,
                  "height": 8,
                  "overflow": "hidden",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#0891b2",
                    "borderRadius": 9999,
                    "display": "flex",
                    "elevation": 1,
                    "height": "100%",
                    "justifyContent": "center",
                    "shadowColor": "#000000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 0.18,
                    "shadowRadius": 1,
                    "width": "35%",
                  }
                }
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 16,
                }
              }
            />
            <View
              accessibilityRole="progressbar"
              accessibilityValue={
                Object {
                  "max": 100,
                  "min": 0,
                  "now": 45,
                }
              }
              accessible={true}
              colorScheme="secondary"
              dataSet={Object {}}
              isIndeterminate={false}
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderRadius": 9999,
                  "height": 8,
                  "overflow": "hidden",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#db2777",
                    "borderRadius": 9999,
                    "display": "flex",
                    "elevation": 1,
                    "height": "100%",
                    "justifyContent": "center",
                    "shadowColor": "#000000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 0.18,
                    "shadowRadius": 1,
                    "width": "45%",
                  }
                }
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 16,
                }
              }
            />
            <View
              accessibilityRole="progressbar"
              accessibilityValue={
                Object {
                  "max": 100,
                  "min": 0,
                  "now": 55.00000000000001,
                }
              }
              accessible={true}
              colorScheme="emerald"
              dataSet={Object {}}
              isIndeterminate={false}
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderRadius": 9999,
                  "height": 8,
                  "overflow": "hidden",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#059669",
                    "borderRadius": 9999,
                    "display": "flex",
                    "elevation": 1,
                    "height": "100%",
                    "justifyContent": "center",
                    "shadowColor": "#000000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 0.18,
                    "shadowRadius": 1,
                    "width": "55.00000000000001%",
                  }
                }
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 16,
                }
              }
            />
            <View
              accessibilityRole="progressbar"
              accessibilityValue={
                Object {
                  "max": 100,
                  "min": 0,
                  "now": 65,
                }
              }
              accessible={true}
              colorScheme="warning"
              dataSet={Object {}}
              isIndeterminate={false}
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderRadius": 9999,
                  "height": 8,
                  "overflow": "hidden",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#ea580c",
                    "borderRadius": 9999,
                    "display": "flex",
                    "elevation": 1,
                    "height": "100%",
                    "justifyContent": "center",
                    "shadowColor": "#000000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 0.18,
                    "shadowRadius": 1,
                    "width": "65%",
                  }
                }
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 16,
                }
              }
            />
            <View
              accessibilityRole="progressbar"
              accessibilityValue={
                Object {
                  "max": 100,
                  "min": 0,
                  "now": 75,
                }
              }
              accessible={true}
              colorScheme="light"
              dataSet={Object {}}
              isIndeterminate={false}
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderRadius": 9999,
                  "height": 8,
                  "overflow": "hidden",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#57534e",
                    "borderRadius": 9999,
                    "display": "flex",
                    "elevation": 1,
                    "height": "100%",
                    "justifyContent": "center",
                    "shadowColor": "#000000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 0.18,
                    "shadowRadius": 1,
                    "width": "75%",
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Progress Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "width": "90%",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "center",
            "marginBottom": 40,
          }
        }
      >
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#171717",
              "fontFamily": undefined,
              "fontSize": 20,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 25,
              "textDecorationLine": undefined,
            }
          }
        >
          Progress Composition
        </Text>
      </View>
      <View
        accessibilityRole="progressbar"
        accessibilityValue={
          Object {
            "max": 100,
            "min": 0,
            "now": 45,
          }
        }
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        isIndeterminate={false}
        style={
          Object {
            "backgroundColor": "#e5e5e5",
            "borderRadius": 9999,
            "height": 20,
            "marginBottom": 16,
            "overflow": "hidden",
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#0891b2",
              "borderRadius": 9999,
              "display": "flex",
              "elevation": 1,
              "height": "100%",
              "justifyContent": "center",
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.18,
              "shadowRadius": 1,
              "width": "45%",
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            45%
          </Text>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
          }
        }
      >
        <View
          accessibilityRole="progressbar"
          accessibilityValue={
            Object {
              "max": 100,
              "min": 0,
              "now": 75,
            }
          }
          accessible={true}
          colorScheme="primary"
          dataSet={Object {}}
          isIndeterminate={false}
          style={
            Object {
              "backgroundColor": "#e5e5e5",
              "borderRadius": 9999,
              "flex": 1,
              "height": 20,
              "marginBottom": 16,
              "overflow": "hidden",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#0891b2",
                "borderRadius": 9999,
                "display": "flex",
                "elevation": 1,
                "height": "100%",
                "justifyContent": "center",
                "shadowColor": "#000000",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.18,
                "shadowRadius": 1,
                "width": "75%",
              }
            }
          />
        </View>
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#171717",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 21,
              "marginLeft": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          75%
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Progress CustomBgColor 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "maxWidth": 400,
            "width": "90%",
          }
        }
      >
        <View
          accessibilityRole="progressbar"
          accessibilityValue={
            Object {
              "max": 100,
              "min": 0,
              "now": 75,
            }
          }
          accessible={true}
          colorScheme="primary"
          dataSet={Object {}}
          isIndeterminate={false}
          style={
            Object {
              "backgroundColor": "#f3f4f6",
              "borderRadius": 9999,
              "height": 8,
              "marginLeft": 16,
              "marginRight": 16,
              "overflow": "hidden",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#84cc16",
                "borderRadius": 9999,
                "display": "flex",
                "elevation": 1,
                "height": "100%",
                "justifyContent": "center",
                "shadowColor": "#000000",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.18,
                "shadowRadius": 1,
                "width": "75%",
              }
            }
          />
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Progress Default Progress Bar 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "maxWidth": 400,
            "width": "90%",
          }
        }
      >
        <View
          accessibilityRole="progressbar"
          accessibilityValue={
            Object {
              "max": 100,
              "min": 0,
              "now": 45,
            }
          }
          accessible={true}
          colorScheme="primary"
          dataSet={Object {}}
          isIndeterminate={false}
          style={
            Object {
              "backgroundColor": "#e5e5e5",
              "borderRadius": 9999,
              "height": 8,
              "marginLeft": 16,
              "marginRight": 16,
              "overflow": "hidden",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#0891b2",
                "borderRadius": 9999,
                "display": "flex",
                "elevation": 1,
                "height": "100%",
                "justifyContent": "center",
                "shadowColor": "#000000",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.18,
                "shadowRadius": 1,
                "width": "45%",
              }
            }
          />
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Progress Flat 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "maxWidth": 400,
            "width": "90%",
          }
        }
      >
        <View
          accessibilityRole="progressbar"
          accessibilityValue={
            Object {
              "max": 100,
              "min": 0,
              "now": 65,
            }
          }
          accessible={true}
          colorScheme="primary"
          dataSet={Object {}}
          isIndeterminate={false}
          style={
            Object {
              "backgroundColor": "#e5e5e5",
              "borderRadius": 0,
              "height": 8,
              "marginLeft": 16,
              "marginRight": 16,
              "overflow": "hidden",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#0891b2",
                "borderRadius": 9999,
                "display": "flex",
                "elevation": 1,
                "height": "100%",
                "justifyContent": "center",
                "shadowColor": "#000000",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.18,
                "shadowRadius": 1,
                "width": "65%",
              }
            }
          />
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Progress Sizes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "maxWidth": 400,
            "width": "90%",
          }
        }
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "marginLeft": 16,
                "marginRight": 16,
              }
            }
          >
            <View
              accessibilityRole="progressbar"
              accessibilityValue={
                Object {
                  "max": 100,
                  "min": 0,
                  "now": 25,
                }
              }
              accessible={true}
              colorScheme="primary"
              dataSet={Object {}}
              isIndeterminate={false}
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderRadius": 9999,
                  "height": 4,
                  "marginBottom": 16,
                  "overflow": "hidden",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#0891b2",
                    "borderRadius": 9999,
                    "display": "flex",
                    "elevation": 1,
                    "height": "100%",
                    "justifyContent": "center",
                    "shadowColor": "#000000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 0.18,
                    "shadowRadius": 1,
                    "width": "25%",
                  }
                }
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 16,
                }
              }
            />
            <View
              accessibilityRole="progressbar"
              accessibilityValue={
                Object {
                  "max": 100,
                  "min": 0,
                  "now": 35,
                }
              }
              accessible={true}
              colorScheme="primary"
              dataSet={Object {}}
              isIndeterminate={false}
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderRadius": 9999,
                  "height": 8,
                  "marginBottom": 16,
                  "overflow": "hidden",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#0891b2",
                    "borderRadius": 9999,
                    "display": "flex",
                    "elevation": 1,
                    "height": "100%",
                    "justifyContent": "center",
                    "shadowColor": "#000000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 0.18,
                    "shadowRadius": 1,
                    "width": "35%",
                  }
                }
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 16,
                }
              }
            />
            <View
              accessibilityRole="progressbar"
              accessibilityValue={
                Object {
                  "max": 100,
                  "min": 0,
                  "now": 45,
                }
              }
              accessible={true}
              colorScheme="primary"
              dataSet={Object {}}
              isIndeterminate={false}
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderRadius": 9999,
                  "height": 12,
                  "marginBottom": 16,
                  "overflow": "hidden",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#0891b2",
                    "borderRadius": 9999,
                    "display": "flex",
                    "elevation": 1,
                    "height": "100%",
                    "justifyContent": "center",
                    "shadowColor": "#000000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 0.18,
                    "shadowRadius": 1,
                    "width": "45%",
                  }
                }
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 16,
                }
              }
            />
            <View
              accessibilityRole="progressbar"
              accessibilityValue={
                Object {
                  "max": 100,
                  "min": 0,
                  "now": 55.00000000000001,
                }
              }
              accessible={true}
              colorScheme="primary"
              dataSet={Object {}}
              isIndeterminate={false}
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderRadius": 9999,
                  "height": 16,
                  "marginBottom": 16,
                  "overflow": "hidden",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#0891b2",
                    "borderRadius": 9999,
                    "display": "flex",
                    "elevation": 1,
                    "height": "100%",
                    "justifyContent": "center",
                    "shadowColor": "#000000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 0.18,
                    "shadowRadius": 1,
                    "width": "55.00000000000001%",
                  }
                }
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 16,
                }
              }
            />
            <View
              accessibilityRole="progressbar"
              accessibilityValue={
                Object {
                  "max": 100,
                  "min": 0,
                  "now": 65,
                }
              }
              accessible={true}
              colorScheme="primary"
              dataSet={Object {}}
              isIndeterminate={false}
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderRadius": 9999,
                  "height": 20,
                  "marginBottom": 16,
                  "overflow": "hidden",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#0891b2",
                    "borderRadius": 9999,
                    "display": "flex",
                    "elevation": 1,
                    "height": "100%",
                    "justifyContent": "center",
                    "shadowColor": "#000000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 0.18,
                    "shadowRadius": 1,
                    "width": "65%",
                  }
                }
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 16,
                }
              }
            />
            <View
              accessibilityRole="progressbar"
              accessibilityValue={
                Object {
                  "max": 100,
                  "min": 0,
                  "now": 75,
                }
              }
              accessible={true}
              colorScheme="primary"
              dataSet={Object {}}
              isIndeterminate={false}
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderRadius": 9999,
                  "height": 24,
                  "marginBottom": 16,
                  "overflow": "hidden",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#0891b2",
                    "borderRadius": 9999,
                    "display": "flex",
                    "elevation": 1,
                    "height": "100%",
                    "justifyContent": "center",
                    "shadowColor": "#000000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 0.18,
                    "shadowRadius": 1,
                    "width": "75%",
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Radio Controlled Radio 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityLabel="favorite number"
      accessibilityRole="radiogroup"
      accessibilityState={
        Object {
          "disabled": undefined,
        }
      }
      dataSet={Object {}}
      name="myRadioGroup"
      onChange={[Function]}
      style={
        Object {
          "alignItems": "flex-start",
        }
      }
      value="one"
    >
      <View
        accessibilityRole="radio"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": false,
          }
        }
        accessible={true}
        checked={true}
        dataSet={Object {}}
        focusable={true}
        formControlContext={Object {}}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        state={
          Object {
            "lastFocusedValue": null,
            "name": "myRadioGroup",
            "selectedValue": "one",
            "setLastFocusedValue": [Function],
            "setSelectedValue": [Function],
          }
        }
        style={Object {}}
        value="one"
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              colorScheme="primary"
              dataSet={Object {}}
              defaultIsChecked={false}
              formControlContext={Object {}}
              state={
                Object {
                  "lastFocusedValue": null,
                  "name": "myRadioGroup",
                  "selectedValue": "one",
                  "setLastFocusedValue": [Function],
                  "setSelectedValue": [Function],
                }
              }
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#0891b2",
                  "borderRadius": 9999,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                  "paddingBottom": 4,
                  "paddingLeft": 4,
                  "paddingRight": 4,
                  "paddingTop": 4,
                }
              }
              value="one"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={12}
                bbWidth={12}
                color={4278751666}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#0891b2",
                      "height": 12,
                      "opacity": 1,
                      "width": 12,
                    },
                    Object {
                      "flex": 0,
                      "height": 12,
                      "width": 12,
                    },
                  ]
                }
                tintColor={4278751666}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  opacity={1}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M0 12C-2.34822e-08 13.5759 0.310389 15.1363 0.913445 16.5922C1.5165 18.0481 2.40042 19.371 3.51472 20.4853C4.62902 21.5996 5.95189 22.4835 7.4078 23.0866C8.86371 23.6896 10.4241 24 12 24C13.5759 24 15.1363 23.6896 16.5922 23.0866C18.0481 22.4835 19.371 21.5996 20.4853 20.4853C21.5996 19.371 22.4835 18.0481 23.0866 16.5922C23.6896 15.1363 24 13.5759 24 12C24 10.4241 23.6896 8.86371 23.0866 7.4078C22.4835 5.95189 21.5996 4.62902 20.4853 3.51472C19.371 2.40042 18.0481 1.5165 16.5922 0.913446C15.1363 0.310389 13.5759 0 12 0C10.4241 0 8.86371 0.310389 7.4078 0.913446C5.95189 1.5165 4.62902 2.40042 3.51472 3.51472C2.40042 4.62902 1.5165 5.95189 0.913445 7.4078C0.310389 8.86371 -2.34822e-08 10.4241 0 12Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 8,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "textDecorationLine": undefined,
              }
            }
          >
            One
          </Text>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={Object {}}
      />
      <View
        accessibilityRole="radio"
        accessibilityState={
          Object {
            "checked": false,
            "disabled": false,
          }
        }
        accessible={true}
        checked={false}
        dataSet={Object {}}
        focusable={true}
        formControlContext={Object {}}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        state={
          Object {
            "lastFocusedValue": null,
            "name": "myRadioGroup",
            "selectedValue": "one",
            "setLastFocusedValue": [Function],
            "setSelectedValue": [Function],
          }
        }
        style={Object {}}
        value="two"
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              colorScheme="primary"
              dataSet={Object {}}
              defaultIsChecked={false}
              formControlContext={Object {}}
              state={
                Object {
                  "lastFocusedValue": null,
                  "name": "myRadioGroup",
                  "selectedValue": "one",
                  "setLastFocusedValue": [Function],
                  "setSelectedValue": [Function],
                }
              }
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#a3a3a3",
                  "borderRadius": 9999,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                  "paddingBottom": 4,
                  "paddingLeft": 4,
                  "paddingRight": 4,
                  "paddingTop": 4,
                }
              }
              value="two"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={12}
                bbWidth={12}
                color={4285756275}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#737373",
                      "height": 12,
                      "opacity": 0,
                      "width": 12,
                    },
                    Object {
                      "flex": 0,
                      "height": 12,
                      "width": 12,
                    },
                  ]
                }
                tintColor={4285756275}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  opacity={0}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M0 12C-2.34822e-08 13.5759 0.310389 15.1363 0.913445 16.5922C1.5165 18.0481 2.40042 19.371 3.51472 20.4853C4.62902 21.5996 5.95189 22.4835 7.4078 23.0866C8.86371 23.6896 10.4241 24 12 24C13.5759 24 15.1363 23.6896 16.5922 23.0866C18.0481 22.4835 19.371 21.5996 20.4853 20.4853C21.5996 19.371 22.4835 18.0481 23.0866 16.5922C23.6896 15.1363 24 13.5759 24 12C24 10.4241 23.6896 8.86371 23.0866 7.4078C22.4835 5.95189 21.5996 4.62902 20.4853 3.51472C19.371 2.40042 18.0481 1.5165 16.5922 0.913446C15.1363 0.310389 13.5759 0 12 0C10.4241 0 8.86371 0.310389 7.4078 0.913446C5.95189 1.5165 4.62902 2.40042 3.51472 3.51472C2.40042 4.62902 1.5165 5.95189 0.913445 7.4078C0.310389 8.86371 -2.34822e-08 10.4241 0 12Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 8,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "textDecorationLine": undefined,
              }
            }
          >
            Two
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Radio Custom Color 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityLabel="favorite colorscheme"
      accessibilityRole="radiogroup"
      accessibilityState={
        Object {
          "disabled": undefined,
        }
      }
      dataSet={Object {}}
      defaultValue="1"
      name="exampleGroup"
      style={
        Object {
          "alignItems": "flex-start",
        }
      }
    >
      <View
        accessibilityRole="radio"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": false,
          }
        }
        accessible={true}
        checked={true}
        colorScheme="emerald"
        dataSet={Object {}}
        focusable={true}
        formControlContext={Object {}}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        state={
          Object {
            "lastFocusedValue": null,
            "name": "exampleGroup",
            "selectedValue": "1",
            "setLastFocusedValue": [Function],
            "setSelectedValue": [Function],
          }
        }
        style={Object {}}
        value="1"
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              colorScheme="emerald"
              dataSet={Object {}}
              defaultIsChecked={false}
              formControlContext={Object {}}
              state={
                Object {
                  "lastFocusedValue": null,
                  "name": "exampleGroup",
                  "selectedValue": "1",
                  "setLastFocusedValue": [Function],
                  "setSelectedValue": [Function],
                }
              }
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#059669",
                  "borderRadius": 9999,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                  "paddingBottom": 4,
                  "paddingLeft": 4,
                  "paddingRight": 4,
                  "paddingTop": 4,
                }
              }
              value="1"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={12}
                bbWidth={12}
                color={4278556265}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#059669",
                      "height": 12,
                      "opacity": 1,
                      "width": 12,
                    },
                    Object {
                      "flex": 0,
                      "height": 12,
                      "width": 12,
                    },
                  ]
                }
                tintColor={4278556265}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  opacity={1}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M0 12C-2.34822e-08 13.5759 0.310389 15.1363 0.913445 16.5922C1.5165 18.0481 2.40042 19.371 3.51472 20.4853C4.62902 21.5996 5.95189 22.4835 7.4078 23.0866C8.86371 23.6896 10.4241 24 12 24C13.5759 24 15.1363 23.6896 16.5922 23.0866C18.0481 22.4835 19.371 21.5996 20.4853 20.4853C21.5996 19.371 22.4835 18.0481 23.0866 16.5922C23.6896 15.1363 24 13.5759 24 12C24 10.4241 23.6896 8.86371 23.0866 7.4078C22.4835 5.95189 21.5996 4.62902 20.4853 3.51472C19.371 2.40042 18.0481 1.5165 16.5922 0.913446C15.1363 0.310389 13.5759 0 12 0C10.4241 0 8.86371 0.310389 7.4078 0.913446C5.95189 1.5165 4.62902 2.40042 3.51472 3.51472C2.40042 4.62902 1.5165 5.95189 0.913445 7.4078C0.310389 8.86371 -2.34822e-08 10.4241 0 12Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 8,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "textDecorationLine": undefined,
              }
            }
          >
            emerald
          </Text>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={Object {}}
      />
      <View
        accessibilityRole="radio"
        accessibilityState={
          Object {
            "checked": false,
            "disabled": false,
          }
        }
        accessible={true}
        checked={false}
        colorScheme="secondary"
        dataSet={Object {}}
        focusable={true}
        formControlContext={Object {}}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        state={
          Object {
            "lastFocusedValue": null,
            "name": "exampleGroup",
            "selectedValue": "1",
            "setLastFocusedValue": [Function],
            "setSelectedValue": [Function],
          }
        }
        style={Object {}}
        value="2"
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              colorScheme="secondary"
              dataSet={Object {}}
              defaultIsChecked={false}
              formControlContext={Object {}}
              state={
                Object {
                  "lastFocusedValue": null,
                  "name": "exampleGroup",
                  "selectedValue": "1",
                  "setLastFocusedValue": [Function],
                  "setSelectedValue": [Function],
                }
              }
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#a3a3a3",
                  "borderRadius": 9999,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                  "paddingBottom": 4,
                  "paddingLeft": 4,
                  "paddingRight": 4,
                  "paddingTop": 4,
                }
              }
              value="2"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={12}
                bbWidth={12}
                color={4285756275}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#737373",
                      "height": 12,
                      "opacity": 0,
                      "width": 12,
                    },
                    Object {
                      "flex": 0,
                      "height": 12,
                      "width": 12,
                    },
                  ]
                }
                tintColor={4285756275}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  opacity={0}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M0 12C-2.34822e-08 13.5759 0.310389 15.1363 0.913445 16.5922C1.5165 18.0481 2.40042 19.371 3.51472 20.4853C4.62902 21.5996 5.95189 22.4835 7.4078 23.0866C8.86371 23.6896 10.4241 24 12 24C13.5759 24 15.1363 23.6896 16.5922 23.0866C18.0481 22.4835 19.371 21.5996 20.4853 20.4853C21.5996 19.371 22.4835 18.0481 23.0866 16.5922C23.6896 15.1363 24 13.5759 24 12C24 10.4241 23.6896 8.86371 23.0866 7.4078C22.4835 5.95189 21.5996 4.62902 20.4853 3.51472C19.371 2.40042 18.0481 1.5165 16.5922 0.913446C15.1363 0.310389 13.5759 0 12 0C10.4241 0 8.86371 0.310389 7.4078 0.913446C5.95189 1.5165 4.62902 2.40042 3.51472 3.51472C2.40042 4.62902 1.5165 5.95189 0.913445 7.4078C0.310389 8.86371 -2.34822e-08 10.4241 0 12Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 8,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "textDecorationLine": undefined,
              }
            }
          >
            secondary
          </Text>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={Object {}}
      />
      <View
        accessibilityRole="radio"
        accessibilityState={
          Object {
            "checked": false,
            "disabled": false,
          }
        }
        accessible={true}
        checked={false}
        colorScheme="warning"
        dataSet={Object {}}
        focusable={true}
        formControlContext={Object {}}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        state={
          Object {
            "lastFocusedValue": null,
            "name": "exampleGroup",
            "selectedValue": "1",
            "setLastFocusedValue": [Function],
            "setSelectedValue": [Function],
          }
        }
        style={Object {}}
        value="3"
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              colorScheme="warning"
              dataSet={Object {}}
              defaultIsChecked={false}
              formControlContext={Object {}}
              state={
                Object {
                  "lastFocusedValue": null,
                  "name": "exampleGroup",
                  "selectedValue": "1",
                  "setLastFocusedValue": [Function],
                  "setSelectedValue": [Function],
                }
              }
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#a3a3a3",
                  "borderRadius": 9999,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                  "paddingBottom": 4,
                  "paddingLeft": 4,
                  "paddingRight": 4,
                  "paddingTop": 4,
                }
              }
              value="3"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={12}
                bbWidth={12}
                color={4285756275}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#737373",
                      "height": 12,
                      "opacity": 0,
                      "width": 12,
                    },
                    Object {
                      "flex": 0,
                      "height": 12,
                      "width": 12,
                    },
                  ]
                }
                tintColor={4285756275}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  opacity={0}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M0 12C-2.34822e-08 13.5759 0.310389 15.1363 0.913445 16.5922C1.5165 18.0481 2.40042 19.371 3.51472 20.4853C4.62902 21.5996 5.95189 22.4835 7.4078 23.0866C8.86371 23.6896 10.4241 24 12 24C13.5759 24 15.1363 23.6896 16.5922 23.0866C18.0481 22.4835 19.371 21.5996 20.4853 20.4853C21.5996 19.371 22.4835 18.0481 23.0866 16.5922C23.6896 15.1363 24 13.5759 24 12C24 10.4241 23.6896 8.86371 23.0866 7.4078C22.4835 5.95189 21.5996 4.62902 20.4853 3.51472C19.371 2.40042 18.0481 1.5165 16.5922 0.913446C15.1363 0.310389 13.5759 0 12 0C10.4241 0 8.86371 0.310389 7.4078 0.913446C5.95189 1.5165 4.62902 2.40042 3.51472 3.51472C2.40042 4.62902 1.5165 5.95189 0.913445 7.4078C0.310389 8.86371 -2.34822e-08 10.4241 0 12Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 8,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "textDecorationLine": undefined,
              }
            }
          >
            warning
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Radio Custom Icon 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityLabel="pick a choice"
      accessibilityRole="radiogroup"
      accessibilityState={
        Object {
          "disabled": undefined,
        }
      }
      dataSet={Object {}}
      defaultValue="1"
      name="exampleGroup"
      style={
        Object {
          "alignItems": "flex-start",
        }
      }
    >
      <View
        accessibilityRole="radio"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": false,
          }
        }
        accessible={true}
        checked={true}
        colorScheme="green"
        dataSet={Object {}}
        focusable={true}
        formControlContext={Object {}}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        state={
          Object {
            "lastFocusedValue": null,
            "name": "exampleGroup",
            "selectedValue": "1",
            "setLastFocusedValue": [Function],
            "setSelectedValue": [Function],
          }
        }
        style={Object {}}
        value="1"
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              colorScheme="green"
              dataSet={Object {}}
              defaultIsChecked={false}
              formControlContext={Object {}}
              state={
                Object {
                  "lastFocusedValue": null,
                  "name": "exampleGroup",
                  "selectedValue": "1",
                  "setLastFocusedValue": [Function],
                  "setSelectedValue": [Function],
                }
              }
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#16a34a",
                  "borderRadius": 9999,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                  "paddingBottom": 4,
                  "paddingLeft": 4,
                  "paddingRight": 4,
                  "paddingTop": 4,
                }
              }
              value="1"
            >
              <Text
                allowFontScaling={false}
                dataSet={Object {}}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Object {
                      "color": "#16a34a",
                      "fontSize": 12,
                      "height": 12,
                      "lineHeight": 12,
                      "width": 12,
                    },
                    Object {
                      "fontFamily": "material-community",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                󰢚
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 8,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "marginLeft": 8,
                "marginRight": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            Alien
          </Text>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={Object {}}
      />
      <View
        accessibilityRole="radio"
        accessibilityState={
          Object {
            "checked": false,
            "disabled": false,
          }
        }
        accessible={true}
        checked={false}
        colorScheme="red"
        dataSet={Object {}}
        focusable={true}
        formControlContext={Object {}}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        state={
          Object {
            "lastFocusedValue": null,
            "name": "exampleGroup",
            "selectedValue": "1",
            "setLastFocusedValue": [Function],
            "setSelectedValue": [Function],
          }
        }
        style={Object {}}
        value="2"
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              colorScheme="red"
              dataSet={Object {}}
              defaultIsChecked={false}
              formControlContext={Object {}}
              state={
                Object {
                  "lastFocusedValue": null,
                  "name": "exampleGroup",
                  "selectedValue": "1",
                  "setLastFocusedValue": [Function],
                  "setSelectedValue": [Function],
                }
              }
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#a3a3a3",
                  "borderRadius": 9999,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                  "paddingBottom": 4,
                  "paddingLeft": 4,
                  "paddingRight": 4,
                  "paddingTop": 4,
                }
              }
              value="2"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={12}
                bbWidth={12}
                color={4285756275}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#737373",
                      "height": 12,
                      "opacity": 0,
                      "width": 12,
                    },
                    Object {
                      "flex": 0,
                      "height": 12,
                      "width": 12,
                    },
                  ]
                }
                tintColor={4285756275}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  opacity={0}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M0 12C-2.34822e-08 13.5759 0.310389 15.1363 0.913445 16.5922C1.5165 18.0481 2.40042 19.371 3.51472 20.4853C4.62902 21.5996 5.95189 22.4835 7.4078 23.0866C8.86371 23.6896 10.4241 24 12 24C13.5759 24 15.1363 23.6896 16.5922 23.0866C18.0481 22.4835 19.371 21.5996 20.4853 20.4853C21.5996 19.371 22.4835 18.0481 23.0866 16.5922C23.6896 15.1363 24 13.5759 24 12C24 10.4241 23.6896 8.86371 23.0866 7.4078C22.4835 5.95189 21.5996 4.62902 20.4853 3.51472C19.371 2.40042 18.0481 1.5165 16.5922 0.913446C15.1363 0.310389 13.5759 0 12 0C10.4241 0 8.86371 0.310389 7.4078 0.913446C5.95189 1.5165 4.62902 2.40042 3.51472 3.51472C2.40042 4.62902 1.5165 5.95189 0.913445 7.4078C0.310389 8.86371 -2.34822e-08 10.4241 0 12Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 8,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "marginLeft": 8,
                "marginRight": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            Fire
          </Text>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={Object {}}
      />
      <View
        accessibilityRole="radio"
        accessibilityState={
          Object {
            "checked": false,
            "disabled": false,
          }
        }
        accessible={true}
        checked={false}
        colorScheme="warning"
        dataSet={Object {}}
        focusable={true}
        formControlContext={Object {}}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        state={
          Object {
            "lastFocusedValue": null,
            "name": "exampleGroup",
            "selectedValue": "1",
            "setLastFocusedValue": [Function],
            "setSelectedValue": [Function],
          }
        }
        style={Object {}}
        value="3"
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              colorScheme="warning"
              dataSet={Object {}}
              defaultIsChecked={false}
              formControlContext={Object {}}
              state={
                Object {
                  "lastFocusedValue": null,
                  "name": "exampleGroup",
                  "selectedValue": "1",
                  "setLastFocusedValue": [Function],
                  "setSelectedValue": [Function],
                }
              }
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#a3a3a3",
                  "borderRadius": 9999,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                  "paddingBottom": 4,
                  "paddingLeft": 4,
                  "paddingRight": 4,
                  "paddingTop": 4,
                }
              }
              value="3"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={12}
                bbWidth={12}
                color={4285756275}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#737373",
                      "height": 12,
                      "opacity": 0,
                      "width": 12,
                    },
                    Object {
                      "flex": 0,
                      "height": 12,
                      "width": 12,
                    },
                  ]
                }
                tintColor={4285756275}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  opacity={0}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M0 12C-2.34822e-08 13.5759 0.310389 15.1363 0.913445 16.5922C1.5165 18.0481 2.40042 19.371 3.51472 20.4853C4.62902 21.5996 5.95189 22.4835 7.4078 23.0866C8.86371 23.6896 10.4241 24 12 24C13.5759 24 15.1363 23.6896 16.5922 23.0866C18.0481 22.4835 19.371 21.5996 20.4853 20.4853C21.5996 19.371 22.4835 18.0481 23.0866 16.5922C23.6896 15.1363 24 13.5759 24 12C24 10.4241 23.6896 8.86371 23.0866 7.4078C22.4835 5.95189 21.5996 4.62902 20.4853 3.51472C19.371 2.40042 18.0481 1.5165 16.5922 0.913446C15.1363 0.310389 13.5759 0 12 0C10.4241 0 8.86371 0.310389 7.4078 0.913446C5.95189 1.5165 4.62902 2.40042 3.51472 3.51472C2.40042 4.62902 1.5165 5.95189 0.913445 7.4078C0.310389 8.86371 -2.34822e-08 10.4241 0 12Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 8,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "marginLeft": 8,
                "marginRight": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            Warning
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Radio Disabled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityLabel="select prize"
      accessibilityRole="radiogroup"
      accessibilityState={
        Object {
          "disabled": undefined,
        }
      }
      dataSet={Object {}}
      defaultValue="2"
      name="exampleGroup"
      style={
        Object {
          "alignItems": "flex-start",
        }
      }
    >
      <View
        accessibilityRole="radio"
        accessibilityState={
          Object {
            "checked": false,
            "disabled": true,
          }
        }
        accessible={true}
        checked={false}
        dataSet={Object {}}
        focusable={true}
        formControlContext={Object {}}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        state={
          Object {
            "lastFocusedValue": null,
            "name": "exampleGroup",
            "selectedValue": "2",
            "setLastFocusedValue": [Function],
            "setSelectedValue": [Function],
          }
        }
        style={Object {}}
        value="1"
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "opacity": 0.6,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              colorScheme="primary"
              dataSet={Object {}}
              defaultIsChecked={false}
              formControlContext={Object {}}
              isDisabled={true}
              state={
                Object {
                  "lastFocusedValue": null,
                  "name": "exampleGroup",
                  "selectedValue": "2",
                  "setLastFocusedValue": [Function],
                  "setSelectedValue": [Function],
                }
              }
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#a3a3a3",
                  "borderRadius": 9999,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                  "opacity": 0.6,
                  "paddingBottom": 4,
                  "paddingLeft": 4,
                  "paddingRight": 4,
                  "paddingTop": 4,
                }
              }
              value="1"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={12}
                bbWidth={12}
                color={4285756275}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#737373",
                      "height": 12,
                      "opacity": 0,
                      "width": 12,
                    },
                    Object {
                      "flex": 0,
                      "height": 12,
                      "width": 12,
                    },
                  ]
                }
                tintColor={4285756275}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  opacity={0}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M0 12C-2.34822e-08 13.5759 0.310389 15.1363 0.913445 16.5922C1.5165 18.0481 2.40042 19.371 3.51472 20.4853C4.62902 21.5996 5.95189 22.4835 7.4078 23.0866C8.86371 23.6896 10.4241 24 12 24C13.5759 24 15.1363 23.6896 16.5922 23.0866C18.0481 22.4835 19.371 21.5996 20.4853 20.4853C21.5996 19.371 22.4835 18.0481 23.0866 16.5922C23.6896 15.1363 24 13.5759 24 12C24 10.4241 23.6896 8.86371 23.0866 7.4078C22.4835 5.95189 21.5996 4.62902 20.4853 3.51472C19.371 2.40042 18.0481 1.5165 16.5922 0.913446C15.1363 0.310389 13.5759 0 12 0C10.4241 0 8.86371 0.310389 7.4078 0.913446C5.95189 1.5165 4.62902 2.40042 3.51472 3.51472C2.40042 4.62902 1.5165 5.95189 0.913445 7.4078C0.310389 8.86371 -2.34822e-08 10.4241 0 12Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 8,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "textDecorationLine": undefined,
              }
            }
          >
            First
          </Text>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={Object {}}
      />
      <View
        accessibilityRole="radio"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": false,
          }
        }
        accessible={true}
        checked={true}
        dataSet={Object {}}
        focusable={true}
        formControlContext={Object {}}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        state={
          Object {
            "lastFocusedValue": null,
            "name": "exampleGroup",
            "selectedValue": "2",
            "setLastFocusedValue": [Function],
            "setSelectedValue": [Function],
          }
        }
        style={Object {}}
        value="2"
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              colorScheme="primary"
              dataSet={Object {}}
              defaultIsChecked={false}
              formControlContext={Object {}}
              state={
                Object {
                  "lastFocusedValue": null,
                  "name": "exampleGroup",
                  "selectedValue": "2",
                  "setLastFocusedValue": [Function],
                  "setSelectedValue": [Function],
                }
              }
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#0891b2",
                  "borderRadius": 9999,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                  "paddingBottom": 4,
                  "paddingLeft": 4,
                  "paddingRight": 4,
                  "paddingTop": 4,
                }
              }
              value="2"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={12}
                bbWidth={12}
                color={4278751666}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#0891b2",
                      "height": 12,
                      "opacity": 1,
                      "width": 12,
                    },
                    Object {
                      "flex": 0,
                      "height": 12,
                      "width": 12,
                    },
                  ]
                }
                tintColor={4278751666}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  opacity={1}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M0 12C-2.34822e-08 13.5759 0.310389 15.1363 0.913445 16.5922C1.5165 18.0481 2.40042 19.371 3.51472 20.4853C4.62902 21.5996 5.95189 22.4835 7.4078 23.0866C8.86371 23.6896 10.4241 24 12 24C13.5759 24 15.1363 23.6896 16.5922 23.0866C18.0481 22.4835 19.371 21.5996 20.4853 20.4853C21.5996 19.371 22.4835 18.0481 23.0866 16.5922C23.6896 15.1363 24 13.5759 24 12C24 10.4241 23.6896 8.86371 23.0866 7.4078C22.4835 5.95189 21.5996 4.62902 20.4853 3.51472C19.371 2.40042 18.0481 1.5165 16.5922 0.913446C15.1363 0.310389 13.5759 0 12 0C10.4241 0 8.86371 0.310389 7.4078 0.913446C5.95189 1.5165 4.62902 2.40042 3.51472 3.51472C2.40042 4.62902 1.5165 5.95189 0.913445 7.4078C0.310389 8.86371 -2.34822e-08 10.4241 0 12Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 8,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "textDecorationLine": undefined,
              }
            }
          >
            Second
          </Text>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={Object {}}
      />
      <View
        accessibilityRole="radio"
        accessibilityState={
          Object {
            "checked": false,
            "disabled": false,
          }
        }
        accessible={true}
        checked={false}
        dataSet={Object {}}
        focusable={true}
        formControlContext={Object {}}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        state={
          Object {
            "lastFocusedValue": null,
            "name": "exampleGroup",
            "selectedValue": "2",
            "setLastFocusedValue": [Function],
            "setSelectedValue": [Function],
          }
        }
        style={Object {}}
        value="3"
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              colorScheme="primary"
              dataSet={Object {}}
              defaultIsChecked={false}
              formControlContext={Object {}}
              state={
                Object {
                  "lastFocusedValue": null,
                  "name": "exampleGroup",
                  "selectedValue": "2",
                  "setLastFocusedValue": [Function],
                  "setSelectedValue": [Function],
                }
              }
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#a3a3a3",
                  "borderRadius": 9999,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                  "paddingBottom": 4,
                  "paddingLeft": 4,
                  "paddingRight": 4,
                  "paddingTop": 4,
                }
              }
              value="3"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={12}
                bbWidth={12}
                color={4285756275}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#737373",
                      "height": 12,
                      "opacity": 0,
                      "width": 12,
                    },
                    Object {
                      "flex": 0,
                      "height": 12,
                      "width": 12,
                    },
                  ]
                }
                tintColor={4285756275}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  opacity={0}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M0 12C-2.34822e-08 13.5759 0.310389 15.1363 0.913445 16.5922C1.5165 18.0481 2.40042 19.371 3.51472 20.4853C4.62902 21.5996 5.95189 22.4835 7.4078 23.0866C8.86371 23.6896 10.4241 24 12 24C13.5759 24 15.1363 23.6896 16.5922 23.0866C18.0481 22.4835 19.371 21.5996 20.4853 20.4853C21.5996 19.371 22.4835 18.0481 23.0866 16.5922C23.6896 15.1363 24 13.5759 24 12C24 10.4241 23.6896 8.86371 23.0866 7.4078C22.4835 5.95189 21.5996 4.62902 20.4853 3.51472C19.371 2.40042 18.0481 1.5165 16.5922 0.913446C15.1363 0.310389 13.5759 0 12 0C10.4241 0 8.86371 0.310389 7.4078 0.913446C5.95189 1.5165 4.62902 2.40042 3.51472 3.51472C2.40042 4.62902 1.5165 5.95189 0.913445 7.4078C0.310389 8.86371 -2.34822e-08 10.4241 0 12Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 8,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "textDecorationLine": undefined,
              }
            }
          >
            Third
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Radio Form Controlled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "flex-start",
          "maxWidth": "80%",
        }
      }
    >
      <View
        dataSet={Object {}}
        isInvalid={true}
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <View
          dataSet={Object {}}
          feedbackId="field-react-aria-0-2-feedback"
          hasFeedbackText={false}
          hasHelpText={false}
          helpTextId="field-react-aria-0-2-helptext"
          isDisabled={false}
          isInvalid={true}
          isReadOnly={false}
          isRequired={false}
          labelId="field-react-aria-0-2-label"
          nativeID="field-react-aria-0-2-label"
          setHasFeedbackText={[Function]}
          setHasHelpText={[Function]}
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "marginBottom": 4,
              "marginTop": 4,
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#737373",
                "fontFamily": undefined,
                "fontSize": 18,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 27,
                "textDecorationLine": undefined,
              }
            }
          >
            Select Prize
          </Text>
        </View>
        <View
          accessibilityLabel="select prize"
          accessibilityRole="radiogroup"
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          dataSet={Object {}}
          defaultValue="1"
          name="exampleGroup"
          onChange={[Function]}
          style={
            Object {
              "alignItems": "flex-start",
            }
          }
        >
          <View
            accessibilityRole="radio"
            accessibilityState={
              Object {
                "checked": true,
                "disabled": false,
              }
            }
            accessible={true}
            checked={true}
            dataSet={Object {}}
            feedbackId="field-react-aria-0-2-feedback"
            focusable={true}
            formControlContext={
              Object {
                "feedbackId": "field-react-aria-0-2-feedback",
                "hasFeedbackText": false,
                "hasHelpText": false,
                "helpTextId": "field-react-aria-0-2-helptext",
                "isDisabled": false,
                "isInvalid": true,
                "isReadOnly": false,
                "isRequired": false,
                "labelId": "field-react-aria-0-2-label",
                "nativeID": "field-react-aria-0-2",
                "setHasFeedbackText": [Function],
                "setHasHelpText": [Function],
              }
            }
            hasFeedbackText={false}
            hasHelpText={false}
            helpTextId="field-react-aria-0-2-helptext"
            isInvalid={true}
            isReadOnly={false}
            isRequired={false}
            labelId="field-react-aria-0-2-label"
            nativeID="field-react-aria-0-2"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            setHasFeedbackText={[Function]}
            setHasHelpText={[Function]}
            state={
              Object {
                "lastFocusedValue": null,
                "name": "exampleGroup",
                "selectedValue": "1",
                "setLastFocusedValue": [Function],
                "setSelectedValue": [Function],
              }
            }
            style={Object {}}
            value="1"
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                />
                <View
                  colorScheme="primary"
                  dataSet={Object {}}
                  defaultIsChecked={false}
                  feedbackId="field-react-aria-0-2-feedback"
                  formControlContext={
                    Object {
                      "feedbackId": "field-react-aria-0-2-feedback",
                      "hasFeedbackText": false,
                      "hasHelpText": false,
                      "helpTextId": "field-react-aria-0-2-helptext",
                      "isDisabled": false,
                      "isInvalid": true,
                      "isReadOnly": false,
                      "isRequired": false,
                      "labelId": "field-react-aria-0-2-label",
                      "nativeID": "field-react-aria-0-2",
                      "setHasFeedbackText": [Function],
                      "setHasHelpText": [Function],
                    }
                  }
                  hasFeedbackText={false}
                  hasHelpText={false}
                  helpTextId="field-react-aria-0-2-helptext"
                  isDisabled={false}
                  isInvalid={true}
                  isReadOnly={false}
                  isRequired={false}
                  labelId="field-react-aria-0-2-label"
                  nativeID="field-react-aria-0-2"
                  setHasFeedbackText={[Function]}
                  setHasHelpText={[Function]}
                  state={
                    Object {
                      "lastFocusedValue": null,
                      "name": "exampleGroup",
                      "selectedValue": "1",
                      "setLastFocusedValue": [Function],
                      "setSelectedValue": [Function],
                    }
                  }
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#dc2626",
                      "borderRadius": 9999,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "marginBottom": 4,
                      "marginTop": 4,
                      "paddingBottom": 4,
                      "paddingLeft": 4,
                      "paddingRight": 4,
                      "paddingTop": 4,
                    }
                  }
                  value="1"
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={12}
                    bbWidth={12}
                    color={4278751666}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#0891b2",
                          "height": 12,
                          "opacity": 1,
                          "width": 12,
                        },
                        Object {
                          "flex": 0,
                          "height": 12,
                          "width": 12,
                        },
                      ]
                    }
                    tintColor={4278751666}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      opacity={1}
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M0 12C-2.34822e-08 13.5759 0.310389 15.1363 0.913445 16.5922C1.5165 18.0481 2.40042 19.371 3.51472 20.4853C4.62902 21.5996 5.95189 22.4835 7.4078 23.0866C8.86371 23.6896 10.4241 24 12 24C13.5759 24 15.1363 23.6896 16.5922 23.0866C18.0481 22.4835 19.371 21.5996 20.4853 20.4853C21.5996 19.371 22.4835 18.0481 23.0866 16.5922C23.6896 15.1363 24 13.5759 24 12C24 10.4241 23.6896 8.86371 23.0866 7.4078C22.4835 5.95189 21.5996 4.62902 20.4853 3.51472C19.371 2.40042 18.0481 1.5165 16.5922 0.913446C15.1363 0.310389 13.5759 0 12 0C10.4241 0 8.86371 0.310389 7.4078 0.913446C5.95189 1.5165 4.62902 2.40042 3.51472 3.51472C2.40042 4.62902 1.5165 5.95189 0.913445 7.4078C0.310389 8.86371 -2.34822e-08 10.4241 0 12Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "textDecorationLine": undefined,
                  }
                }
              >
                First
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={Object {}}
          />
          <View
            accessibilityRole="radio"
            accessibilityState={
              Object {
                "checked": false,
                "disabled": false,
              }
            }
            accessible={true}
            checked={false}
            dataSet={Object {}}
            feedbackId="field-react-aria-0-2-feedback"
            focusable={true}
            formControlContext={
              Object {
                "feedbackId": "field-react-aria-0-2-feedback",
                "hasFeedbackText": false,
                "hasHelpText": false,
                "helpTextId": "field-react-aria-0-2-helptext",
                "isDisabled": false,
                "isInvalid": true,
                "isReadOnly": false,
                "isRequired": false,
                "labelId": "field-react-aria-0-2-label",
                "nativeID": "field-react-aria-0-2",
                "setHasFeedbackText": [Function],
                "setHasHelpText": [Function],
              }
            }
            hasFeedbackText={false}
            hasHelpText={false}
            helpTextId="field-react-aria-0-2-helptext"
            isInvalid={true}
            isReadOnly={false}
            isRequired={false}
            labelId="field-react-aria-0-2-label"
            nativeID="field-react-aria-0-2"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            setHasFeedbackText={[Function]}
            setHasHelpText={[Function]}
            state={
              Object {
                "lastFocusedValue": null,
                "name": "exampleGroup",
                "selectedValue": "1",
                "setLastFocusedValue": [Function],
                "setSelectedValue": [Function],
              }
            }
            style={Object {}}
            value="2"
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                />
                <View
                  colorScheme="primary"
                  dataSet={Object {}}
                  defaultIsChecked={false}
                  feedbackId="field-react-aria-0-2-feedback"
                  formControlContext={
                    Object {
                      "feedbackId": "field-react-aria-0-2-feedback",
                      "hasFeedbackText": false,
                      "hasHelpText": false,
                      "helpTextId": "field-react-aria-0-2-helptext",
                      "isDisabled": false,
                      "isInvalid": true,
                      "isReadOnly": false,
                      "isRequired": false,
                      "labelId": "field-react-aria-0-2-label",
                      "nativeID": "field-react-aria-0-2",
                      "setHasFeedbackText": [Function],
                      "setHasHelpText": [Function],
                    }
                  }
                  hasFeedbackText={false}
                  hasHelpText={false}
                  helpTextId="field-react-aria-0-2-helptext"
                  isDisabled={false}
                  isInvalid={true}
                  isReadOnly={false}
                  isRequired={false}
                  labelId="field-react-aria-0-2-label"
                  nativeID="field-react-aria-0-2"
                  setHasFeedbackText={[Function]}
                  setHasHelpText={[Function]}
                  state={
                    Object {
                      "lastFocusedValue": null,
                      "name": "exampleGroup",
                      "selectedValue": "1",
                      "setLastFocusedValue": [Function],
                      "setSelectedValue": [Function],
                    }
                  }
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#dc2626",
                      "borderRadius": 9999,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "marginBottom": 4,
                      "marginTop": 4,
                      "paddingBottom": 4,
                      "paddingLeft": 4,
                      "paddingRight": 4,
                      "paddingTop": 4,
                    }
                  }
                  value="2"
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={12}
                    bbWidth={12}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 12,
                          "opacity": 0,
                          "width": 12,
                        },
                        Object {
                          "flex": 0,
                          "height": 12,
                          "width": 12,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      opacity={0}
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M0 12C-2.34822e-08 13.5759 0.310389 15.1363 0.913445 16.5922C1.5165 18.0481 2.40042 19.371 3.51472 20.4853C4.62902 21.5996 5.95189 22.4835 7.4078 23.0866C8.86371 23.6896 10.4241 24 12 24C13.5759 24 15.1363 23.6896 16.5922 23.0866C18.0481 22.4835 19.371 21.5996 20.4853 20.4853C21.5996 19.371 22.4835 18.0481 23.0866 16.5922C23.6896 15.1363 24 13.5759 24 12C24 10.4241 23.6896 8.86371 23.0866 7.4078C22.4835 5.95189 21.5996 4.62902 20.4853 3.51472C19.371 2.40042 18.0481 1.5165 16.5922 0.913446C15.1363 0.310389 13.5759 0 12 0C10.4241 0 8.86371 0.310389 7.4078 0.913446C5.95189 1.5165 4.62902 2.40042 3.51472 3.51472C2.40042 4.62902 1.5165 5.95189 0.913445 7.4078C0.310389 8.86371 -2.34822e-08 10.4241 0 12Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Second
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={Object {}}
          />
          <View
            accessibilityRole="radio"
            accessibilityState={
              Object {
                "checked": false,
                "disabled": false,
              }
            }
            accessible={true}
            checked={false}
            dataSet={Object {}}
            feedbackId="field-react-aria-0-2-feedback"
            focusable={true}
            formControlContext={
              Object {
                "feedbackId": "field-react-aria-0-2-feedback",
                "hasFeedbackText": false,
                "hasHelpText": false,
                "helpTextId": "field-react-aria-0-2-helptext",
                "isDisabled": false,
                "isInvalid": true,
                "isReadOnly": false,
                "isRequired": false,
                "labelId": "field-react-aria-0-2-label",
                "nativeID": "field-react-aria-0-2",
                "setHasFeedbackText": [Function],
                "setHasHelpText": [Function],
              }
            }
            hasFeedbackText={false}
            hasHelpText={false}
            helpTextId="field-react-aria-0-2-helptext"
            isInvalid={true}
            isReadOnly={false}
            isRequired={false}
            labelId="field-react-aria-0-2-label"
            nativeID="field-react-aria-0-2"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            setHasFeedbackText={[Function]}
            setHasHelpText={[Function]}
            state={
              Object {
                "lastFocusedValue": null,
                "name": "exampleGroup",
                "selectedValue": "1",
                "setLastFocusedValue": [Function],
                "setSelectedValue": [Function],
              }
            }
            style={Object {}}
            value="3"
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                />
                <View
                  colorScheme="primary"
                  dataSet={Object {}}
                  defaultIsChecked={false}
                  feedbackId="field-react-aria-0-2-feedback"
                  formControlContext={
                    Object {
                      "feedbackId": "field-react-aria-0-2-feedback",
                      "hasFeedbackText": false,
                      "hasHelpText": false,
                      "helpTextId": "field-react-aria-0-2-helptext",
                      "isDisabled": false,
                      "isInvalid": true,
                      "isReadOnly": false,
                      "isRequired": false,
                      "labelId": "field-react-aria-0-2-label",
                      "nativeID": "field-react-aria-0-2",
                      "setHasFeedbackText": [Function],
                      "setHasHelpText": [Function],
                    }
                  }
                  hasFeedbackText={false}
                  hasHelpText={false}
                  helpTextId="field-react-aria-0-2-helptext"
                  isDisabled={false}
                  isInvalid={true}
                  isReadOnly={false}
                  isRequired={false}
                  labelId="field-react-aria-0-2-label"
                  nativeID="field-react-aria-0-2"
                  setHasFeedbackText={[Function]}
                  setHasHelpText={[Function]}
                  state={
                    Object {
                      "lastFocusedValue": null,
                      "name": "exampleGroup",
                      "selectedValue": "1",
                      "setLastFocusedValue": [Function],
                      "setSelectedValue": [Function],
                    }
                  }
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#dc2626",
                      "borderRadius": 9999,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "marginBottom": 4,
                      "marginTop": 4,
                      "paddingBottom": 4,
                      "paddingLeft": 4,
                      "paddingRight": 4,
                      "paddingTop": 4,
                    }
                  }
                  value="3"
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={12}
                    bbWidth={12}
                    color={4285756275}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#737373",
                          "height": 12,
                          "opacity": 0,
                          "width": 12,
                        },
                        Object {
                          "flex": 0,
                          "height": 12,
                          "width": 12,
                        },
                      ]
                    }
                    tintColor={4285756275}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      opacity={0}
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M0 12C-2.34822e-08 13.5759 0.310389 15.1363 0.913445 16.5922C1.5165 18.0481 2.40042 19.371 3.51472 20.4853C4.62902 21.5996 5.95189 22.4835 7.4078 23.0866C8.86371 23.6896 10.4241 24 12 24C13.5759 24 15.1363 23.6896 16.5922 23.0866C18.0481 22.4835 19.371 21.5996 20.4853 20.4853C21.5996 19.371 22.4835 18.0481 23.0866 16.5922C23.6896 15.1363 24 13.5759 24 12C24 10.4241 23.6896 8.86371 23.0866 7.4078C22.4835 5.95189 21.5996 4.62902 20.4853 3.51472C19.371 2.40042 18.0481 1.5165 16.5922 0.913446C15.1363 0.310389 13.5759 0 12 0C10.4241 0 8.86371 0.310389 7.4078 0.913446C5.95189 1.5165 4.62902 2.40042 3.51472 3.51472C2.40042 4.62902 1.5165 5.95189 0.913445 7.4078C0.310389 8.86371 -2.34822e-08 10.4241 0 12Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Third
              </Text>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          feedbackId="field-react-aria-0-2-feedback"
          hasFeedbackText={false}
          hasHelpText={false}
          helpTextId="field-react-aria-0-2-helptext"
          isDisabled={false}
          isInvalid={true}
          isReadOnly={false}
          isRequired={false}
          labelId="field-react-aria-0-2-label"
          nativeID="field-react-aria-0-2"
          setHasFeedbackText={[Function]}
          setHasHelpText={[Function]}
          style={
            Object {
              "marginTop": 8,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <RNSVGSvgView
              accessibilityRole="image"
              align="xMidYMid"
              bbHeight={12}
              bbWidth={12}
              color={4292617766}
              dataSet={Object {}}
              focusable={false}
              meetOrSlice={0}
              minX={0}
              minY={0}
              stroke=""
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Object {
                    "color": "#dc2626",
                    "fontSize": 12,
                    "height": 12,
                    "width": 12,
                  },
                  Object {
                    "flex": 0,
                    "height": 12,
                    "width": 12,
                  },
                ]
              }
              tintColor={4292617766}
              vbHeight={16}
              vbWidth={16}
            >
              <RNSVGGroup
                font={
                  Object {
                    "fontSize": 12,
                  }
                }
                propList={
                  Array [
                    "stroke",
                  ]
                }
                stroke={null}
              >
                <RNSVGGroup>
                  <RNSVGPath
                    d="M8 16C6.41775 16 4.87103 15.5308 3.55544 14.6518C2.23985 13.7727 1.21447 12.5233 0.608967 11.0615C0.00346627 9.59966 -0.15496 7.99113 0.153721 6.43928C0.462403 4.88743 1.22433 3.46197 2.34315 2.34315C3.46197 1.22433 4.88743 0.462403 6.43928 0.153721C7.99113 -0.15496 9.59966 0.00346627 11.0615 0.608967C12.5233 1.21447 13.7727 2.23985 14.6518 3.55544C15.5308 4.87103 16 6.41775 16 8C16 10.1217 15.1571 12.1566 13.6569 13.6569C12.1566 15.1571 10.1217 16 8 16ZM8 14.4C9.2658 14.4 10.5032 14.0246 11.5556 13.3214C12.6081 12.6182 13.4284 11.6186 13.9128 10.4492C14.3972 9.27973 14.524 7.9929 14.277 6.75142C14.0301 5.50995 13.4205 4.36958 12.5255 3.47452C11.6304 2.57946 10.4901 1.96992 9.24858 1.72298C8.0071 1.47603 6.72028 1.60277 5.55083 2.08717C4.38138 2.57158 3.38184 3.39188 2.6786 4.44435C1.97536 5.49683 1.6 6.7342 1.6 8C1.6 9.69739 2.27429 11.3253 3.47452 12.5255C4.67475 13.7257 6.30262 14.4 8 14.4ZM7.2 10.4H8.8V12H7.2V10.4ZM7.2 4H8.8V8.8H7.2V4Z"
                    fill={
                      Array [
                        2,
                      ]
                    }
                    propList={
                      Array [
                        "fill",
                        "stroke",
                      ]
                    }
                    stroke={null}
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGSvgView>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 4,
                }
              }
            />
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#dc2626",
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 18,
                  "textDecorationLine": undefined,
                }
              }
            >
              You must select a Prize.
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Radio Invalid 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityLabel="select an option"
      accessibilityRole="radiogroup"
      accessibilityState={
        Object {
          "disabled": undefined,
        }
      }
      dataSet={Object {}}
      name="exampleGroup"
      style={
        Object {
          "alignItems": "flex-start",
        }
      }
    >
      <View
        accessibilityRole="radio"
        accessibilityState={
          Object {
            "checked": false,
            "disabled": false,
          }
        }
        accessible={true}
        checked={false}
        dataSet={Object {}}
        focusable={true}
        formControlContext={Object {}}
        isInvalid={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        state={
          Object {
            "lastFocusedValue": null,
            "name": "exampleGroup",
            "selectedValue": undefined,
            "setLastFocusedValue": [Function],
            "setSelectedValue": [Function],
          }
        }
        style={Object {}}
        value="test"
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              colorScheme="primary"
              dataSet={Object {}}
              defaultIsChecked={false}
              formControlContext={Object {}}
              isInvalid={true}
              state={
                Object {
                  "lastFocusedValue": null,
                  "name": "exampleGroup",
                  "selectedValue": undefined,
                  "setLastFocusedValue": [Function],
                  "setSelectedValue": [Function],
                }
              }
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#dc2626",
                  "borderRadius": 9999,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                  "paddingBottom": 4,
                  "paddingLeft": 4,
                  "paddingRight": 4,
                  "paddingTop": 4,
                }
              }
              value="test"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={12}
                bbWidth={12}
                color={4285756275}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#737373",
                      "height": 12,
                      "opacity": 0,
                      "width": 12,
                    },
                    Object {
                      "flex": 0,
                      "height": 12,
                      "width": 12,
                    },
                  ]
                }
                tintColor={4285756275}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  opacity={0}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M0 12C-2.34822e-08 13.5759 0.310389 15.1363 0.913445 16.5922C1.5165 18.0481 2.40042 19.371 3.51472 20.4853C4.62902 21.5996 5.95189 22.4835 7.4078 23.0866C8.86371 23.6896 10.4241 24 12 24C13.5759 24 15.1363 23.6896 16.5922 23.0866C18.0481 22.4835 19.371 21.5996 20.4853 20.4853C21.5996 19.371 22.4835 18.0481 23.0866 16.5922C23.6896 15.1363 24 13.5759 24 12C24 10.4241 23.6896 8.86371 23.0866 7.4078C22.4835 5.95189 21.5996 4.62902 20.4853 3.51472C19.371 2.40042 18.0481 1.5165 16.5922 0.913446C15.1363 0.310389 13.5759 0 12 0C10.4241 0 8.86371 0.310389 7.4078 0.913446C5.95189 1.5165 4.62902 2.40042 3.51472 3.51472C2.40042 4.62902 1.5165 5.95189 0.913445 7.4078C0.310389 8.86371 -2.34822e-08 10.4241 0 12Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 8,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "textDecorationLine": undefined,
              }
            }
          >
            Others
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Radio Playground 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "space-between",
        }
      }
    >
      <View
        accessibilityLabel="pick an option from below"
        accessibilityRole="radiogroup"
        accessibilityState={
          Object {
            "disabled": undefined,
          }
        }
        dataSet={Object {}}
        name="exampleGroup"
        onChange={[Function]}
        style={
          Object {
            "alignItems": "flex-start",
          }
        }
        value=""
      >
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": false,
            }
          }
          accessible={true}
          checked={false}
          colorScheme="primary"
          dataSet={Object {}}
          focusable={true}
          formControlContext={Object {}}
          isInvalid={false}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          state={
            Object {
              "lastFocusedValue": null,
              "name": "exampleGroup",
              "selectedValue": "",
              "setLastFocusedValue": [Function],
              "setSelectedValue": [Function],
            }
          }
          style={Object {}}
          value="cool"
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <View
                colorScheme="primary"
                dataSet={Object {}}
                defaultIsChecked={false}
                formControlContext={Object {}}
                isDisabled={false}
                isInvalid={false}
                state={
                  Object {
                    "lastFocusedValue": null,
                    "name": "exampleGroup",
                    "selectedValue": "",
                    "setLastFocusedValue": [Function],
                    "setSelectedValue": [Function],
                  }
                }
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#fafafa",
                    "borderColor": "#a3a3a3",
                    "borderRadius": 9999,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "marginBottom": 4,
                    "marginTop": 4,
                    "paddingBottom": 4,
                    "paddingLeft": 4,
                    "paddingRight": 4,
                    "paddingTop": 4,
                  }
                }
                value="cool"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4285756275}
                  dataSet={Object {}}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#737373",
                        "height": 12,
                        "opacity": 0,
                        "width": 12,
                      },
                      Object {
                        "flex": 0,
                        "height": 12,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4285756275}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M0 12C-2.34822e-08 13.5759 0.310389 15.1363 0.913445 16.5922C1.5165 18.0481 2.40042 19.371 3.51472 20.4853C4.62902 21.5996 5.95189 22.4835 7.4078 23.0866C8.86371 23.6896 10.4241 24 12 24C13.5759 24 15.1363 23.6896 16.5922 23.0866C18.0481 22.4835 19.371 21.5996 20.4853 20.4853C21.5996 19.371 22.4835 18.0481 23.0866 16.5922C23.6896 15.1363 24 13.5759 24 12C24 10.4241 23.6896 8.86371 23.0866 7.4078C22.4835 5.95189 21.5996 4.62902 20.4853 3.51472C19.371 2.40042 18.0481 1.5165 16.5922 0.913446C15.1363 0.310389 13.5759 0 12 0C10.4241 0 8.86371 0.310389 7.4078 0.913446C5.95189 1.5165 4.62902 2.40042 3.51472 3.51472C2.40042 4.62902 1.5165 5.95189 0.913445 7.4078C0.310389 8.86371 -2.34822e-08 10.4241 0 12Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "textDecorationLine": undefined,
                }
              }
            >
              UX Research
            </Text>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={Object {}}
        />
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": false,
            }
          }
          accessible={true}
          checked={false}
          colorScheme="primary"
          dataSet={Object {}}
          focusable={true}
          formControlContext={Object {}}
          isInvalid={false}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          state={
            Object {
              "lastFocusedValue": null,
              "name": "exampleGroup",
              "selectedValue": "",
              "setLastFocusedValue": [Function],
              "setSelectedValue": [Function],
            }
          }
          style={Object {}}
          value="awesome"
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <View
                colorScheme="primary"
                dataSet={Object {}}
                defaultIsChecked={false}
                formControlContext={Object {}}
                isDisabled={false}
                isInvalid={false}
                state={
                  Object {
                    "lastFocusedValue": null,
                    "name": "exampleGroup",
                    "selectedValue": "",
                    "setLastFocusedValue": [Function],
                    "setSelectedValue": [Function],
                  }
                }
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#fafafa",
                    "borderColor": "#a3a3a3",
                    "borderRadius": 9999,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "marginBottom": 4,
                    "marginTop": 4,
                    "paddingBottom": 4,
                    "paddingLeft": 4,
                    "paddingRight": 4,
                    "paddingTop": 4,
                  }
                }
                value="awesome"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4285756275}
                  dataSet={Object {}}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#737373",
                        "height": 12,
                        "opacity": 0,
                        "width": 12,
                      },
                      Object {
                        "flex": 0,
                        "height": 12,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4285756275}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M0 12C-2.34822e-08 13.5759 0.310389 15.1363 0.913445 16.5922C1.5165 18.0481 2.40042 19.371 3.51472 20.4853C4.62902 21.5996 5.95189 22.4835 7.4078 23.0866C8.86371 23.6896 10.4241 24 12 24C13.5759 24 15.1363 23.6896 16.5922 23.0866C18.0481 22.4835 19.371 21.5996 20.4853 20.4853C21.5996 19.371 22.4835 18.0481 23.0866 16.5922C23.6896 15.1363 24 13.5759 24 12C24 10.4241 23.6896 8.86371 23.0866 7.4078C22.4835 5.95189 21.5996 4.62902 20.4853 3.51472C19.371 2.40042 18.0481 1.5165 16.5922 0.913446C15.1363 0.310389 13.5759 0 12 0C10.4241 0 8.86371 0.310389 7.4078 0.913446C5.95189 1.5165 4.62902 2.40042 3.51472 3.51472C2.40042 4.62902 1.5165 5.95189 0.913445 7.4078C0.310389 8.86371 -2.34822e-08 10.4241 0 12Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "textDecorationLine": undefined,
                }
              }
            >
              Software Development
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Radio Size 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityLabel="pick a size"
      accessibilityRole="radiogroup"
      accessibilityState={
        Object {
          "disabled": undefined,
        }
      }
      dataSet={Object {}}
      defaultValue="1"
      name="exampleGroup"
      style={
        Object {
          "alignItems": "flex-start",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "flex-start",
            "flexDirection": "column",
            "maxWidth": 300,
            "width": "75%",
          }
        }
      >
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": true,
              "disabled": false,
            }
          }
          accessible={true}
          checked={true}
          colorScheme="red"
          dataSet={Object {}}
          focusable={true}
          formControlContext={Object {}}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          state={
            Object {
              "lastFocusedValue": null,
              "name": "exampleGroup",
              "selectedValue": "1",
              "setLastFocusedValue": [Function],
              "setSelectedValue": [Function],
            }
          }
          style={Object {}}
          value="1"
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <View
                colorScheme="red"
                dataSet={Object {}}
                defaultIsChecked={false}
                formControlContext={Object {}}
                state={
                  Object {
                    "lastFocusedValue": null,
                    "name": "exampleGroup",
                    "selectedValue": "1",
                    "setLastFocusedValue": [Function],
                    "setSelectedValue": [Function],
                  }
                }
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#fafafa",
                    "borderColor": "#dc2626",
                    "borderRadius": 9999,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "marginBottom": 4,
                    "marginTop": 4,
                    "paddingBottom": 4,
                    "paddingLeft": 4,
                    "paddingRight": 4,
                    "paddingTop": 4,
                  }
                }
                value="1"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={8}
                  bbWidth={8}
                  color={4292617766}
                  dataSet={Object {}}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#dc2626",
                        "height": 8,
                        "opacity": 1,
                        "width": 8,
                      },
                      Object {
                        "flex": 0,
                        "height": 8,
                        "width": 8,
                      },
                    ]
                  }
                  tintColor={4292617766}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={1}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M0 12C-2.34822e-08 13.5759 0.310389 15.1363 0.913445 16.5922C1.5165 18.0481 2.40042 19.371 3.51472 20.4853C4.62902 21.5996 5.95189 22.4835 7.4078 23.0866C8.86371 23.6896 10.4241 24 12 24C13.5759 24 15.1363 23.6896 16.5922 23.0866C18.0481 22.4835 19.371 21.5996 20.4853 20.4853C21.5996 19.371 22.4835 18.0481 23.0866 16.5922C23.6896 15.1363 24 13.5759 24 12C24 10.4241 23.6896 8.86371 23.0866 7.4078C22.4835 5.95189 21.5996 4.62902 20.4853 3.51472C19.371 2.40042 18.0481 1.5165 16.5922 0.913446C15.1363 0.310389 13.5759 0 12 0C10.4241 0 8.86371 0.310389 7.4078 0.913446C5.95189 1.5165 4.62902 2.40042 3.51472 3.51472C2.40042 4.62902 1.5165 5.95189 0.913445 7.4078C0.310389 8.86371 -2.34822e-08 10.4241 0 12Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Small
            </Text>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": false,
            }
          }
          accessible={true}
          checked={false}
          colorScheme="green"
          dataSet={Object {}}
          focusable={true}
          formControlContext={Object {}}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          state={
            Object {
              "lastFocusedValue": null,
              "name": "exampleGroup",
              "selectedValue": "1",
              "setLastFocusedValue": [Function],
              "setSelectedValue": [Function],
            }
          }
          style={Object {}}
          value="2"
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <View
                colorScheme="green"
                dataSet={Object {}}
                defaultIsChecked={false}
                formControlContext={Object {}}
                state={
                  Object {
                    "lastFocusedValue": null,
                    "name": "exampleGroup",
                    "selectedValue": "1",
                    "setLastFocusedValue": [Function],
                    "setSelectedValue": [Function],
                  }
                }
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#fafafa",
                    "borderColor": "#a3a3a3",
                    "borderRadius": 9999,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "marginBottom": 4,
                    "marginTop": 4,
                    "paddingBottom": 4,
                    "paddingLeft": 4,
                    "paddingRight": 4,
                    "paddingTop": 4,
                  }
                }
                value="2"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4285756275}
                  dataSet={Object {}}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#737373",
                        "height": 12,
                        "opacity": 0,
                        "width": 12,
                      },
                      Object {
                        "flex": 0,
                        "height": 12,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4285756275}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M0 12C-2.34822e-08 13.5759 0.310389 15.1363 0.913445 16.5922C1.5165 18.0481 2.40042 19.371 3.51472 20.4853C4.62902 21.5996 5.95189 22.4835 7.4078 23.0866C8.86371 23.6896 10.4241 24 12 24C13.5759 24 15.1363 23.6896 16.5922 23.0866C18.0481 22.4835 19.371 21.5996 20.4853 20.4853C21.5996 19.371 22.4835 18.0481 23.0866 16.5922C23.6896 15.1363 24 13.5759 24 12C24 10.4241 23.6896 8.86371 23.0866 7.4078C22.4835 5.95189 21.5996 4.62902 20.4853 3.51472C19.371 2.40042 18.0481 1.5165 16.5922 0.913446C15.1363 0.310389 13.5759 0 12 0C10.4241 0 8.86371 0.310389 7.4078 0.913446C5.95189 1.5165 4.62902 2.40042 3.51472 3.51472C2.40042 4.62902 1.5165 5.95189 0.913445 7.4078C0.310389 8.86371 -2.34822e-08 10.4241 0 12Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "textDecorationLine": undefined,
                }
              }
            >
              Medium
            </Text>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": false,
            }
          }
          accessible={true}
          checked={false}
          colorScheme="yellow"
          dataSet={Object {}}
          focusable={true}
          formControlContext={Object {}}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          state={
            Object {
              "lastFocusedValue": null,
              "name": "exampleGroup",
              "selectedValue": "1",
              "setLastFocusedValue": [Function],
              "setSelectedValue": [Function],
            }
          }
          style={Object {}}
          value="3"
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <View
                colorScheme="yellow"
                dataSet={Object {}}
                defaultIsChecked={false}
                formControlContext={Object {}}
                state={
                  Object {
                    "lastFocusedValue": null,
                    "name": "exampleGroup",
                    "selectedValue": "1",
                    "setLastFocusedValue": [Function],
                    "setSelectedValue": [Function],
                  }
                }
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#fafafa",
                    "borderColor": "#a3a3a3",
                    "borderRadius": 9999,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "marginBottom": 4,
                    "marginTop": 4,
                    "paddingBottom": 4,
                    "paddingLeft": 4,
                    "paddingRight": 4,
                    "paddingTop": 4,
                  }
                }
                value="3"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={16}
                  bbWidth={16}
                  color={4285756275}
                  dataSet={Object {}}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#737373",
                        "height": 16,
                        "opacity": 0,
                        "width": 16,
                      },
                      Object {
                        "flex": 0,
                        "height": 16,
                        "width": 16,
                      },
                    ]
                  }
                  tintColor={4285756275}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M0 12C-2.34822e-08 13.5759 0.310389 15.1363 0.913445 16.5922C1.5165 18.0481 2.40042 19.371 3.51472 20.4853C4.62902 21.5996 5.95189 22.4835 7.4078 23.0866C8.86371 23.6896 10.4241 24 12 24C13.5759 24 15.1363 23.6896 16.5922 23.0866C18.0481 22.4835 19.371 21.5996 20.4853 20.4853C21.5996 19.371 22.4835 18.0481 23.0866 16.5922C23.6896 15.1363 24 13.5759 24 12C24 10.4241 23.6896 8.86371 23.0866 7.4078C22.4835 5.95189 21.5996 4.62902 20.4853 3.51472C19.371 2.40042 18.0481 1.5165 16.5922 0.913446C15.1363 0.310389 13.5759 0 12 0C10.4241 0 8.86371 0.310389 7.4078 0.913446C5.95189 1.5165 4.62902 2.40042 3.51472 3.51472C2.40042 4.62902 1.5165 5.95189 0.913445 7.4078C0.310389 8.86371 -2.34822e-08 10.4241 0 12Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 18,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 27,
                  "textDecorationLine": undefined,
                }
              }
            >
              Large
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Radio Uncontrolled Radio 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityLabel="Pick your favorite number"
      accessibilityRole="radiogroup"
      accessibilityState={
        Object {
          "disabled": undefined,
        }
      }
      dataSet={Object {}}
      defaultValue="1"
      name="myRadioGroup"
      style={
        Object {
          "alignItems": "flex-start",
        }
      }
    >
      <View
        accessibilityRole="radio"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": false,
          }
        }
        accessible={true}
        checked={true}
        dataSet={Object {}}
        focusable={true}
        formControlContext={Object {}}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        state={
          Object {
            "lastFocusedValue": null,
            "name": "myRadioGroup",
            "selectedValue": "1",
            "setLastFocusedValue": [Function],
            "setSelectedValue": [Function],
          }
        }
        style={Object {}}
        value="1"
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              colorScheme="primary"
              dataSet={Object {}}
              defaultIsChecked={false}
              formControlContext={Object {}}
              state={
                Object {
                  "lastFocusedValue": null,
                  "name": "myRadioGroup",
                  "selectedValue": "1",
                  "setLastFocusedValue": [Function],
                  "setSelectedValue": [Function],
                }
              }
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#0891b2",
                  "borderRadius": 9999,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                  "paddingBottom": 4,
                  "paddingLeft": 4,
                  "paddingRight": 4,
                  "paddingTop": 4,
                }
              }
              value="1"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={12}
                bbWidth={12}
                color={4278751666}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#0891b2",
                      "height": 12,
                      "opacity": 1,
                      "width": 12,
                    },
                    Object {
                      "flex": 0,
                      "height": 12,
                      "width": 12,
                    },
                  ]
                }
                tintColor={4278751666}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  opacity={1}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M0 12C-2.34822e-08 13.5759 0.310389 15.1363 0.913445 16.5922C1.5165 18.0481 2.40042 19.371 3.51472 20.4853C4.62902 21.5996 5.95189 22.4835 7.4078 23.0866C8.86371 23.6896 10.4241 24 12 24C13.5759 24 15.1363 23.6896 16.5922 23.0866C18.0481 22.4835 19.371 21.5996 20.4853 20.4853C21.5996 19.371 22.4835 18.0481 23.0866 16.5922C23.6896 15.1363 24 13.5759 24 12C24 10.4241 23.6896 8.86371 23.0866 7.4078C22.4835 5.95189 21.5996 4.62902 20.4853 3.51472C19.371 2.40042 18.0481 1.5165 16.5922 0.913446C15.1363 0.310389 13.5759 0 12 0C10.4241 0 8.86371 0.310389 7.4078 0.913446C5.95189 1.5165 4.62902 2.40042 3.51472 3.51472C2.40042 4.62902 1.5165 5.95189 0.913445 7.4078C0.310389 8.86371 -2.34822e-08 10.4241 0 12Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 8,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "textDecorationLine": undefined,
              }
            }
          >
            First
          </Text>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={Object {}}
      />
      <View
        accessibilityRole="radio"
        accessibilityState={
          Object {
            "checked": false,
            "disabled": false,
          }
        }
        accessible={true}
        checked={false}
        dataSet={Object {}}
        focusable={true}
        formControlContext={Object {}}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        state={
          Object {
            "lastFocusedValue": null,
            "name": "myRadioGroup",
            "selectedValue": "1",
            "setLastFocusedValue": [Function],
            "setSelectedValue": [Function],
          }
        }
        style={Object {}}
        value="2"
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              colorScheme="primary"
              dataSet={Object {}}
              defaultIsChecked={false}
              formControlContext={Object {}}
              state={
                Object {
                  "lastFocusedValue": null,
                  "name": "myRadioGroup",
                  "selectedValue": "1",
                  "setLastFocusedValue": [Function],
                  "setSelectedValue": [Function],
                }
              }
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#a3a3a3",
                  "borderRadius": 9999,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                  "paddingBottom": 4,
                  "paddingLeft": 4,
                  "paddingRight": 4,
                  "paddingTop": 4,
                }
              }
              value="2"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={12}
                bbWidth={12}
                color={4285756275}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#737373",
                      "height": 12,
                      "opacity": 0,
                      "width": 12,
                    },
                    Object {
                      "flex": 0,
                      "height": 12,
                      "width": 12,
                    },
                  ]
                }
                tintColor={4285756275}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  opacity={0}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M0 12C-2.34822e-08 13.5759 0.310389 15.1363 0.913445 16.5922C1.5165 18.0481 2.40042 19.371 3.51472 20.4853C4.62902 21.5996 5.95189 22.4835 7.4078 23.0866C8.86371 23.6896 10.4241 24 12 24C13.5759 24 15.1363 23.6896 16.5922 23.0866C18.0481 22.4835 19.371 21.5996 20.4853 20.4853C21.5996 19.371 22.4835 18.0481 23.0866 16.5922C23.6896 15.1363 24 13.5759 24 12C24 10.4241 23.6896 8.86371 23.0866 7.4078C22.4835 5.95189 21.5996 4.62902 20.4853 3.51472C19.371 2.40042 18.0481 1.5165 16.5922 0.913446C15.1363 0.310389 13.5759 0 12 0C10.4241 0 8.86371 0.310389 7.4078 0.913446C5.95189 1.5165 4.62902 2.40042 3.51472 3.51472C2.40042 4.62902 1.5165 5.95189 0.913445 7.4078C0.310389 8.86371 -2.34822e-08 10.4241 0 12Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 8,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "textDecorationLine": undefined,
              }
            }
          >
            Second
          </Text>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={Object {}}
      />
      <View
        accessibilityRole="radio"
        accessibilityState={
          Object {
            "checked": false,
            "disabled": false,
          }
        }
        accessible={true}
        checked={false}
        dataSet={Object {}}
        focusable={true}
        formControlContext={Object {}}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        state={
          Object {
            "lastFocusedValue": null,
            "name": "myRadioGroup",
            "selectedValue": "1",
            "setLastFocusedValue": [Function],
            "setSelectedValue": [Function],
          }
        }
        style={Object {}}
        value="3"
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              colorScheme="primary"
              dataSet={Object {}}
              defaultIsChecked={false}
              formControlContext={Object {}}
              state={
                Object {
                  "lastFocusedValue": null,
                  "name": "myRadioGroup",
                  "selectedValue": "1",
                  "setLastFocusedValue": [Function],
                  "setSelectedValue": [Function],
                }
              }
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#a3a3a3",
                  "borderRadius": 9999,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                  "paddingBottom": 4,
                  "paddingLeft": 4,
                  "paddingRight": 4,
                  "paddingTop": 4,
                }
              }
              value="3"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={12}
                bbWidth={12}
                color={4285756275}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#737373",
                      "height": 12,
                      "opacity": 0,
                      "width": 12,
                    },
                    Object {
                      "flex": 0,
                      "height": 12,
                      "width": 12,
                    },
                  ]
                }
                tintColor={4285756275}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  opacity={0}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M0 12C-2.34822e-08 13.5759 0.310389 15.1363 0.913445 16.5922C1.5165 18.0481 2.40042 19.371 3.51472 20.4853C4.62902 21.5996 5.95189 22.4835 7.4078 23.0866C8.86371 23.6896 10.4241 24 12 24C13.5759 24 15.1363 23.6896 16.5922 23.0866C18.0481 22.4835 19.371 21.5996 20.4853 20.4853C21.5996 19.371 22.4835 18.0481 23.0866 16.5922C23.6896 15.1363 24 13.5759 24 12C24 10.4241 23.6896 8.86371 23.0866 7.4078C22.4835 5.95189 21.5996 4.62902 20.4853 3.51472C19.371 2.40042 18.0481 1.5165 16.5922 0.913446C15.1363 0.310389 13.5759 0 12 0C10.4241 0 8.86371 0.310389 7.4078 0.913446C5.95189 1.5165 4.62902 2.40042 3.51472 3.51472C2.40042 4.62902 1.5165 5.95189 0.913445 7.4078C0.310389 8.86371 -2.34822e-08 10.4241 0 12Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 8,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "textDecorationLine": undefined,
              }
            }
          >
            Third
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Radio With Ref 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityLabel="pick an option"
      accessibilityRole="radiogroup"
      accessibilityState={
        Object {
          "disabled": undefined,
        }
      }
      dataSet={Object {}}
      name="exampleGroup"
      onChange={[Function]}
      style={
        Object {
          "alignItems": "flex-start",
        }
      }
    >
      <View
        accessibilityRole="radio"
        accessibilityState={
          Object {
            "checked": false,
            "disabled": false,
          }
        }
        accessible={true}
        checked={false}
        colorScheme="success"
        dataSet={Object {}}
        focusable={true}
        formControlContext={Object {}}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        state={
          Object {
            "lastFocusedValue": null,
            "name": "exampleGroup",
            "selectedValue": undefined,
            "setLastFocusedValue": [Function],
            "setSelectedValue": [Function],
          }
        }
        style={Object {}}
        value="1"
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              colorScheme="success"
              dataSet={Object {}}
              defaultIsChecked={false}
              formControlContext={Object {}}
              state={
                Object {
                  "lastFocusedValue": null,
                  "name": "exampleGroup",
                  "selectedValue": undefined,
                  "setLastFocusedValue": [Function],
                  "setSelectedValue": [Function],
                }
              }
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#a3a3a3",
                  "borderRadius": 9999,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                  "paddingBottom": 4,
                  "paddingLeft": 4,
                  "paddingRight": 4,
                  "paddingTop": 4,
                }
              }
              value="1"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={12}
                bbWidth={12}
                color={4285756275}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#737373",
                      "height": 12,
                      "opacity": 0,
                      "width": 12,
                    },
                    Object {
                      "flex": 0,
                      "height": 12,
                      "width": 12,
                    },
                  ]
                }
                tintColor={4285756275}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  opacity={0}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M0 12C-2.34822e-08 13.5759 0.310389 15.1363 0.913445 16.5922C1.5165 18.0481 2.40042 19.371 3.51472 20.4853C4.62902 21.5996 5.95189 22.4835 7.4078 23.0866C8.86371 23.6896 10.4241 24 12 24C13.5759 24 15.1363 23.6896 16.5922 23.0866C18.0481 22.4835 19.371 21.5996 20.4853 20.4853C21.5996 19.371 22.4835 18.0481 23.0866 16.5922C23.6896 15.1363 24 13.5759 24 12C24 10.4241 23.6896 8.86371 23.0866 7.4078C22.4835 5.95189 21.5996 4.62902 20.4853 3.51472C19.371 2.40042 18.0481 1.5165 16.5922 0.913446C15.1363 0.310389 13.5759 0 12 0C10.4241 0 8.86371 0.310389 7.4078 0.913446C5.95189 1.5165 4.62902 2.40042 3.51472 3.51472C2.40042 4.62902 1.5165 5.95189 0.913445 7.4078C0.310389 8.86371 -2.34822e-08 10.4241 0 12Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 8,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "textDecorationLine": undefined,
              }
            }
          >
            Wrong
          </Text>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={Object {}}
      />
      <View
        accessibilityRole="radio"
        accessibilityState={
          Object {
            "checked": false,
            "disabled": false,
          }
        }
        accessible={true}
        checked={false}
        colorScheme="success"
        dataSet={Object {}}
        focusable={true}
        formControlContext={Object {}}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        state={
          Object {
            "lastFocusedValue": null,
            "name": "exampleGroup",
            "selectedValue": undefined,
            "setLastFocusedValue": [Function],
            "setSelectedValue": [Function],
          }
        }
        style={Object {}}
        value="2"
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <View
              colorScheme="success"
              dataSet={Object {}}
              defaultIsChecked={false}
              formControlContext={Object {}}
              state={
                Object {
                  "lastFocusedValue": null,
                  "name": "exampleGroup",
                  "selectedValue": undefined,
                  "setLastFocusedValue": [Function],
                  "setSelectedValue": [Function],
                }
              }
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#a3a3a3",
                  "borderRadius": 9999,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                  "paddingBottom": 4,
                  "paddingLeft": 4,
                  "paddingRight": 4,
                  "paddingTop": 4,
                }
              }
              value="2"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={12}
                bbWidth={12}
                color={4285756275}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#737373",
                      "height": 12,
                      "opacity": 0,
                      "width": 12,
                    },
                    Object {
                      "flex": 0,
                      "height": 12,
                      "width": 12,
                    },
                  ]
                }
                tintColor={4285756275}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  opacity={0}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M0 12C-2.34822e-08 13.5759 0.310389 15.1363 0.913445 16.5922C1.5165 18.0481 2.40042 19.371 3.51472 20.4853C4.62902 21.5996 5.95189 22.4835 7.4078 23.0866C8.86371 23.6896 10.4241 24 12 24C13.5759 24 15.1363 23.6896 16.5922 23.0866C18.0481 22.4835 19.371 21.5996 20.4853 20.4853C21.5996 19.371 22.4835 18.0481 23.0866 16.5922C23.6896 15.1363 24 13.5759 24 12C24 10.4241 23.6896 8.86371 23.0866 7.4078C22.4835 5.95189 21.5996 4.62902 20.4853 3.51472C19.371 2.40042 18.0481 1.5165 16.5922 0.913446C15.1363 0.310389 13.5759 0 12 0C10.4241 0 8.86371 0.310389 7.4078 0.913446C5.95189 1.5165 4.62902 2.40042 3.51472 3.51472C2.40042 4.62902 1.5165 5.95189 0.913445 7.4078C0.310389 8.86371 -2.34822e-08 10.4241 0 12Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 8,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "textDecorationLine": undefined,
              }
            }
          >
            Right
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Responsive Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "backgroundColor": "#fecaca",
          "width": 400,
        }
      }
    >
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": undefined,
          }
        }
      >
        This is a box
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Responsive Demo 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "backgroundColor": "#fafafa",
          "borderColor": "#e5e7eb",
          "borderRadius": 8,
          "borderWidth": 1,
          "flexDirection": "column",
          "overflow": "hidden",
          "width": 288,
        }
      }
    >
      <View
        dataSet={Object {}}
        style={Object {}}
      >
        <Image
          accessibilityLabel="image"
          alt="image"
          dataSet={Object {}}
          onError={[Function]}
          source={
            Object {
              "uri": "https://www.holidify.com/images/cmsuploads/compressed/Bangalore_citycover_20190613234056.jpg",
            }
          }
          style={
            Object {
              "height": 160,
              "maxWidth": "100%",
              "width": "100%",
            }
          }
        />
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#8b5cf6",
              "bottom": 0,
              "display": "flex",
              "justifyContent": "center",
              "paddingBottom": 6,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 6,
              "position": "absolute",
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 18,
                "textDecorationLine": undefined,
              }
            }
          >
            PHOTOS
          </Text>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={Object {}}
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "marginLeft": -4,
                "textDecorationLine": undefined,
              }
            }
          >
            The Garden City
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 8,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#8b5cf6",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 18,
                "marginLeft": -2,
                "marginTop": -4,
                "textDecorationLine": undefined,
              }
            }
          >
            The Silicon Valley of India.
          </Text>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 12,
            }
          }
        />
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#171717",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": undefined,
            }
          }
        >
          Bengaluru (also called Bangalore) is the center of India's high-tech industry. The city is also known for its parks and nightlife.
        </Text>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "space-between",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#4b5563",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              6 mins ago
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Responsive Direction 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "column",
          "justifyContent": "space-between",
          "paddingBottom": 16,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 16,
          "width": "100%",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#a1a1aa",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "borderWidth": 1,
            "height": 96,
            "justifyContent": "center",
            "marginBottom": 8,
            "marginLeft": 8,
            "marginRight": 8,
            "marginTop": 8,
            "position": "relative",
            "width": 96,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          dataSet={Object {}}
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/1188747996843761665/8CiUdKZW_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#a1a1aa",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "borderWidth": 1,
            "height": 96,
            "justifyContent": "center",
            "marginBottom": 8,
            "marginLeft": 8,
            "marginRight": 8,
            "marginTop": 8,
            "position": "relative",
            "width": 96,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          dataSet={Object {}}
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/1177303899243343872/B0sUJIH0_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#a1a1aa",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "borderWidth": 1,
            "height": 96,
            "justifyContent": "center",
            "marginBottom": 8,
            "marginLeft": 8,
            "marginRight": 8,
            "marginTop": 8,
            "position": "relative",
            "width": 96,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          dataSet={Object {}}
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/1260766060401188864/ySJfMIbZ_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#a1a1aa",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "borderWidth": 1,
            "height": 96,
            "justifyContent": "center",
            "marginBottom": 8,
            "marginLeft": 8,
            "marginRight": 8,
            "marginTop": 8,
            "position": "relative",
            "width": 96,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          dataSet={Object {}}
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/1309797238651060226/18cm6VhQ_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#a1a1aa",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "borderWidth": 1,
            "height": 96,
            "justifyContent": "center",
            "marginBottom": 8,
            "marginLeft": 8,
            "marginRight": 8,
            "marginTop": 8,
            "position": "relative",
            "width": 96,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          dataSet={Object {}}
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/983582580372004864/h9ccP0Ea_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#a1a1aa",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "borderWidth": 1,
            "height": 96,
            "justifyContent": "center",
            "marginBottom": 8,
            "marginLeft": 8,
            "marginRight": 8,
            "marginTop": 8,
            "position": "relative",
            "width": 96,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          dataSet={Object {}}
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/1320985200663293952/lE_Kg6vr_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Responsive FontSize 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Text
      dataSet={Object {}}
      style={
        Object {
          "backgroundColor": undefined,
          "color": "#171717",
          "fontFamily": undefined,
          "fontSize": 24,
          "fontStyle": "normal",
          "fontWeight": "400",
          "letterSpacing": 0,
          "lineHeight": 36,
          "textDecorationLine": undefined,
        }
      }
    >
      This is responsive text
    </Text>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Responsive More 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "backgroundColor": "#2dd4bf",
          "height": "75%",
          "width": "50%",
        }
      }
    />
    <View
      dataSet={Object {}}
      style={
        Object {
          "fontSize": 16,
        }
      }
    >
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": undefined,
          }
        }
      >
        Font Size
      </Text>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "backgroundColor": "#4ade80",
          "height": 24,
          "marginTop": 16,
          "width": "100%",
        }
      }
    />
    <View
      dataSet={Object {}}
      style={
        Object {
          "backgroundColor": "#fecaca",
          "paddingBottom": 16,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 16,
        }
      }
    >
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": undefined,
          }
        }
      >
        Padding
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Row Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#22d3ee",
            "borderRadius": 6,
            "display": "flex",
            "elevation": 4,
            "height": 64,
            "justifyContent": "center",
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.23,
            "shadowRadius": 2.62,
            "width": 64,
          }
        }
      >
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#FFFFFF",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": undefined,
            }
          }
        >
          Box 1
        </Text>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "width": 8,
          }
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#f472b6",
            "borderRadius": 6,
            "display": "flex",
            "elevation": 4,
            "height": 64,
            "justifyContent": "center",
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.23,
            "shadowRadius": 2.62,
            "width": 64,
          }
        }
      >
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#FFFFFF",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": undefined,
            }
          }
        >
          Box 2
        </Text>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "width": 8,
          }
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#34d399",
            "borderRadius": 6,
            "display": "flex",
            "elevation": 4,
            "height": 64,
            "justifyContent": "center",
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.23,
            "shadowRadius": 2.62,
            "width": 64,
          }
        }
      >
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#FFFFFF",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": undefined,
            }
          }
        >
          Box 3
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots ScrollView Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RCTScrollView
      contentContainerStyle={
        Array [
          Object {},
          Object {
            "dataSet": Object {},
          },
        ]
      }
      dataSet={Object {}}
      style={
        Object {
          "height": 320,
          "width": 300,
        }
      }
    >
      <View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
              "marginBottom": 16,
              "marginTop": 12,
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Cyan
          </Text>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#cffafe",
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              100
            </Text>
          </View>
          <View
            dataSet={Object {}}
            style={Object {}}
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#a5f3fc",
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              200
            </Text>
          </View>
          <View
            dataSet={Object {}}
            style={Object {}}
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#67e8f9",
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              300
            </Text>
          </View>
          <View
            dataSet={Object {}}
            style={Object {}}
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#22d3ee",
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              400
            </Text>
          </View>
          <View
            dataSet={Object {}}
            style={Object {}}
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#06b6d4",
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              500
            </Text>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
              "marginBottom": 16,
              "marginTop": 32,
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Yellow
          </Text>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#fef9c3",
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              100
            </Text>
          </View>
          <View
            dataSet={Object {}}
            style={Object {}}
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#fef08a",
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              200
            </Text>
          </View>
          <View
            dataSet={Object {}}
            style={Object {}}
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#fde047",
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              300
            </Text>
          </View>
          <View
            dataSet={Object {}}
            style={Object {}}
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#facc15",
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              400
            </Text>
          </View>
          <View
            dataSet={Object {}}
            style={Object {}}
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#eab308",
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              500
            </Text>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
              "marginBottom": 16,
              "marginTop": 32,
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
             Violet
          </Text>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#ede9fe",
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              100
            </Text>
          </View>
          <View
            dataSet={Object {}}
            style={Object {}}
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#ddd6fe",
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              200
            </Text>
          </View>
          <View
            dataSet={Object {}}
            style={Object {}}
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#c4b5fd",
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              300
            </Text>
          </View>
          <View
            dataSet={Object {}}
            style={Object {}}
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#a78bfa",
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              400
            </Text>
          </View>
          <View
            dataSet={Object {}}
            style={Object {}}
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#8b5cf6",
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              500
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots SectionList Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "height": 320,
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <RCTScrollView
        data={
          Array [
            Object {
              "data": Array [
                "cyan.100",
                "cyan.200",
                "cyan.300",
                "cyan.400",
                "cyan.500",
              ],
              "title": "Cyan",
            },
            Object {
              "data": Array [
                "yellow.100",
                "yellow.200",
                "yellow.300",
                "yellow.400",
                "yellow.500",
              ],
              "title": "Yellow",
            },
            Object {
              "data": Array [
                "violet.100",
                "violet.200",
                "violet.300",
                "violet.400",
                "violet.500",
              ],
              "title": "Violet",
            },
          ]
        }
        dataSet={Object {}}
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={
          Array [
            0,
            7,
          ]
        }
        style={
          Object {
            "marginBottom": 16,
            "maxWidth": 300,
            "width": "100%",
          }
        }
        updateCellsBatchingPeriod={50}
        windowSize={21}
      >
        <View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 20,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 25,
                    "marginTop": 32,
                    "paddingBottom": 16,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Cyan
              </Text>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#cffafe",
                  "display": "flex",
                  "justifyContent": "center",
                  "paddingBottom": 16,
                  "paddingTop": 16,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                100
              </Text>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#a5f3fc",
                  "display": "flex",
                  "justifyContent": "center",
                  "paddingBottom": 16,
                  "paddingTop": 16,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                200
              </Text>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#67e8f9",
                  "display": "flex",
                  "justifyContent": "center",
                  "paddingBottom": 16,
                  "paddingTop": 16,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                300
              </Text>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#22d3ee",
                  "display": "flex",
                  "justifyContent": "center",
                  "paddingBottom": 16,
                  "paddingTop": 16,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                400
              </Text>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#06b6d4",
                  "display": "flex",
                  "justifyContent": "center",
                  "paddingBottom": 16,
                  "paddingTop": 16,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                500
              </Text>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          />
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 20,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 25,
                    "marginTop": 32,
                    "paddingBottom": 16,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Yellow
              </Text>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fef9c3",
                  "display": "flex",
                  "justifyContent": "center",
                  "paddingBottom": 16,
                  "paddingTop": 16,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                100
              </Text>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fef08a",
                  "display": "flex",
                  "justifyContent": "center",
                  "paddingBottom": 16,
                  "paddingTop": 16,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                200
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 0,
              }
            }
          />
        </View>
      </RCTScrollView>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Select Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "maxWidth": 300,
          }
        }
      >
        <View
          accessibilityLabel="Choose Service"
          accessibilityRole="button"
          accessible={true}
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "marginTop": 4,
            }
          }
        >
          <View
            dataSet={Object {}}
            isFocused={false}
            style={
              Object {
                "alignItems": "center",
                "borderColor": "#d4d4d4",
                "borderRadius": 4,
                "borderWidth": 1,
                "flexDirection": "row",
                "marginTop": 4,
                "minWidth": 200,
                "overflow": "hidden",
              }
            }
          >
            <TextInput
              accessible={true}
              allowFontScaling={true}
              aria-hidden={true}
              dataSet={Object {}}
              editable={false}
              focusable={false}
              importantForAccessibility="no"
              onBlur={[Function]}
              onFocus={[Function]}
              onKeyPress={[Function]}
              placeholder="Choose Service"
              placeholderTextColor="#a3a3a3"
              pointerEvents="none"
              rejectResponderTermination={true}
              secureTextEntry={false}
              selectionColor="#1f2937"
              style={
                Object {
                  "backgroundColor": "transparent",
                  "color": "#171717",
                  "flex": 1,
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": "100%",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                  "width": "100%",
                }
              }
              underlineColorAndroid="transparent"
              value=""
            />
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <RNSVGSvgView
              accessibilityRole="image"
              align="xMidYMid"
              bbHeight={16}
              bbWidth={16}
              color={4285756275}
              dataSet={Object {}}
              focusable={false}
              meetOrSlice={0}
              minX={0}
              minY={0}
              stroke=""
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Object {
                    "color": "#737373",
                    "height": 16,
                    "marginRight": 12,
                    "width": 16,
                  },
                  Object {
                    "flex": 0,
                    "height": 16,
                    "width": 16,
                  },
                ]
              }
              tintColor={4285756275}
              vbHeight={24}
              vbWidth={24}
            >
              <RNSVGGroup
                propList={
                  Array [
                    "stroke",
                  ]
                }
                stroke={null}
              >
                <RNSVGGroup>
                  <RNSVGPath
                    d="M20.2286 6L11.9973 14.3785L3.76862 6.00268L2 7.80293L12 18L22 7.80293L20.2286 6Z"
                    fill={
                      Array [
                        2,
                      ]
                    }
                    propList={
                      Array [
                        "fill",
                        "stroke",
                      ]
                    }
                    stroke={null}
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Select FormControlled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        isInvalid={true}
        isRequired={true}
        style={
          Object {
            "maxWidth": 300,
            "width": "75%",
          }
        }
      >
        <View
          dataSet={Object {}}
          feedbackId="field-react-aria-0-2-feedback"
          hasFeedbackText={false}
          hasHelpText={false}
          helpTextId="field-react-aria-0-2-helptext"
          isDisabled={false}
          isInvalid={true}
          isReadOnly={false}
          isRequired={true}
          labelId="field-react-aria-0-2-label"
          nativeID="field-react-aria-0-2-label"
          setHasFeedbackText={[Function]}
          setHasHelpText={[Function]}
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "marginBottom": 4,
              "marginTop": 4,
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#737373",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Choose service
          </Text>
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#dc2626",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            *
          </Text>
        </View>
        <View
          accessibilityLabel="Choose Service"
          accessibilityRole="button"
          accessible={true}
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "marginTop": 4,
            }
          }
        >
          <View
            dataSet={Object {}}
            isFocused={false}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderColor": "#dc2626",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "marginTop": 4,
                  "minWidth": 200,
                  "overflow": "hidden",
                },
                Object {
                  "outlineColor": "#dc2626",
                  "outlineStyle": "solid",
                  "outlineWidth": "1px",
                },
              ]
            }
          >
            <TextInput
              accessibilityInvalid={true}
              accessibilityRequired={true}
              accessible={true}
              allowFontScaling={true}
              aria-hidden={true}
              dataSet={Object {}}
              disabled={false}
              editable={false}
              focusable={false}
              importantForAccessibility="no"
              isInvalid={true}
              isRequired={true}
              nativeID="field-react-aria-0-2"
              onBlur={[Function]}
              onFocus={[Function]}
              onKeyPress={[Function]}
              placeholder="Choose Service"
              placeholderTextColor="#a3a3a3"
              pointerEvents="none"
              readOnly={false}
              rejectResponderTermination={true}
              required={true}
              secureTextEntry={false}
              selectionColor="#1f2937"
              style={
                Object {
                  "backgroundColor": "transparent",
                  "color": "#171717",
                  "flex": 1,
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": "100%",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                  "width": "100%",
                }
              }
              underlineColorAndroid="transparent"
              value=""
            />
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <RNSVGSvgView
              accessibilityRole="image"
              align="xMidYMid"
              bbHeight={16}
              bbWidth={16}
              color={4285756275}
              dataSet={Object {}}
              focusable={false}
              meetOrSlice={0}
              minX={0}
              minY={0}
              stroke=""
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Object {
                    "color": "#737373",
                    "height": 16,
                    "marginRight": 12,
                    "width": 16,
                  },
                  Object {
                    "flex": 0,
                    "height": 16,
                    "width": 16,
                  },
                ]
              }
              tintColor={4285756275}
              vbHeight={24}
              vbWidth={24}
            >
              <RNSVGGroup
                propList={
                  Array [
                    "stroke",
                  ]
                }
                stroke={null}
              >
                <RNSVGGroup>
                  <RNSVGPath
                    d="M20.2286 6L11.9973 14.3785L3.76862 6.00268L2 7.80293L12 18L22 7.80293L20.2286 6Z"
                    fill={
                      Array [
                        2,
                      ]
                    }
                    propList={
                      Array [
                        "fill",
                        "stroke",
                      ]
                    }
                    stroke={null}
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
        </View>
        <View
          dataSet={Object {}}
          feedbackId="field-react-aria-0-2-feedback"
          hasFeedbackText={false}
          hasHelpText={false}
          helpTextId="field-react-aria-0-2-helptext"
          isDisabled={false}
          isInvalid={true}
          isReadOnly={false}
          isRequired={true}
          labelId="field-react-aria-0-2-label"
          nativeID="field-react-aria-0-2"
          setHasFeedbackText={[Function]}
          setHasHelpText={[Function]}
          style={
            Object {
              "marginTop": 8,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <RNSVGSvgView
              accessibilityRole="image"
              align="xMidYMid"
              bbHeight={12}
              bbWidth={12}
              color={4292617766}
              dataSet={Object {}}
              focusable={false}
              meetOrSlice={0}
              minX={0}
              minY={0}
              stroke=""
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Object {
                    "color": "#dc2626",
                    "fontSize": 12,
                    "height": 12,
                    "width": 12,
                  },
                  Object {
                    "flex": 0,
                    "height": 12,
                    "width": 12,
                  },
                ]
              }
              tintColor={4292617766}
              vbHeight={16}
              vbWidth={16}
            >
              <RNSVGGroup
                font={
                  Object {
                    "fontSize": 12,
                  }
                }
                propList={
                  Array [
                    "stroke",
                  ]
                }
                stroke={null}
              >
                <RNSVGGroup>
                  <RNSVGPath
                    d="M8 16C6.41775 16 4.87103 15.5308 3.55544 14.6518C2.23985 13.7727 1.21447 12.5233 0.608967 11.0615C0.00346627 9.59966 -0.15496 7.99113 0.153721 6.43928C0.462403 4.88743 1.22433 3.46197 2.34315 2.34315C3.46197 1.22433 4.88743 0.462403 6.43928 0.153721C7.99113 -0.15496 9.59966 0.00346627 11.0615 0.608967C12.5233 1.21447 13.7727 2.23985 14.6518 3.55544C15.5308 4.87103 16 6.41775 16 8C16 10.1217 15.1571 12.1566 13.6569 13.6569C12.1566 15.1571 10.1217 16 8 16ZM8 14.4C9.2658 14.4 10.5032 14.0246 11.5556 13.3214C12.6081 12.6182 13.4284 11.6186 13.9128 10.4492C14.3972 9.27973 14.524 7.9929 14.277 6.75142C14.0301 5.50995 13.4205 4.36958 12.5255 3.47452C11.6304 2.57946 10.4901 1.96992 9.24858 1.72298C8.0071 1.47603 6.72028 1.60277 5.55083 2.08717C4.38138 2.57158 3.38184 3.39188 2.6786 4.44435C1.97536 5.49683 1.6 6.7342 1.6 8C1.6 9.69739 2.27429 11.3253 3.47452 12.5255C4.67475 13.7257 6.30262 14.4 8 14.4ZM7.2 10.4H8.8V12H7.2V10.4ZM7.2 4H8.8V8.8H7.2V4Z"
                    fill={
                      Array [
                        2,
                      ]
                    }
                    propList={
                      Array [
                        "fill",
                        "stroke",
                      ]
                    }
                    stroke={null}
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGSvgView>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 4,
                }
              }
            />
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#dc2626",
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 18,
                  "textDecorationLine": undefined,
                }
              }
            >
              Please make a selection!
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Select Select Long list 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "flex-start",
          "maxWidth": "80%",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <View
          dataSet={Object {}}
          feedbackId="field-react-aria-0-2-feedback"
          hasFeedbackText={false}
          hasHelpText={false}
          helpTextId="field-react-aria-0-2-helptext"
          isDisabled={false}
          isInvalid={false}
          isReadOnly={false}
          isRequired={false}
          labelId="field-react-aria-0-2-label"
          nativeID="field-react-aria-0-2-label"
          setHasFeedbackText={[Function]}
          setHasHelpText={[Function]}
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "marginBottom": 4,
              "marginTop": 4,
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#737373",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Select Color
          </Text>
        </View>
        <View
          accessibilityLabel="Select a Color"
          accessibilityRole="button"
          accessible={true}
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "marginTop": 4,
            }
          }
        >
          <View
            dataSet={Object {}}
            isFocused={false}
            style={
              Object {
                "alignItems": "center",
                "borderColor": "#d4d4d4",
                "borderRadius": 4,
                "borderWidth": 1,
                "flexDirection": "row",
                "marginTop": 4,
                "minWidth": 100,
                "overflow": "hidden",
              }
            }
          >
            <TextInput
              accessible={true}
              allowFontScaling={true}
              aria-hidden={true}
              dataSet={Object {}}
              disabled={false}
              editable={false}
              focusable={false}
              importantForAccessibility="no"
              isRequired={false}
              nativeID="field-react-aria-0-2"
              onBlur={[Function]}
              onFocus={[Function]}
              onKeyPress={[Function]}
              placeholder="Select a Color"
              placeholderTextColor="#a3a3a3"
              pointerEvents="none"
              readOnly={false}
              rejectResponderTermination={true}
              required={false}
              secureTextEntry={false}
              selectionColor="#1f2937"
              style={
                Object {
                  "backgroundColor": "transparent",
                  "color": "#171717",
                  "flex": 1,
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": "100%",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                  "width": "100%",
                }
              }
              underlineColorAndroid="transparent"
              value=""
            />
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <RNSVGSvgView
              accessibilityRole="image"
              align="xMidYMid"
              bbHeight={16}
              bbWidth={16}
              color={4285756275}
              dataSet={Object {}}
              focusable={false}
              meetOrSlice={0}
              minX={0}
              minY={0}
              stroke=""
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Object {
                    "color": "#737373",
                    "height": 16,
                    "marginRight": 12,
                    "width": 16,
                  },
                  Object {
                    "flex": 0,
                    "height": 16,
                    "width": 16,
                  },
                ]
              }
              tintColor={4285756275}
              vbHeight={24}
              vbWidth={24}
            >
              <RNSVGGroup
                propList={
                  Array [
                    "stroke",
                  ]
                }
                stroke={null}
              >
                <RNSVGGroup>
                  <RNSVGPath
                    d="M20.2286 6L11.9973 14.3785L3.76862 6.00268L2 7.80293L12 18L22 7.80293L20.2286 6Z"
                    fill={
                      Array [
                        2,
                      ]
                    }
                    propList={
                      Array [
                        "fill",
                        "stroke",
                      ]
                    }
                    stroke={null}
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Skeleton Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "borderColor": "#e5e7eb",
            "borderRadius": 6,
            "borderWidth": 1,
            "maxWidth": 400,
            "overflow": "hidden",
            "width": "90%",
          }
        }
      >
        <View
          dataSet={Object {}}
          fadeDuration={0.1}
          speed={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "height": 160,
              "overflow": "hidden",
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#e5e5e5",
                "height": "100%",
                "opacity": 0,
                "width": "100%",
              }
            }
          />
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 32,
            }
          }
        />
        <View
          dataSet={Object {}}
          fadeDuration={0.1}
          speed={1}
          style={
            Object {
              "flexDirection": "column",
              "paddingLeft": 16,
              "paddingRight": 16,
              "width": "100%",
            }
          }
        >
          <View
            dataSet={Object {}}
            fadeDuration={0.1}
            speed={1}
            style={
              Object {
                "backgroundColor": "transparent",
                "borderRadius": 9999,
                "height": 12,
                "overflow": "hidden",
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "height": "100%",
                  "opacity": 0,
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            dataSet={Object {}}
            fadeDuration={0.1}
            speed={1}
            style={
              Object {
                "backgroundColor": "transparent",
                "borderRadius": 9999,
                "height": 12,
                "overflow": "hidden",
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "height": "100%",
                  "opacity": 0,
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            dataSet={Object {}}
            fadeDuration={0.1}
            speed={1}
            style={
              Object {
                "backgroundColor": "transparent",
                "borderRadius": 9999,
                "height": 12,
                "overflow": "hidden",
                "width": "75%",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "height": "100%",
                  "opacity": 0,
                  "width": "100%",
                }
              }
            />
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 32,
            }
          }
        />
        <View
          dataSet={Object {}}
          fadeDuration={0.1}
          speed={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 6,
              "height": 40,
              "marginBottom": 16,
              "marginTop": 16,
              "overflow": "hidden",
              "paddingLeft": 16,
              "paddingRight": 16,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#cffafe",
                "height": "100%",
                "opacity": 0,
                "width": "100%",
              }
            }
          />
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Skeleton Color 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "borderColor": "#e5e7eb",
            "borderRadius": 6,
            "borderWidth": 1,
            "flexDirection": "row",
            "maxWidth": 400,
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
            "width": "90%",
          }
        }
      >
        <View
          dataSet={Object {}}
          fadeDuration={0.1}
          speed={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 6,
              "flex": 1,
              "height": 150,
              "overflow": "hidden",
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#f3f4f6",
                "height": "100%",
                "opacity": 0,
                "width": "100%",
              }
            }
          />
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "width": 32,
            }
          }
        />
        <View
          dataSet={Object {}}
          style={
            Object {
              "flex": 3,
            }
          }
        >
          <View
            dataSet={Object {}}
            fadeDuration={0.1}
            speed={1}
            style={
              Object {
                "backgroundColor": "transparent",
                "height": 40,
                "overflow": "hidden",
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#fcd34d",
                  "height": "100%",
                  "opacity": 0,
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            dataSet={Object {}}
            fadeDuration={0.1}
            speed={1}
            style={
              Object {
                "flexDirection": "column",
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              fadeDuration={0.1}
              speed={1}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "height": 12,
                  "overflow": "hidden",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "height": "100%",
                    "opacity": 0,
                    "width": "100%",
                  }
                }
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 12,
                }
              }
            />
            <View
              dataSet={Object {}}
              fadeDuration={0.1}
              speed={1}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "height": 12,
                  "overflow": "hidden",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "height": "100%",
                    "opacity": 0,
                    "width": "100%",
                  }
                }
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 12,
                }
              }
            />
            <View
              dataSet={Object {}}
              fadeDuration={0.1}
              speed={1}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "height": 12,
                  "overflow": "hidden",
                  "width": "75%",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "height": "100%",
                    "opacity": 0,
                    "width": "100%",
                  }
                }
              />
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              dataSet={Object {}}
              fadeDuration={0.1}
              speed={1}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "height": 20,
                  "overflow": "hidden",
                  "width": 20,
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "height": "100%",
                    "opacity": 0,
                    "width": "100%",
                  }
                }
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              dataSet={Object {}}
              fadeDuration={0.1}
              speed={1}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "flex": 2,
                  "height": 12,
                  "overflow": "hidden",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "height": "100%",
                    "opacity": 0,
                    "width": "100%",
                  }
                }
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              dataSet={Object {}}
              fadeDuration={0.1}
              speed={1}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "flex": 1,
                  "height": 12,
                  "overflow": "hidden",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#a5b4fc",
                    "height": "100%",
                    "opacity": 0,
                    "width": "100%",
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Skeleton Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#e5e7eb",
            "borderRadius": 6,
            "borderWidth": 1,
            "maxWidth": 400,
            "width": "90%",
          }
        }
      >
        <View
          dataSet={Object {}}
          fadeDuration={0.1}
          speed={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "height": 160,
              "overflow": "hidden",
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#e5e5e5",
                "height": "100%",
                "opacity": 0,
                "width": "100%",
              }
            }
          />
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 24,
            }
          }
        />
        <View
          dataSet={Object {}}
          fadeDuration={0.1}
          speed={1}
          style={
            Object {
              "backgroundColor": "#fafaf9",
              "borderColor": "#e5e7eb",
              "borderRadius": 9999,
              "borderWidth": 1,
              "height": 80,
              "marginTop": -70,
              "overflow": "hidden",
              "width": 80,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#e5e5e5",
                "height": "100%",
                "opacity": 0,
                "width": "100%",
              }
            }
          />
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 24,
            }
          }
        />
        <View
          dataSet={Object {}}
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            dataSet={Object {}}
            fadeDuration={0.1}
            speed={1}
            style={
              Object {
                "backgroundColor": "transparent",
                "borderRadius": 9999,
                "height": 20,
                "overflow": "hidden",
                "width": 20,
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "height": "100%",
                  "opacity": 0,
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 8,
              }
            }
          />
          <View
            dataSet={Object {}}
            fadeDuration={0.1}
            speed={1}
            style={
              Object {
                "backgroundColor": "transparent",
                "borderRadius": 9999,
                "height": 20,
                "overflow": "hidden",
                "width": 20,
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "height": "100%",
                  "opacity": 0,
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 8,
              }
            }
          />
          <View
            dataSet={Object {}}
            fadeDuration={0.1}
            speed={1}
            style={
              Object {
                "backgroundColor": "transparent",
                "borderRadius": 9999,
                "height": 20,
                "overflow": "hidden",
                "width": 20,
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "height": "100%",
                  "opacity": 0,
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 8,
              }
            }
          />
          <View
            dataSet={Object {}}
            fadeDuration={0.1}
            speed={1}
            style={
              Object {
                "backgroundColor": "transparent",
                "borderRadius": 9999,
                "height": 20,
                "overflow": "hidden",
                "width": 20,
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "height": "100%",
                  "opacity": 0,
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 8,
              }
            }
          />
          <View
            dataSet={Object {}}
            fadeDuration={0.1}
            speed={1}
            style={
              Object {
                "backgroundColor": "transparent",
                "borderRadius": 9999,
                "height": 20,
                "overflow": "hidden",
                "width": 20,
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "height": "100%",
                  "opacity": 0,
                  "width": "100%",
                }
              }
            />
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 24,
            }
          }
        />
        <View
          dataSet={Object {}}
          fadeDuration={0.1}
          speed={1}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "column",
              "paddingLeft": 48,
              "paddingRight": 48,
              "width": "100%",
            }
          }
        >
          <View
            dataSet={Object {}}
            fadeDuration={0.1}
            speed={1}
            style={
              Object {
                "backgroundColor": "transparent",
                "borderRadius": 9999,
                "height": 12,
                "overflow": "hidden",
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "height": "100%",
                  "opacity": 0,
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            dataSet={Object {}}
            fadeDuration={0.1}
            speed={1}
            style={
              Object {
                "backgroundColor": "transparent",
                "borderRadius": 9999,
                "height": 12,
                "overflow": "hidden",
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "height": "100%",
                  "opacity": 0,
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            dataSet={Object {}}
            fadeDuration={0.1}
            speed={1}
            style={
              Object {
                "backgroundColor": "transparent",
                "borderRadius": 9999,
                "height": 12,
                "overflow": "hidden",
                "width": "75%",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "height": "100%",
                  "opacity": 0,
                  "width": "100%",
                }
              }
            />
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 24,
            }
          }
        />
        <View
          dataSet={Object {}}
          fadeDuration={0.1}
          speed={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 20,
              "height": 40,
              "marginBottom": 12,
              "overflow": "hidden",
              "width": 160,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#e5e5e5",
                "height": "100%",
                "opacity": 0,
                "width": "100%",
              }
            }
          />
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Skeleton FadeDuration 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "width": "50%",
        }
      }
    >
      <View
        dataSet={Object {}}
        fadeDuration={0.9}
        speed={10}
        style={
          Object {
            "backgroundColor": "#22c55e",
            "height": 80,
            "overflow": "hidden",
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#db2777",
              "height": "100%",
              "opacity": 0,
              "width": "100%",
            }
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Skeleton isLoaded 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "maxWidth": 400,
            "width": "90%",
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "borderColor": "#e5e7eb",
              "borderRadius": 6,
              "borderWidth": 1,
              "maxWidth": 400,
              "overflow": "hidden",
            }
          }
        >
          <View
            dataSet={Object {}}
            fadeDuration={0.1}
            isLoaded={false}
            speed={1}
            style={
              Object {
                "backgroundColor": "transparent",
                "height": 160,
                "overflow": "hidden",
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "height": "100%",
                  "opacity": 0,
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 32,
              }
            }
          />
          <View
            dataSet={Object {}}
            fadeDuration={0.1}
            speed={1}
            style={
              Object {
                "flexDirection": "column",
                "paddingLeft": 16,
                "paddingRight": 16,
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              fadeDuration={0.1}
              speed={1}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "height": 12,
                  "overflow": "hidden",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "height": "100%",
                    "opacity": 0,
                    "width": "100%",
                  }
                }
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 12,
                }
              }
            />
            <View
              dataSet={Object {}}
              fadeDuration={0.1}
              speed={1}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "height": 12,
                  "overflow": "hidden",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "height": "100%",
                    "opacity": 0,
                    "width": "100%",
                  }
                }
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 12,
                }
              }
            />
            <View
              dataSet={Object {}}
              fadeDuration={0.1}
              speed={1}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "height": 12,
                  "overflow": "hidden",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "height": "100%",
                    "opacity": 0,
                    "width": "100%",
                  }
                }
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 12,
                }
              }
            />
            <View
              dataSet={Object {}}
              fadeDuration={0.1}
              speed={1}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "height": 12,
                  "overflow": "hidden",
                  "width": "75%",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "height": "100%",
                    "opacity": 0,
                    "width": "100%",
                  }
                }
              />
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 32,
              }
            }
          />
          <View
            dataSet={Object {}}
            fadeDuration={0.1}
            isLoaded={false}
            speed={1}
            style={
              Object {
                "backgroundColor": "transparent",
                "borderRadius": 6,
                "height": 40,
                "marginBottom": 16,
                "overflow": "hidden",
                "paddingLeft": 16,
                "paddingRight": 16,
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#cffafe",
                  "height": "100%",
                  "opacity": 0,
                  "width": "100%",
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Slider Color 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "width": "100%",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "maxWidth": 300,
            "width": "75%",
          }
        }
      >
        <View
          _interactionBox={
            Object {
              "p": "2",
            }
          }
          aria-label="Slider"
          colorScheme="orange"
          dataSet={Object {}}
          defaultValue={
            Array [
              70,
            ]
          }
          sliderTrackHeight={4}
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "width": "100%",
            }
          }
          thumbSize={4}
        >
          <View
            accessible={true}
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 16,
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingTop": 12,
                "width": "100%",
              }
            }
          >
            <View
              colorScheme="orange"
              dataSet={Object {}}
              isVertical={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "borderRadius": 8,
                    "height": 16,
                    "overflow": "hidden",
                    "width": 16,
                  },
                  Object {
                    "height": 4,
                    "width": "100%",
                  },
                ]
              }
            >
              <View
                colorScheme="orange"
                dataSet={Object {}}
                sliderTrackPosition="70%"
                style={
                  Array [
                    Object {
                      "backgroundColor": "#ea580c",
                      "height": 16,
                      "left": 0,
                      "position": "absolute",
                      "width": 16,
                    },
                    Object {
                      "height": 4,
                      "width": "70%",
                    },
                  ]
                }
              />
            </View>
          </View>
          <View
            colorScheme="orange"
            dataSet={Object {}}
            onBlur={[Function]}
            onFocus={[Function]}
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            scaleOnPressed={1}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ea580c",
                  "borderRadius": 9999,
                  "height": 16,
                  "justifyContent": "center",
                  "position": "absolute",
                  "width": 16,
                  "zIndex": 999,
                },
                Array [
                  Object {
                    "bottom": undefined,
                    "left": "70%",
                    "transform": Array [
                      Object {
                        "translateX": -8,
                      },
                      Object {
                        "scale": 1,
                      },
                    ],
                  },
                  undefined,
                ],
              ]
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "borderRadius": 9999,
                    "paddingBottom": 8,
                    "paddingLeft": 8,
                    "paddingRight": 8,
                    "paddingTop": 8,
                    "position": "absolute",
                    "zIndex": -1,
                  }
                }
              />
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <View
                colorScheme="orange"
                dataSet={Object {}}
                scaleOnPressed={1}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#ea580c",
                    "borderRadius": 9999,
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
              />
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          _interactionBox={
            Object {
              "p": "2",
            }
          }
          aria-label="Slider"
          colorScheme="emerald"
          dataSet={Object {}}
          defaultValue={
            Array [
              70,
            ]
          }
          sliderTrackHeight={4}
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "width": "100%",
            }
          }
          thumbSize={4}
        >
          <View
            accessible={true}
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 16,
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingTop": 12,
                "width": "100%",
              }
            }
          >
            <View
              colorScheme="emerald"
              dataSet={Object {}}
              isVertical={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "borderRadius": 8,
                    "height": 16,
                    "overflow": "hidden",
                    "width": 16,
                  },
                  Object {
                    "height": 4,
                    "width": "100%",
                  },
                ]
              }
            >
              <View
                colorScheme="emerald"
                dataSet={Object {}}
                sliderTrackPosition="70%"
                style={
                  Array [
                    Object {
                      "backgroundColor": "#059669",
                      "height": 16,
                      "left": 0,
                      "position": "absolute",
                      "width": 16,
                    },
                    Object {
                      "height": 4,
                      "width": "70%",
                    },
                  ]
                }
              />
            </View>
          </View>
          <View
            colorScheme="emerald"
            dataSet={Object {}}
            onBlur={[Function]}
            onFocus={[Function]}
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            scaleOnPressed={1}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#059669",
                  "borderRadius": 9999,
                  "height": 16,
                  "justifyContent": "center",
                  "position": "absolute",
                  "width": 16,
                  "zIndex": 999,
                },
                Array [
                  Object {
                    "bottom": undefined,
                    "left": "70%",
                    "transform": Array [
                      Object {
                        "translateX": -8,
                      },
                      Object {
                        "scale": 1,
                      },
                    ],
                  },
                  undefined,
                ],
              ]
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "borderRadius": 9999,
                    "paddingBottom": 8,
                    "paddingLeft": 8,
                    "paddingRight": 8,
                    "paddingTop": 8,
                    "position": "absolute",
                    "zIndex": -1,
                  }
                }
              />
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <View
                colorScheme="emerald"
                dataSet={Object {}}
                scaleOnPressed={1}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#059669",
                    "borderRadius": 9999,
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
              />
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          _interactionBox={
            Object {
              "p": "2",
            }
          }
          aria-label="Slider"
          colorScheme="indigo"
          dataSet={Object {}}
          defaultValue={
            Array [
              70,
            ]
          }
          sliderTrackHeight={4}
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "width": "100%",
            }
          }
          thumbSize={4}
        >
          <View
            accessible={true}
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 16,
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingTop": 12,
                "width": "100%",
              }
            }
          >
            <View
              colorScheme="indigo"
              dataSet={Object {}}
              isVertical={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "borderRadius": 8,
                    "height": 16,
                    "overflow": "hidden",
                    "width": 16,
                  },
                  Object {
                    "height": 4,
                    "width": "100%",
                  },
                ]
              }
            >
              <View
                colorScheme="indigo"
                dataSet={Object {}}
                sliderTrackPosition="70%"
                style={
                  Array [
                    Object {
                      "backgroundColor": "#4f46e5",
                      "height": 16,
                      "left": 0,
                      "position": "absolute",
                      "width": 16,
                    },
                    Object {
                      "height": 4,
                      "width": "70%",
                    },
                  ]
                }
              />
            </View>
          </View>
          <View
            colorScheme="indigo"
            dataSet={Object {}}
            onBlur={[Function]}
            onFocus={[Function]}
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            scaleOnPressed={1}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#4f46e5",
                  "borderRadius": 9999,
                  "height": 16,
                  "justifyContent": "center",
                  "position": "absolute",
                  "width": 16,
                  "zIndex": 999,
                },
                Array [
                  Object {
                    "bottom": undefined,
                    "left": "70%",
                    "transform": Array [
                      Object {
                        "translateX": -8,
                      },
                      Object {
                        "scale": 1,
                      },
                    ],
                  },
                  undefined,
                ],
              ]
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "borderRadius": 9999,
                    "paddingBottom": 8,
                    "paddingLeft": 8,
                    "paddingRight": 8,
                    "paddingTop": 8,
                    "position": "absolute",
                    "zIndex": -1,
                  }
                }
              />
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <View
                colorScheme="indigo"
                dataSet={Object {}}
                scaleOnPressed={1}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#4f46e5",
                    "borderRadius": 9999,
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Slider Customized 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "width": "100%",
        }
      }
    >
      <View
        _interactionBox={
          Object {
            "p": "2",
          }
        }
        aria-label="Slider"
        colorScheme="green"
        dataSet={Object {}}
        defaultValue={
          Array [
            70,
          ]
        }
        sliderTrackHeight={4}
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "maxWidth": 300,
            "width": "75%",
          }
        }
        thumbSize={4}
      >
        <View
          accessible={true}
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 16,
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingTop": 12,
              "width": "100%",
            }
          }
        >
          <View
            colorScheme="green"
            dataSet={Object {}}
            isVertical={false}
            style={
              Array [
                Object {
                  "backgroundColor": "#dcfce7",
                  "borderRadius": 8,
                  "height": 16,
                  "overflow": "hidden",
                  "width": 16,
                },
                Object {
                  "height": 4,
                  "width": "100%",
                },
              ]
            }
          >
            <View
              colorScheme="green"
              dataSet={Object {}}
              sliderTrackPosition="70%"
              style={
                Array [
                  Object {
                    "backgroundColor": "#16a34a",
                    "height": 16,
                    "left": 0,
                    "position": "absolute",
                    "width": 16,
                  },
                  Object {
                    "height": 4,
                    "width": "70%",
                  },
                ]
              }
            />
          </View>
        </View>
        <View
          colorScheme="green"
          dataSet={Object {}}
          onBlur={[Function]}
          onFocus={[Function]}
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          scaleOnPressed={1}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderRadius": 9999,
                "borderWidth": 0,
                "height": 16,
                "justifyContent": "center",
                "position": "absolute",
                "width": 16,
                "zIndex": 999,
              },
              Array [
                Object {
                  "bottom": undefined,
                  "left": "70%",
                  "transform": Array [
                    Object {
                      "translateX": -8,
                    },
                    Object {
                      "scale": 1,
                    },
                  ],
                },
                undefined,
              ],
            ]
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "borderRadius": 9999,
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                  "position": "absolute",
                  "zIndex": -1,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              colorScheme="green"
              dataSet={Object {}}
              scaleOnPressed={1}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "borderWidth": 0,
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <Text
                allowFontScaling={false}
                dataSet={Object {}}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Object {
                      "color": "#16a34a",
                      "fontSize": 16,
                      "height": 16,
                      "lineHeight": 16,
                      "width": 16,
                    },
                    Object {
                      "fontFamily": "material",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Slider Disabled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "marginLeft": 20,
          "marginRight": 20,
          "width": "80%",
        }
      }
    >
      <View
        _interactionBox={
          Object {
            "p": "2",
          }
        }
        aria-label="Slider"
        colorScheme="indigo"
        dataSet={Object {}}
        defaultValue={
          Array [
            50,
          ]
        }
        maxValue={100}
        minValue={0}
        sliderTrackHeight={4}
        step={1}
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "opacity": 0.6,
            "width": "100%",
          }
        }
        thumbSize={4}
      >
        <View
          accessible={true}
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 16,
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingTop": 12,
              "width": "100%",
            }
          }
        >
          <View
            colorScheme="indigo"
            dataSet={Object {}}
            isVertical={false}
            style={
              Array [
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderRadius": 8,
                  "height": 16,
                  "overflow": "hidden",
                  "width": 16,
                },
                Object {
                  "height": 4,
                  "width": "100%",
                },
              ]
            }
          >
            <View
              colorScheme="indigo"
              dataSet={Object {}}
              sliderTrackPosition="50%"
              style={
                Array [
                  Object {
                    "backgroundColor": "#4f46e5",
                    "height": 16,
                    "left": 0,
                    "position": "absolute",
                    "width": 16,
                  },
                  Object {
                    "height": 4,
                    "width": "50%",
                  },
                ]
              }
            />
          </View>
        </View>
        <View
          colorScheme="indigo"
          dataSet={Object {}}
          onBlur={[Function]}
          onFocus={[Function]}
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          scaleOnPressed={1}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#4f46e5",
                "borderRadius": 9999,
                "height": 16,
                "justifyContent": "center",
                "position": "absolute",
                "width": 16,
                "zIndex": 999,
              },
              Array [
                Object {
                  "bottom": undefined,
                  "left": "50%",
                  "transform": Array [
                    Object {
                      "translateX": -8,
                    },
                    Object {
                      "scale": 1,
                    },
                  ],
                },
                undefined,
              ],
            ]
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "borderRadius": 9999,
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                  "position": "absolute",
                  "zIndex": -1,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              colorScheme="indigo"
              dataSet={Object {}}
              scaleOnPressed={1}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#4f46e5",
                  "borderRadius": 9999,
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Slider Form Controlled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "width": "100%",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "maxWidth": 300,
            "width": "75%",
          }
        }
      >
        <View
          dataSet={Object {}}
          isInvalid={true}
          style={
            Object {
              "width": "100%",
            }
          }
        >
          <View
            dataSet={Object {}}
            feedbackId="field-react-aria-0-2-feedback"
            hasFeedbackText={false}
            hasHelpText={false}
            helpTextId="field-react-aria-0-2-helptext"
            isDisabled={false}
            isInvalid={true}
            isReadOnly={false}
            isRequired={false}
            labelId="field-react-aria-0-2-label"
            nativeID="field-react-aria-0-2-label"
            setHasFeedbackText={[Function]}
            setHasHelpText={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#737373",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Set your budget
            </Text>
          </View>
          <View
            _interactionBox={
              Object {
                "p": "2",
              }
            }
            aria-label="Slider"
            dataSet={Object {}}
            defaultValue={
              Array [
                50,
              ]
            }
            sliderTrackHeight={4}
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "width": "100%",
              }
            }
            thumbSize={4}
          >
            <View
              accessible={true}
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onLayout={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "height": 16,
                  "justifyContent": "center",
                  "paddingBottom": 12,
                  "paddingTop": 12,
                  "width": "100%",
                }
              }
            >
              <View
                dataSet={Object {}}
                isVertical={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "#e5e5e5",
                      "borderRadius": 8,
                      "height": 16,
                      "overflow": "hidden",
                      "width": 16,
                    },
                    Object {
                      "height": 4,
                      "width": "100%",
                    },
                  ]
                }
              >
                <View
                  colorScheme="primary"
                  dataSet={Object {}}
                  sliderTrackPosition="50%"
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#0891b2",
                        "height": 16,
                        "left": 0,
                        "position": "absolute",
                        "width": 16,
                      },
                      Object {
                        "height": 4,
                        "width": "50%",
                      },
                    ]
                  }
                />
              </View>
            </View>
            <View
              colorScheme="primary"
              dataSet={Object {}}
              onBlur={[Function]}
              onFocus={[Function]}
              onMoveShouldSetResponder={[Function]}
              onMoveShouldSetResponderCapture={[Function]}
              onResponderEnd={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderReject={[Function]}
              onResponderRelease={[Function]}
              onResponderStart={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              onStartShouldSetResponderCapture={[Function]}
              scaleOnPressed={1}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#0891b2",
                    "borderRadius": 9999,
                    "height": 16,
                    "justifyContent": "center",
                    "position": "absolute",
                    "width": 16,
                    "zIndex": 999,
                  },
                  Array [
                    Object {
                      "bottom": undefined,
                      "left": "50%",
                      "transform": Array [
                        Object {
                          "translateX": -8,
                        },
                        Object {
                          "scale": 1,
                        },
                      ],
                    },
                    undefined,
                  ],
                ]
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "borderRadius": 9999,
                      "paddingBottom": 8,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                      "paddingTop": 8,
                      "position": "absolute",
                      "zIndex": -1,
                    }
                  }
                />
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "width": 8,
                    }
                  }
                />
                <View
                  colorScheme="primary"
                  dataSet={Object {}}
                  scaleOnPressed={1}
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#0891b2",
                      "borderRadius": 9999,
                      "display": "flex",
                      "justifyContent": "center",
                    }
                  }
                />
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            feedbackId="field-react-aria-0-2-feedback"
            hasFeedbackText={false}
            hasHelpText={false}
            helpTextId="field-react-aria-0-2-helptext"
            isDisabled={false}
            isInvalid={true}
            isReadOnly={false}
            isRequired={false}
            labelId="field-react-aria-0-2-label"
            nativeID="field-react-aria-0-2"
            setHasFeedbackText={[Function]}
            setHasHelpText={[Function]}
            style={
              Object {
                "marginTop": 8,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={12}
                bbWidth={12}
                color={4292617766}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#dc2626",
                      "fontSize": 12,
                      "height": 12,
                      "width": 12,
                    },
                    Object {
                      "flex": 0,
                      "height": 12,
                      "width": 12,
                    },
                  ]
                }
                tintColor={4292617766}
                vbHeight={16}
                vbWidth={16}
              >
                <RNSVGGroup
                  font={
                    Object {
                      "fontSize": 12,
                    }
                  }
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M8 16C6.41775 16 4.87103 15.5308 3.55544 14.6518C2.23985 13.7727 1.21447 12.5233 0.608967 11.0615C0.00346627 9.59966 -0.15496 7.99113 0.153721 6.43928C0.462403 4.88743 1.22433 3.46197 2.34315 2.34315C3.46197 1.22433 4.88743 0.462403 6.43928 0.153721C7.99113 -0.15496 9.59966 0.00346627 11.0615 0.608967C12.5233 1.21447 13.7727 2.23985 14.6518 3.55544C15.5308 4.87103 16 6.41775 16 8C16 10.1217 15.1571 12.1566 13.6569 13.6569C12.1566 15.1571 10.1217 16 8 16ZM8 14.4C9.2658 14.4 10.5032 14.0246 11.5556 13.3214C12.6081 12.6182 13.4284 11.6186 13.9128 10.4492C14.3972 9.27973 14.524 7.9929 14.277 6.75142C14.0301 5.50995 13.4205 4.36958 12.5255 3.47452C11.6304 2.57946 10.4901 1.96992 9.24858 1.72298C8.0071 1.47603 6.72028 1.60277 5.55083 2.08717C4.38138 2.57158 3.38184 3.39188 2.6786 4.44435C1.97536 5.49683 1.6 6.7342 1.6 8C1.6 9.69739 2.27429 11.3253 3.47452 12.5255C4.67475 13.7257 6.30262 14.4 8 14.4ZM7.2 10.4H8.8V12H7.2V10.4ZM7.2 4H8.8V8.8H7.2V4Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "width": 4,
                  }
                }
              />
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#dc2626",
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 18,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Something is wrong.
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Slider Playground 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "marginLeft": 20,
          "marginRight": 20,
          "width": "80%",
        }
      }
    >
      <View
        _interactionBox={
          Object {
            "p": "2",
          }
        }
        aria-label="Slider"
        dataSet={Object {}}
        defaultValue={
          Array [
            50,
          ]
        }
        maxValue={100}
        minValue={0}
        sliderTrackHeight={4}
        step={1}
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "width": "100%",
          }
        }
        thumbSize={4}
      >
        <View
          accessible={true}
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 16,
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingTop": 12,
              "width": "100%",
            }
          }
        >
          <View
            dataSet={Object {}}
            isVertical={false}
            style={
              Array [
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderRadius": 8,
                  "height": 16,
                  "overflow": "hidden",
                  "width": 16,
                },
                Object {
                  "height": 4,
                  "width": "100%",
                },
              ]
            }
          >
            <View
              colorScheme="primary"
              dataSet={Object {}}
              sliderTrackPosition="50%"
              style={
                Array [
                  Object {
                    "backgroundColor": "#0891b2",
                    "height": 16,
                    "left": 0,
                    "position": "absolute",
                    "width": 16,
                  },
                  Object {
                    "height": 4,
                    "width": "50%",
                  },
                ]
              }
            />
          </View>
        </View>
        <View
          colorScheme="primary"
          dataSet={Object {}}
          onBlur={[Function]}
          onFocus={[Function]}
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          scaleOnPressed={1}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#0891b2",
                "borderRadius": 9999,
                "height": 16,
                "justifyContent": "center",
                "position": "absolute",
                "width": 16,
                "zIndex": 999,
              },
              Array [
                Object {
                  "bottom": undefined,
                  "left": "50%",
                  "transform": Array [
                    Object {
                      "translateX": -8,
                    },
                    Object {
                      "scale": 1,
                    },
                  ],
                },
                undefined,
              ],
            ]
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "borderRadius": 9999,
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                  "position": "absolute",
                  "zIndex": -1,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              colorScheme="primary"
              dataSet={Object {}}
              scaleOnPressed={1}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0891b2",
                  "borderRadius": 9999,
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Slider ReadOnly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "marginLeft": 20,
          "marginRight": 20,
          "width": "80%",
        }
      }
    >
      <View
        _interactionBox={
          Object {
            "p": "2",
          }
        }
        aria-label="Slider"
        dataSet={Object {}}
        defaultValue={
          Array [
            50,
          ]
        }
        maxValue={100}
        minValue={0}
        sliderTrackHeight={4}
        step={1}
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "width": "100%",
          }
        }
        thumbSize={4}
      >
        <View
          accessible={true}
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 16,
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingTop": 12,
              "width": "100%",
            }
          }
        >
          <View
            dataSet={Object {}}
            isVertical={false}
            style={
              Array [
                Object {
                  "backgroundColor": "#e0e7ff",
                  "borderRadius": 8,
                  "height": 16,
                  "overflow": "hidden",
                  "width": 16,
                },
                Object {
                  "height": 4,
                  "width": "100%",
                },
              ]
            }
          >
            <View
              colorScheme="primary"
              dataSet={Object {}}
              sliderTrackPosition="50%"
              style={
                Array [
                  Object {
                    "backgroundColor": "#4f46e5",
                    "height": 16,
                    "left": 0,
                    "position": "absolute",
                    "width": 16,
                  },
                  Object {
                    "height": 4,
                    "width": "50%",
                  },
                ]
              }
            />
          </View>
        </View>
        <View
          colorScheme="primary"
          dataSet={Object {}}
          onBlur={[Function]}
          onFocus={[Function]}
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          scaleOnPressed={1}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#4f46e5",
                "borderRadius": 9999,
                "height": 16,
                "justifyContent": "center",
                "position": "absolute",
                "width": 16,
                "zIndex": 999,
              },
              Array [
                Object {
                  "bottom": undefined,
                  "left": "50%",
                  "transform": Array [
                    Object {
                      "translateX": -8,
                    },
                    Object {
                      "scale": 1,
                    },
                  ],
                },
                undefined,
              ],
            ]
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "borderRadius": 9999,
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                  "position": "absolute",
                  "zIndex": -1,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              colorScheme="primary"
              dataSet={Object {}}
              scaleOnPressed={1}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#4f46e5",
                  "borderRadius": 9999,
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Slider Size 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "width": "100%",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "maxWidth": 300,
            "width": "75%",
          }
        }
      >
        <View
          _interactionBox={
            Object {
              "p": "2",
            }
          }
          aria-label="Slider"
          dataSet={Object {}}
          defaultValue={
            Array [
              40,
            ]
          }
          sliderTrackHeight={4}
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "width": "100%",
            }
          }
          thumbSize={4}
        >
          <View
            accessible={true}
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 16,
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingTop": 12,
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              isVertical={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "borderRadius": 8,
                    "height": 16,
                    "overflow": "hidden",
                    "width": 16,
                  },
                  Object {
                    "height": 4,
                    "width": "100%",
                  },
                ]
              }
            >
              <View
                colorScheme="primary"
                dataSet={Object {}}
                sliderTrackPosition="40%"
                style={
                  Array [
                    Object {
                      "backgroundColor": "#0891b2",
                      "height": 16,
                      "left": 0,
                      "position": "absolute",
                      "width": 16,
                    },
                    Object {
                      "height": 4,
                      "width": "40%",
                    },
                  ]
                }
              />
            </View>
          </View>
          <View
            colorScheme="primary"
            dataSet={Object {}}
            onBlur={[Function]}
            onFocus={[Function]}
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            scaleOnPressed={1}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0891b2",
                  "borderRadius": 9999,
                  "height": 16,
                  "justifyContent": "center",
                  "position": "absolute",
                  "width": 16,
                  "zIndex": 999,
                },
                Array [
                  Object {
                    "bottom": undefined,
                    "left": "40%",
                    "transform": Array [
                      Object {
                        "translateX": -8,
                      },
                      Object {
                        "scale": 1,
                      },
                    ],
                  },
                  undefined,
                ],
              ]
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "borderRadius": 9999,
                    "paddingBottom": 8,
                    "paddingLeft": 8,
                    "paddingRight": 8,
                    "paddingTop": 8,
                    "position": "absolute",
                    "zIndex": -1,
                  }
                }
              />
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <View
                colorScheme="primary"
                dataSet={Object {}}
                scaleOnPressed={1}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#0891b2",
                    "borderRadius": 9999,
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
              />
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          _interactionBox={
            Object {
              "p": "2.5",
            }
          }
          aria-label="Slider"
          dataSet={Object {}}
          defaultValue={
            Array [
              60,
            ]
          }
          sliderTrackHeight={5}
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "width": "100%",
            }
          }
          thumbSize={5}
        >
          <View
            accessible={true}
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 20,
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingTop": 12,
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              isVertical={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "borderRadius": 8,
                    "height": 20,
                    "overflow": "hidden",
                    "width": 20,
                  },
                  Object {
                    "height": 5,
                    "width": "100%",
                  },
                ]
              }
            >
              <View
                colorScheme="primary"
                dataSet={Object {}}
                sliderTrackPosition="60%"
                style={
                  Array [
                    Object {
                      "backgroundColor": "#0891b2",
                      "height": 20,
                      "left": 0,
                      "position": "absolute",
                      "width": 20,
                    },
                    Object {
                      "height": 5,
                      "width": "60%",
                    },
                  ]
                }
              />
            </View>
          </View>
          <View
            colorScheme="primary"
            dataSet={Object {}}
            onBlur={[Function]}
            onFocus={[Function]}
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            scaleOnPressed={1}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0891b2",
                  "borderRadius": 9999,
                  "height": 20,
                  "justifyContent": "center",
                  "position": "absolute",
                  "width": 20,
                  "zIndex": 999,
                },
                Array [
                  Object {
                    "bottom": undefined,
                    "left": "60%",
                    "transform": Array [
                      Object {
                        "translateX": -10,
                      },
                      Object {
                        "scale": 1,
                      },
                    ],
                  },
                  undefined,
                ],
              ]
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "borderRadius": 9999,
                    "paddingBottom": 10,
                    "paddingLeft": 10,
                    "paddingRight": 10,
                    "paddingTop": 10,
                    "position": "absolute",
                    "zIndex": -1,
                  }
                }
              />
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <View
                colorScheme="primary"
                dataSet={Object {}}
                scaleOnPressed={1}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#0891b2",
                    "borderRadius": 9999,
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
              />
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          _interactionBox={
            Object {
              "p": "3",
            }
          }
          aria-label="Slider"
          dataSet={Object {}}
          defaultValue={
            Array [
              80,
            ]
          }
          sliderTrackHeight={6}
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "width": "100%",
            }
          }
          thumbSize={6}
        >
          <View
            accessible={true}
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingTop": 12,
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              isVertical={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "borderRadius": 8,
                    "height": 24,
                    "overflow": "hidden",
                    "width": 24,
                  },
                  Object {
                    "height": 6,
                    "width": "100%",
                  },
                ]
              }
            >
              <View
                colorScheme="primary"
                dataSet={Object {}}
                sliderTrackPosition="80%"
                style={
                  Array [
                    Object {
                      "backgroundColor": "#0891b2",
                      "height": 24,
                      "left": 0,
                      "position": "absolute",
                      "width": 24,
                    },
                    Object {
                      "height": 6,
                      "width": "80%",
                    },
                  ]
                }
              />
            </View>
          </View>
          <View
            colorScheme="primary"
            dataSet={Object {}}
            onBlur={[Function]}
            onFocus={[Function]}
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            scaleOnPressed={1}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0891b2",
                  "borderRadius": 9999,
                  "height": 24,
                  "justifyContent": "center",
                  "position": "absolute",
                  "width": 24,
                  "zIndex": 999,
                },
                Array [
                  Object {
                    "bottom": undefined,
                    "left": "80%",
                    "transform": Array [
                      Object {
                        "translateX": -12,
                      },
                      Object {
                        "scale": 1,
                      },
                    ],
                  },
                  undefined,
                ],
              ]
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "borderRadius": 9999,
                    "paddingBottom": 12,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 12,
                    "position": "absolute",
                    "zIndex": -1,
                  }
                }
              />
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <View
                colorScheme="primary"
                dataSet={Object {}}
                scaleOnPressed={1}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#0891b2",
                    "borderRadius": 9999,
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Slider Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "width": "100%",
        }
      }
    >
      <View
        _interactionBox={
          Object {
            "p": "2",
          }
        }
        accessibilityLabel="hello world"
        aria-label="hello world"
        dataSet={Object {}}
        defaultValue={
          Array [
            70,
          ]
        }
        maxValue={100}
        minValue={0}
        sliderTrackHeight={4}
        step={10}
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "maxWidth": 300,
            "width": "75%",
          }
        }
        thumbSize={4}
      >
        <View
          accessible={true}
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 16,
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingTop": 12,
              "width": "100%",
            }
          }
        >
          <View
            dataSet={Object {}}
            isVertical={false}
            style={
              Array [
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderRadius": 8,
                  "height": 16,
                  "overflow": "hidden",
                  "width": 16,
                },
                Object {
                  "height": 4,
                  "width": "100%",
                },
              ]
            }
          >
            <View
              colorScheme="primary"
              dataSet={Object {}}
              sliderTrackPosition="70%"
              style={
                Array [
                  Object {
                    "backgroundColor": "#0891b2",
                    "height": 16,
                    "left": 0,
                    "position": "absolute",
                    "width": 16,
                  },
                  Object {
                    "height": 4,
                    "width": "70%",
                  },
                ]
              }
            />
          </View>
        </View>
        <View
          colorScheme="primary"
          dataSet={Object {}}
          onBlur={[Function]}
          onFocus={[Function]}
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          scaleOnPressed={1}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#0891b2",
                "borderRadius": 9999,
                "height": 16,
                "justifyContent": "center",
                "position": "absolute",
                "width": 16,
                "zIndex": 999,
              },
              Array [
                Object {
                  "bottom": undefined,
                  "left": "70%",
                  "transform": Array [
                    Object {
                      "translateX": -8,
                    },
                    Object {
                      "scale": 1,
                    },
                  ],
                },
                undefined,
              ],
            ]
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "borderRadius": 9999,
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                  "position": "absolute",
                  "zIndex": -1,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              colorScheme="primary"
              dataSet={Object {}}
              scaleOnPressed={1}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0891b2",
                  "borderRadius": 9999,
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Slider Value 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "width": "100%",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "maxWidth": 300,
            "width": "75%",
          }
        }
      >
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#171717",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textAlign": "center",
              "textDecorationLine": undefined,
            }
          }
        >
          onChangeValue - 
          70
        </Text>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 16,
            }
          }
        />
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#171717",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textAlign": "center",
              "textDecorationLine": undefined,
            }
          }
        >
          onChangeEndValue - 
          70
        </Text>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          _interactionBox={
            Object {
              "p": "2",
            }
          }
          aria-label="Slider"
          colorScheme="cyan"
          dataSet={Object {}}
          defaultValue={
            Array [
              70,
            ]
          }
          onChange={[Function]}
          onChangeEnd={[Function]}
          sliderTrackHeight={4}
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "width": "100%",
            }
          }
          thumbSize={4}
        >
          <View
            accessible={true}
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 16,
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingTop": 12,
                "width": "100%",
              }
            }
          >
            <View
              colorScheme="cyan"
              dataSet={Object {}}
              isVertical={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "borderRadius": 8,
                    "height": 16,
                    "overflow": "hidden",
                    "width": 16,
                  },
                  Object {
                    "height": 4,
                    "width": "100%",
                  },
                ]
              }
            >
              <View
                colorScheme="cyan"
                dataSet={Object {}}
                sliderTrackPosition="70%"
                style={
                  Array [
                    Object {
                      "backgroundColor": "#0891b2",
                      "height": 16,
                      "left": 0,
                      "position": "absolute",
                      "width": 16,
                    },
                    Object {
                      "height": 4,
                      "width": "70%",
                    },
                  ]
                }
              />
            </View>
          </View>
          <View
            colorScheme="cyan"
            dataSet={Object {}}
            onBlur={[Function]}
            onFocus={[Function]}
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            scaleOnPressed={1}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0891b2",
                  "borderRadius": 9999,
                  "height": 16,
                  "justifyContent": "center",
                  "position": "absolute",
                  "width": 16,
                  "zIndex": 999,
                },
                Array [
                  Object {
                    "bottom": undefined,
                    "left": "70%",
                    "transform": Array [
                      Object {
                        "translateX": -8,
                      },
                      Object {
                        "scale": 1,
                      },
                    ],
                  },
                  undefined,
                ],
              ]
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "borderRadius": 9999,
                    "paddingBottom": 8,
                    "paddingLeft": 8,
                    "paddingRight": 8,
                    "paddingTop": 8,
                    "position": "absolute",
                    "zIndex": -1,
                  }
                }
              />
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <View
                colorScheme="cyan"
                dataSet={Object {}}
                scaleOnPressed={1}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#0891b2",
                    "borderRadius": 9999,
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Slider Vertical 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "marginLeft": 20,
          "marginRight": 20,
          "width": "80%",
        }
      }
    >
      <View
        _interactionBox={
          Object {
            "p": "2",
          }
        }
        aria-label="Slider"
        colorScheme="teal"
        dataSet={Object {}}
        defaultValue={
          Array [
            70,
          ]
        }
        orientation="vertical"
        sliderTrackHeight={4}
        style={
          Object {
            "alignItems": "center",
            "height": 192,
            "justifyContent": "center",
          }
        }
        thumbSize={4}
      >
        <View
          accessible={true}
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": "100%",
              "justifyContent": "center",
              "paddingLeft": 12,
              "paddingRight": 12,
              "width": 16,
            }
          }
        >
          <View
            colorScheme="teal"
            dataSet={Object {}}
            isVertical={true}
            style={
              Array [
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderRadius": 8,
                  "height": 16,
                  "overflow": "hidden",
                  "width": 16,
                },
                Object {
                  "height": "100%",
                  "width": 4,
                },
              ]
            }
          >
            <View
              colorScheme="teal"
              dataSet={Object {}}
              orientation="vertical"
              sliderTrackPosition="70%"
              style={
                Array [
                  Object {
                    "backgroundColor": "#0d9488",
                    "bottom": 0,
                    "height": 16,
                    "position": "absolute",
                    "width": 16,
                  },
                  Object {
                    "height": "70%",
                    "width": 4,
                  },
                ]
              }
            />
          </View>
        </View>
        <View
          colorScheme="teal"
          dataSet={Object {}}
          onBlur={[Function]}
          onFocus={[Function]}
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          scaleOnPressed={1}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#0d9488",
                "borderRadius": 9999,
                "height": 16,
                "justifyContent": "center",
                "position": "absolute",
                "width": 16,
                "zIndex": 999,
              },
              Array [
                Object {
                  "bottom": "70%",
                  "left": undefined,
                  "transform": Array [
                    Object {
                      "translateY": 8,
                    },
                    Object {
                      "scale": 1,
                    },
                  ],
                },
                undefined,
              ],
            ]
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "borderRadius": 9999,
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                  "position": "absolute",
                  "zIndex": -1,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              colorScheme="teal"
              dataSet={Object {}}
              scaleOnPressed={1}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0d9488",
                  "borderRadius": 9999,
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Spinner Color 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "center",
        }
      }
    >
      <ActivityIndicator
        accessibilityLabel="loading"
        accessible={true}
        animating={true}
        color="#10b981"
        hidesWhenStopped={true}
        size="small"
        style={
          Array [
            Array [
              Object {},
              Object {
                "dataSet": Object {},
              },
            ],
            undefined,
          ]
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "width": 32,
          }
        }
      />
      <ActivityIndicator
        accessibilityLabel="loading"
        accessible={true}
        animating={true}
        color="#f97316"
        hidesWhenStopped={true}
        size="small"
        style={
          Array [
            Array [
              Object {},
              Object {
                "dataSet": Object {},
              },
            ],
            undefined,
          ]
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "width": 32,
          }
        }
      />
      <ActivityIndicator
        accessibilityLabel="loading"
        accessible={true}
        animating={true}
        color="#6366f1"
        hidesWhenStopped={true}
        size="small"
        style={
          Array [
            Array [
              Object {},
              Object {
                "dataSet": Object {},
              },
            ],
            undefined,
          ]
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "width": 32,
          }
        }
      />
      <ActivityIndicator
        accessibilityLabel="loading"
        accessible={true}
        animating={true}
        color="#06b6d4"
        hidesWhenStopped={true}
        size="small"
        style={
          Array [
            Array [
              Object {},
              Object {
                "dataSet": Object {},
              },
            ],
            undefined,
          ]
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Spinner Playground 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "space-between",
        }
      }
    >
      <ActivityIndicator
        accessibilityLabel="loading"
        accessible={true}
        animating={true}
        color="#67e8f9"
        hidesWhenStopped={true}
        size="large"
        style={
          Array [
            Array [
              Object {},
              Object {
                "dataSet": Object {},
              },
            ],
            undefined,
          ]
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Spinner Size 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
        }
      }
    >
      <ActivityIndicator
        accessibilityLabel="loading"
        accessible={true}
        animating={true}
        color="#0891b2"
        hidesWhenStopped={true}
        size="small"
        style={
          Array [
            Array [
              Object {},
              Object {
                "dataSet": Object {},
              },
            ],
            undefined,
          ]
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "width": 32,
          }
        }
      />
      <ActivityIndicator
        accessibilityLabel="loading"
        accessible={true}
        animating={true}
        color="#0891b2"
        hidesWhenStopped={true}
        size="large"
        style={
          Array [
            Array [
              Object {},
              Object {
                "dataSet": Object {},
              },
            ],
            undefined,
          ]
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Spinner Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "center",
        }
      }
    >
      <ActivityIndicator
        accessibilityLabel="loading"
        accessible={true}
        animating={true}
        color="#0891b2"
        hidesWhenStopped={true}
        size="small"
        style={
          Array [
            Array [
              Object {},
              Object {
                "accessibilityLabel": "Loading posts",
                "dataSet": Object {},
              },
            ],
            undefined,
          ]
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "width": 8,
          }
        }
      />
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#06b6d4",
            "fontFamily": undefined,
            "fontSize": 16,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 20,
            "textDecorationLine": undefined,
          }
        }
      >
        Loading
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Stack Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RCTScrollView
      contentContainerStyle={
        Array [
          Object {},
          Object {
            "dataSet": Object {},
          },
        ]
      }
      dataSet={Object {}}
      style={Object {}}
    >
      <View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "marginTop": 16,
              "paddingLeft": 32,
              "paddingRight": 32,
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            row
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "flexDirection": "row",
                "marginBottom": 10,
                "marginTop": 6,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#22d3ee",
                  "borderRadius": 4,
                  "display": "flex",
                  "elevation": 4,
                  "height": 64,
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.23,
                  "shadowRadius": 2.62,
                  "width": 64,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafaf9",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Box 1
              </Text>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 12,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#06b6d4",
                  "borderRadius": 4,
                  "display": "flex",
                  "elevation": 4,
                  "height": 64,
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.23,
                  "shadowRadius": 2.62,
                  "width": 64,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafaf9",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Box 2
              </Text>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 12,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0e7490",
                  "borderRadius": 4,
                  "display": "flex",
                  "elevation": 4,
                  "height": 64,
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.23,
                  "shadowRadius": 2.62,
                  "width": 64,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafaf9",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Box 3
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#d4d4d4",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            column
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "flexDirection": "column",
                "marginBottom": 10,
                "marginTop": 6,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#22d3ee",
                  "borderRadius": 4,
                  "display": "flex",
                  "elevation": 4,
                  "height": 64,
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.23,
                  "shadowRadius": 2.62,
                  "width": 64,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafaf9",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Box 1
              </Text>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 12,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#06b6d4",
                  "borderRadius": 4,
                  "display": "flex",
                  "elevation": 4,
                  "height": 64,
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.23,
                  "shadowRadius": 2.62,
                  "width": 64,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafaf9",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Box 2
              </Text>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 12,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0e7490",
                  "borderRadius": 4,
                  "display": "flex",
                  "elevation": 4,
                  "height": 64,
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.23,
                  "shadowRadius": 2.62,
                  "width": 64,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafaf9",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Box 3
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#d4d4d4",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            row-reverse
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "flexDirection": "row",
                "marginBottom": 10,
                "marginTop": 6,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0e7490",
                  "borderRadius": 4,
                  "display": "flex",
                  "elevation": 4,
                  "height": 64,
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.23,
                  "shadowRadius": 2.62,
                  "width": 64,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafaf9",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Box 3
              </Text>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 12,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#06b6d4",
                  "borderRadius": 4,
                  "display": "flex",
                  "elevation": 4,
                  "height": 64,
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.23,
                  "shadowRadius": 2.62,
                  "width": 64,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafaf9",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Box 2
              </Text>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 12,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#22d3ee",
                  "borderRadius": 4,
                  "display": "flex",
                  "elevation": 4,
                  "height": 64,
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.23,
                  "shadowRadius": 2.62,
                  "width": 64,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafaf9",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Box 1
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#d4d4d4",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            column-reverse
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "flexDirection": "column-reverse",
                "marginBottom": 10,
                "marginTop": 6,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#22d3ee",
                  "borderRadius": 4,
                  "display": "flex",
                  "elevation": 4,
                  "height": 64,
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.23,
                  "shadowRadius": 2.62,
                  "width": 64,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafaf9",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Box 1
              </Text>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 12,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#06b6d4",
                  "borderRadius": 4,
                  "display": "flex",
                  "elevation": 4,
                  "height": 64,
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.23,
                  "shadowRadius": 2.62,
                  "width": 64,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafaf9",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Box 2
              </Text>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 12,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0e7490",
                  "borderRadius": 4,
                  "display": "flex",
                  "elevation": 4,
                  "height": 64,
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.23,
                  "shadowRadius": 2.62,
                  "width": 64,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafaf9",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Box 3
              </Text>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#d4d4d4",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Stack Divider 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={Object {}}
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "marginBottom": 12,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Simple
            </Text>
          </View>
          <View
            aria-orientation="vertical"
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#e5e7eb",
                "height": "100%",
                "marginLeft": 8,
                "marginRight": 8,
                "width": 2,
              }
            }
            thickness="2"
          />
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Easy
            </Text>
          </View>
          <View
            aria-orientation="vertical"
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#e5e7eb",
                "height": "100%",
                "marginLeft": 8,
                "marginRight": 8,
                "width": 2,
              }
            }
            thickness="2"
          />
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Beautiful
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots StatusBar Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "marginBottom": 12,
            "textAlign": "center",
            "textDecorationLine": undefined,
          }
        }
      >
        StatusBar Visibility:
        

        Visible
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "paddingBottom": 40,
            "paddingLeft": 40,
            "paddingRight": 40,
            "paddingTop": 40,
          }
        }
      >
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#0891b2",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 10,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 10,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
            test={true}
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafafa",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Toggle StatusBar
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Switch Accessibility 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        }
      }
    >
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 18,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 27,
            "textDecorationLine": undefined,
          }
        }
      >
        Accessibility
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "width": 32,
          }
        }
      />
      <RCTSwitch
        accessibilityHint="turn on or off"
        accessibilityLabel="switch-accessible"
        accessibilityRole="switch"
        activeThumbColor="#fafafa"
        colorScheme="primary"
        dataSet={Object {}}
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#0891b2"
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Object {},
              Object {
                "backgroundColor": "#d4d4d4",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#fafafa"
        tintColor="#d4d4d4"
        value={false}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Switch Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        }
      }
    >
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": undefined,
          }
        }
      >
        Bluetooth
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "width": 16,
          }
        }
      />
      <RCTSwitch
        accessibilityRole="switch"
        activeThumbColor="#fafafa"
        colorScheme="primary"
        dataSet={Object {}}
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#0891b2"
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Array [
                Object {},
                Object {
                  "transform": Array [
                    Object {
                      "scale": 0.75,
                    },
                  ],
                },
              ],
              Object {
                "backgroundColor": "#d4d4d4",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#fafafa"
        tintColor="#d4d4d4"
        value={false}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Switch ColorSchemes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <RCTSwitch
        accessibilityRole="switch"
        activeThumbColor="#fafafa"
        colorScheme="primary"
        dataSet={Object {}}
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#0891b2"
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Object {},
              Object {
                "backgroundColor": "#d4d4d4",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#fafafa"
        tintColor="#d4d4d4"
        value={true}
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 16,
          }
        }
      />
      <RCTSwitch
        accessibilityRole="switch"
        activeThumbColor="#fafafa"
        colorScheme="secondary"
        dataSet={Object {}}
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#db2777"
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Object {},
              Object {
                "backgroundColor": "#d4d4d4",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#fafafa"
        tintColor="#d4d4d4"
        value={true}
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 16,
          }
        }
      />
      <RCTSwitch
        accessibilityRole="switch"
        activeThumbColor="#fafafa"
        colorScheme="emerald"
        dataSet={Object {}}
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#059669"
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Object {},
              Object {
                "backgroundColor": "#d4d4d4",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#fafafa"
        tintColor="#d4d4d4"
        value={true}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Switch Sizes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <RCTSwitch
        accessibilityRole="switch"
        activeThumbColor="#fafafa"
        colorScheme="primary"
        dataSet={Object {}}
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#0891b2"
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Array [
                Object {},
                Object {
                  "transform": Array [
                    Object {
                      "scale": 0.75,
                    },
                  ],
                },
              ],
              Object {
                "backgroundColor": "#d4d4d4",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#fafafa"
        tintColor="#d4d4d4"
        value={false}
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 16,
          }
        }
      />
      <RCTSwitch
        accessibilityRole="switch"
        activeThumbColor="#fafafa"
        colorScheme="primary"
        dataSet={Object {}}
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#0891b2"
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Object {},
              Object {
                "backgroundColor": "#d4d4d4",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#fafafa"
        tintColor="#d4d4d4"
        value={false}
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 16,
          }
        }
      />
      <RCTSwitch
        accessibilityRole="switch"
        activeThumbColor="#fafafa"
        colorScheme="primary"
        dataSet={Object {}}
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#0891b2"
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Array [
                Object {
                  "marginBottom": 4,
                  "marginLeft": 4,
                  "marginRight": 4,
                  "marginTop": 4,
                },
                Object {
                  "transform": Array [
                    Object {
                      "scale": 1.25,
                    },
                  ],
                },
              ],
              Object {
                "backgroundColor": "#d4d4d4",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#fafafa"
        tintColor="#d4d4d4"
        value={false}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Switch Switch bgColor 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <RCTSwitch
        accessibilityRole="switch"
        activeThumbColor="#fafafa"
        colorScheme="primary"
        dataSet={Object {}}
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#0891b2"
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Object {},
              Object {
                "backgroundColor": "#d4d4d4",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#fafafa"
        tintColor="#d4d4d4"
        value={false}
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 16,
          }
        }
      />
      <RCTSwitch
        accessibilityRole="switch"
        activeThumbColor="#f97316"
        colorScheme="primary"
        dataSet={Object {}}
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#fed7aa"
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Object {},
              Object {
                "backgroundColor": "#ffedd5",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#fff7ed"
        tintColor="#ffedd5"
        value={false}
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 16,
          }
        }
      />
      <RCTSwitch
        accessibilityRole="switch"
        activeThumbColor="#6366f1"
        colorScheme="primary"
        dataSet={Object {}}
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#c7d2fe"
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Object {},
              Object {
                "backgroundColor": "#e0e7ff",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#eef2ff"
        tintColor="#e0e7ff"
        value={false}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Text Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Text
      dataSet={Object {}}
      style={
        Object {
          "backgroundColor": undefined,
          "color": "#171717",
          "fontFamily": undefined,
          "fontSize": 14,
          "fontStyle": "normal",
          "fontWeight": "400",
          "letterSpacing": 0,
          "lineHeight": 21,
          "textDecorationLine": undefined,
        }
      }
    >
      This is Text.
    </Text>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Text Changing Font Size 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 12,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 18,
            "textDecorationLine": undefined,
          }
        }
      >
        xs
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": undefined,
          }
        }
      >
        sm
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 16,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 24,
            "textDecorationLine": undefined,
          }
        }
      >
        md
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 18,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 27,
            "textDecorationLine": undefined,
          }
        }
      >
        lg
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 20,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 30,
            "textDecorationLine": undefined,
          }
        }
      >
        xl
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 36,
            "textDecorationLine": undefined,
          }
        }
      >
        2xl
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 30,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 45,
            "textDecorationLine": undefined,
          }
        }
      >
        3xl
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 36,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 54,
            "textDecorationLine": undefined,
          }
        }
      >
        4xl
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 48,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 72,
            "textDecorationLine": undefined,
          }
        }
      >
        5xl
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 60,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 90,
            "textDecorationLine": undefined,
          }
        }
      >
        6xl
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Text Nested 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Text
      dataSet={Object {}}
      style={
        Object {
          "backgroundColor": undefined,
          "color": "#171717",
          "fontFamily": undefined,
          "fontSize": 14,
          "fontStyle": "italic",
          "fontWeight": "400",
          "letterSpacing": 0,
          "lineHeight": 21,
          "textDecorationLine": undefined,
        }
      }
    >
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "fontFamily": undefined,
            "fontSize": undefined,
            "fontStyle": undefined,
            "fontWeight": "700",
            "textDecorationLine": undefined,
          }
        }
      >
        Taj Mahal
      </Text>
       is in Agra.
    </Text>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Text Overriden 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": undefined,
          }
        }
      >
        Bold
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 8,
          }
        }
      />
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "italic",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": undefined,
          }
        }
      >
        Italic
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 8,
          }
        }
      />
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": "underline",
          }
        }
      >
        Underline
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 8,
          }
        }
      />
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": "#fdba74",
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": undefined,
          }
        }
      >
        Highlighted
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 8,
          }
        }
      />
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": undefined,
          }
        }
      >
        H
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "fontFamily": undefined,
              "fontSize": 10,
              "fontStyle": undefined,
              "fontWeight": undefined,
              "textDecorationLine": undefined,
            }
          }
        >
          2
        </Text>
        O
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 8,
          }
        }
      />
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": "underline",
          }
        }
      >
        Underline
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 8,
          }
        }
      />
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": "line-through",
          }
        }
      >
        StrikeThrough
      </Text>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 8,
          }
        }
      />
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "italic",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": "underline",
          }
        }
      >
        Bold, Italic & Underline
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Text Truncated 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Text
      dataSet={Object {}}
      numberOfLines={1}
      style={
        Object {
          "backgroundColor": undefined,
          "color": "#171717",
          "fontFamily": undefined,
          "fontSize": 14,
          "fontStyle": "normal",
          "fontWeight": "400",
          "letterSpacing": 0,
          "lineHeight": 21,
          "maxWidth": 300,
          "textDecorationLine": undefined,
          "width": "80%",
        }
      }
    >
      NativeBase gives you a contrasting color based on your theme. You can also customise it using the useAccessibleColors hook.
    </Text>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots TextArea Default 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "width": "100%",
        }
      }
    >
      <View
        dataSet={Object {}}
        isFocused={false}
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#d4d4d4",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "height": 80,
            "maxWidth": 300,
            "overflow": "hidden",
            "width": "75%",
          }
        }
      >
        <TextInput
          accessible={true}
          allowFontScaling={true}
          dataSet={Object {}}
          editable={true}
          multiline={true}
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="Text Area Placeholder"
          placeholderTextColor="#a3a3a3"
          rejectResponderTermination={true}
          secureTextEntry={false}
          selectionColor="#1f2937"
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "#171717",
              "flex": 1,
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "400",
              "height": "100%",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
              "width": "100%",
            }
          }
          textAlignVertical="top"
          underlineColorAndroid="transparent"
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots TextArea InValid and Disabled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "width": "100%",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "maxWidth": 300,
            "width": "75%",
          }
        }
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 18,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 27,
                "marginBottom": 16,
                "textDecorationLine": undefined,
              }
            }
          >
            Invalid TextArea
          </Text>
          <View
            dataSet={Object {}}
            isFocused={false}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderColor": "#dc2626",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "height": 80,
                  "marginBottom": 20,
                  "overflow": "hidden",
                },
                Object {
                  "outlineColor": "#dc2626",
                  "outlineStyle": "solid",
                  "outlineWidth": "1px",
                },
              ]
            }
          >
            <TextInput
              accessibilityInvalid={true}
              accessible={true}
              allowFontScaling={true}
              aria-label="t1"
              dataSet={Object {}}
              editable={true}
              isInvalid={true}
              multiline={true}
              onBlur={[Function]}
              onFocus={[Function]}
              onKeyPress={[Function]}
              placeholder="Invalid TextArea"
              placeholderTextColor="#a3a3a3"
              rejectResponderTermination={true}
              secureTextEntry={false}
              selectionColor="#1f2937"
              style={
                Object {
                  "backgroundColor": "transparent",
                  "color": "#171717",
                  "flex": 1,
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": "100%",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                  "width": "100%",
                }
              }
              textAlignVertical="top"
              underlineColorAndroid="transparent"
            />
          </View>
          <View
            aria-orientation="horizontal"
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#d4d4d4",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 10,
            }
          }
        />
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 18,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 27,
                "marginBottom": 16,
                "textDecorationLine": undefined,
              }
            }
          >
            Disabled TextArea
          </Text>
          <View
            dataSet={Object {}}
            isFocused={false}
            style={
              Object {
                "alignItems": "center",
                "borderColor": "#d4d4d4",
                "borderRadius": 4,
                "borderWidth": 1,
                "flexDirection": "row",
                "height": 80,
                "opacity": 0.4,
                "overflow": "hidden",
              }
            }
          >
            <TextInput
              accessible={true}
              allowFontScaling={true}
              aria-label="t1Disabled"
              dataSet={Object {}}
              disabled={true}
              editable={false}
              multiline={true}
              onBlur={[Function]}
              onFocus={[Function]}
              onKeyPress={[Function]}
              placeholder="Disabled TextArea"
              placeholderTextColor="#404040"
              rejectResponderTermination={true}
              secureTextEntry={false}
              selectionColor="#1f2937"
              style={
                Object {
                  "backgroundColor": "transparent",
                  "color": "#171717",
                  "flex": 1,
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": "100%",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                  "width": "100%",
                }
              }
              textAlignVertical="top"
              underlineColorAndroid="transparent"
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots TextArea Sizes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RCTScrollView
      contentContainerStyle={
        Array [
          Object {},
          Object {
            "dataSet": Object {},
          },
        ]
      }
      dataSet={Object {}}
      style={
        Object {
          "width": "70%",
        }
      }
    >
      <View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
              "marginTop": 16,
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": null,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 30,
                "marginBottom": 40,
                "textAlign": "center",
                "textDecorationLine": undefined,
              }
            }
          >
            Sizes
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": "90%",
              }
            }
          >
            <View
              dataSet={Object {}}
              isFocused={false}
              style={
                Object {
                  "alignItems": "center",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "height": 80,
                  "overflow": "hidden",
                }
              }
            >
              <TextInput
                accessible={true}
                allowFontScaling={true}
                aria-label="t2"
                dataSet={Object {}}
                editable={true}
                multiline={true}
                onBlur={[Function]}
                onFocus={[Function]}
                onKeyPress={[Function]}
                placeholder="xs"
                placeholderTextColor="#a3a3a3"
                rejectResponderTermination={true}
                secureTextEntry={false}
                selectionColor="#1f2937"
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#171717",
                    "flex": 1,
                    "fontFamily": undefined,
                    "fontSize": 10,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "height": "100%",
                    "paddingBottom": 8,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 8,
                    "width": "100%",
                  }
                }
                textAlignVertical="top"
                underlineColorAndroid="transparent"
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 16,
                }
              }
            />
            <View
              dataSet={Object {}}
              isFocused={false}
              style={
                Object {
                  "alignItems": "center",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "height": 80,
                  "overflow": "hidden",
                }
              }
            >
              <TextInput
                accessible={true}
                allowFontScaling={true}
                aria-label="t2"
                dataSet={Object {}}
                editable={true}
                multiline={true}
                onBlur={[Function]}
                onFocus={[Function]}
                onKeyPress={[Function]}
                placeholder="sm"
                placeholderTextColor="#a3a3a3"
                rejectResponderTermination={true}
                secureTextEntry={false}
                selectionColor="#1f2937"
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#171717",
                    "flex": 1,
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "height": "100%",
                    "paddingBottom": 8,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 8,
                    "width": "100%",
                  }
                }
                textAlignVertical="top"
                underlineColorAndroid="transparent"
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 16,
                }
              }
            />
            <View
              dataSet={Object {}}
              isFocused={false}
              style={
                Object {
                  "alignItems": "center",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "height": 80,
                  "overflow": "hidden",
                }
              }
            >
              <TextInput
                accessible={true}
                allowFontScaling={true}
                aria-label="t2"
                dataSet={Object {}}
                editable={true}
                multiline={true}
                onBlur={[Function]}
                onFocus={[Function]}
                onKeyPress={[Function]}
                placeholder="md"
                placeholderTextColor="#a3a3a3"
                rejectResponderTermination={true}
                secureTextEntry={false}
                selectionColor="#1f2937"
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#171717",
                    "flex": 1,
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "height": "100%",
                    "paddingBottom": 8,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 8,
                    "width": "100%",
                  }
                }
                textAlignVertical="top"
                underlineColorAndroid="transparent"
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 16,
                }
              }
            />
            <View
              dataSet={Object {}}
              isFocused={false}
              style={
                Object {
                  "alignItems": "center",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "height": 80,
                  "overflow": "hidden",
                }
              }
            >
              <TextInput
                accessible={true}
                allowFontScaling={true}
                aria-label="t2"
                dataSet={Object {}}
                editable={true}
                multiline={true}
                onBlur={[Function]}
                onFocus={[Function]}
                onKeyPress={[Function]}
                placeholder="lg"
                placeholderTextColor="#a3a3a3"
                rejectResponderTermination={true}
                secureTextEntry={false}
                selectionColor="#1f2937"
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#171717",
                    "flex": 1,
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "height": "100%",
                    "paddingBottom": 8,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 8,
                    "width": "100%",
                  }
                }
                textAlignVertical="top"
                underlineColorAndroid="transparent"
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 16,
                }
              }
            />
            <View
              dataSet={Object {}}
              isFocused={false}
              style={
                Object {
                  "alignItems": "center",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "height": 80,
                  "overflow": "hidden",
                }
              }
            >
              <TextInput
                accessible={true}
                allowFontScaling={true}
                aria-label="t2"
                dataSet={Object {}}
                editable={true}
                multiline={true}
                onBlur={[Function]}
                onFocus={[Function]}
                onKeyPress={[Function]}
                placeholder="xl"
                placeholderTextColor="#a3a3a3"
                rejectResponderTermination={true}
                secureTextEntry={false}
                selectionColor="#1f2937"
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#171717",
                    "flex": 1,
                    "fontFamily": undefined,
                    "fontSize": 18,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "height": "100%",
                    "paddingBottom": 8,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 8,
                    "width": "100%",
                  }
                }
                textAlignVertical="top"
                underlineColorAndroid="transparent"
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 16,
                }
              }
            />
            <View
              dataSet={Object {}}
              isFocused={false}
              style={
                Object {
                  "alignItems": "center",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "height": 80,
                  "overflow": "hidden",
                }
              }
            >
              <TextInput
                accessible={true}
                allowFontScaling={true}
                aria-label="t2"
                dataSet={Object {}}
                editable={true}
                multiline={true}
                onBlur={[Function]}
                onFocus={[Function]}
                onKeyPress={[Function]}
                placeholder="2xl"
                placeholderTextColor="#a3a3a3"
                rejectResponderTermination={true}
                secureTextEntry={false}
                selectionColor="#1f2937"
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#171717",
                    "flex": 1,
                    "fontFamily": undefined,
                    "fontSize": 20,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "height": "100%",
                    "paddingBottom": 8,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 8,
                    "width": "100%",
                  }
                }
                textAlignVertical="top"
                underlineColorAndroid="transparent"
              />
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots TextArea Value Controlled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "width": "100%",
        }
      }
    >
      <View
        dataSet={Object {}}
        isFocused={false}
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#d4d4d4",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "height": 80,
            "maxWidth": 300,
            "overflow": "hidden",
            "width": "75%",
          }
        }
      >
        <TextInput
          accessible={true}
          allowFontScaling={true}
          dataSet={Object {}}
          editable={true}
          multiline={true}
          onBlur={[Function]}
          onChange={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholderTextColor="#a3a3a3"
          rejectResponderTermination={true}
          secureTextEntry={false}
          selectionColor="#1f2937"
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "#171717",
              "flex": 1,
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "400",
              "height": "100%",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
              "width": "100%",
            }
          }
          textAlignVertical="top"
          underlineColorAndroid="transparent"
          value="Value Controlled"
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Toast Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Show Toast
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Toast CloseToast 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "flexDirection": "column",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Toast
            </Text>
          </View>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#d4d4d4",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#0891b2",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Close last toast
            </Text>
          </View>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#d4d4d4",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#0891b2",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Close all toasts
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Toast Custom Component 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Custom Toast
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Toast Custom Component with custom Id 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#0891b2",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 10,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 10,
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
        test={true}
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#fafafa",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Custom Toast
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Toast Prevent Duplicate 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Click me!
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Toast Status Recipies 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={Object {}}
      >
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="success"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#16a34a",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 10,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 10,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
            test={true}
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafafa",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                success
              </Text>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="error"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#dc2626",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 10,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 10,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
            test={true}
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafafa",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                error
              </Text>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="info"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#0284c7",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 10,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 10,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
            test={true}
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafafa",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                info
              </Text>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="warning"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#ea580c",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 10,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 10,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
            test={true}
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafafa",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                warning
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Toast Toast Positions 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={Object {}}
      >
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#0891b2",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 10,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 10,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
            test={true}
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafafa",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Bottom
              </Text>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#0891b2",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 10,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 10,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
            test={true}
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafafa",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Top
              </Text>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#0891b2",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 10,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 10,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
            test={true}
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafafa",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Top left
              </Text>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#0891b2",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 10,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 10,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
            test={true}
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafafa",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Top right
              </Text>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#0891b2",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 10,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 10,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
            test={true}
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafafa",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Bottom left
              </Text>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#0891b2",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 10,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 10,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
            test={true}
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafafa",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Bottom right
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Toast Toast Ref 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Show Toast
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Toast Variants Recipies 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={Object {}}
      >
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#0891b2",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 10,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 10,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
            test={true}
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafafa",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                solid
              </Text>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#0891b2",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 10,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 10,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
            test={true}
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafafa",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                subtle
              </Text>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#0891b2",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 10,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 10,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
            test={true}
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafafa",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                left-accent
              </Text>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#0891b2",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 10,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 10,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
            test={true}
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafafa",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                top-accent
              </Text>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#0891b2",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 10,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 10,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
            test={true}
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafafa",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                outline
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Tooltip Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              More
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Tooltip Customizing 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              More
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Tooltip Tooltip Positions 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignSelf": "flex-start",
          "width": "100%",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              ToolTip
            </Text>
          </View>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 24,
          }
        }
      />
      <View
        accessibilityLabel="Select a position for Tooltip"
        accessibilityRole="button"
        accessible={true}
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "marginLeft": 0,
            "marginRight": 0,
          }
        }
      >
        <View
          dataSet={Object {}}
          isFocused={false}
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d4",
              "borderRadius": 4,
              "borderWidth": 1,
              "flexDirection": "row",
              "marginLeft": 0,
              "marginRight": 0,
              "overflow": "hidden",
            }
          }
        >
          <TextInput
            accessible={true}
            allowFontScaling={true}
            aria-hidden={true}
            dataSet={Object {}}
            editable={false}
            focusable={false}
            importantForAccessibility="no"
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyPress={[Function]}
            placeholderTextColor="#a3a3a3"
            pointerEvents="none"
            rejectResponderTermination={true}
            secureTextEntry={false}
            selectionColor="#1f2937"
            style={
              Object {
                "backgroundColor": "transparent",
                "color": "#171717",
                "flex": 1,
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "400",
                "height": "100%",
                "paddingBottom": 8,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 8,
                "width": "100%",
              }
            }
            underlineColorAndroid="transparent"
            value="Top Left"
          />
          <View
            dataSet={Object {}}
            style={Object {}}
          />
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={16}
            bbWidth={16}
            color={4285756275}
            dataSet={Object {}}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Object {
                  "color": "#737373",
                  "height": 16,
                  "marginRight": 12,
                  "width": 16,
                },
                Object {
                  "flex": 0,
                  "height": 16,
                  "width": 16,
                },
              ]
            }
            tintColor={4285756275}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M20.2286 6L11.9973 14.3785L3.76862 6.00268L2 7.80293L12 18L22 7.80293L20.2286 6Z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Transitions Fade 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Show
            </Text>
          </View>
        </View>
      </View>
      <View
        pointerEvents="none"
        style={
          Object {
            "opacity": 0,
            "transform": Array [
              Object {
                "translateY": 0,
              },
              Object {
                "translateX": 0,
              },
              Object {
                "scale": 1,
              },
              Object {
                "scaleX": 1,
              },
              Object {
                "scaleY": 1,
              },
              Object {
                "rotate": "0deg",
              },
            ],
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#14b8a6",
              "borderRadius": 6,
              "display": "flex",
              "height": 100,
              "justifyContent": "center",
              "marginTop": 28,
              "width": 200,
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Fade
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Transitions ScaleFade 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Show
            </Text>
          </View>
        </View>
      </View>
      <View
        pointerEvents="none"
        style={
          Object {
            "opacity": 0,
            "transform": Array [
              Object {
                "translateY": 0,
              },
              Object {
                "translateX": 0,
              },
              Object {
                "scale": 0,
              },
              Object {
                "scaleX": 1,
              },
              Object {
                "scaleY": 1,
              },
              Object {
                "rotate": "0deg",
              },
            ],
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#14b8a6",
              "borderRadius": 6,
              "display": "flex",
              "height": 100,
              "justifyContent": "center",
              "marginTop": 28,
              "width": 200,
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            ScaleFade
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Transitions Slide 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "height": 128,
          "justifyContent": "center",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(55, 65, 81, 0.3)",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Check Internet Connection
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Transitions Slide wrapped inside parent 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "justifyContent": "center",
            "width": 300,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "flex-end",
                "flexDirection": "row",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": null,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 30,
                  "textDecorationLine": undefined,
                }
              }
            >
              Order
            </Text>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Sub Total
            </Text>
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#94a3b8",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              $298.77
            </Text>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Tax
            </Text>
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#94a3b8",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              $38.84
            </Text>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Total Amount
            </Text>
            <View
              dataSet={Object {}}
              style={Object {}}
            />
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#059669",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              $337.61
            </Text>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "marginTop": 8,
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Promo Code
            </Text>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <View
                dataSet={Object {}}
                isFocused={false}
                style={
                  Object {
                    "alignItems": "center",
                    "borderColor": "#d4d4d4",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "flex": 1,
                    "flexDirection": "row",
                    "overflow": "hidden",
                  }
                }
              >
                <TextInput
                  accessible={true}
                  allowFontScaling={true}
                  dataSet={Object {}}
                  editable={true}
                  onBlur={[Function]}
                  onFocus={[Function]}
                  onKeyPress={[Function]}
                  placeholderTextColor="#a3a3a3"
                  rejectResponderTermination={true}
                  secureTextEntry={false}
                  selectionColor="#1f2937"
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#171717",
                      "flex": 1,
                      "fontFamily": undefined,
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "height": "100%",
                      "paddingBottom": 8,
                      "paddingLeft": 12,
                      "paddingRight": 12,
                      "paddingTop": 8,
                      "width": "100%",
                    }
                  }
                  underlineColorAndroid="transparent"
                />
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "width": 12,
                  }
                }
              />
              <View
                accessibilityRole="button"
                accessible={true}
                colorScheme="primary"
                dataSet={Object {}}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onHoverIn={[Function]}
                onHoverOut={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "borderColor": "#d4d4d4",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 10,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 10,
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                  test={true}
                >
                  <View
                    dataSet={Object {}}
                    style={Object {}}
                  >
                    <Text
                      dataSet={Object {}}
                      style={
                        Object {
                          "backgroundColor": undefined,
                          "color": "#0891b2",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontStyle": "normal",
                          "fontWeight": "400",
                          "letterSpacing": 0,
                          "lineHeight": 21,
                          "textDecorationLine": undefined,
                        }
                      }
                    >
                      Apply
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            accessibilityRole="button"
            accessible={true}
            colorScheme="primary"
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#0891b2",
                "borderRadius": 4,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 8,
                "marginTop": 8,
                "paddingBottom": 10,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 10,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
              test={true}
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#fafafa",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Place Order
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Transitions SlideComposition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "width": 300,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "flex-start",
              "justifyContent": "center",
              "width": "100%",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "flex-end",
                  "flexDirection": "row",
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": null,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 30,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Order
              </Text>
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "flexGrow": 1,
                  }
                }
              />
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={12}
                bbWidth={12}
                color={4293548044}
                dataSet={Object {}}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#ea580c",
                      "height": 12,
                      "marginBottom": 6,
                      "width": 12,
                    },
                    Object {
                      "flex": 0,
                      "height": 12,
                      "width": 12,
                    },
                  ]
                }
                tintColor={4293548044}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M11.9836 0.00267822C8.77744 0.0551662 5.72075 1.36728 3.47427 3.65538C2.35024 4.77447 1.46338 6.10869 0.866705 7.57831C0.270027 9.04793 -0.0242179 10.6228 0.00155827 12.2087C-0.000286057 13.7583 0.303697 15.2931 0.896087 16.7251C1.48848 18.1571 2.35763 19.458 3.45373 20.5535C4.54983 21.6489 5.85133 22.5173 7.28365 23.1089C8.71596 23.7004 10.2509 24.0035 11.8006 24.0007H12.0146C15.2217 23.9677 18.2847 22.6638 20.5316 20.3751C22.7785 18.0864 24.0257 14.9999 23.9996 11.7927C24.0033 10.2243 23.6933 8.6709 23.0879 7.22398C22.4825 5.77706 21.5939 4.4658 20.4744 3.36731C19.3548 2.26882 18.0269 1.40527 16.5688 0.827453C15.1106 0.249636 13.5517 -0.0307856 11.9836 0.00267822ZM10.5007 16.5433C10.4935 16.3473 10.5254 16.1517 10.5947 15.9682C10.6639 15.7846 10.7691 15.6167 10.904 15.4742C11.0389 15.3318 11.2009 15.2177 11.3804 15.1386C11.5599 15.0594 11.7534 15.0169 11.9496 15.0135H11.9766C12.3712 15.0142 12.7501 15.1677 13.034 15.4417C13.3179 15.7157 13.4847 16.089 13.4995 16.4833C13.5068 16.6794 13.4749 16.875 13.4057 17.0586C13.3365 17.2423 13.2314 17.4102 13.0965 17.5527C12.9615 17.6952 12.7995 17.8093 12.6199 17.8884C12.4403 17.9674 12.2468 18.0099 12.0506 18.0132H12.0236C11.6291 18.0119 11.2505 17.8583 10.9667 17.5844C10.6829 17.3105 10.5159 16.9375 10.5007 16.5433ZM11.0007 12.5017V6.50215C11.0007 6.23695 11.106 5.98262 11.2935 5.7951C11.481 5.60758 11.7354 5.50223 12.0006 5.50223C12.2658 5.50223 12.5201 5.60758 12.7076 5.7951C12.8951 5.98262 13.0005 6.23695 13.0005 6.50215V12.5017C13.0005 12.7669 12.8951 13.0212 12.7076 13.2087C12.5201 13.3962 12.2658 13.5016 12.0006 13.5016C11.7354 13.5016 11.481 13.3962 11.2935 13.2087C11.106 13.0212 11.0007 12.7669 11.0007 12.5017Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 12,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Sub Total
              </Text>
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#94a3b8",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                $298.77
              </Text>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 12,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Tax
              </Text>
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#94a3b8",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                $38.84
              </Text>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 12,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Total Amount
              </Text>
              <View
                dataSet={Object {}}
                style={Object {}}
              />
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#22c55e",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                $337.61
              </Text>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 12,
                }
              }
            />
            <View
              dataSet={Object {}}
              style={
                Object {
                  "marginTop": 8,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Promo Code
              </Text>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "height": 8,
                  }
                }
              />
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  isFocused={false}
                  style={
                    Object {
                      "alignItems": "center",
                      "borderColor": "#d4d4d4",
                      "borderRadius": 4,
                      "borderWidth": 1,
                      "flex": 1,
                      "flexDirection": "row",
                      "overflow": "hidden",
                    }
                  }
                >
                  <TextInput
                    accessible={true}
                    allowFontScaling={true}
                    dataSet={Object {}}
                    editable={true}
                    onBlur={[Function]}
                    onFocus={[Function]}
                    onKeyPress={[Function]}
                    placeholderTextColor="#a3a3a3"
                    rejectResponderTermination={true}
                    secureTextEntry={false}
                    selectionColor="#1f2937"
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "#171717",
                        "flex": 1,
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "height": "100%",
                        "paddingBottom": 8,
                        "paddingLeft": 12,
                        "paddingRight": 12,
                        "paddingTop": 8,
                        "width": "100%",
                      }
                    }
                    underlineColorAndroid="transparent"
                  />
                </View>
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "width": 12,
                    }
                  }
                />
                <View
                  accessibilityRole="button"
                  accessible={true}
                  colorScheme="primary"
                  dataSet={Object {}}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onHoverIn={[Function]}
                  onHoverOut={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "borderColor": "#d4d4d4",
                      "borderRadius": 4,
                      "borderWidth": 1,
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "paddingBottom": 10,
                      "paddingLeft": 12,
                      "paddingRight": 12,
                      "paddingTop": 10,
                    }
                  }
                >
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      }
                    }
                    test={true}
                  >
                    <View
                      dataSet={Object {}}
                      style={Object {}}
                    >
                      <Text
                        dataSet={Object {}}
                        style={
                          Object {
                            "backgroundColor": undefined,
                            "color": "#0891b2",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontStyle": "normal",
                            "fontWeight": "400",
                            "letterSpacing": 0,
                            "lineHeight": 21,
                            "textDecorationLine": undefined,
                          }
                        }
                      >
                        Apply
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 12,
                }
              }
            />
            <View
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0891b2",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 8,
                  "marginTop": 8,
                  "paddingBottom": 10,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 10,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
                test={true}
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#fafafa",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Place Order
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Transitions SlideFade 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={Object {}}
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Show
            </Text>
          </View>
        </View>
      </View>
      <View
        pointerEvents="none"
        style={
          Object {
            "opacity": 0,
            "transform": Array [
              Object {
                "translateY": 0,
              },
              Object {
                "translateX": -200,
              },
              Object {
                "scale": 1,
              },
              Object {
                "scaleX": 1,
              },
              Object {
                "scaleY": 1,
              },
              Object {
                "rotate": "0deg",
              },
            ],
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#14b8a6",
              "borderRadius": 6,
              "display": "flex",
              "height": 100,
              "justifyContent": "center",
              "marginTop": 16,
              "position": "absolute",
              "top": 16,
              "width": 200,
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            SlideFade
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Transitions Stagger 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "minHeight": 220,
          }
        }
      >
        <View
          pointerEvents="none"
          style={
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateY": 34,
                },
                Object {
                  "translateX": 0,
                },
                Object {
                  "scale": 0,
                },
                Object {
                  "scaleX": 1,
                },
                Object {
                  "scaleY": 1,
                },
                Object {
                  "rotate": "0deg",
                },
              ],
            }
          }
        >
          <View
            accessibilityRole="button"
            accessible={true}
            colorScheme="indigo"
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#6366f1",
                "borderRadius": 9999,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 16,
                "paddingBottom": 10,
                "paddingLeft": 10,
                "paddingRight": 10,
                "paddingTop": 10,
              }
            }
          >
            <Text
              allowFontScaling={false}
              dataSet={Object {}}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Object {
                    "color": "#fafafa",
                    "fontSize": 20,
                    "height": 20,
                    "lineHeight": 20,
                    "width": 20,
                  },
                  Object {
                    "fontFamily": "material",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
        <View
          pointerEvents="none"
          style={
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateY": 34,
                },
                Object {
                  "translateX": 0,
                },
                Object {
                  "scale": 0,
                },
                Object {
                  "scaleX": 1,
                },
                Object {
                  "scaleY": 1,
                },
                Object {
                  "rotate": "0deg",
                },
              ],
            }
          }
        >
          <View
            accessibilityRole="button"
            accessible={true}
            colorScheme="yellow"
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#facc15",
                "borderRadius": 9999,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 16,
                "paddingBottom": 10,
                "paddingLeft": 10,
                "paddingRight": 10,
                "paddingTop": 10,
              }
            }
          >
            <Text
              allowFontScaling={false}
              dataSet={Object {}}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Object {
                    "color": "#fafafa",
                    "fontSize": 20,
                    "height": 20,
                    "lineHeight": 20,
                    "width": 20,
                  },
                  Object {
                    "fontFamily": "material-community",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              󰍬
            </Text>
          </View>
        </View>
        <View
          pointerEvents="none"
          style={
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateY": 34,
                },
                Object {
                  "translateX": 0,
                },
                Object {
                  "scale": 0,
                },
                Object {
                  "scaleX": 1,
                },
                Object {
                  "scaleY": 1,
                },
                Object {
                  "rotate": "0deg",
                },
              ],
            }
          }
        >
          <View
            accessibilityRole="button"
            accessible={true}
            colorScheme="teal"
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#2dd4bf",
                "borderRadius": 9999,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 16,
                "paddingBottom": 10,
                "paddingLeft": 10,
                "paddingRight": 10,
                "paddingTop": 10,
              }
            }
          >
            <Text
              allowFontScaling={false}
              dataSet={Object {}}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Object {
                    "color": "#fafafa",
                    "fontSize": 20,
                    "height": 20,
                    "lineHeight": 20,
                    "width": 20,
                  },
                  Object {
                    "fontFamily": "material-community",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              󰕧
            </Text>
          </View>
        </View>
        <View
          pointerEvents="none"
          style={
            Object {
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateY": 34,
                },
                Object {
                  "translateX": 0,
                },
                Object {
                  "scale": 0,
                },
                Object {
                  "scaleX": 1,
                },
                Object {
                  "scaleY": 1,
                },
                Object {
                  "rotate": "0deg",
                },
              ],
            }
          }
        >
          <View
            accessibilityRole="button"
            accessible={true}
            colorScheme="red"
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#ef4444",
                "borderRadius": 9999,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 16,
                "paddingBottom": 10,
                "paddingLeft": 10,
                "paddingRight": 10,
                "paddingTop": 10,
              }
            }
          >
            <Text
              allowFontScaling={false}
              dataSet={Object {}}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Object {
                    "color": "#fafafa",
                    "fontSize": 20,
                    "height": 20,
                    "lineHeight": 20,
                    "width": 20,
                  },
                  Object {
                    "fontFamily": "material",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#22d3ee",
              "borderRadius": 9999,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 12,
            }
          }
        >
          <Text
            allowFontScaling={false}
            dataSet={Object {}}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Object {
                  "color": "#fafafa",
                  "fontSize": 24,
                  "height": 24,
                  "lineHeight": 24,
                  "width": 24,
                },
                Object {
                  "fontFamily": "material-community",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            󰇘
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots VStack Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#a5b4fc",
            "borderRadius": 6,
            "display": "flex",
            "elevation": 4,
            "height": 80,
            "justifyContent": "center",
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.23,
            "shadowRadius": 2.62,
            "width": 256,
          }
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#6366f1",
            "borderRadius": 6,
            "display": "flex",
            "elevation": 4,
            "height": 80,
            "justifyContent": "center",
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.23,
            "shadowRadius": 2.62,
            "width": 256,
          }
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#4338ca",
            "borderRadius": 6,
            "display": "flex",
            "elevation": 4,
            "height": 80,
            "justifyContent": "center",
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.23,
            "shadowRadius": 2.62,
            "width": 256,
          }
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots View Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={Object {}}
    >
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": null,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "textDecorationLine": undefined,
          }
        }
      >
        A component library for the
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#10b981",
              "fontFamily": undefined,
              "fontSize": null,
              "fontStyle": undefined,
              "fontWeight": "700",
              "lineHeight": 30,
              "textDecorationLine": undefined,
            }
          }
        >
           React Ecosystem
        </Text>
      </Text>
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#171717",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "500",
            "letterSpacing": 0,
            "lineHeight": 21,
            "marginTop": 12,
            "textDecorationLine": undefined,
          }
        }
      >
        NativeBase is a simple, modular and accessible component library that gives you building blocks to build you React applications.
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots ZStack Basic ZStack 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "height": 160,
          "justifyContent": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "marginTop": -128,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "marginLeft": -50,
              "marginTop": 12,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#0e7490",
                "borderRadius": 8,
                "elevation": 4,
                "height": 80,
                "position": "absolute",
                "shadowColor": "#000000",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 0.23,
                "shadowRadius": 2.62,
                "width": 80,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#06b6d4",
                "borderRadius": 8,
                "elevation": 6,
                "height": 80,
                "marginLeft": 20,
                "marginTop": 20,
                "position": "absolute",
                "shadowColor": "#000000",
                "shadowOffset": Object {
                  "height": 3,
                  "width": 0,
                },
                "shadowOpacity": 0.27,
                "shadowRadius": 4.65,
                "width": 80,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#67e8f9",
                "borderRadius": 8,
                "elevation": 8,
                "height": 80,
                "marginLeft": 40,
                "marginTop": 40,
                "position": "absolute",
                "shadowColor": "#000000",
                "shadowOffset": Object {
                  "height": 4,
                  "width": 0,
                },
                "shadowOpacity": 0.3,
                "shadowRadius": 4.65,
                "width": 80,
              }
            }
          />
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots ZStack ZStack items centered 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "height": 384,
          "justifyContent": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": "#4338ca",
              "borderRadius": 8,
              "height": 256,
              "position": "absolute",
              "width": 256,
            }
          }
        />
        <View
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": "#6366f1",
              "borderRadius": 8,
              "elevation": 9,
              "height": 192,
              "position": "absolute",
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 4,
                "width": 0,
              },
              "shadowOpacity": 0.32,
              "shadowRadius": 5.46,
              "width": 192,
            }
          }
        />
        <View
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": "#a5b4fc",
              "borderRadius": 8,
              "elevation": 9,
              "height": 128,
              "position": "absolute",
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 4,
                "width": 0,
              },
              "shadowOpacity": 0.32,
              "shadowRadius": 5.46,
              "width": 128,
            }
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots useAccessibleColors Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
            }
          }
        >
          <View
            accessibilityRole="button"
            accessible={true}
            colorScheme="emerald"
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#6ee7b7",
                "borderRadius": 4,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 4,
                "paddingBottom": 10,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 10,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
              test={true}
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#FFFFFF",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Save
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "width": 12,
            }
          }
        />
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
            }
          }
        >
          <View
            accessibilityRole="button"
            accessible={true}
            colorScheme="emerald"
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#34d399",
                "borderRadius": 4,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 4,
                "paddingBottom": 10,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 10,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
              test={true}
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#FFFFFF",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Save
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "width": 12,
            }
          }
        />
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
            }
          }
        >
          <View
            accessibilityRole="button"
            accessible={true}
            colorScheme="emerald"
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#10b981",
                "borderRadius": 4,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 4,
                "paddingBottom": 10,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 10,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
              test={true}
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#FFFFFF",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Save
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "width": 12,
            }
          }
        />
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
            }
          }
        >
          <View
            accessibilityRole="button"
            accessible={true}
            colorScheme="emerald"
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#059669",
                "borderRadius": 4,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 4,
                "paddingBottom": 10,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 10,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
              test={true}
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#FFFFFF",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Save
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "width": 12,
            }
          }
        />
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
            }
          }
        >
          <View
            accessibilityRole="button"
            accessible={true}
            colorScheme="emerald"
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#047857",
                "borderRadius": 4,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 4,
                "paddingBottom": 10,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 10,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
              test={true}
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#FFFFFF",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Save
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "width": 12,
            }
          }
        />
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
            }
          }
        >
          <View
            accessibilityRole="button"
            accessible={true}
            colorScheme="emerald"
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#065f46",
                "borderRadius": 4,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 4,
                "paddingBottom": 10,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 10,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
              test={true}
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#FFFFFF",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Save
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "flexDirection": "row",
            "marginTop": 24,
          }
        }
      >
        <Text
          dataSet={Object {}}
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#171717",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": undefined,
            }
          }
        >
          Toggle Accessible Colors
        </Text>
        <View
          dataSet={Object {}}
          style={
            Object {
              "width": 12,
            }
          }
        />
        <RCTSwitch
          accessibilityRole="switch"
          activeThumbColor="#fafafa"
          colorScheme="coolGray"
          dataSet={Object {}}
          onChange={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onTintColor="#4b5563"
          style={
            Array [
              Object {
                "height": 31,
                "width": 51,
              },
              Array [
                Object {},
                Object {
                  "backgroundColor": "#d4d4d4",
                  "borderRadius": 16,
                },
              ],
            ]
          }
          thumbTintColor="#fafafa"
          tintColor="#d4d4d4"
          value={false}
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots useBreakpointValue Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RCTScrollView
      contentContainerStyle={
        Array [
          Object {},
          Object {
            "dataSet": Object {},
          },
        ]
      }
      dataSet={Object {}}
      showsVerticalScrollIndicator={false}
      style={Object {}}
    >
      <View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "paddingBottom": 32,
              "paddingTop": 32,
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": null,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 30,
                "textDecorationLine": undefined,
              }
            }
          >
            Why us?
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 32,
              }
            }
          />
          <View
            style={
              Object {
                "flexDirection": "column",
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#a5f3fc",
                  "borderRadius": 12,
                  "justifyContent": "center",
                  "marginBottom": 12,
                  "marginLeft": 12,
                  "marginRight": 12,
                  "marginTop": 12,
                  "paddingBottom": 12,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 12,
                  "width": 140,
                }
              }
            >
              <Text />
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "height": 8,
                  }
                }
              />
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 18,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 27,
                    "textAlign": "center",
                    "textDecorationLine": undefined,
                  }
                }
              >
                Secure Checkout
              </Text>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#a5f3fc",
                  "borderRadius": 12,
                  "justifyContent": "center",
                  "marginBottom": 12,
                  "marginLeft": 12,
                  "marginRight": 12,
                  "marginTop": 12,
                  "paddingBottom": 12,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 12,
                  "width": 140,
                }
              }
            >
              <Text />
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "height": 8,
                  }
                }
              />
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 18,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 27,
                    "textAlign": "center",
                    "textDecorationLine": undefined,
                  }
                }
              >
                Secure Checkout
              </Text>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#a5f3fc",
                  "borderRadius": 12,
                  "justifyContent": "center",
                  "marginBottom": 12,
                  "marginLeft": 12,
                  "marginRight": 12,
                  "marginTop": 12,
                  "paddingBottom": 12,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 12,
                  "width": 140,
                }
              }
            >
              <Text />
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "height": 8,
                  }
                }
              />
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#171717",
                    "fontFamily": undefined,
                    "fontSize": 18,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 27,
                    "textAlign": "center",
                    "textDecorationLine": undefined,
                  }
                }
              >
                Fast Turn Around
              </Text>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots useClipboard Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "maxWidth": 300,
            "width": "100%",
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            dataSet={Object {}}
            isFocused={false}
            style={
              Object {
                "alignItems": "center",
                "borderColor": "#d4d4d4",
                "borderRadius": 4,
                "borderWidth": 1,
                "flexDirection": "row",
                "overflow": "hidden",
              }
            }
          >
            <TextInput
              accessible={true}
              allowFontScaling={true}
              dataSet={Object {}}
              editable={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              onKeyPress={[Function]}
              placeholder="Copy From"
              placeholderTextColor="#a3a3a3"
              rejectResponderTermination={true}
              secureTextEntry={false}
              selectionColor="#1f2937"
              style={
                Object {
                  "backgroundColor": "transparent",
                  "color": "#171717",
                  "flex": 1,
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": "100%",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                  "width": "100%",
                }
              }
              underlineColorAndroid="transparent"
              value="Hello"
            />
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 12,
              }
            }
          />
          <View
            accessibilityRole="button"
            accessible={true}
            colorScheme="primary"
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#0891b2",
                "borderRadius": 4,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 10,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 10,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
              test={true}
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#fafafa",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Copy
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          dataSet={Object {}}
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            dataSet={Object {}}
            isFocused={false}
            style={
              Object {
                "alignItems": "center",
                "borderColor": "#d4d4d4",
                "borderRadius": 4,
                "borderWidth": 1,
                "flexDirection": "row",
                "overflow": "hidden",
              }
            }
          >
            <TextInput
              accessible={true}
              allowFontScaling={true}
              dataSet={Object {}}
              editable={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              onKeyPress={[Function]}
              placeholder="Paste Here"
              placeholderTextColor="#a3a3a3"
              rejectResponderTermination={true}
              secureTextEntry={false}
              selectionColor="#1f2937"
              style={
                Object {
                  "backgroundColor": "transparent",
                  "color": "#171717",
                  "flex": 1,
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": "100%",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                  "width": "100%",
                }
              }
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 12,
              }
            }
          />
          <View
            accessibilityRole="button"
            accessible={true}
            colorScheme="primary"
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#0891b2",
                "borderRadius": 4,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 10,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 10,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
              test={true}
            >
              <View
                dataSet={Object {}}
                style={Object {}}
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#fafafa",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Paste
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots useColorMode Basic 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  />
</View>
`;

exports[`Storyshots useColorModeValue Basic 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  />
</View>
`;

exports[`Storyshots useContrastText Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={Object {}}
      >
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#18181b",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 10,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 10,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
            test={true}
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#FFFFFF",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                NativeBase
              </Text>
            </View>
          </View>
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          dataSet={Object {}}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#fafafa",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 10,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 10,
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
            test={true}
          >
            <View
              dataSet={Object {}}
              style={Object {}}
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#000000",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                NativeBase
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots useContrastText Variations 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#ecfeff",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 4,
          "paddingBottom": 10,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 10,
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
        test={true}
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#cffafe",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 4,
          "paddingBottom": 10,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 10,
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
        test={true}
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#a5f3fc",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 4,
          "paddingBottom": 10,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 10,
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
        test={true}
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#67e8f9",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 4,
          "paddingBottom": 10,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 10,
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
        test={true}
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#22d3ee",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 4,
          "paddingBottom": 10,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 10,
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
        test={true}
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#06b6d4",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 4,
          "paddingBottom": 10,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 10,
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
        test={true}
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#0891b2",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 4,
          "paddingBottom": 10,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 10,
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
        test={true}
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#0e7490",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 4,
          "paddingBottom": 10,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 10,
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
        test={true}
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#155e75",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 4,
          "paddingBottom": 10,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 10,
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
        test={true}
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#164e63",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 4,
          "paddingBottom": 10,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 10,
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
        test={true}
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="indigo"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#4f46e5",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginTop": 8,
          "paddingBottom": 10,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 10,
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
        test={true}
      >
        <View
          dataSet={Object {}}
          style={Object {}}
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#fafafa",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Toggle Accessible Colors
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots useDisclose Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 10,
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
          test={true}
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fafafa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Open Modal
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots useMediaQuery MaxHeight 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "borderColor": "#9ca3af",
            "borderRadius": 6,
            "borderWidth": 1,
            "flexDirection": "row",
            "maxWidth": 400,
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
            "width": "90%",
          }
        }
      >
        <View
          dataSet={Object {}}
          fadeDuration={0.1}
          speed={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 6,
              "flex": 1,
              "height": 150,
              "overflow": "hidden",
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#e5e5e5",
                "height": "100%",
                "opacity": 0,
                "width": "100%",
              }
            }
          />
        </View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "width": 32,
            }
          }
        />
        <View
          dataSet={Object {}}
          style={
            Object {
              "flex": 3,
            }
          }
        >
          <View
            dataSet={Object {}}
            fadeDuration={0.1}
            speed={1}
            style={
              Object {
                "backgroundColor": "transparent",
                "height": 40,
                "overflow": "hidden",
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "height": "100%",
                  "opacity": 0,
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            dataSet={Object {}}
            fadeDuration={0.1}
            speed={1}
            style={
              Object {
                "flexDirection": "column",
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              fadeDuration={0.1}
              speed={1}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "height": 12,
                  "overflow": "hidden",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "height": "100%",
                    "opacity": 0,
                    "width": "100%",
                  }
                }
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 12,
                }
              }
            />
            <View
              dataSet={Object {}}
              fadeDuration={0.1}
              speed={1}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "height": 12,
                  "overflow": "hidden",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "height": "100%",
                    "opacity": 0,
                    "width": "100%",
                  }
                }
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 12,
                }
              }
            />
            <View
              dataSet={Object {}}
              fadeDuration={0.1}
              speed={1}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "height": 12,
                  "overflow": "hidden",
                  "width": "75%",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "height": "100%",
                    "opacity": 0,
                    "width": "100%",
                  }
                }
              />
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              dataSet={Object {}}
              fadeDuration={0.1}
              speed={1}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "height": 20,
                  "overflow": "hidden",
                  "width": 20,
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "height": "100%",
                    "opacity": 0,
                    "width": "100%",
                  }
                }
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              dataSet={Object {}}
              fadeDuration={0.1}
              speed={1}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "flex": 2,
                  "height": 12,
                  "overflow": "hidden",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "height": "100%",
                    "opacity": 0,
                    "width": "100%",
                  }
                }
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              dataSet={Object {}}
              fadeDuration={0.1}
              speed={1}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "flex": 1,
                  "height": 12,
                  "overflow": "hidden",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "height": "100%",
                    "opacity": 0,
                    "width": "100%",
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots useMediaQuery MinWidth 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "borderColor": "#9ca3af",
            "borderRadius": 6,
            "borderWidth": 1,
            "flexDirection": "row",
            "maxWidth": 400,
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
            "width": "90%",
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "flex": 3,
            }
          }
        >
          <View
            dataSet={Object {}}
            fadeDuration={0.1}
            speed={1}
            style={
              Object {
                "backgroundColor": "transparent",
                "height": 40,
                "overflow": "hidden",
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "height": "100%",
                  "opacity": 0,
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            dataSet={Object {}}
            fadeDuration={0.1}
            speed={1}
            style={
              Object {
                "flexDirection": "column",
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              fadeDuration={0.1}
              speed={1}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "height": 12,
                  "overflow": "hidden",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "height": "100%",
                    "opacity": 0,
                    "width": "100%",
                  }
                }
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 12,
                }
              }
            />
            <View
              dataSet={Object {}}
              fadeDuration={0.1}
              speed={1}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "height": 12,
                  "overflow": "hidden",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "height": "100%",
                    "opacity": 0,
                    "width": "100%",
                  }
                }
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 12,
                }
              }
            />
            <View
              dataSet={Object {}}
              fadeDuration={0.1}
              speed={1}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "height": 12,
                  "overflow": "hidden",
                  "width": "75%",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "height": "100%",
                    "opacity": 0,
                    "width": "100%",
                  }
                }
              />
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              dataSet={Object {}}
              fadeDuration={0.1}
              speed={1}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "height": 20,
                  "overflow": "hidden",
                  "width": 20,
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "height": "100%",
                    "opacity": 0,
                    "width": "100%",
                  }
                }
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              dataSet={Object {}}
              fadeDuration={0.1}
              speed={1}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "flex": 2,
                  "height": 12,
                  "overflow": "hidden",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "height": "100%",
                    "opacity": 0,
                    "width": "100%",
                  }
                }
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              dataSet={Object {}}
              fadeDuration={0.1}
              speed={1}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "flex": 1,
                  "height": 12,
                  "overflow": "hidden",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "height": "100%",
                    "opacity": 0,
                    "width": "100%",
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots useMediaQuery Orientation 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278751666}
        dataSet={Object {}}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#0891b2",
              "height": 24,
              "width": 24,
            },
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278751666}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M20.8562 13.4434C20.1167 13.6274 19.3772 13.7194 18.6378 13.7194C14.0162 13.7194 10.3189 10.0391 10.3189 5.43876C10.3189 4.7027 10.4113 3.96665 10.5962 3.23059C10.6886 2.95457 10.5962 2.58654 10.3189 2.31052C10.0416 2.0345 9.7643 1.9425 9.39457 2.0345C5.05026 3.3226 2 7.3709 2 11.8792C2 17.4917 6.52917 22 12.1675 22C16.6967 22 20.7637 18.9638 21.9653 14.5474C22.0578 14.2714 21.9653 13.9034 21.688 13.6274C21.5032 13.4434 21.1334 13.3514 20.8562 13.4434Z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "borderColor": "#9ca3af",
            "borderRadius": 6,
            "borderWidth": 1,
            "flexDirection": "row",
            "maxWidth": 400,
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
            "width": "90%",
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "flex": 3,
            }
          }
        >
          <View
            dataSet={Object {}}
            fadeDuration={0.1}
            speed={1}
            style={
              Object {
                "backgroundColor": "transparent",
                "height": 40,
                "overflow": "hidden",
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "height": "100%",
                  "opacity": 0,
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            dataSet={Object {}}
            fadeDuration={0.1}
            speed={1}
            style={
              Object {
                "flexDirection": "column",
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              fadeDuration={0.1}
              speed={1}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "height": 12,
                  "overflow": "hidden",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "height": "100%",
                    "opacity": 0,
                    "width": "100%",
                  }
                }
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 12,
                }
              }
            />
            <View
              dataSet={Object {}}
              fadeDuration={0.1}
              speed={1}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "height": 12,
                  "overflow": "hidden",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "height": "100%",
                    "opacity": 0,
                    "width": "100%",
                  }
                }
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "height": 12,
                }
              }
            />
            <View
              dataSet={Object {}}
              fadeDuration={0.1}
              speed={1}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "height": 12,
                  "overflow": "hidden",
                  "width": "75%",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "height": "100%",
                    "opacity": 0,
                    "width": "100%",
                  }
                }
              />
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              dataSet={Object {}}
              fadeDuration={0.1}
              speed={1}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "height": 20,
                  "overflow": "hidden",
                  "width": 20,
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "height": "100%",
                    "opacity": 0,
                    "width": "100%",
                  }
                }
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              dataSet={Object {}}
              fadeDuration={0.1}
              speed={1}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "flex": 2,
                  "height": 12,
                  "overflow": "hidden",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "height": "100%",
                    "opacity": 0,
                    "width": "100%",
                  }
                }
              />
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              dataSet={Object {}}
              fadeDuration={0.1}
              speed={1}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "flex": 1,
                  "height": 12,
                  "overflow": "hidden",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#e5e5e5",
                    "height": "100%",
                    "opacity": 0,
                    "width": "100%",
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots useSafeArea Fixed 1`] = `
<View>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  />
</View>
`;

exports[`Storyshots useSafeArea Flexible 1`] = `
<View>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  />
</View>
`;

exports[`Storyshots useSafeArea Hook 1`] = `
<View>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  />
</View>
`;
