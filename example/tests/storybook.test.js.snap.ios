// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Actionsheet Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#06b6d4",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Actionsheet
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Actionsheet Custom Backdrop 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#06b6d4",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Actionsheet
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Actionsheet DisableOverlay 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#06b6d4",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Actionsheet
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Actionsheet Icon 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#06b6d4",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Actionsheet
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Actionsheet Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#06b6d4",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Actionsheet
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Alert Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      space={3}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#e0f2fe",
          "borderRadius": 4,
          "justifyContent": "flex-start",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "flexShrink": 1,
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "flexShrink": 1,
              "justifyContent": "space-between",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "flexShrink": 1,
              }
            }
          >
            <View
              style={Object {}}
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={16}
                bbWidth={16}
                color={4278355143}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#0284c7",
                      "height": 16,
                      "width": 16,
                    },
                    Object {
                      "flex": 0,
                      "height": 16,
                      "width": 16,
                    },
                  ]
                }
                tintColor={4278355143}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
            <View
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 20,
                  "textDecorationLine": undefined,
                }
              }
            >
              We are going live in July!
            </Text>
          </View>
          <View
            style={
              Object {
                "width": 8,
              }
            }
          />
          <View
            _disabled={
              Object {
                "opacity": 0.5,
              }
            }
            accessibilityRole="button"
            accessible={true}
            colorScheme="primary"
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "borderRadius": 4,
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
              }
            }
          >
            <RNSVGSvgView
              accessibilityRole="image"
              align="xMidYMid"
              bbHeight={12}
              bbWidth={12}
              color={4283127139}
              focusable={false}
              meetOrSlice={0}
              minX={0}
              minY={0}
              stroke=""
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Object {
                    "color": "#4b5563",
                    "height": 12,
                    "width": 12,
                  },
                  Object {
                    "flex": 0,
                    "height": 12,
                    "width": 12,
                  },
                ]
              }
              tintColor={4283127139}
              vbHeight={24}
              vbWidth={24}
            >
              <RNSVGGroup
                propList={
                  Array [
                    "stroke",
                  ]
                }
                stroke={null}
              >
                <RNSVGGroup>
                  <RNSVGPath
                    d="M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z"
                    fill={
                      Array [
                        2,
                      ]
                    }
                    propList={
                      Array [
                        "fill",
                        "stroke",
                      ]
                    }
                    stroke={null}
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 4,
            }
          }
        />
        <View
          style={
            Object {
              "paddingLeft": 24,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#4b5563",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            We are happy to announce that we are going live on July 28th. Get ready!
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Alert ColorScheme 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "marginLeft": 12,
          "marginRight": 12,
          "width": "100%",
        }
      }
    >
      <View
        space={3}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#fee2e2",
            "borderRadius": 4,
            "justifyContent": "flex-start",
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "flexShrink": 1,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "flexShrink": 1,
                "justifyContent": "space-between",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "flexShrink": 1,
                }
              }
            >
              <View
                style={Object {}}
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={16}
                  bbWidth={16}
                  color={4292617766}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#dc2626",
                        "height": 16,
                        "width": 16,
                      },
                      Object {
                        "flex": 0,
                        "height": 16,
                        "width": 16,
                      },
                    ]
                  }
                  tintColor={4292617766}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
              <View
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Please try again later!
              </Text>
            </View>
            <View
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              _disabled={
                Object {
                  "opacity": 0.5,
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "borderRadius": 4,
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                }
              }
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={12}
                bbWidth={12}
                color={4283127139}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#4b5563",
                      "height": 12,
                      "width": 12,
                    },
                    Object {
                      "flex": 0,
                      "height": 12,
                      "width": 12,
                    },
                  ]
                }
                tintColor={4283127139}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 8,
              }
            }
          />
          <View
            style={
              Object {
                "paddingLeft": 24,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#4b5563",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Your coupon could not be processed at this time.
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        space={3}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#ffedd5",
            "borderRadius": 4,
            "justifyContent": "flex-start",
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "flexShrink": 1,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "flexShrink": 1,
                "justifyContent": "space-between",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "flexShrink": 1,
                }
              }
            >
              <View
                style={Object {}}
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={16}
                  bbWidth={16}
                  color={4293548044}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#ea580c",
                        "height": 16,
                        "width": 16,
                      },
                      Object {
                        "flex": 0,
                        "height": 16,
                        "width": 16,
                      },
                    ]
                  }
                  tintColor={4293548044}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
              <View
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Please try again later!
              </Text>
            </View>
            <View
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              _disabled={
                Object {
                  "opacity": 0.5,
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "borderRadius": 4,
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                }
              }
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={12}
                bbWidth={12}
                color={4283127139}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#4b5563",
                      "height": 12,
                      "width": 12,
                    },
                    Object {
                      "flex": 0,
                      "height": 12,
                      "width": 12,
                    },
                  ]
                }
                tintColor={4283127139}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 8,
              }
            }
          />
          <View
            style={
              Object {
                "paddingLeft": 24,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#4b5563",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Your coupon could not be processed at this time.
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        space={3}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#fce7f3",
            "borderRadius": 4,
            "justifyContent": "flex-start",
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "flexShrink": 1,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "flexShrink": 1,
                "justifyContent": "space-between",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "flexShrink": 1,
                }
              }
            >
              <View
                style={Object {}}
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={16}
                  bbWidth={16}
                  color={4292552567}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#db2777",
                        "height": 16,
                        "width": 16,
                      },
                      Object {
                        "flex": 0,
                        "height": 16,
                        "width": 16,
                      },
                    ]
                  }
                  tintColor={4292552567}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
              <View
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Please try again later!
              </Text>
            </View>
            <View
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              _disabled={
                Object {
                  "opacity": 0.5,
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "borderRadius": 4,
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                }
              }
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={12}
                bbWidth={12}
                color={4283127139}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#4b5563",
                      "height": 12,
                      "width": 12,
                    },
                    Object {
                      "flex": 0,
                      "height": 12,
                      "width": 12,
                    },
                  ]
                }
                tintColor={4283127139}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 8,
              }
            }
          />
          <View
            style={
              Object {
                "paddingLeft": 24,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#4b5563",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Your coupon could not be processed at this time.
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Alert Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "maxWidth": 400,
        }
      }
    >
      <View
        space={3}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#d1fae5",
            "borderRadius": 4,
            "justifyContent": "flex-start",
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "flexShrink": 1,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "flexShrink": 1,
                "justifyContent": "space-between",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "flexShrink": 1,
                }
              }
            >
              <View
                style={Object {}}
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={16}
                  bbWidth={16}
                  color={4278556265}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#059669",
                        "height": 16,
                        "width": 16,
                      },
                      Object {
                        "flex": 0,
                        "height": 16,
                        "width": 16,
                      },
                    ]
                  }
                  tintColor={4278556265}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm6.927,8.2-6.845,9.289a1.011,1.011,0,0,1-1.43.188L5.764,13.769a1,1,0,1,1,1.25-1.562l4.076,3.261,6.227-8.451A1,1,0,1,1,18.927,8.2Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
              <View
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Application received!
              </Text>
            </View>
            <View
              style={
                Object {
                  "width": 4,
                }
              }
            />
            <View
              _disabled={
                Object {
                  "opacity": 0.5,
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "borderRadius": 4,
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                }
              }
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={12}
                bbWidth={12}
                color={4283127139}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#4b5563",
                      "height": 12,
                      "width": 12,
                    },
                    Object {
                      "flex": 0,
                      "height": 12,
                      "width": 12,
                    },
                  ]
                }
                tintColor={4283127139}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 8,
              }
            }
          />
          <View
            style={
              Object {
                "paddingLeft": 24,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Your application has been received. We will review your application and respond within the next 48 hours.
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 20,
          }
        }
      />
      <View
        space={3}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#d1fae5",
            "borderRadius": 4,
            "justifyContent": "flex-start",
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexShrink": 1,
              "width": "100%",
            }
          }
        >
          <View
            style={Object {}}
          >
            <RNSVGSvgView
              accessibilityRole="image"
              align="xMidYMid"
              bbHeight={32}
              bbWidth={32}
              color={4278556265}
              focusable={false}
              meetOrSlice={0}
              minX={0}
              minY={0}
              stroke=""
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Object {
                    "color": "#059669",
                    "height": 32,
                    "width": 32,
                  },
                  Object {
                    "flex": 0,
                    "height": 32,
                    "width": 32,
                  },
                ]
              }
              tintColor={4278556265}
              vbHeight={24}
              vbWidth={24}
            >
              <RNSVGGroup
                propList={
                  Array [
                    "stroke",
                  ]
                }
                stroke={null}
              >
                <RNSVGGroup>
                  <RNSVGPath
                    d="M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm6.927,8.2-6.845,9.289a1.011,1.011,0,0,1-1.43.188L5.764,13.769a1,1,0,1,1,1.25-1.562l4.076,3.261,6.227-8.451A1,1,0,1,1,18.927,8.2Z"
                    fill={
                      Array [
                        2,
                      ]
                    }
                    propList={
                      Array [
                        "fill",
                        "stroke",
                      ]
                    }
                    stroke={null}
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
          <View
            style={
              Object {
                "height": 4,
              }
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 24,
                "textDecorationLine": undefined,
              }
            }
          >
            Application received!
          </Text>
          <View
            style={
              Object {
                "height": 4,
              }
            }
          />
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textAlign": "center",
                  "textDecorationLine": undefined,
                }
              }
            >
              Your application has been received. We will review your application and respond within the next 48 hours.
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Alert Status 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "width": "100%",
        }
      }
    >
      <View
        space={3}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#d1fae5",
            "borderRadius": 4,
            "justifyContent": "flex-start",
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "flexShrink": 1,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "flexShrink": 1,
                "justifyContent": "space-between",
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "flexShrink": 1,
                }
              }
            >
              <View
                style={Object {}}
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={16}
                  bbWidth={16}
                  color={4278556265}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#059669",
                        "height": 16,
                        "marginTop": 4,
                        "width": 16,
                      },
                      Object {
                        "flex": 0,
                        "height": 16,
                        "width": 16,
                      },
                    ]
                  }
                  tintColor={4278556265}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm6.927,8.2-6.845,9.289a1.011,1.011,0,0,1-1.43.188L5.764,13.769a1,1,0,1,1,1.25-1.562l4.076,3.261,6.227-8.451A1,1,0,1,1,18.927,8.2Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
              <View
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Selection successfully moved!
              </Text>
            </View>
            <View
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              _disabled={
                Object {
                  "opacity": 0.5,
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "borderRadius": 4,
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                }
              }
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={12}
                bbWidth={12}
                color={4283127139}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#4b5563",
                      "height": 12,
                      "width": 12,
                    },
                    Object {
                      "flex": 0,
                      "height": 12,
                      "width": 12,
                    },
                  ]
                }
                tintColor={4283127139}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 12,
          }
        }
      />
      <View
        space={3}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#ffe4e6",
            "borderRadius": 4,
            "justifyContent": "flex-start",
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "flexShrink": 1,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "flexShrink": 1,
                "justifyContent": "space-between",
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "flexShrink": 1,
                }
              }
            >
              <View
                style={Object {}}
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={16}
                  bbWidth={16}
                  color={4292943176}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#e11d48",
                        "height": 16,
                        "marginTop": 4,
                        "width": 16,
                      },
                      Object {
                        "flex": 0,
                        "height": 16,
                        "width": 16,
                      },
                    ]
                  }
                  tintColor={4292943176}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M23.119,20,13.772,2.15h0a2,2,0,0,0-3.543,0L.881,20a2,2,0,0,0,1.772,2.928H21.347A2,2,0,0,0,23.119,20ZM11,8.423a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Zm1.05,11.51h-.028a1.528,1.528,0,0,1-1.522-1.47,1.476,1.476,0,0,1,1.448-1.53h.028A1.527,1.527,0,0,1,13.5,18.4,1.475,1.475,0,0,1,12.05,19.933Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
              <View
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Please try again later!
              </Text>
            </View>
            <View
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              _disabled={
                Object {
                  "opacity": 0.5,
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "borderRadius": 4,
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                }
              }
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={12}
                bbWidth={12}
                color={4283127139}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#4b5563",
                      "height": 12,
                      "width": 12,
                    },
                    Object {
                      "flex": 0,
                      "height": 12,
                      "width": 12,
                    },
                  ]
                }
                tintColor={4283127139}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 12,
          }
        }
      />
      <View
        space={3}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#e0f2fe",
            "borderRadius": 4,
            "justifyContent": "flex-start",
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "flexShrink": 1,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "flexShrink": 1,
                "justifyContent": "space-between",
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "flexShrink": 1,
                }
              }
            >
              <View
                style={Object {}}
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={16}
                  bbWidth={16}
                  color={4278355143}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#0284c7",
                        "height": 16,
                        "marginTop": 4,
                        "width": 16,
                      },
                      Object {
                        "flex": 0,
                        "height": 16,
                        "width": 16,
                      },
                    ]
                  }
                  tintColor={4278355143}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
              <View
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "textDecorationLine": undefined,
                  }
                }
              >
                We are going live in July!
              </Text>
            </View>
            <View
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              _disabled={
                Object {
                  "opacity": 0.5,
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "borderRadius": 4,
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                }
              }
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={12}
                bbWidth={12}
                color={4283127139}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#4b5563",
                      "height": 12,
                      "width": 12,
                    },
                    Object {
                      "flex": 0,
                      "height": 12,
                      "width": 12,
                    },
                  ]
                }
                tintColor={4283127139}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 12,
          }
        }
      />
      <View
        space={3}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#ffedd5",
            "borderRadius": 4,
            "justifyContent": "flex-start",
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "flexShrink": 1,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "flexShrink": 1,
                "justifyContent": "space-between",
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "flexShrink": 1,
                }
              }
            >
              <View
                style={Object {}}
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={16}
                  bbWidth={16}
                  color={4293548044}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#ea580c",
                        "height": 16,
                        "marginTop": 4,
                        "width": 16,
                      },
                      Object {
                        "flex": 0,
                        "height": 16,
                        "width": 16,
                      },
                    ]
                  }
                  tintColor={4293548044}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
              <View
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Poor internet connection.
              </Text>
            </View>
            <View
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              _disabled={
                Object {
                  "opacity": 0.5,
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "borderRadius": 4,
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                }
              }
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={12}
                bbWidth={12}
                color={4283127139}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#4b5563",
                      "height": 12,
                      "width": 12,
                    },
                    Object {
                      "flex": 0,
                      "height": 12,
                      "width": 12,
                    },
                  ]
                }
                tintColor={4283127139}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Alert Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      space={3}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#e0f2fe",
          "borderRadius": 4,
          "justifyContent": "flex-start",
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "flexShrink": 1,
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "flexShrink": 1,
              "justifyContent": "space-between",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "flexShrink": 1,
              }
            }
          >
            <View
              style={Object {}}
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={16}
                bbWidth={16}
                color={4278355143}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#0284c7",
                      "height": 16,
                      "width": 16,
                    },
                    Object {
                      "flex": 0,
                      "height": 16,
                      "width": 16,
                    },
                  ]
                }
                tintColor={4278355143}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
            <View
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "textDecorationLine": undefined,
                }
              }
            >
              We are going live in July!
            </Text>
          </View>
          <View
            style={
              Object {
                "width": 8,
              }
            }
          />
          <View
            _disabled={
              Object {
                "opacity": 0.5,
              }
            }
            accessibilityRole="button"
            accessible={true}
            colorScheme="primary"
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "borderRadius": 4,
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
              }
            }
          >
            <RNSVGSvgView
              accessibilityRole="image"
              align="xMidYMid"
              bbHeight={12}
              bbWidth={12}
              color={4283127139}
              focusable={false}
              meetOrSlice={0}
              minX={0}
              minY={0}
              stroke=""
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Object {
                    "color": "#4b5563",
                    "height": 12,
                    "width": 12,
                  },
                  Object {
                    "flex": 0,
                    "height": 12,
                    "width": 12,
                  },
                ]
              }
              tintColor={4283127139}
              vbHeight={24}
              vbWidth={24}
            >
              <RNSVGGroup
                propList={
                  Array [
                    "stroke",
                  ]
                }
                stroke={null}
              >
                <RNSVGGroup>
                  <RNSVGPath
                    d="M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z"
                    fill={
                      Array [
                        2,
                      ]
                    }
                    propList={
                      Array [
                        "fill",
                        "stroke",
                      ]
                    }
                    stroke={null}
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          style={
            Object {
              "paddingLeft": 24,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#4b5563",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            We are happy to announce that we are going live on July 28th. Get ready!
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Alert Variant 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RCTScrollView
      contentContainerStyle={
        Array [
          Object {},
          Object {},
        ]
      }
      showsVerticalScrollIndicator={false}
      style={
        Object {
          "marginBottom": 12,
          "marginTop": 12,
          "paddingLeft": 30,
          "paddingRight": 30,
        }
      }
    >
      <View>
        <View
          style={
            Object {
              "width": "100%",
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 30,
                "marginBottom": 16,
                "textAlign": "center",
                "textDecorationLine": undefined,
              }
            }
          >
            solid
          </Text>
          <View
            space={3}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#059669",
                "borderColor": "transparent",
                "borderRadius": 4,
                "borderWidth": 6,
                "justifyContent": "flex-start",
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "flexShrink": 1,
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "justifyContent": "space-between",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    }
                  }
                >
                  <View
                    style={Object {}}
                  >
                    <RNSVGSvgView
                      accessibilityRole="image"
                      align="xMidYMid"
                      bbHeight={16}
                      bbWidth={16}
                      color={4294572795}
                      focusable={false}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      stroke=""
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          Object {
                            "color": "#f9fafb",
                            "height": 16,
                            "width": 16,
                          },
                          Object {
                            "flex": 0,
                            "height": 16,
                            "width": 16,
                          },
                        ]
                      }
                      tintColor={4294572795}
                      vbHeight={24}
                      vbWidth={24}
                    >
                      <RNSVGGroup
                        propList={
                          Array [
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGGroup>
                          <RNSVGPath
                            d="M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm6.927,8.2-6.845,9.289a1.011,1.011,0,0,1-1.43.188L5.764,13.769a1,1,0,1,1,1.25-1.562l4.076,3.261,6.227-8.451A1,1,0,1,1,18.927,8.2Z"
                            fill={
                              Array [
                                2,
                              ]
                            }
                            propList={
                              Array [
                                "fill",
                                "stroke",
                              ]
                            }
                            stroke={null}
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                  <View
                    style={
                      Object {
                        "width": 8,
                      }
                    }
                  />
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#fafaf9",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Selection successfully moved!
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            aria-orientation="horizontal"
            style={
              Object {
                "backgroundColor": "#e5e7eb",
                "height": 1,
                "marginBottom": 10,
                "marginTop": 20,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            style={
              Object {
                "height": 12,
              }
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 30,
                "marginBottom": 16,
                "textAlign": "center",
                "textDecorationLine": undefined,
              }
            }
          >
            left-accent
          </Text>
          <View
            space={3}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#d1fae5",
                "borderColor": "transparent",
                "borderLeftColor": "#059669",
                "borderRadius": 4,
                "borderWidth": 4,
                "justifyContent": "flex-start",
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "flexShrink": 1,
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "justifyContent": "space-between",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    }
                  }
                >
                  <View
                    style={Object {}}
                  >
                    <RNSVGSvgView
                      accessibilityRole="image"
                      align="xMidYMid"
                      bbHeight={16}
                      bbWidth={16}
                      color={4278556265}
                      focusable={false}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      stroke=""
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          Object {
                            "color": "#059669",
                            "height": 16,
                            "width": 16,
                          },
                          Object {
                            "flex": 0,
                            "height": 16,
                            "width": 16,
                          },
                        ]
                      }
                      tintColor={4278556265}
                      vbHeight={24}
                      vbWidth={24}
                    >
                      <RNSVGGroup
                        propList={
                          Array [
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGGroup>
                          <RNSVGPath
                            d="M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm6.927,8.2-6.845,9.289a1.011,1.011,0,0,1-1.43.188L5.764,13.769a1,1,0,1,1,1.25-1.562l4.076,3.261,6.227-8.451A1,1,0,1,1,18.927,8.2Z"
                            fill={
                              Array [
                                2,
                              ]
                            }
                            propList={
                              Array [
                                "fill",
                                "stroke",
                              ]
                            }
                            stroke={null}
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                  <View
                    style={
                      Object {
                        "width": 8,
                      }
                    }
                  />
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#1f2937",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Selection successfully moved!
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            aria-orientation="horizontal"
            style={
              Object {
                "backgroundColor": "#e5e7eb",
                "height": 1,
                "marginBottom": 10,
                "marginTop": 20,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            style={
              Object {
                "height": 12,
              }
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 30,
                "marginBottom": 16,
                "textAlign": "center",
                "textDecorationLine": undefined,
              }
            }
          >
            top-accent
          </Text>
          <View
            space={3}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#d1fae5",
                "borderColor": "transparent",
                "borderRadius": 4,
                "borderTopColor": "#059669",
                "borderWidth": 4,
                "justifyContent": "flex-start",
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "flexShrink": 1,
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "justifyContent": "space-between",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    }
                  }
                >
                  <View
                    style={Object {}}
                  >
                    <RNSVGSvgView
                      accessibilityRole="image"
                      align="xMidYMid"
                      bbHeight={16}
                      bbWidth={16}
                      color={4278556265}
                      focusable={false}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      stroke=""
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          Object {
                            "color": "#059669",
                            "height": 16,
                            "width": 16,
                          },
                          Object {
                            "flex": 0,
                            "height": 16,
                            "width": 16,
                          },
                        ]
                      }
                      tintColor={4278556265}
                      vbHeight={24}
                      vbWidth={24}
                    >
                      <RNSVGGroup
                        propList={
                          Array [
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGGroup>
                          <RNSVGPath
                            d="M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm6.927,8.2-6.845,9.289a1.011,1.011,0,0,1-1.43.188L5.764,13.769a1,1,0,1,1,1.25-1.562l4.076,3.261,6.227-8.451A1,1,0,1,1,18.927,8.2Z"
                            fill={
                              Array [
                                2,
                              ]
                            }
                            propList={
                              Array [
                                "fill",
                                "stroke",
                              ]
                            }
                            stroke={null}
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                  <View
                    style={
                      Object {
                        "width": 8,
                      }
                    }
                  />
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#1f2937",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Selection successfully moved!
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            aria-orientation="horizontal"
            style={
              Object {
                "backgroundColor": "#e5e7eb",
                "height": 1,
                "marginBottom": 10,
                "marginTop": 20,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            style={
              Object {
                "height": 12,
              }
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 30,
                "marginBottom": 16,
                "textAlign": "center",
                "textDecorationLine": undefined,
              }
            }
          >
            outline
          </Text>
          <View
            space={3}
            style={
              Object {
                "alignItems": "center",
                "borderColor": "#059669",
                "borderRadius": 4,
                "borderWidth": 1,
                "justifyContent": "flex-start",
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "flexShrink": 1,
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "justifyContent": "space-between",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    }
                  }
                >
                  <View
                    style={Object {}}
                  >
                    <RNSVGSvgView
                      accessibilityRole="image"
                      align="xMidYMid"
                      bbHeight={16}
                      bbWidth={16}
                      color={4278556265}
                      focusable={false}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      stroke=""
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          Object {
                            "color": "#059669",
                            "height": 16,
                            "width": 16,
                          },
                          Object {
                            "flex": 0,
                            "height": 16,
                            "width": 16,
                          },
                        ]
                      }
                      tintColor={4278556265}
                      vbHeight={24}
                      vbWidth={24}
                    >
                      <RNSVGGroup
                        propList={
                          Array [
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGGroup>
                          <RNSVGPath
                            d="M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm6.927,8.2-6.845,9.289a1.011,1.011,0,0,1-1.43.188L5.764,13.769a1,1,0,1,1,1.25-1.562l4.076,3.261,6.227-8.451A1,1,0,1,1,18.927,8.2Z"
                            fill={
                              Array [
                                2,
                              ]
                            }
                            propList={
                              Array [
                                "fill",
                                "stroke",
                              ]
                            }
                            stroke={null}
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                  <View
                    style={
                      Object {
                        "width": 8,
                      }
                    }
                  />
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#1f2937",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Selection successfully moved!
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            aria-orientation="horizontal"
            style={
              Object {
                "backgroundColor": "#e5e7eb",
                "height": 1,
                "marginBottom": 10,
                "marginTop": 20,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            style={
              Object {
                "height": 12,
              }
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 30,
                "marginBottom": 16,
                "textAlign": "center",
                "textDecorationLine": undefined,
              }
            }
          >
            subtle
          </Text>
          <View
            space={3}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#d1fae5",
                "borderRadius": 4,
                "justifyContent": "flex-start",
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "flexShrink": 1,
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "justifyContent": "space-between",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    }
                  }
                >
                  <View
                    style={Object {}}
                  >
                    <RNSVGSvgView
                      accessibilityRole="image"
                      align="xMidYMid"
                      bbHeight={16}
                      bbWidth={16}
                      color={4278556265}
                      focusable={false}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      stroke=""
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          Object {
                            "color": "#059669",
                            "height": 16,
                            "width": 16,
                          },
                          Object {
                            "flex": 0,
                            "height": 16,
                            "width": 16,
                          },
                        ]
                      }
                      tintColor={4278556265}
                      vbHeight={24}
                      vbWidth={24}
                    >
                      <RNSVGGroup
                        propList={
                          Array [
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGGroup>
                          <RNSVGPath
                            d="M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm6.927,8.2-6.845,9.289a1.011,1.011,0,0,1-1.43.188L5.764,13.769a1,1,0,1,1,1.25-1.562l4.076,3.261,6.227-8.451A1,1,0,1,1,18.927,8.2Z"
                            fill={
                              Array [
                                2,
                              ]
                            }
                            propList={
                              Array [
                                "fill",
                                "stroke",
                              ]
                            }
                            stroke={null}
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                  <View
                    style={
                      Object {
                        "width": 8,
                      }
                    }
                  />
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#1f2937",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Selection successfully moved!
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            aria-orientation="horizontal"
            style={
              Object {
                "backgroundColor": "#e5e7eb",
                "height": 1,
                "marginBottom": 10,
                "marginTop": 20,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            style={
              Object {
                "height": 12,
              }
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 30,
                "marginBottom": 16,
                "textAlign": "center",
                "textDecorationLine": undefined,
              }
            }
          >
            outline-light
          </Text>
          <View
            space={3}
            style={
              Object {
                "alignItems": "center",
                "borderColor": "rgba(5, 150, 105, 0.2)",
                "borderRadius": 4,
                "borderWidth": 1,
                "justifyContent": "flex-start",
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "flexShrink": 1,
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "justifyContent": "space-between",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    }
                  }
                >
                  <View
                    style={Object {}}
                  >
                    <RNSVGSvgView
                      accessibilityRole="image"
                      align="xMidYMid"
                      bbHeight={16}
                      bbWidth={16}
                      color={4278556265}
                      focusable={false}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      stroke=""
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          Object {
                            "color": "#059669",
                            "height": 16,
                            "width": 16,
                          },
                          Object {
                            "flex": 0,
                            "height": 16,
                            "width": 16,
                          },
                        ]
                      }
                      tintColor={4278556265}
                      vbHeight={24}
                      vbWidth={24}
                    >
                      <RNSVGGroup
                        propList={
                          Array [
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGGroup>
                          <RNSVGPath
                            d="M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm6.927,8.2-6.845,9.289a1.011,1.011,0,0,1-1.43.188L5.764,13.769a1,1,0,1,1,1.25-1.562l4.076,3.261,6.227-8.451A1,1,0,1,1,18.927,8.2Z"
                            fill={
                              Array [
                                2,
                              ]
                            }
                            propList={
                              Array [
                                "fill",
                                "stroke",
                              ]
                            }
                            stroke={null}
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                  <View
                    style={
                      Object {
                        "width": 8,
                      }
                    }
                  />
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#1f2937",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Selection successfully moved!
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            aria-orientation="horizontal"
            style={
              Object {
                "backgroundColor": "#e5e7eb",
                "height": 1,
                "marginBottom": 10,
                "marginTop": 20,
                "width": "100%",
              }
            }
            thickness="1"
          />
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Alert action 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "width": "100%",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Object {
              "height": undefined,
            },
          ]
        }
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "overflow": "scroll",
            }
          }
        >
          <View
            space={3}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffe4e6",
                "borderRadius": 4,
                "justifyContent": "flex-start",
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "flexShrink": 1,
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                    "justifyContent": "space-between",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    }
                  }
                >
                  <View
                    style={Object {}}
                  >
                    <RNSVGSvgView
                      accessibilityRole="image"
                      align="xMidYMid"
                      bbHeight={16}
                      bbWidth={16}
                      color={4292943176}
                      focusable={false}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      stroke=""
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          Object {
                            "color": "#e11d48",
                            "height": 16,
                            "width": 16,
                          },
                          Object {
                            "flex": 0,
                            "height": 16,
                            "width": 16,
                          },
                        ]
                      }
                      tintColor={4292943176}
                      vbHeight={24}
                      vbWidth={24}
                    >
                      <RNSVGGroup
                        propList={
                          Array [
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGGroup>
                          <RNSVGPath
                            d="M23.119,20,13.772,2.15h0a2,2,0,0,0-3.543,0L.881,20a2,2,0,0,0,1.772,2.928H21.347A2,2,0,0,0,23.119,20ZM11,8.423a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Zm1.05,11.51h-.028a1.528,1.528,0,0,1-1.522-1.47,1.476,1.476,0,0,1,1.448-1.53h.028A1.527,1.527,0,0,1,13.5,18.4,1.475,1.475,0,0,1,12.05,19.933Z"
                            fill={
                              Array [
                                2,
                              ]
                            }
                            propList={
                              Array [
                                "fill",
                                "stroke",
                              ]
                            }
                            stroke={null}
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                  <View
                    style={
                      Object {
                        "width": 8,
                      }
                    }
                  />
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#1f2937",
                        "fontFamily": undefined,
                        "fontSize": 16,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 24,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Please try again later!
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "width": 8,
                    }
                  }
                />
                <View
                  _disabled={
                    Object {
                      "opacity": 0.5,
                    }
                  }
                  accessibilityRole="button"
                  accessible={true}
                  colorScheme="primary"
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onHoverIn={[Function]}
                  onHoverOut={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "borderRadius": 4,
                      "paddingBottom": 8,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                      "paddingTop": 8,
                    }
                  }
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={12}
                    bbWidth={12}
                    color={4283127139}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#4b5563",
                          "height": 12,
                          "width": 12,
                        },
                        Object {
                          "flex": 0,
                          "height": 12,
                          "width": 12,
                        },
                      ]
                    }
                    tintColor={4283127139}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
              <View
                style={
                  Object {
                    "height": 4,
                  }
                }
              />
              <View
                style={
                  Object {
                    "paddingLeft": 24,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Your coupon could not be processed at this time.
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 32,
            "marginLeft": "auto",
            "marginRight": "auto",
            "marginTop": 32,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 18,
                  "textDecorationLine": undefined,
                }
              }
            >
              Re-Open
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots AlertDialog Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="danger"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#ef4444",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Delete Customer
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots AlertDialog Transition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Discard
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots AspectRatio Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {
            "height": 200,
          },
          Object {
            "aspectRatio": 1.3333333333333333,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#f87171",
            },
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
          ]
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots AspectRatio EmbedImage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {
            "height": 200,
          },
          Object {
            "aspectRatio": 0.75,
          },
        ]
      }
    >
      <Image
        accessibilityLabel="Picture of a Flower"
        alt="Picture of a Flower"
        onError={[Function]}
        resizeMode="cover"
        source={
          Object {
            "uri": "https://images.pexels.com/photos/60597/dahlia-red-blossom-bloom-60597.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260",
          }
        }
        style={
          Array [
            Object {
              "maxWidth": "100%",
            },
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
          ]
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Avatar AvatarBadge 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "marginLeft": "auto",
          "marginRight": "auto",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#38bdf8",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "height": 48,
            "justifyContent": "center",
            "position": "relative",
            "width": 48,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          onError={[Function]}
          source={
            Object {
              "uri": "https://alpha.nativebase.io/img/native-base-icon.png",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Array [
                undefined,
                Object {
                  "height": "100%",
                  "width": "100%",
                },
              ],
            ]
          }
        />
        <View
          style={
            Object {
              "backgroundColor": "#22c55e",
              "borderColor": "#fafaf9",
              "borderRadius": 9999,
              "borderWidth": 2,
              "bottom": 0,
              "height": 12,
              "position": "absolute",
              "right": 0,
              "width": 12,
            }
          }
        />
      </View>
      <View
        style={
          Object {
            "width": 8,
          }
        }
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#f59e0b",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "height": 48,
            "justifyContent": "center",
            "position": "relative",
            "width": 48,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          onError={[Function]}
          source={
            Object {
              "uri": "https://alpha.nativebase.io/img/native-base-icon.png",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Array [
                undefined,
                Object {
                  "height": "100%",
                  "width": "100%",
                },
              ],
            ]
          }
        />
        <View
          style={
            Object {
              "backgroundColor": "#22c55e",
              "borderColor": "#fafaf9",
              "borderRadius": 9999,
              "borderWidth": 2,
              "bottom": 0,
              "height": 12,
              "position": "absolute",
              "right": 0,
              "width": 12,
            }
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Avatar AvatarGroup 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "display": "flex",
          "flexDirection": "row-reverse",
        }
      }
    >
      <View
        max={3}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#52525b",
            "borderColor": "#fafafa",
            "borderRadius": 9999,
            "borderWidth": 2,
            "height": 64,
            "justifyContent": "center",
            "marginLeft": -16,
            "position": "relative",
            "width": 64,
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#FFFFFF",
              "fontFamily": undefined,
              "fontSize": 20,
              "fontStyle": "normal",
              "fontWeight": "600",
              "letterSpacing": 0,
              "lineHeight": 30,
              "textDecorationLine": undefined,
            }
          }
        >
          + 5
        </Text>
      </View>
      <View
        max={3}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#6366f1",
            "borderColor": "#fafafa",
            "borderRadius": 9999,
            "borderWidth": 2,
            "height": 64,
            "justifyContent": "center",
            "marginLeft": -16,
            "position": "relative",
            "width": 64,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/1352844693151731713/HKO7cnlW_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Array [
                undefined,
                Object {
                  "height": "100%",
                  "width": "100%",
                },
              ],
            ]
          }
        />
      </View>
      <View
        max={3}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#0ea5e9",
            "borderColor": "#fafafa",
            "borderRadius": 9999,
            "borderWidth": 2,
            "height": 64,
            "justifyContent": "center",
            "marginLeft": -16,
            "position": "relative",
            "width": 64,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/1309797238651060226/18cm6VhQ_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Array [
                undefined,
                Object {
                  "height": "100%",
                  "width": "100%",
                },
              ],
            ]
          }
        />
      </View>
      <View
        max={3}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#22c55e",
            "borderColor": "#fafafa",
            "borderRadius": 9999,
            "borderWidth": 2,
            "height": 64,
            "justifyContent": "center",
            "position": "relative",
            "width": 64,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/1369921787568422915/hoyvrUpc_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Array [
                undefined,
                Object {
                  "height": "100%",
                  "width": "100%",
                },
              ],
            ]
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Avatar Fallback 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "marginLeft": "auto",
          "marginRight": "auto",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#22c55e",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "height": 48,
            "justifyContent": "center",
            "marginRight": 4,
            "position": "relative",
            "width": 48,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          onError={[Function]}
          source={
            Object {
              "uri": "https://bit.ly/broken-link",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Array [
                undefined,
                Object {
                  "height": "100%",
                  "width": "100%",
                },
              ],
            ]
          }
        />
      </View>
      <View
        style={
          Object {
            "width": 8,
          }
        }
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#f59e0b",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "height": 48,
            "justifyContent": "center",
            "position": "relative",
            "width": 48,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          onError={[Function]}
          source={
            Object {
              "uri": "https://bit.ly/broken-link",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Array [
                undefined,
                Object {
                  "height": "100%",
                  "width": "100%",
                },
              ],
            ]
          }
        />
      </View>
      <View
        style={
          Object {
            "width": 8,
          }
        }
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#38bdf8",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "height": 48,
            "justifyContent": "center",
            "position": "relative",
            "width": 48,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          onError={[Function]}
          source={
            Object {
              "uri": "https://bit.ly/broken-link",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Array [
                undefined,
                Object {
                  "height": "100%",
                  "width": "100%",
                },
              ],
            ]
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Avatar Playground 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#0d9488",
          "borderColor": "#000000",
          "borderRadius": 999,
          "borderWidth": 2,
          "height": 48,
          "justifyContent": "center",
          "position": "relative",
          "width": 48,
        }
      }
    >
      <Image
        accessibilityLabel="--"
        alt="--"
        onError={[Function]}
        source={
          Object {
            "uri": "https://alpha.nativebase.io/img/native-base-icon.png",
          }
        }
        style={
          Array [
            Object {
              "borderRadius": 999,
              "maxWidth": "100%",
            },
            Array [
              undefined,
              Object {
                "height": "100%",
                "width": "100%",
              },
            ],
          ]
        }
      />
      <View
        style={
          Object {
            "backgroundColor": "#fecaca",
            "borderColor": "#fafaf9",
            "borderRadius": 9999,
            "borderWidth": 2,
            "bottom": 0,
            "height": 20,
            "position": "absolute",
            "right": 0,
            "width": 20,
          }
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Avatar Size 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginBottom": 32,
            "marginTop": 12,
            "textDecorationLine": undefined,
          }
        }
      >
        Sizes
      </Text>
      <View
        style={
          Object {
            "alignItems": "center",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#22c55e",
              "borderColor": "#27272a",
              "borderRadius": 9999,
              "height": 24,
              "justifyContent": "center",
              "position": "relative",
              "width": 24,
            }
          }
        >
          <Image
            accessibilityLabel="--"
            alt="--"
            onError={[Function]}
            source={
              Object {
                "uri": "https://pbs.twimg.com/profile_images/1188747996843761665/8CiUdKZW_400x400.jpg",
              }
            }
            style={
              Array [
                Object {
                  "borderRadius": 9999,
                  "maxWidth": "100%",
                },
                Array [
                  undefined,
                  Object {
                    "height": "100%",
                    "width": "100%",
                  },
                ],
              ]
            }
          />
        </View>
        <View
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#06b6d4",
              "borderColor": "#27272a",
              "borderRadius": 9999,
              "height": 32,
              "justifyContent": "center",
              "position": "relative",
              "width": 32,
            }
          }
        >
          <Image
            accessibilityLabel="--"
            alt="--"
            onError={[Function]}
            source={
              Object {
                "uri": "https://pbs.twimg.com/profile_images/929409889788510208/gRr2f7rZ_400x400.jpg",
              }
            }
            style={
              Array [
                Object {
                  "borderRadius": 9999,
                  "maxWidth": "100%",
                },
                Array [
                  undefined,
                  Object {
                    "height": "100%",
                    "width": "100%",
                  },
                ],
              ]
            }
          />
        </View>
        <View
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#6366f1",
              "borderColor": "#27272a",
              "borderRadius": 9999,
              "height": 48,
              "justifyContent": "center",
              "position": "relative",
              "width": 48,
            }
          }
        >
          <Image
            accessibilityLabel="--"
            alt="--"
            onError={[Function]}
            source={
              Object {
                "uri": "https://pbs.twimg.com/profile_images/1352844693151731713/HKO7cnlW_400x400.jpg",
              }
            }
            style={
              Array [
                Object {
                  "borderRadius": 9999,
                  "maxWidth": "100%",
                },
                Array [
                  undefined,
                  Object {
                    "height": "100%",
                    "width": "100%",
                  },
                ],
              ]
            }
          />
        </View>
        <View
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#f59e0b",
              "borderColor": "#27272a",
              "borderRadius": 9999,
              "height": 64,
              "justifyContent": "center",
              "position": "relative",
              "width": 64,
            }
          }
        >
          <Image
            accessibilityLabel="--"
            alt="--"
            onError={[Function]}
            source={
              Object {
                "uri": "https://pbs.twimg.com/profile_images/1309797238651060226/18cm6VhQ_400x400.jpg",
              }
            }
            style={
              Array [
                Object {
                  "borderRadius": 9999,
                  "maxWidth": "100%",
                },
                Array [
                  undefined,
                  Object {
                    "height": "100%",
                    "width": "100%",
                  },
                ],
              ]
            }
          />
        </View>
        <View
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#db2777",
              "borderColor": "#27272a",
              "borderRadius": 9999,
              "height": 96,
              "justifyContent": "center",
              "position": "relative",
              "width": 96,
            }
          }
        >
          <Image
            accessibilityLabel="--"
            alt="--"
            onError={[Function]}
            source={
              Object {
                "uri": "https://pbs.twimg.com/profile_images/1177303899243343872/B0sUJIH0_400x400.jpg",
              }
            }
            style={
              Array [
                Object {
                  "borderRadius": 9999,
                  "maxWidth": "100%",
                },
                Array [
                  undefined,
                  Object {
                    "height": "100%",
                    "width": "100%",
                  },
                ],
              ]
            }
          />
        </View>
        <View
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#9333ea",
              "borderColor": "#27272a",
              "borderRadius": 9999,
              "height": 128,
              "justifyContent": "center",
              "position": "relative",
              "width": 128,
            }
          }
        >
          <Image
            accessibilityLabel="--"
            alt="--"
            onError={[Function]}
            source={
              Object {
                "uri": "https://pbs.twimg.com/profile_images/1320985200663293952/lE_Kg6vr_400x400.jpg",
              }
            }
            style={
              Array [
                Object {
                  "borderRadius": 9999,
                  "maxWidth": "100%",
                },
                Array [
                  undefined,
                  Object {
                    "height": "100%",
                    "width": "100%",
                  },
                ],
              ]
            }
          />
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Avatar Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#22c55e",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "height": 48,
            "justifyContent": "center",
            "position": "relative",
            "width": 48,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/1188747996843761665/8CiUdKZW_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Array [
                undefined,
                Object {
                  "height": "100%",
                  "width": "100%",
                },
              ],
            ]
          }
        />
      </View>
      <View
        style={
          Object {
            "width": 8,
          }
        }
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "height": 48,
            "justifyContent": "center",
            "position": "relative",
            "width": 48,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/1177303899243343872/B0sUJIH0_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Array [
                undefined,
                Object {
                  "height": "100%",
                  "width": "100%",
                },
              ],
            ]
          }
        />
      </View>
      <View
        style={
          Object {
            "width": 8,
          }
        }
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#6366f1",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "height": 48,
            "justifyContent": "center",
            "position": "relative",
            "width": 48,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/1352844693151731713/HKO7cnlW_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Array [
                undefined,
                Object {
                  "height": "100%",
                  "width": "100%",
                },
              ],
            ]
          }
        />
      </View>
      <View
        style={
          Object {
            "width": 8,
          }
        }
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#f59e0b",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "height": 48,
            "justifyContent": "center",
            "position": "relative",
            "width": 48,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/1309797238651060226/18cm6VhQ_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Array [
                undefined,
                Object {
                  "height": "100%",
                  "width": "100%",
                },
              ],
            ]
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Badge Color 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "marginLeft": "auto",
          "marginRight": "auto",
        }
      }
    >
      <View
        colorScheme="success"
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#a7f3d0",
            "borderColor": "transparent",
            "borderRadius": 2,
            "borderWidth": 1,
            "paddingBottom": 2,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 2,
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#059669",
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "500",
              "letterSpacing": 0,
              "lineHeight": 18,
              "textDecorationLine": undefined,
            }
          }
        >
          SUCCESS
        </Text>
      </View>
      <View
        style={
          Object {
            "width": 8,
          }
        }
      />
      <View
        colorScheme="danger"
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#fecaca",
            "borderColor": "transparent",
            "borderRadius": 2,
            "borderWidth": 1,
            "paddingBottom": 2,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 2,
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#dc2626",
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "500",
              "letterSpacing": 0,
              "lineHeight": 18,
              "textDecorationLine": undefined,
            }
          }
        >
          DANGER
        </Text>
      </View>
      <View
        style={
          Object {
            "width": 8,
          }
        }
      />
      <View
        colorScheme="info"
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#bae6fd",
            "borderColor": "transparent",
            "borderRadius": 2,
            "borderWidth": 1,
            "paddingBottom": 2,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 2,
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#0284c7",
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "500",
              "letterSpacing": 0,
              "lineHeight": 18,
              "textDecorationLine": undefined,
            }
          }
        >
          INFO
        </Text>
      </View>
      <View
        style={
          Object {
            "width": 8,
          }
        }
      />
      <View
        colorScheme="coolGray"
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#e5e7eb",
            "borderColor": "transparent",
            "borderRadius": 2,
            "borderWidth": 1,
            "paddingBottom": 2,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 2,
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#4b5563",
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "500",
              "letterSpacing": 0,
              "lineHeight": 18,
              "textDecorationLine": undefined,
            }
          }
        >
          DARK
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Badge Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <View
        colorScheme="danger"
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-end",
            "backgroundColor": "#dc2626",
            "borderColor": "transparent",
            "borderRadius": 999,
            "borderWidth": 1,
            "marginBottom": -16,
            "marginRight": -16,
            "paddingBottom": 2,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 2,
            "zIndex": 1,
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#f3f4f6",
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "500",
              "letterSpacing": 0,
              "lineHeight": 18,
              "textDecorationLine": undefined,
            }
          }
        >
          2
        </Text>
      </View>
      <View
        style={Object {}}
      />
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginLeft": "auto",
            "marginRight": "auto",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Notifications
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Badge Playground 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      colorScheme="success"
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#059669",
          "borderColor": "transparent",
          "borderRadius": 2,
          "borderWidth": 1,
          "paddingBottom": 2,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 2,
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#f3f4f6",
            "fontFamily": undefined,
            "fontSize": 12,
            "fontStyle": "normal",
            "fontWeight": "500",
            "letterSpacing": 0,
            "lineHeight": 18,
            "textDecorationLine": undefined,
          }
        }
      >
        NATIVEBASE
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Badge Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      colorScheme="coolGray"
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#e5e7eb",
          "borderColor": "transparent",
          "borderRadius": 2,
          "borderWidth": 1,
          "paddingBottom": 2,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 2,
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#4b5563",
            "fontFamily": undefined,
            "fontSize": 12,
            "fontStyle": "normal",
            "fontWeight": "500",
            "letterSpacing": 0,
            "lineHeight": 18,
            "textDecorationLine": undefined,
          }
        }
      >
        NEW FEATURE
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Badge Variants 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "marginLeft": "auto",
          "marginRight": "auto",
        }
      }
    >
      <View
        style={Object {}}
      >
        <View
          colorScheme="coolGray"
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#4b5563",
              "borderColor": "transparent",
              "borderRadius": 2,
              "borderWidth": 1,
              "paddingBottom": 2,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 2,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#f3f4f6",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 18,
                "textDecorationLine": undefined,
              }
            }
          >
            DEFAULT
          </Text>
        </View>
        <View
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          colorScheme="success"
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#059669",
              "borderColor": "transparent",
              "borderRadius": 2,
              "borderWidth": 1,
              "paddingBottom": 2,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 2,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#f3f4f6",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 18,
                "textDecorationLine": undefined,
              }
            }
          >
            SUCCESS
          </Text>
        </View>
        <View
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          colorScheme="danger"
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#dc2626",
              "borderColor": "transparent",
              "borderRadius": 2,
              "borderWidth": 1,
              "paddingBottom": 2,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 2,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#f3f4f6",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 18,
                "textDecorationLine": undefined,
              }
            }
          >
            DANGER
          </Text>
        </View>
        <View
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          colorScheme="info"
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#0284c7",
              "borderColor": "transparent",
              "borderRadius": 2,
              "borderWidth": 1,
              "paddingBottom": 2,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 2,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#f3f4f6",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 18,
                "textDecorationLine": undefined,
              }
            }
          >
            INFO
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "width": 8,
          }
        }
      />
      <View
        style={Object {}}
      >
        <View
          colorScheme="coolGray"
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "borderColor": "#6b7280",
              "borderRadius": 2,
              "borderWidth": 1,
              "paddingBottom": 2,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 2,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#6b7280",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 18,
                "textDecorationLine": undefined,
              }
            }
          >
            DEFAULT
          </Text>
        </View>
        <View
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          colorScheme="success"
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "borderColor": "#10b981",
              "borderRadius": 2,
              "borderWidth": 1,
              "paddingBottom": 2,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 2,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#10b981",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 18,
                "textDecorationLine": undefined,
              }
            }
          >
            SUCCESS
          </Text>
        </View>
        <View
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          colorScheme="danger"
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "borderColor": "#ef4444",
              "borderRadius": 2,
              "borderWidth": 1,
              "paddingBottom": 2,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 2,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#ef4444",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 18,
                "textDecorationLine": undefined,
              }
            }
          >
            DANGER
          </Text>
        </View>
        <View
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          colorScheme="info"
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "borderColor": "#0ea5e9",
              "borderRadius": 2,
              "borderWidth": 1,
              "paddingBottom": 2,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 2,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#0ea5e9",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 18,
                "textDecorationLine": undefined,
              }
            }
          >
            INFO
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "width": 8,
          }
        }
      />
      <View
        style={Object {}}
      >
        <View
          colorScheme="coolGray"
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#e5e7eb",
              "borderColor": "transparent",
              "borderRadius": 2,
              "borderWidth": 1,
              "paddingBottom": 2,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 2,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#4b5563",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 18,
                "textDecorationLine": undefined,
              }
            }
          >
            DEFAULT
          </Text>
        </View>
        <View
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          colorScheme="success"
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#a7f3d0",
              "borderColor": "transparent",
              "borderRadius": 2,
              "borderWidth": 1,
              "paddingBottom": 2,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 2,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#059669",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 18,
                "textDecorationLine": undefined,
              }
            }
          >
            SUCCESS
          </Text>
        </View>
        <View
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          colorScheme="danger"
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#fecaca",
              "borderColor": "transparent",
              "borderRadius": 2,
              "borderWidth": 1,
              "paddingBottom": 2,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 2,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#dc2626",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 18,
                "textDecorationLine": undefined,
              }
            }
          >
            DANGER
          </Text>
        </View>
        <View
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          colorScheme="info"
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#bae6fd",
              "borderColor": "transparent",
              "borderRadius": 2,
              "borderWidth": 1,
              "paddingBottom": 2,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 2,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#0284c7",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 18,
                "textDecorationLine": undefined,
              }
            }
          >
            INFO
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Box Basic Box 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#06b6d4",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#fafaf9",
            "fontFamily": undefined,
            "fontSize": 16,
            "fontStyle": "normal",
            "fontWeight": "500",
            "letterSpacing": 0.4,
            "lineHeight": 24,
            "textDecorationLine": undefined,
          }
        }
      >
        This is a Box
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Box Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#fafafa",
          "borderColor": "#e5e7eb",
          "borderRadius": 8,
          "borderWidth": 1,
          "maxWidth": 320,
          "overflow": "hidden",
        }
      }
    >
      <View
        style={Object {}}
      >
        <View
          style={
            Array [
              Object {
                "width": "100%",
              },
              Object {
                "aspectRatio": 1.7777777777777777,
              },
            ]
          }
        >
          <Image
            accessibilityLabel="image"
            alt="image"
            onError={[Function]}
            source={
              Object {
                "uri": "https://www.holidify.com/images/cmsuploads/compressed/Bangalore_citycover_20190613234056.jpg",
              }
            }
            style={
              Array [
                Object {
                  "maxWidth": "100%",
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
          />
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#8b5cf6",
              "bottom": 0,
              "display": "flex",
              "justifyContent": "center",
              "paddingBottom": 6,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 6,
              "position": "absolute",
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#fafaf9",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 18,
                "textDecorationLine": undefined,
              }
            }
          >
            PHOTOS
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#404040",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "marginLeft": -4,
                "textDecorationLine": undefined,
              }
            }
          >
            The Garden City
          </Text>
          <View
            style={
              Object {
                "height": 8,
              }
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#8b5cf6",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 18,
                "marginLeft": -2,
                "marginTop": -4,
                "textDecorationLine": undefined,
              }
            }
          >
            The Silicon Valley of India.
          </Text>
        </View>
        <View
          style={
            Object {
              "height": 12,
            }
          }
        />
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": undefined,
            }
          }
        >
          Bengaluru (also called Bangalore) is the center of India's high-tech industry. The city is also known for its parks and nightlife.
        </Text>
        <View
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "space-between",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#4b5563",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              6 mins ago
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Box LinearGradient Box 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <ViewManagerAdapter_ExpoLinearGradient
      proxiedProperties={
        Object {
          "colors": Array [
            4286436348,
            4284162486,
          ],
          "endPoint": Array [
            1,
            0,
          ],
          "locations": undefined,
          "startPoint": Array [
            0,
            0,
          ],
        }
      }
      style={
        Object {
          "borderRadius": 12,
          "paddingBottom": 48,
          "paddingLeft": 48,
          "paddingRight": 48,
          "paddingTop": 48,
          "width": 288,
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#fafaf9",
            "fontFamily": undefined,
            "fontSize": 16,
            "fontStyle": "normal",
            "fontWeight": "500",
            "letterSpacing": 0,
            "lineHeight": 24,
            "textAlign": "center",
            "textDecorationLine": undefined,
          }
        }
      >
        This is a Box with Linear Gradient
      </Text>
    </ViewManagerAdapter_ExpoLinearGradient>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Box With Ref 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#06b6d4",
          "elevation": 3,
          "paddingBottom": 16,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 16,
          "shadowColor": "#000000",
          "shadowOffset": Object {
            "height": 1,
            "width": 0,
          },
          "shadowOpacity": 0.22,
          "shadowRadius": 2.22,
          "width": "90%",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#FFFFFF",
            "fontFamily": undefined,
            "fontSize": 16,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 24,
            "textDecorationLine": undefined,
          }
        }
      >
        This is a Box
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Breadcrumb Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginBottom": 16,
            "textDecorationLine": undefined,
          }
        }
      >
        Default Breadcrumb
      </Text>
      <View
        accessibilityLabel="Breadcrumb"
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
            "flexWrap": "wrap",
            "height": "auto",
            "width": "auto",
          }
        }
        wrap="wrap"
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              direction="row"
              spacing="2"
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#ef4444",
                  "display": "flex",
                  "flexDirection": "row",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "height": "auto",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                  "width": "auto",
                }
              }
              wrap="wrap"
            >
              Home (This is currently active)
            </Text>
          </View>
        </View>
        <Text
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          /
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              direction="row"
              spacing="2"
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "display": "flex",
                  "flexDirection": "row",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": "auto",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                  "width": "auto",
                }
              }
              wrap="wrap"
            >
              Docs
            </Text>
          </View>
        </View>
        <Text
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          /
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              direction="row"
              spacing="2"
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "display": "flex",
                  "flexDirection": "row",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": "auto",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                  "width": "auto",
                }
              }
              wrap="wrap"
            >
              Github
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Breadcrumb Collapsible 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginBottom": 16,
            "textDecorationLine": undefined,
          }
        }
      >
        Breadcrumb Collapsible
      </Text>
      <View
        accessibilityLabel="Breadcrumb"
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
            "flexWrap": "wrap",
            "height": "auto",
            "marginTop": 12,
            "width": "auto",
          }
        }
        wrap="wrap"
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <Text
                allowFontScaling={false}
                direction="row"
                spacing="2"
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Object {
                      "color": "#262626",
                      "display": "flex",
                      "flexDirection": "row",
                      "fontSize": 16,
                      "height": 16,
                      "lineHeight": 16,
                      "marginRight": 4,
                      "width": 16,
                    },
                    Object {
                      "fontFamily": "material",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
                wrap="wrap"
              >
                
              </Text>
              <View
                style={Object {}}
              />
              <Text
                direction="row"
                spacing="2"
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "display": "flex",
                    "flexDirection": "row",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "height": "auto",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                    "width": "auto",
                  }
                }
                wrap="wrap"
              >
                Home
              </Text>
            </View>
          </View>
        </View>
        <Text
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          /
        </Text>
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          setCollapsed={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
            }
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={16}
            bbWidth={16}
            color={4280690214}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Object {
                  "color": "#262626",
                  "height": 16,
                  "width": 16,
                },
                Object {
                  "flex": 0,
                  "height": 16,
                  "width": 16,
                },
              ]
            }
            tintColor={4280690214}
            vbHeight={32.055}
            vbWidth={32.055}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGGroup
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGPath
                    d="M3.968,12.061C1.775,12.061,0,13.835,0,16.027c0,2.192,1.773,3.967,3.968,3.967c2.189,0,3.966-1.772,3.966-3.967   C7.934,13.835,6.157,12.061,3.968,12.061z M16.233,12.061c-2.188,0-3.968,1.773-3.968,3.965c0,2.192,1.778,3.967,3.968,3.967   s3.97-1.772,3.97-3.967C20.201,13.835,18.423,12.061,16.233,12.061z M28.09,12.061c-2.192,0-3.969,1.774-3.969,3.967   c0,2.19,1.774,3.965,3.969,3.965c2.188,0,3.965-1.772,3.965-3.965S30.278,12.061,28.09,12.061z"
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <Text
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          /
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <Text
                allowFontScaling={false}
                direction="row"
                spacing="2"
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Object {
                      "color": "#ef4444",
                      "display": "flex",
                      "flexDirection": "row",
                      "fontSize": 16,
                      "height": 16,
                      "lineHeight": 16,
                      "marginRight": 4,
                      "width": 16,
                    },
                    Object {
                      "fontFamily": "anticon",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
                wrap="wrap"
              >
                
              </Text>
              <View
                style={Object {}}
              />
              <Text
                direction="row"
                spacing="2"
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#ef4444",
                    "display": "flex",
                    "flexDirection": "row",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "height": "auto",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                    "width": "auto",
                  }
                }
                wrap="wrap"
              >
                Github (This is currently active)
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "marginTop": 12,
        }
      }
    >
      <View
        _disabled={
          Object {
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "opacity": "80",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="gray"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderColor": "#d4d4d8",
            "borderRadius": 4,
            "borderWidth": 0,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#71717a",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Expand
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Breadcrumb ComponentSeparator 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginBottom": 16,
            "textDecorationLine": undefined,
          }
        }
      >
        Breadcrumb with Custom Separator
      </Text>
      <View
        accessibilityLabel="Breadcrumb"
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
            "flexWrap": "wrap",
            "height": "auto",
            "width": "auto",
          }
        }
        wrap="wrap"
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": "none",
                }
              }
            >
              Home (This is currently active)
            </Text>
          </View>
        </View>
        <Text />
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": "none",
                }
              }
            >
              Docs
            </Text>
          </View>
        </View>
        <Text />
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": "none",
                }
              }
            >
              Github
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Breadcrumb Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginBottom": 16,
            "textDecorationLine": undefined,
          }
        }
      >
        Breadcrumb Composition
      </Text>
      <View
        accessibilityLabel="Breadcrumb"
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
            "flexWrap": "wrap",
            "height": "auto",
            "width": "auto",
          }
        }
        wrap="wrap"
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <Text />
              <View
                style={Object {}}
              />
              <Text
                direction="row"
                spacing="2"
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "display": "flex",
                    "flexDirection": "row",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "height": "auto",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                    "width": "auto",
                  }
                }
                wrap="wrap"
              >
                Home
              </Text>
            </View>
          </View>
        </View>
        <Text
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          /
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text />
            <Text
              direction="row"
              spacing="2"
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "display": "flex",
                  "flexDirection": "row",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": "auto",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                  "width": "auto",
                }
              }
              wrap="wrap"
            >
              Docs
            </Text>
          </View>
        </View>
        <Text
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          /
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <Text />
              <View
                style={Object {}}
              />
              <Text
                direction="row"
                spacing="2"
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "display": "flex",
                    "flexDirection": "row",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "height": "auto",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                    "width": "auto",
                  }
                }
                wrap="wrap"
              >
                Github (This is currently active)
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Breadcrumb Separators 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginBottom": 16,
            "textDecorationLine": undefined,
          }
        }
      >
        Breadcrumb with String Separator
      </Text>
      <View
        accessibilityLabel="Breadcrumb"
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
            "flexWrap": "wrap",
            "height": "auto",
            "width": "auto",
          }
        }
        wrap="wrap"
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": "none",
                }
              }
            >
              Home (This is currently active)
            </Text>
          </View>
        </View>
        <Text
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          -
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": "none",
                }
              }
            >
              Docs
            </Text>
          </View>
        </View>
        <Text
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          -
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": "none",
                }
              }
            >
              Github
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Button Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#06b6d4",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Primary
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Button Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _disabled={
        Object {
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "opacity": "80",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderColor": "#67e8f9",
          "borderRadius": 999,
          "borderWidth": 2,
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "center",
          "marginLeft": "auto",
          "marginRight": "auto",
          "paddingBottom": 8,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#06b6d4",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            SHOP NOW
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Button Icons 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "flexDirection": "column",
        }
      }
    >
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 24,
                  "fontWeight": "500",
                  "height": 24,
                  "lineHeight": 24,
                  "width": 24,
                },
                Object {
                  "fontFamily": "ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
          <View
            style={
              Object {
                "width": 8,
              }
            }
          />
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Upload
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        _disabled={
          Object {
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "opacity": "80",
          }
        }
        _text={
          Object {
            "color": "darkText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#cffafe",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#06b6d4",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Download
            </Text>
          </View>
          <View
            style={
              Object {
                "width": 8,
              }
            }
          />
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Object {
                  "color": "#06b6d4",
                  "fontSize": 24,
                  "fontWeight": "500",
                  "height": 24,
                  "lineHeight": 24,
                  "width": 24,
                },
                Object {
                  "fontFamily": "ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Button Loading 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "column",
        }
      }
    >
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "darkText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#fafaf9",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "opacity": 0.5,
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <ActivityIndicator
            accessibilityLabel="loading"
            accessible={true}
            animating={true}
            color="#000000"
            hidesWhenStopped={true}
            size="small"
          />
          <View
            style={
              Object {
                "width": 8,
              }
            }
          />
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Button
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "darkText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#fafaf9",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "opacity": 0.5,
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <ActivityIndicator
            accessibilityLabel="loading"
            accessible={true}
            animating={true}
            color="#000000"
            hidesWhenStopped={true}
            size="small"
          />
          <View
            style={
              Object {
                "width": 8,
              }
            }
          />
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Submitting
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "darkText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#fafaf9",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "opacity": 0.5,
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Submitting
            </Text>
          </View>
          <View
            style={
              Object {
                "width": 8,
              }
            }
          />
          <ActivityIndicator
            accessibilityLabel="loading"
            accessible={true}
            animating={true}
            color="#000000"
            hidesWhenStopped={true}
            size="small"
          />
        </View>
      </View>
      <View
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "darkText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(251, 191, 36, 0.7)",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "opacity": 0.5,
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <ActivityIndicator
            accessibilityLabel="loading"
            accessible={true}
            animating={true}
            color="#FFFFFF"
            hidesWhenStopped={true}
            size="small"
          />
          <View
            style={
              Object {
                "width": 8,
              }
            }
          />
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#374151",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Submitting
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        _disabled={
          Object {
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderColor": "#67e8f9",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "opacity": 0.8,
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <ActivityIndicator
            accessibilityLabel="loading"
            accessible={true}
            animating={true}
            color="#06b6d4"
            hidesWhenStopped={true}
            size="small"
          />
          <View
            style={
              Object {
                "width": 8,
              }
            }
          />
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#06b6d4",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Submitting
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Button Sizes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginBottom": 40,
            "textDecorationLine": undefined,
          }
        }
      >
        Sizes
      </Text>
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        style={Object {}}
      >
        <View
          _disabled={
            Object {
              "bg": "trueGray.300",
              "opacity": "50",
            }
          }
          _loading={
            Object {
              "bg": "warmGray.50",
              "opacity": "50",
            }
          }
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              style={Object {}}
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#FFFFFF",
                    "fontFamily": undefined,
                    "fontSize": 10,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 15,
                    "textDecorationLine": undefined,
                  }
                }
              >
                BUTTON
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        style={Object {}}
      >
        <View
          _disabled={
            Object {
              "bg": "trueGray.300",
              "opacity": "50",
            }
          }
          _loading={
            Object {
              "bg": "warmGray.50",
              "opacity": "50",
            }
          }
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              style={Object {}}
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#FFFFFF",
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 18,
                    "textDecorationLine": undefined,
                  }
                }
              >
                BUTTON
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        style={Object {}}
      >
        <View
          _disabled={
            Object {
              "bg": "trueGray.300",
              "opacity": "50",
            }
          }
          _loading={
            Object {
              "bg": "warmGray.50",
              "opacity": "50",
            }
          }
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              style={Object {}}
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#FFFFFF",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                BUTTON
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        style={Object {}}
      >
        <View
          _disabled={
            Object {
              "bg": "trueGray.300",
              "opacity": "50",
            }
          }
          _loading={
            Object {
              "bg": "warmGray.50",
              "opacity": "50",
            }
          }
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 8,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              style={Object {}}
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#FFFFFF",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "textDecorationLine": undefined,
                  }
                }
              >
                BUTTON
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Button Variants 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RCTScrollView
      contentContainerStyle={
        Array [
          Object {},
          Object {},
        ]
      }
      showsVerticalScrollIndicator={false}
      style={
        Object {
          "paddingLeft": 12,
          "paddingRight": 12,
        }
      }
    >
      <View>
        <View
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "marginTop": 16,
              "paddingLeft": 8,
              "paddingRight": 8,
              "width": "100%",
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#404040",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Solid
          </Text>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            style={
              Object {
                "flexDirection": "column",
                "marginBottom": 10,
                "marginLeft": "auto",
                "marginRight": "auto",
                "marginTop": 6,
              }
            }
          >
            <View
              _disabled={
                Object {
                  "bg": "trueGray.300",
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "bg": "warmGray.50",
                  "opacity": "50",
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#06b6d4",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#FFFFFF",
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 18,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    PRIMARY
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <View
              _disabled={
                Object {
                  "bg": "trueGray.300",
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "bg": "warmGray.50",
                  "opacity": "50",
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="secondary"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ec4899",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#FFFFFF",
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 18,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    SECONDARY
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <View
              _loading={
                Object {
                  "bg": "warmGray.50",
                  "opacity": "50",
                }
              }
              _text={
                Object {
                  "color": "darkText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#d4d4d4",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "opacity": 0.5,
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#000000",
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 18,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    DISABLED
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            style={
              Object {
                "backgroundColor": "#e5e7eb",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#404040",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Subtle
          </Text>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            style={
              Object {
                "flexDirection": "column",
                "marginBottom": 10,
                "marginLeft": "auto",
                "marginRight": "auto",
                "marginTop": 6,
              }
            }
          >
            <View
              _disabled={
                Object {
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "opacity": "80",
                }
              }
              _text={
                Object {
                  "color": "darkText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#cffafe",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#06b6d4",
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 18,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    PRIMARY
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <View
              _disabled={
                Object {
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "opacity": "80",
                }
              }
              _text={
                Object {
                  "color": "darkText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="secondary"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fce7f3",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#ec4899",
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 18,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    SECONDARY
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <View
              _loading={
                Object {
                  "opacity": "80",
                }
              }
              _text={
                Object {
                  "color": "darkText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#cffafe",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "opacity": 0.5,
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#06b6d4",
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 18,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    DISABLED
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            style={
              Object {
                "backgroundColor": "#e5e7eb",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#404040",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Outline
          </Text>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            style={
              Object {
                "flexDirection": "column",
                "marginBottom": 10,
                "marginLeft": "auto",
                "marginRight": "auto",
                "marginTop": 6,
              }
            }
          >
            <View
              _disabled={
                Object {
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "opacity": "80",
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderColor": "#67e8f9",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#06b6d4",
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 18,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    PRIMARY
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <View
              _disabled={
                Object {
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "opacity": "80",
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="secondary"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderColor": "#f9a8d4",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#ec4899",
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 18,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    SECONDARY
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <View
              _loading={
                Object {
                  "opacity": "80",
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderColor": "#67e8f9",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "opacity": 0.5,
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#06b6d4",
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 18,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    DISABLED
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            style={
              Object {
                "backgroundColor": "#e5e7eb",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#404040",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Link
          </Text>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            style={
              Object {
                "flexDirection": "column",
                "marginBottom": 10,
                "marginLeft": "auto",
                "marginRight": "auto",
                "marginTop": 6,
              }
            }
          >
            <View
              _disabled={
                Object {
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "opacity": "80",
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#06b6d4",
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 18,
                        "textDecorationLine": "underline",
                      }
                    }
                  >
                    PRIMARY
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <View
              _disabled={
                Object {
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "opacity": "80",
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="secondary"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#ec4899",
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 18,
                        "textDecorationLine": "underline",
                      }
                    }
                  >
                    SECONDARY
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <View
              _loading={
                Object {
                  "opacity": "80",
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "opacity": 0.5,
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#06b6d4",
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 18,
                        "textDecorationLine": "underline",
                      }
                    }
                  >
                    DISABLED
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            style={
              Object {
                "backgroundColor": "#e5e7eb",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#404040",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Ghost
          </Text>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            style={
              Object {
                "flexDirection": "column",
                "marginBottom": 10,
                "marginLeft": "auto",
                "marginRight": "auto",
                "marginTop": 6,
              }
            }
          >
            <View
              _disabled={
                Object {
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "opacity": "80",
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#06b6d4",
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 18,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    PRIMARY
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <View
              _disabled={
                Object {
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "opacity": "80",
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="secondary"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#ec4899",
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 18,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    SECONDARY
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <View
              _loading={
                Object {
                  "opacity": "80",
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "opacity": 0.5,
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#06b6d4",
                        "fontFamily": undefined,
                        "fontSize": 12,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 18,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    DISABLED
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            style={
              Object {
                "backgroundColor": "#e5e7eb",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#404040",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Unstyled
          </Text>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            style={
              Object {
                "flexDirection": "column",
                "marginBottom": 10,
                "marginLeft": "auto",
                "marginRight": "auto",
                "marginTop": 6,
              }
            }
          >
            <View
              _disabled={
                Object {
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "opacity": "80",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#1f2937",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Unstyled
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Button WithRef 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#06b6d4",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#1F2937",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 18,
                "textDecorationLine": undefined,
              }
            }
          >
            Send
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots ButtonGroup Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "marginLeft": "auto",
          "marginRight": "auto",
        }
      }
    >
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="blue"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#3b82f6",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 18,
                  "textDecorationLine": undefined,
                }
              }
            >
              Save
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "width": 8,
          }
        }
      />
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="blue"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#3b82f6",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 18,
                  "textDecorationLine": undefined,
                }
              }
            >
              Cancel
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots ButtonGroup Sizes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 20,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 25,
            "marginBottom": 40,
            "textDecorationLine": undefined,
          }
        }
      >
        Sizes
      </Text>
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "column",
          }
        }
      >
        <View
          style={Object {}}
        >
          <View
            _disabled={
              Object {
                "bg": "trueGray.300",
                "opacity": "50",
              }
            }
            _loading={
              Object {
                "bg": "warmGray.50",
                "opacity": "50",
              }
            }
            _text={
              Object {
                "color": "lightText",
              }
            }
            accessibilityRole="button"
            accessible={true}
            colorScheme="primary"
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#06b6d4",
                "borderRadius": 4,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={Object {}}
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#FFFFFF",
                      "fontFamily": undefined,
                      "fontSize": 10,
                      "fontStyle": "normal",
                      "fontWeight": "500",
                      "letterSpacing": 0,
                      "lineHeight": 15,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  BUTTON
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          style={Object {}}
        >
          <View
            _disabled={
              Object {
                "bg": "trueGray.300",
                "opacity": "50",
              }
            }
            _loading={
              Object {
                "bg": "warmGray.50",
                "opacity": "50",
              }
            }
            _text={
              Object {
                "color": "lightText",
              }
            }
            accessibilityRole="button"
            accessible={true}
            colorScheme="primary"
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#06b6d4",
                "borderRadius": 4,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={Object {}}
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#FFFFFF",
                      "fontFamily": undefined,
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "500",
                      "letterSpacing": 0,
                      "lineHeight": 18,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  BUTTON
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          style={Object {}}
        >
          <View
            _disabled={
              Object {
                "bg": "trueGray.300",
                "opacity": "50",
              }
            }
            _loading={
              Object {
                "bg": "warmGray.50",
                "opacity": "50",
              }
            }
            _text={
              Object {
                "color": "lightText",
              }
            }
            accessibilityRole="button"
            accessible={true}
            colorScheme="primary"
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#06b6d4",
                "borderRadius": 4,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 8,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={Object {}}
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#FFFFFF",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "500",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  BUTTON
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          style={Object {}}
        >
          <View
            _disabled={
              Object {
                "bg": "trueGray.300",
                "opacity": "50",
              }
            }
            _loading={
              Object {
                "bg": "warmGray.50",
                "opacity": "50",
              }
            }
            _text={
              Object {
                "color": "lightText",
              }
            }
            accessibilityRole="button"
            accessible={true}
            colorScheme="primary"
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#06b6d4",
                "borderRadius": 4,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={Object {}}
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#FFFFFF",
                      "fontFamily": undefined,
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "500",
                      "letterSpacing": 0,
                      "lineHeight": 24,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  BUTTON
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots ButtonGroup Variants 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RCTScrollView
      contentContainerStyle={
        Array [
          Object {},
          Object {},
        ]
      }
      style={Object {}}
    >
      <View>
        <View
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "marginTop": 16,
              "width": "100%",
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#404040",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Solid
          </Text>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            style={
              Object {
                "flexDirection": "row",
                "marginBottom": 10,
                "marginTop": 6,
              }
            }
          >
            <View
              _disabled={
                Object {
                  "bg": "trueGray.300",
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "bg": "warmGray.50",
                  "opacity": "50",
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="teal"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#14b8a6",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#FFFFFF",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Save
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              _disabled={
                Object {
                  "bg": "trueGray.300",
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "bg": "warmGray.50",
                  "opacity": "50",
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="danger"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ef4444",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#FFFFFF",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Cancel
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            style={
              Object {
                "backgroundColor": "#e5e7eb",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#404040",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Outline
          </Text>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            style={
              Object {
                "flexDirection": "row",
                "marginBottom": 10,
                "marginTop": 6,
              }
            }
          >
            <View
              _disabled={
                Object {
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "opacity": "80",
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="teal"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderColor": "#5eead4",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#14b8a6",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Save
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              _disabled={
                Object {
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "opacity": "80",
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="danger"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderColor": "#fca5a5",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#ef4444",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Cancel
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            style={
              Object {
                "backgroundColor": "#e5e7eb",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#404040",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Link
          </Text>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            style={
              Object {
                "flexDirection": "row",
                "marginBottom": 10,
                "marginTop": 6,
              }
            }
          >
            <View
              _disabled={
                Object {
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "opacity": "80",
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="teal"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#14b8a6",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": "underline",
                      }
                    }
                  >
                    Save
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              _disabled={
                Object {
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "opacity": "80",
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="danger"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#ef4444",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": "underline",
                      }
                    }
                  >
                    Cancel
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            style={
              Object {
                "backgroundColor": "#e5e7eb",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#404040",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Ghost
          </Text>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            style={
              Object {
                "flexDirection": "row",
                "marginBottom": 10,
                "marginTop": 6,
              }
            }
          >
            <View
              _disabled={
                Object {
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "opacity": "80",
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="teal"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#14b8a6",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Save
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              _disabled={
                Object {
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "opacity": "80",
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="danger"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#ef4444",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Cancel
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            style={
              Object {
                "backgroundColor": "#e5e7eb",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#404040",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Unstyled
          </Text>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            style={
              Object {
                "flexDirection": "row",
                "marginBottom": 10,
                "marginTop": 6,
              }
            }
          >
            <View
              _disabled={
                Object {
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "opacity": "80",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="teal"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#1f2937",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Save
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              _disabled={
                Object {
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "opacity": "80",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="danger"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#1f2937",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Cancel
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots ButtonGroup direction 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "paddingLeft": 8,
          "paddingRight": 8,
          "width": "50%",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "center",
            "width": "100%",
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#404040",
              "fontFamily": undefined,
              "fontSize": 20,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 25,
              "marginBottom": 16,
              "textDecorationLine": undefined,
            }
          }
        >
          Row
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
              "marginLeft": "auto",
              "marginRight": "auto",
            }
          }
        >
          <View
            _disabled={
              Object {
                "bg": "trueGray.300",
                "opacity": "50",
              }
            }
            _loading={
              Object {
                "bg": "warmGray.50",
                "opacity": "50",
              }
            }
            _text={
              Object {
                "color": "lightText",
              }
            }
            accessibilityRole="button"
            accessible={true}
            colorScheme="teal"
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#14b8a6",
                "borderRadius": 4,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 8,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={Object {}}
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#FFFFFF",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "500",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Save
                </Text>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "width": 8,
              }
            }
          />
          <View
            _disabled={
              Object {
                "bg": "trueGray.300",
                "opacity": "50",
              }
            }
            _loading={
              Object {
                "bg": "warmGray.50",
                "opacity": "50",
              }
            }
            _text={
              Object {
                "color": "lightText",
              }
            }
            accessibilityRole="button"
            accessible={true}
            colorScheme="rose"
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#f43f5e",
                "borderRadius": 4,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 8,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={Object {}}
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#FFFFFF",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "500",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Cancel
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          aria-orientation="horizontal"
          style={
            Object {
              "backgroundColor": "#e5e7eb",
              "height": 1,
              "marginTop": 20,
              "width": "100%",
            }
          }
          thickness="1"
        />
      </View>
      <View
        style={
          Object {
            "height": 10,
          }
        }
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "center",
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#404040",
              "fontFamily": undefined,
              "fontSize": 20,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 25,
              "marginBottom": 16,
              "textDecorationLine": undefined,
            }
          }
        >
          Column
        </Text>
        <View
          style={
            Object {
              "flexDirection": "column",
              "marginLeft": "auto",
              "marginRight": "auto",
            }
          }
        >
          <View
            _disabled={
              Object {
                "bg": "trueGray.300",
                "opacity": "50",
              }
            }
            _loading={
              Object {
                "bg": "warmGray.50",
                "opacity": "50",
              }
            }
            _text={
              Object {
                "color": "lightText",
              }
            }
            accessibilityRole="button"
            accessible={true}
            colorScheme="teal"
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#14b8a6",
                "borderRadius": 4,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 8,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={Object {}}
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#FFFFFF",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "500",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Save
                </Text>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 8,
              }
            }
          />
          <View
            _disabled={
              Object {
                "bg": "trueGray.300",
                "opacity": "50",
              }
            }
            _loading={
              Object {
                "bg": "warmGray.50",
                "opacity": "50",
              }
            }
            _text={
              Object {
                "color": "lightText",
              }
            }
            accessibilityRole="button"
            accessible={true}
            colorScheme="rose"
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#f43f5e",
                "borderRadius": 4,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 8,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={Object {}}
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#FFFFFF",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "500",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Cancel
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots ButtonGroup isAttached 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RCTScrollView
      contentContainerStyle={
        Array [
          Object {},
          Object {},
        ]
      }
      style={Object {}}
    >
      <View>
        <View
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "marginTop": 16,
              "width": "100%",
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#404040",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Solid
          </Text>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            style={
              Object {
                "flexDirection": "row",
                "marginBottom": 10,
                "marginLeft": "auto",
                "marginRight": "auto",
                "marginTop": 6,
              }
            }
          >
            <View
              _disabled={
                Object {
                  "bg": "trueGray.300",
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "bg": "warmGray.50",
                  "opacity": "50",
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="teal"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#14b8a6",
                  "borderBottomLeftRadius": 4,
                  "borderRadius": 0,
                  "borderTopLeftRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#FFFFFF",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Save
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": 0,
                }
              }
            />
            <View
              _disabled={
                Object {
                  "bg": "trueGray.300",
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "bg": "warmGray.50",
                  "opacity": "50",
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="danger"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ef4444",
                  "borderBottomRightRadius": 4,
                  "borderLeftWidth": 0,
                  "borderRadius": 0,
                  "borderTopRightRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#FFFFFF",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Cancel
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            style={
              Object {
                "backgroundColor": "#e5e7eb",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#404040",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Outline
          </Text>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            style={
              Object {
                "flexDirection": "row",
                "marginBottom": 10,
                "marginLeft": "auto",
                "marginRight": "auto",
                "marginTop": 6,
              }
            }
          >
            <View
              _disabled={
                Object {
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "opacity": "80",
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="teal"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderBottomLeftRadius": 4,
                  "borderColor": "#5eead4",
                  "borderRadius": 0,
                  "borderTopLeftRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#14b8a6",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Save
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": 0,
                }
              }
            />
            <View
              _disabled={
                Object {
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "opacity": "80",
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="danger"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderBottomRightRadius": 4,
                  "borderColor": "#fca5a5",
                  "borderLeftWidth": 0,
                  "borderRadius": 0,
                  "borderTopRightRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#ef4444",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Cancel
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            style={
              Object {
                "backgroundColor": "#e5e7eb",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#404040",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Link
          </Text>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            style={
              Object {
                "flexDirection": "row",
                "marginBottom": 10,
                "marginLeft": "auto",
                "marginRight": "auto",
                "marginTop": 6,
              }
            }
          >
            <View
              _disabled={
                Object {
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "opacity": "80",
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="teal"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderBottomLeftRadius": 4,
                  "borderRadius": 0,
                  "borderTopLeftRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#14b8a6",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": "underline",
                      }
                    }
                  >
                    Save
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": 0,
                }
              }
            />
            <View
              _disabled={
                Object {
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "opacity": "80",
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="danger"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderBottomRightRadius": 4,
                  "borderLeftWidth": 0,
                  "borderRadius": 0,
                  "borderTopRightRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#ef4444",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": "underline",
                      }
                    }
                  >
                    Cancel
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            style={
              Object {
                "backgroundColor": "#e5e7eb",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#404040",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Ghost
          </Text>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            style={
              Object {
                "flexDirection": "row",
                "marginBottom": 10,
                "marginTop": 6,
              }
            }
          >
            <View
              _disabled={
                Object {
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "opacity": "80",
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="teal"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#14b8a6",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Save
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              _disabled={
                Object {
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "opacity": "80",
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="danger"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#ef4444",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Cancel
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            style={
              Object {
                "backgroundColor": "#e5e7eb",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#404040",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Unstyled
          </Text>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            style={
              Object {
                "flexDirection": "row",
                "marginBottom": 10,
                "marginLeft": "auto",
                "marginRight": "auto",
                "marginTop": 6,
              }
            }
          >
            <View
              _disabled={
                Object {
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "opacity": "80",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="teal"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderBottomLeftRadius": 4,
                  "borderRadius": 0,
                  "borderTopLeftRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#1f2937",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Save
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": 0,
                }
              }
            />
            <View
              _disabled={
                Object {
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "opacity": "80",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="danger"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderBottomRightRadius": 4,
                  "borderLeftWidth": 0,
                  "borderRadius": 0,
                  "borderTopRightRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#1f2937",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Cancel
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Card Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#0e7490",
          "borderRadius": 6,
          "elevation": 5,
          "overflow": "hidden",
          "paddingBottom": 16,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 16,
          "shadowColor": "#000000",
          "shadowOffset": Object {
            "height": 2,
            "width": 0,
          },
          "shadowOpacity": 0.25,
          "shadowRadius": 3.84,
          "width": 296,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "flex-start",
            "flexDirection": "row",
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#ecfeff",
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "500",
              "letterSpacing": 0,
              "lineHeight": 18,
              "textDecorationLine": undefined,
            }
          }
        >
          Open Source
        </Text>
        <View
          style={Object {}}
        />
        <View
          style={
            Object {
              "flexGrow": 1,
            }
          }
        />
        <View
          style={Object {}}
        />
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#cffafe",
              "fontFamily": undefined,
              "fontSize": 10,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 15,
              "textDecorationLine": undefined,
            }
          }
        >
          1 month ago
        </Text>
      </View>
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#ecfeff",
            "fontFamily": undefined,
            "fontSize": 18,
            "fontStyle": "normal",
            "fontWeight": "500",
            "letterSpacing": 0,
            "lineHeight": 22.5,
            "marginTop": 8,
            "textDecorationLine": undefined,
          }
        }
      >
        NativeBase
      </Text>
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#FFFFFF",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "marginTop": 4,
            "textDecorationLine": undefined,
          }
        }
      >
        NativeBase is a component library that enables devs to build universal design systems.
      </Text>
      <View
        style={
          Object {
            "display": "flex",
            "flexDirection": "column",
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#22d3ee",
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "500",
              "letterSpacing": 0,
              "lineHeight": 18,
              "marginTop": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          Read More
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Center Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#22d3ee",
          "display": "flex",
          "height": 200,
          "justifyContent": "center",
          "width": 200,
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#FFFFFF",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": undefined,
          }
        }
      >
        This is the Center
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Center SquareCircle 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#f472b6",
            "borderRadius": 9999,
            "display": "flex",
            "height": 98,
            "justifyContent": "center",
            "width": 98,
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Object {
                "color": "#FFFFFF",
                "fontSize": 32,
                "height": 32,
                "lineHeight": 32,
                "width": 32,
              },
              Object {
                "fontFamily": "material",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
      <View
        style={
          Object {
            "width": 12,
          }
        }
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#22d3ee",
            "display": "flex",
            "height": 96,
            "justifyContent": "center",
            "width": 96,
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 18,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 27,
                "textDecorationLine": undefined,
              }
            }
          >
            20
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Center WithIcons 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#22d3ee",
            "display": "flex",
            "height": 40,
            "justifyContent": "center",
            "width": 40,
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Object {
                "color": "#FFFFFF",
                "fontSize": 24,
                "height": 24,
                "lineHeight": 24,
                "width": 24,
              },
              Object {
                "fontFamily": "material",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
      <View
        style={
          Object {
            "width": 4,
          }
        }
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#f472b6",
            "display": "flex",
            "height": 40,
            "justifyContent": "center",
            "width": 40,
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 18,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 27,
                "textDecorationLine": undefined,
              }
            }
          >
            20
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": false,
            "disabled": undefined,
          }
        }
        accessible={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-start",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 9999,
                  "height": "100%",
                  "paddingBottom": 20,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 20,
                  "position": "absolute",
                  "width": "100%",
                  "zIndex": -1,
                }
              }
            />
            <View
              _focusVisible={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(165, 243, 252, 0.5)",
                  },
                }
              }
              _invalid={
                Object {
                  "borderColor": "error.600",
                }
              }
              accessibilityLabel="This is a dummy checkbox"
              checked={false}
              colorScheme="primary"
              defaultIsChecked={false}
              disabled={false}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 4,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
              value="test"
            >
              <View
                style={
                  Object {
                    "color": "#fafafa",
                    "height": 16,
                    "width": 16,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "width": 24,
          }
        }
      />
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": undefined,
          }
        }
        accessible={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-start",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 9999,
                  "height": "100%",
                  "paddingBottom": 20,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 20,
                  "position": "absolute",
                  "width": "100%",
                  "zIndex": -1,
                }
              }
            />
            <View
              _focusVisible={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(165, 243, 252, 0.5)",
                  },
                }
              }
              _invalid={
                Object {
                  "borderColor": "error.600",
                }
              }
              accessibilityLabel="This is a dummy checkbox"
              checked={true}
              colorScheme="primary"
              defaultIsChecked={true}
              disabled={false}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0891b2",
                  "borderColor": "#0891b2",
                  "borderRadius": 4,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
              value="test"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={16}
                bbWidth={16}
                color={4294638330}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#fafafa",
                      "height": 16,
                      "width": 16,
                    },
                    Object {
                      "flex": 0,
                      "height": 16,
                      "width": 16,
                    },
                  ]
                }
                tintColor={4294638330}
                vbHeight={14}
                vbWidth={14}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGGroup
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGPath
                        d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Checkbox Group 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <View
        style={
          Object {
            "alignItems": "baseline",
            "flexDirection": "row",
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#404040",
              "fontFamily": undefined,
              "fontSize": 18,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 22.5,
              "textDecorationLine": undefined,
            }
          }
        >
          Hobbies
        </Text>
      </View>
      <View
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        style={Object {}}
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Selected: (
            2
            )
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        accessibilityLabel="pick an item"
        accessibilityState={
          Object {
            "disabled": undefined,
          }
        }
        aria-label="pick an item"
        defaultValue={
          Array [
            "Photography",
            "Gardening",
          ]
        }
        onChange={[Function]}
        style={
          Object {
            "alignItems": "flex-start",
          }
        }
      >
        <View
          accessibilityRole="checkbox"
          accessibilityState={
            Object {
              "checked": true,
              "disabled": false,
            }
          }
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={Object {}}
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  }
                }
              />
              <View
                _focusVisible={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(165, 243, 252, 0.5)",
                    },
                  }
                }
                _invalid={
                  Object {
                    "borderColor": "error.600",
                  }
                }
                checked={true}
                colorScheme="primary"
                defaultIsChecked={false}
                disabled={false}
                isDisabled={false}
                isReadOnly={false}
                readOnly={false}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#0891b2",
                    "borderColor": "#0891b2",
                    "borderRadius": 4,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
                value="Photography"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={16}
                  bbWidth={16}
                  color={4294638330}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#fafafa",
                        "height": 16,
                        "width": 16,
                      },
                      Object {
                        "flex": 0,
                        "height": 16,
                        "width": 16,
                      },
                    ]
                  }
                  tintColor={4294638330}
                  vbHeight={14}
                  vbWidth={14}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGGroup
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGPath
                          d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              Photography
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="checkbox"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": false,
            }
          }
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={Object {}}
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  }
                }
              />
              <View
                _focusVisible={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(165, 243, 252, 0.5)",
                    },
                  }
                }
                _invalid={
                  Object {
                    "borderColor": "error.600",
                  }
                }
                checked={false}
                colorScheme="primary"
                defaultIsChecked={false}
                disabled={false}
                isDisabled={false}
                isReadOnly={false}
                readOnly={false}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#fafafa",
                    "borderColor": "#d4d4d4",
                    "borderRadius": 4,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
                value="Writing"
              >
                <View
                  style={
                    Object {
                      "color": "#fafafa",
                      "height": 16,
                      "width": 16,
                    }
                  }
                />
              </View>
            </View>
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              Writing
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="checkbox"
          accessibilityState={
            Object {
              "checked": true,
              "disabled": false,
            }
          }
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={Object {}}
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  }
                }
              />
              <View
                _focusVisible={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(165, 243, 252, 0.5)",
                    },
                  }
                }
                _invalid={
                  Object {
                    "borderColor": "error.600",
                  }
                }
                checked={true}
                colorScheme="primary"
                defaultIsChecked={false}
                disabled={false}
                isDisabled={false}
                isReadOnly={false}
                readOnly={false}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#0891b2",
                    "borderColor": "#0891b2",
                    "borderRadius": 4,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
                value="Gardening"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={16}
                  bbWidth={16}
                  color={4294638330}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#fafafa",
                        "height": 16,
                        "width": 16,
                      },
                      Object {
                        "flex": 0,
                        "height": 16,
                        "width": 16,
                      },
                    ]
                  }
                  tintColor={4294638330}
                  vbHeight={14}
                  vbWidth={14}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGGroup
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGPath
                          d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              Gardening
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="checkbox"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": false,
            }
          }
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={Object {}}
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  }
                }
              />
              <View
                _focusVisible={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(165, 243, 252, 0.5)",
                    },
                  }
                }
                _invalid={
                  Object {
                    "borderColor": "error.600",
                  }
                }
                checked={false}
                colorScheme="primary"
                defaultIsChecked={false}
                disabled={false}
                isDisabled={false}
                isReadOnly={false}
                readOnly={false}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#fafafa",
                    "borderColor": "#d4d4d4",
                    "borderRadius": 4,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
                value="Cooking"
              >
                <View
                  style={
                    Object {
                      "color": "#fafafa",
                      "height": 16,
                      "width": 16,
                    }
                  }
                />
              </View>
            </View>
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              Cooking
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Controlled checkbox 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityLabel="choose numbers"
      accessibilityState={
        Object {
          "disabled": undefined,
        }
      }
      aria-label="choose numbers"
      onChange={[Function]}
      style={
        Object {
          "alignItems": "flex-start",
        }
      }
      value={Array []}
    >
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": false,
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "marginBottom": 8,
              "marginTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 9999,
                  "height": "100%",
                  "paddingBottom": 20,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 20,
                  "position": "absolute",
                  "width": "100%",
                  "zIndex": -1,
                }
              }
            />
            <View
              _focusVisible={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(165, 243, 252, 0.5)",
                  },
                }
              }
              _invalid={
                Object {
                  "borderColor": "error.600",
                }
              }
              checked={false}
              colorScheme="primary"
              defaultIsChecked={false}
              disabled={false}
              isDisabled={false}
              isReadOnly={false}
              readOnly={false}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 4,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
              value="one"
            >
              <View
                style={
                  Object {
                    "color": "#fafafa",
                    "height": 16,
                    "width": 16,
                  }
                }
              />
            </View>
          </View>
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "marginLeft": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            UX Research
          </Text>
        </View>
      </View>
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": false,
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-start",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 9999,
                  "height": "100%",
                  "paddingBottom": 20,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 20,
                  "position": "absolute",
                  "width": "100%",
                  "zIndex": -1,
                }
              }
            />
            <View
              _focusVisible={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(165, 243, 252, 0.5)",
                  },
                }
              }
              _invalid={
                Object {
                  "borderColor": "error.600",
                }
              }
              checked={false}
              colorScheme="primary"
              defaultIsChecked={false}
              disabled={false}
              isDisabled={false}
              isReadOnly={false}
              readOnly={false}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 4,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
              value="two"
            >
              <View
                style={
                  Object {
                    "color": "#fafafa",
                    "height": 16,
                    "width": 16,
                  }
                }
              />
            </View>
          </View>
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "marginLeft": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            Software Development
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Custom Color 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-start",
        }
      }
    >
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": undefined,
          }
        }
        accessible={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-start",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 9999,
                  "height": "100%",
                  "paddingBottom": 20,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 20,
                  "position": "absolute",
                  "width": "100%",
                  "zIndex": -1,
                }
              }
            />
            <View
              _focusVisible={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(254, 202, 202, 0.5)",
                  },
                }
              }
              _invalid={
                Object {
                  "borderColor": "error.600",
                }
              }
              checked={true}
              colorScheme="danger"
              defaultIsChecked={true}
              disabled={false}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#dc2626",
                  "borderColor": "#dc2626",
                  "borderRadius": 4,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
              value="danger"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={16}
                bbWidth={16}
                color={4294638330}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#fafafa",
                      "height": 16,
                      "width": 16,
                    },
                    Object {
                      "flex": 0,
                      "height": 16,
                      "width": 16,
                    },
                  ]
                }
                tintColor={4294638330}
                vbHeight={14}
                vbWidth={14}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGGroup
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGPath
                        d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "marginLeft": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            Danger
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 12,
          }
        }
      />
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": undefined,
          }
        }
        accessible={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-start",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 9999,
                  "height": "100%",
                  "paddingBottom": 20,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 20,
                  "position": "absolute",
                  "width": "100%",
                  "zIndex": -1,
                }
              }
            />
            <View
              _focusVisible={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(186, 230, 253, 0.5)",
                  },
                }
              }
              _invalid={
                Object {
                  "borderColor": "error.600",
                }
              }
              checked={true}
              colorScheme="info"
              defaultIsChecked={true}
              disabled={false}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0284c7",
                  "borderColor": "#0284c7",
                  "borderRadius": 4,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
              value="info"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={16}
                bbWidth={16}
                color={4294638330}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#fafafa",
                      "height": 16,
                      "width": 16,
                    },
                    Object {
                      "flex": 0,
                      "height": 16,
                      "width": 16,
                    },
                  ]
                }
                tintColor={4294638330}
                vbHeight={14}
                vbWidth={14}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGGroup
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGPath
                        d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "marginLeft": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            Info
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 12,
          }
        }
      />
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": undefined,
          }
        }
        accessible={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-start",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 9999,
                  "height": "100%",
                  "paddingBottom": 20,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 20,
                  "position": "absolute",
                  "width": "100%",
                  "zIndex": -1,
                }
              }
            />
            <View
              _focusVisible={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(254, 215, 170, 0.5)",
                  },
                }
              }
              _invalid={
                Object {
                  "borderColor": "error.600",
                }
              }
              checked={true}
              colorScheme="orange"
              defaultIsChecked={true}
              disabled={false}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ea580c",
                  "borderColor": "#ea580c",
                  "borderRadius": 4,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
              value="orange"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={16}
                bbWidth={16}
                color={4294638330}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#fafafa",
                      "height": 16,
                      "width": 16,
                    },
                    Object {
                      "flex": 0,
                      "height": 16,
                      "width": 16,
                    },
                  ]
                }
                tintColor={4294638330}
                vbHeight={14}
                vbWidth={14}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGGroup
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGPath
                        d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "marginLeft": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            Orange
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 12,
          }
        }
      />
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": undefined,
          }
        }
        accessible={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-start",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 9999,
                  "height": "100%",
                  "paddingBottom": 20,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 20,
                  "position": "absolute",
                  "width": "100%",
                  "zIndex": -1,
                }
              }
            />
            <View
              _focusVisible={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(233, 213, 255, 0.5)",
                  },
                }
              }
              _invalid={
                Object {
                  "borderColor": "error.600",
                }
              }
              checked={true}
              colorScheme="purple"
              defaultIsChecked={true}
              disabled={false}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#9333ea",
                  "borderColor": "#9333ea",
                  "borderRadius": 4,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
              value="purple"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={16}
                bbWidth={16}
                color={4294638330}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#fafafa",
                      "height": 16,
                      "width": 16,
                    },
                    Object {
                      "flex": 0,
                      "height": 16,
                      "width": 16,
                    },
                  ]
                }
                tintColor={4294638330}
                vbHeight={14}
                vbWidth={14}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGGroup
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGPath
                        d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "marginLeft": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            Purple
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Custom Icon 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-start",
        }
      }
    >
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": undefined,
          }
        }
        accessible={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-start",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 9999,
                  "height": "100%",
                  "paddingBottom": 20,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 20,
                  "position": "absolute",
                  "width": "100%",
                  "zIndex": -1,
                }
              }
            />
            <View
              _focusVisible={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(254, 215, 170, 0.5)",
                  },
                }
              }
              _invalid={
                Object {
                  "borderColor": "error.600",
                }
              }
              checked={true}
              colorScheme="orange"
              defaultIsChecked={true}
              disabled={false}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ea580c",
                  "borderColor": "#ea580c",
                  "borderRadius": 4,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
              value="orange"
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Object {
                      "color": "#fafafa",
                      "fontSize": 20,
                      "height": 20,
                      "lineHeight": 20,
                      "width": 20,
                    },
                    Object {
                      "fontFamily": "material-community",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                󰗝
              </Text>
            </View>
          </View>
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 18,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 27,
                "marginLeft": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            Darts
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 12,
          }
        }
      />
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": undefined,
          }
        }
        accessible={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-start",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 9999,
                  "height": "100%",
                  "paddingBottom": 20,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 20,
                  "position": "absolute",
                  "width": "100%",
                  "zIndex": -1,
                }
              }
            />
            <View
              _focusVisible={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(63, 63, 70, 0.5)",
                  },
                }
              }
              _invalid={
                Object {
                  "borderColor": "error.600",
                }
              }
              checked={true}
              colorScheme="dark"
              defaultIsChecked={true}
              disabled={false}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#d4d4d8",
                  "borderColor": "#d4d4d8",
                  "borderRadius": 4,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
              value="dark"
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Object {
                      "color": "#fafafa",
                      "fontSize": 20,
                      "height": 20,
                      "lineHeight": 20,
                      "width": 20,
                    },
                    Object {
                      "fontFamily": "material-community",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                󰭟
              </Text>
            </View>
          </View>
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 18,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 27,
                "marginLeft": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            Movie
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 12,
          }
        }
      />
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": undefined,
          }
        }
        accessible={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-start",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 9999,
                  "height": "100%",
                  "paddingBottom": 20,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 20,
                  "position": "absolute",
                  "width": "100%",
                  "zIndex": -1,
                }
              }
            />
            <View
              _focusVisible={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(254, 202, 202, 0.5)",
                  },
                }
              }
              _invalid={
                Object {
                  "borderColor": "error.600",
                }
              }
              checked={true}
              colorScheme="red"
              defaultIsChecked={true}
              disabled={false}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#dc2626",
                  "borderColor": "#dc2626",
                  "borderRadius": 4,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
              value="red"
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Object {
                      "color": "#fafafa",
                      "fontSize": 20,
                      "height": 20,
                      "lineHeight": 20,
                      "width": 20,
                    },
                    Object {
                      "fontFamily": "material-community",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                󰻝
              </Text>
            </View>
          </View>
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 18,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 27,
                "marginLeft": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            Camping
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 12,
          }
        }
      />
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": undefined,
          }
        }
        accessible={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-start",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 9999,
                  "height": "100%",
                  "paddingBottom": 20,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 20,
                  "position": "absolute",
                  "width": "100%",
                  "zIndex": -1,
                }
              }
            />
            <View
              _focusVisible={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(191, 219, 254, 0.5)",
                  },
                }
              }
              _invalid={
                Object {
                  "borderColor": "error.600",
                }
              }
              checked={true}
              colorScheme="blue"
              defaultIsChecked={true}
              disabled={false}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#2563eb",
                  "borderColor": "#2563eb",
                  "borderRadius": 4,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
              value="blue"
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Object {
                      "color": "#fafafa",
                      "fontSize": 20,
                      "height": 20,
                      "lineHeight": 20,
                      "width": 20,
                    },
                    Object {
                      "fontFamily": "material-community",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                󰡘
              </Text>
            </View>
          </View>
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 18,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 27,
                "marginLeft": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            Chess
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Disabled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": false,
            "disabled": true,
          }
        }
        accessible={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-start",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "height": "100%",
                  "paddingBottom": 20,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 20,
                  "position": "absolute",
                  "width": "100%",
                  "zIndex": -1,
                }
              }
            />
            <View
              _focusVisible={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(165, 243, 252, 0.5)",
                  },
                }
              }
              _invalid={
                Object {
                  "borderColor": "error.600",
                }
              }
              checked={false}
              colorScheme="primary"
              defaultIsChecked={false}
              disabled={true}
              isDisabled={true}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 4,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                  "opacity": 0.4,
                }
              }
              value="one"
            >
              <View
                style={
                  Object {
                    "color": "#fafafa",
                    "height": 16,
                    "width": 16,
                  }
                }
              />
            </View>
          </View>
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "marginLeft": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            UX Research
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": true,
          }
        }
        accessible={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-start",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "height": "100%",
                  "paddingBottom": 20,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 20,
                  "position": "absolute",
                  "width": "100%",
                  "zIndex": -1,
                }
              }
            />
            <View
              _focusVisible={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(165, 243, 252, 0.5)",
                  },
                }
              }
              _invalid={
                Object {
                  "borderColor": "error.600",
                }
              }
              checked={true}
              colorScheme="primary"
              defaultIsChecked={true}
              disabled={true}
              isDisabled={true}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0891b2",
                  "borderColor": "#0891b2",
                  "borderRadius": 4,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                  "opacity": 0.4,
                }
              }
              value="two"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={16}
                bbWidth={16}
                color={4294638330}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#fafafa",
                      "height": 16,
                      "width": 16,
                    },
                    Object {
                      "flex": 0,
                      "height": 16,
                      "width": 16,
                    },
                  ]
                }
                tintColor={4294638330}
                vbHeight={14}
                vbWidth={14}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGGroup
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGPath
                        d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "marginLeft": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            Software Development
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Form Controlled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "maxWidth": "80%",
        }
      }
    >
      <View
        isInvalid={true}
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <View
          feedbackId="field-react-aria-0-2-feedback"
          hasFeedbackText={false}
          hasHelpText={false}
          helpTextId="field-react-aria-0-2-helptext"
          isDisabled={false}
          isInvalid={true}
          isReadOnly={false}
          isRequired={false}
          labelId="field-react-aria-0-2-label"
          nativeID="field-react-aria-0-2-label"
          setHasFeedbackText={[Function]}
          setHasHelpText={[Function]}
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "marginBottom": 8,
              "marginRight": 12,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 18,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 27,
                "textDecorationLine": undefined,
              }
            }
          >
            Preferred contact method
          </Text>
        </View>
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 24,
              "textDecorationLine": undefined,
            }
          }
        >
          Selected Values: 
        </Text>
        <View
          accessibilityLabel="choose multiple items"
          accessibilityState={
            Object {
              "disabled": undefined,
            }
          }
          aria-label="choose multiple items"
          defaultValue={
            Array [
              "Phone",
              "Email",
            ]
          }
          onChange={[Function]}
          style={
            Object {
              "alignItems": "flex-start",
              "marginTop": 8,
            }
          }
        >
          <View
            accessibilityRole="checkbox"
            accessibilityState={
              Object {
                "checked": true,
                "disabled": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={Object {}}
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    }
                  }
                />
                <View
                  _focusVisible={
                    Object {
                      "_interactionBox": Object {
                        "bg": "rgba(165, 243, 252, 0.5)",
                      },
                    }
                  }
                  checked={true}
                  colorScheme="primary"
                  defaultIsChecked={false}
                  disabled={false}
                  feedbackId="field-react-aria-0-2-feedback"
                  hasFeedbackText={false}
                  hasHelpText={false}
                  helpTextId="field-react-aria-0-2-helptext"
                  isDisabled={false}
                  isInvalid={true}
                  isReadOnly={false}
                  isRequired={false}
                  labelId="field-react-aria-0-2-label"
                  nativeID="field-react-aria-0-2"
                  readOnly={false}
                  required={false}
                  setHasFeedbackText={[Function]}
                  setHasHelpText={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#0891b2",
                      "borderColor": "#e11d48",
                      "borderRadius": 4,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                    }
                  }
                  value="Phone"
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4294638330}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#fafafa",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4294638330}
                    vbHeight={14}
                    vbWidth={14}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGGroup
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        >
                          <RNSVGPath
                            d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#000000",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "marginLeft": 8,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Phone
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="checkbox"
            accessibilityState={
              Object {
                "checked": true,
                "disabled": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={Object {}}
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    }
                  }
                />
                <View
                  _focusVisible={
                    Object {
                      "_interactionBox": Object {
                        "bg": "rgba(165, 243, 252, 0.5)",
                      },
                    }
                  }
                  checked={true}
                  colorScheme="primary"
                  defaultIsChecked={false}
                  disabled={false}
                  feedbackId="field-react-aria-0-2-feedback"
                  hasFeedbackText={false}
                  hasHelpText={false}
                  helpTextId="field-react-aria-0-2-helptext"
                  isDisabled={false}
                  isInvalid={true}
                  isReadOnly={false}
                  isRequired={false}
                  labelId="field-react-aria-0-2-label"
                  nativeID="field-react-aria-0-2"
                  readOnly={false}
                  required={false}
                  setHasFeedbackText={[Function]}
                  setHasHelpText={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#0891b2",
                      "borderColor": "#e11d48",
                      "borderRadius": 4,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                    }
                  }
                  value="Email"
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4294638330}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#fafafa",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4294638330}
                    vbHeight={14}
                    vbWidth={14}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGGroup
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        >
                          <RNSVGPath
                            d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#000000",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "marginLeft": 8,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Email
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="checkbox"
            accessibilityState={
              Object {
                "checked": false,
                "disabled": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={Object {}}
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    }
                  }
                />
                <View
                  _focusVisible={
                    Object {
                      "_interactionBox": Object {
                        "bg": "rgba(165, 243, 252, 0.5)",
                      },
                    }
                  }
                  checked={false}
                  colorScheme="primary"
                  defaultIsChecked={false}
                  disabled={false}
                  feedbackId="field-react-aria-0-2-feedback"
                  hasFeedbackText={false}
                  hasHelpText={false}
                  helpTextId="field-react-aria-0-2-helptext"
                  isDisabled={false}
                  isInvalid={true}
                  isReadOnly={false}
                  isRequired={false}
                  labelId="field-react-aria-0-2-label"
                  nativeID="field-react-aria-0-2"
                  readOnly={false}
                  required={false}
                  setHasFeedbackText={[Function]}
                  setHasHelpText={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#e11d48",
                      "borderRadius": 4,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                    }
                  }
                  value="Message"
                >
                  <View
                    style={
                      Object {
                        "color": "#fafafa",
                        "height": 16,
                        "width": 16,
                      }
                    }
                  />
                </View>
              </View>
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#000000",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "marginLeft": 8,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Message
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="checkbox"
            accessibilityState={
              Object {
                "checked": false,
                "disabled": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={Object {}}
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    }
                  }
                />
                <View
                  _focusVisible={
                    Object {
                      "_interactionBox": Object {
                        "bg": "rgba(165, 243, 252, 0.5)",
                      },
                    }
                  }
                  checked={false}
                  colorScheme="primary"
                  defaultIsChecked={false}
                  disabled={false}
                  feedbackId="field-react-aria-0-2-feedback"
                  hasFeedbackText={false}
                  hasHelpText={false}
                  helpTextId="field-react-aria-0-2-helptext"
                  isDisabled={false}
                  isInvalid={true}
                  isReadOnly={false}
                  isRequired={false}
                  labelId="field-react-aria-0-2-label"
                  nativeID="field-react-aria-0-2"
                  readOnly={false}
                  required={false}
                  setHasFeedbackText={[Function]}
                  setHasHelpText={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#e11d48",
                      "borderRadius": 4,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                    }
                  }
                  value="Fax"
                >
                  <View
                    style={
                      Object {
                        "color": "#fafafa",
                        "height": 16,
                        "width": 16,
                      }
                    }
                  />
                </View>
              </View>
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#000000",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "marginLeft": 8,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Fax
              </Text>
            </View>
          </View>
        </View>
        <View
          feedbackId="field-react-aria-0-2-feedback"
          hasFeedbackText={false}
          hasHelpText={false}
          helpTextId="field-react-aria-0-2-helptext"
          isDisabled={false}
          isInvalid={true}
          isReadOnly={false}
          isRequired={false}
          labelId="field-react-aria-0-2-label"
          nativeID="field-react-aria-0-2"
          setHasFeedbackText={[Function]}
          setHasHelpText={[Function]}
          style={
            Object {
              "marginTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <RNSVGSvgView
              accessibilityRole="image"
              align="xMidYMid"
              bbHeight={16}
              bbWidth={16}
              color={4292617766}
              focusable={false}
              meetOrSlice={0}
              minX={0}
              minY={0}
              stroke=""
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Object {
                    "color": "#dc2626",
                    "fontSize": 12,
                    "height": 16,
                    "width": 16,
                  },
                  Object {
                    "flex": 0,
                    "height": 16,
                    "width": 16,
                  },
                ]
              }
              tintColor={4292617766}
              vbHeight={16}
              vbWidth={16}
            >
              <RNSVGGroup
                font={
                  Object {
                    "fontSize": 12,
                  }
                }
                propList={
                  Array [
                    "stroke",
                  ]
                }
                stroke={null}
              >
                <RNSVGGroup>
                  <RNSVGPath
                    d="M8 16C6.41775 16 4.87103 15.5308 3.55544 14.6518C2.23985 13.7727 1.21447 12.5233 0.608967 11.0615C0.00346627 9.59966 -0.15496 7.99113 0.153721 6.43928C0.462403 4.88743 1.22433 3.46197 2.34315 2.34315C3.46197 1.22433 4.88743 0.462403 6.43928 0.153721C7.99113 -0.15496 9.59966 0.00346627 11.0615 0.608967C12.5233 1.21447 13.7727 2.23985 14.6518 3.55544C15.5308 4.87103 16 6.41775 16 8C16 10.1217 15.1571 12.1566 13.6569 13.6569C12.1566 15.1571 10.1217 16 8 16ZM8 14.4C9.2658 14.4 10.5032 14.0246 11.5556 13.3214C12.6081 12.6182 13.4284 11.6186 13.9128 10.4492C14.3972 9.27973 14.524 7.9929 14.277 6.75142C14.0301 5.50995 13.4205 4.36958 12.5255 3.47452C11.6304 2.57946 10.4901 1.96992 9.24858 1.72298C8.0071 1.47603 6.72028 1.60277 5.55083 2.08717C4.38138 2.57158 3.38184 3.39188 2.6786 4.44435C1.97536 5.49683 1.6 6.7342 1.6 8C1.6 9.69739 2.27429 11.3253 3.47452 12.5255C4.67475 13.7257 6.30262 14.4 8 14.4ZM7.2 10.4H8.8V12H7.2V10.4ZM7.2 4H8.8V8.8H7.2V4Z"
                    fill={
                      Array [
                        2,
                      ]
                    }
                    propList={
                      Array [
                        "fill",
                        "stroke",
                      ]
                    }
                    stroke={null}
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGSvgView>
            <View
              style={
                Object {
                  "width": 4,
                }
              }
            />
            <View
              style={Object {}}
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#dc2626",
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 18,
                    "textDecorationLine": undefined,
                  }
                }
              >
                You must select at least three methods
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Invalid 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityRole="checkbox"
      accessibilityState={
        Object {
          "checked": false,
          "disabled": undefined,
        }
      }
      accessible={true}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={Object {}}
    >
      <View
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "flex-start",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
            }
          }
        >
          <View
            style={
              Object {
                "borderRadius": 9999,
                "height": "100%",
                "paddingBottom": 20,
                "paddingLeft": 20,
                "paddingRight": 20,
                "paddingTop": 20,
                "position": "absolute",
                "width": "100%",
                "zIndex": -1,
              }
            }
          />
          <View
            _focusVisible={
              Object {
                "_interactionBox": Object {
                  "bg": "rgba(165, 243, 252, 0.5)",
                },
              }
            }
            checked={false}
            colorScheme="primary"
            defaultIsChecked={false}
            disabled={false}
            isInvalid={true}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#fafafa",
                "borderColor": "#e11d48",
                "borderRadius": 4,
                "borderWidth": 2,
                "display": "flex",
                "justifyContent": "center",
              }
            }
            value="invalid"
          >
            <View
              style={
                Object {
                  "color": "#fafafa",
                  "height": 16,
                  "width": 16,
                }
              }
            />
          </View>
        </View>
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#000000",
              "fontFamily": undefined,
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 24,
              "marginLeft": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          Software Development
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Playground 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "space-between",
        }
      }
    >
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-start",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 9999,
                  "height": "100%",
                  "paddingBottom": 20,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 20,
                  "position": "absolute",
                  "width": "100%",
                  "zIndex": -1,
                }
              }
            />
            <View
              _focusVisible={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(165, 243, 252, 0.5)",
                  },
                }
              }
              checked={true}
              colorScheme="primary"
              defaultIsChecked={false}
              disabled={false}
              isChecked={true}
              isDisabled={false}
              isInvalid={false}
              onChange={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0891b2",
                  "borderColor": "#0891b2",
                  "borderRadius": 4,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
              value="Cool"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={20}
                bbWidth={20}
                color={4294638330}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#fafafa",
                      "height": 20,
                      "width": 20,
                    },
                    Object {
                      "flex": 0,
                      "height": 20,
                      "width": 20,
                    },
                  ]
                }
                tintColor={4294638330}
                vbHeight={14}
                vbWidth={14}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGGroup
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGPath
                        d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 18,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 27,
                "marginLeft": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            Yes
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Size 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginBottom": 40,
            "textAlign": "center",
            "textDecorationLine": undefined,
          }
        }
      >
        Sizes
      </Text>
      <View
        style={Object {}}
      >
        <View
          accessibilityRole="checkbox"
          accessibilityState={
            Object {
              "checked": true,
              "disabled": undefined,
            }
          }
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={Object {}}
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  }
                }
              />
              <View
                _focusVisible={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(254, 202, 202, 0.5)",
                    },
                  }
                }
                _invalid={
                  Object {
                    "borderColor": "error.600",
                  }
                }
                checked={true}
                colorScheme="red"
                defaultIsChecked={true}
                disabled={false}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#dc2626",
                    "borderColor": "#dc2626",
                    "borderRadius": 4,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
                value="red"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={16}
                  bbWidth={16}
                  color={4294638330}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#fafafa",
                        "height": 16,
                        "width": 16,
                      },
                      Object {
                        "flex": 0,
                        "height": 16,
                        "width": 16,
                      },
                    ]
                  }
                  tintColor={4294638330}
                  vbHeight={14}
                  vbWidth={14}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGGroup
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGPath
                          d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              UX Research
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          accessibilityRole="checkbox"
          accessibilityState={
            Object {
              "checked": true,
              "disabled": undefined,
            }
          }
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={Object {}}
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  }
                }
              />
              <View
                _focusVisible={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(187, 247, 208, 0.5)",
                    },
                  }
                }
                _invalid={
                  Object {
                    "borderColor": "error.600",
                  }
                }
                checked={true}
                colorScheme="green"
                defaultIsChecked={true}
                disabled={false}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#16a34a",
                    "borderColor": "#16a34a",
                    "borderRadius": 4,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
                value="green"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={20}
                  bbWidth={20}
                  color={4294638330}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#fafafa",
                        "height": 20,
                        "width": 20,
                      },
                      Object {
                        "flex": 0,
                        "height": 20,
                        "width": 20,
                      },
                    ]
                  }
                  tintColor={4294638330}
                  vbHeight={14}
                  vbWidth={14}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGGroup
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGPath
                          d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 18,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 27,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              Development
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          accessibilityRole="checkbox"
          accessibilityState={
            Object {
              "checked": true,
              "disabled": undefined,
            }
          }
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={Object {}}
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  }
                }
              />
              <View
                _focusVisible={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(233, 213, 255, 0.5)",
                    },
                  }
                }
                _invalid={
                  Object {
                    "borderColor": "error.600",
                  }
                }
                checked={true}
                colorScheme="purple"
                defaultIsChecked={true}
                disabled={false}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#9333ea",
                    "borderColor": "#9333ea",
                    "borderRadius": 4,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
                value="yellow"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={24}
                  bbWidth={24}
                  color={4294638330}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#fafafa",
                        "height": 24,
                        "width": 24,
                      },
                      Object {
                        "flex": 0,
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                  tintColor={4294638330}
                  vbHeight={14}
                  vbWidth={14}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGGroup
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGPath
                          d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 20,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 30,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              Devops
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Uncontrolled checkbox 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityLabel="choose values"
      accessibilityState={
        Object {
          "disabled": undefined,
        }
      }
      aria-label="choose values"
      style={
        Object {
          "alignItems": "flex-start",
        }
      }
    >
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": false,
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "marginBottom": 8,
              "marginTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 9999,
                  "height": "100%",
                  "paddingBottom": 20,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 20,
                  "position": "absolute",
                  "width": "100%",
                  "zIndex": -1,
                }
              }
            />
            <View
              _focusVisible={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(165, 243, 252, 0.5)",
                  },
                }
              }
              _invalid={
                Object {
                  "borderColor": "error.600",
                }
              }
              checked={false}
              colorScheme="primary"
              defaultIsChecked={false}
              disabled={false}
              isDisabled={false}
              isReadOnly={false}
              readOnly={false}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 4,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
              value="one"
            >
              <View
                style={
                  Object {
                    "color": "#fafafa",
                    "height": 16,
                    "width": 16,
                  }
                }
              />
            </View>
          </View>
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "marginLeft": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            UX Research
          </Text>
        </View>
      </View>
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": false,
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-start",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "borderRadius": 9999,
                  "height": "100%",
                  "paddingBottom": 20,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 20,
                  "position": "absolute",
                  "width": "100%",
                  "zIndex": -1,
                }
              }
            />
            <View
              _focusVisible={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(165, 243, 252, 0.5)",
                  },
                }
              }
              _invalid={
                Object {
                  "borderColor": "error.600",
                }
              }
              checked={false}
              colorScheme="primary"
              defaultIsChecked={false}
              disabled={false}
              isDisabled={false}
              isReadOnly={false}
              readOnly={false}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 4,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
              value="two"
            >
              <View
                style={
                  Object {
                    "color": "#fafafa",
                    "height": 16,
                    "width": 16,
                  }
                }
              />
            </View>
          </View>
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 24,
                "marginLeft": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            Software Development
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox With Ref 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityRole="checkbox"
      accessibilityState={
        Object {
          "checked": false,
          "disabled": undefined,
        }
      }
      accessible={true}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={Object {}}
    >
      <View
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "flex-start",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
            }
          }
        >
          <View
            style={
              Object {
                "borderRadius": 9999,
                "height": "100%",
                "paddingBottom": 20,
                "paddingLeft": 20,
                "paddingRight": 20,
                "paddingTop": 20,
                "position": "absolute",
                "width": "100%",
                "zIndex": -1,
              }
            }
          />
          <View
            _focusVisible={
              Object {
                "_interactionBox": Object {
                  "bg": "rgba(167, 243, 208, 0.5)",
                },
              }
            }
            _invalid={
              Object {
                "borderColor": "error.600",
              }
            }
            checked={false}
            colorScheme="success"
            defaultIsChecked={false}
            disabled={false}
            onChange={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#fafafa",
                "borderColor": "#d4d4d4",
                "borderRadius": 4,
                "borderWidth": 2,
                "display": "flex",
                "justifyContent": "center",
              }
            }
            value="success"
          >
            <View
              style={
                Object {
                  "color": "#fafafa",
                  "height": 16,
                  "width": 16,
                }
              }
            />
          </View>
        </View>
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#000000",
              "fontFamily": undefined,
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 24,
              "marginLeft": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          Archery
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Column Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <View
        style={
          Object {
            "backgroundColor": "#22c55e",
            "height": 100,
            "width": 100,
          }
        }
      />
      <View
        style={Object {}}
      />
      <View
        style={
          Object {
            "backgroundColor": "#93c5fd",
            "height": 100,
            "width": 100,
          }
        }
      />
      <View
        style={Object {}}
      />
      <View
        style={
          Object {
            "backgroundColor": "tomato",
            "height": 100,
            "width": 100,
          }
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Container Playground 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "maxWidth": "80%",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "textDecorationLine": undefined,
          }
        }
      >
        Benefits to a joint design and development system
      </Text>
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": undefined,
          }
        }
      >
        There are many benefits to a joint design and development system. Not only does it bring benefits to the design team, but it also brings benefits to engineering teams. It makes sure that our experiences have a consistent look and feel, not just in our design specs, but in production
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Container Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "maxWidth": "80%",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "textDecorationLine": undefined,
          }
        }
      >
        A component library for the
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#10b981",
              "fontFamily": "heading",
              "fontSize": 24,
              "fontStyle": undefined,
              "fontWeight": "700",
              "lineHeight": 30,
              "textDecorationLine": undefined,
            }
          }
        >
           React Ecosystem
        </Text>
      </Text>
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "500",
            "letterSpacing": 0,
            "lineHeight": 21,
            "marginTop": 12,
            "textDecorationLine": undefined,
          }
        }
      >
        NativeBase is a simple, modular and accessible component library that gives you building blocks to build you React applications.
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Custom Theme Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
/>
`;

exports[`Storyshots Custom Theme CustomizingBase 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
/>
`;

exports[`Storyshots Custom Theme CustomizingComponents 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
/>
`;

exports[`Storyshots Custom Theme CustomizingTheme 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
/>
`;

exports[`Storyshots Custom Theme CustomizingVariant 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
/>
`;

exports[`Storyshots Divider Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "width": 140,
        }
      }
    >
      <Text
        d="flex"
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": undefined,
            "color": "#404040",
            "flexDirection": "row",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginLeft": 12,
            "marginRight": 12,
            "textDecorationLine": undefined,
          }
        }
      >
        Chrome
      </Text>
      <View
        aria-orientation="horizontal"
        style={
          Object {
            "backgroundColor": "#e5e7eb",
            "height": 1,
            "marginBottom": 8,
            "marginTop": 8,
            "width": "100%",
          }
        }
        thickness="1"
      />
      <Text
        d="flex"
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": undefined,
            "color": "#404040",
            "flexDirection": "row",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginLeft": 12,
            "marginRight": 12,
            "textDecorationLine": undefined,
          }
        }
      >
        Firefox
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Divider Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      direction="row"
      style={
        Object {
          "display": "flex",
          "flexDirection": "row",
          "paddingBottom": 16,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 16,
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": undefined,
          }
        }
      >
        Simple
      </Text>
      <View
        aria-orientation="vertical"
        style={
          Object {
            "backgroundColor": "#10b981",
            "height": "100%",
            "marginLeft": 8,
            "marginRight": 8,
            "width": 2,
          }
        }
        thickness="2"
      />
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": undefined,
          }
        }
      >
        Easy
      </Text>
      <View
        aria-orientation="vertical"
        style={
          Object {
            "backgroundColor": "#6366f1",
            "height": "100%",
            "marginLeft": 8,
            "marginRight": 8,
            "width": 2,
          }
        }
        thickness="2"
      />
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": undefined,
          }
        }
      >
        Beautiful
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Divider Orientation 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "width": 160,
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginLeft": "auto",
            "marginRight": "auto",
            "textDecorationLine": undefined,
          }
        }
      >
        Shoes
      </Text>
      <View
        aria-orientation="horizontal"
        style={
          Object {
            "backgroundColor": "#e5e7eb",
            "height": 1,
            "marginBottom": 8,
            "marginTop": 8,
            "width": "100%",
          }
        }
        thickness="1"
      />
      <View
        direction="row"
        justify="space-evenly"
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "marginLeft": 12,
            "marginRight": 12,
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#404040",
              "fontFamily": undefined,
              "fontSize": 24,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 30,
              "paddingBottom": 8,
              "paddingTop": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          Girls
        </Text>
        <View
          aria-orientation="vertical"
          style={
            Object {
              "backgroundColor": "#e5e7eb",
              "height": "100%",
              "marginLeft": 12,
              "marginRight": 12,
              "width": 1,
            }
          }
          thickness="1"
        />
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#404040",
              "fontFamily": undefined,
              "fontSize": 24,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 30,
              "paddingBottom": 8,
              "paddingTop": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          Boys
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Examples Signin Screen 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "maxWidth": 290,
          "paddingBottom": 32,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 32,
          "width": "90%",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "600",
            "letterSpacing": 0,
            "lineHeight": 30,
            "textDecorationLine": undefined,
          }
        }
      >
        Welcome
      </Text>
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#4b5563",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "500",
            "letterSpacing": 0,
            "lineHeight": 17.5,
            "marginTop": 4,
            "textDecorationLine": undefined,
          }
        }
      >
        Sign in to continue!
      </Text>
      <View
        style={
          Object {
            "marginTop": 20,
          }
        }
      >
        <View
          style={
            Object {
              "width": "100%",
            }
          }
        >
          <View
            feedbackId="field-react-aria-0-2-feedback"
            hasFeedbackText={false}
            hasHelpText={false}
            helpTextId="field-react-aria-0-2-helptext"
            isDisabled={false}
            isInvalid={false}
            isReadOnly={false}
            isRequired={false}
            labelId="field-react-aria-0-2-label"
            nativeID="field-react-aria-0-2-label"
            setHasFeedbackText={[Function]}
            setHasHelpText={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "marginBottom": 8,
                "marginRight": 12,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Email ID
            </Text>
          </View>
          <TextInput
            _invalid={
              Object {
                "borderColor": "danger.600",
              }
            }
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            editable={true}
            isRequired={false}
            nativeID="field-react-aria-0-2"
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyPress={[Function]}
            placeholderTextColor="#a3a3a3"
            readOnly={false}
            rejectResponderTermination={true}
            required={false}
            secureTextEntry={false}
            selectionColor="#1f2937"
            style={
              Object {
                "backgroundColor": "transparent",
                "borderColor": "#e5e5e5",
                "borderRadius": 4,
                "borderWidth": 1,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "400",
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
                "width": undefined,
              }
            }
            underlineColorAndroid="transparent"
          />
        </View>
        <View
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          style={
            Object {
              "width": "100%",
            }
          }
        >
          <View
            feedbackId="field-react-aria-0-3-feedback"
            hasFeedbackText={false}
            hasHelpText={false}
            helpTextId="field-react-aria-0-3-helptext"
            isDisabled={false}
            isInvalid={false}
            isReadOnly={false}
            isRequired={false}
            labelId="field-react-aria-0-3-label"
            nativeID="field-react-aria-0-3-label"
            setHasFeedbackText={[Function]}
            setHasHelpText={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "marginBottom": 8,
                "marginRight": 12,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Password
            </Text>
          </View>
          <TextInput
            _invalid={
              Object {
                "borderColor": "danger.600",
              }
            }
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            editable={true}
            isRequired={false}
            nativeID="field-react-aria-0-3"
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyPress={[Function]}
            placeholderTextColor="#a3a3a3"
            readOnly={false}
            rejectResponderTermination={true}
            required={false}
            secureTextEntry={true}
            selectionColor="#1f2937"
            style={
              Object {
                "backgroundColor": "transparent",
                "borderColor": "#e5e5e5",
                "borderRadius": 4,
                "borderWidth": 1,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "400",
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
                "width": undefined,
              }
            }
            underlineColorAndroid="transparent"
          />
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignSelf": "flex-end",
                "flexDirection": "row",
                "height": "auto",
                "marginTop": 4,
                "width": "auto",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#6366f1",
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 18,
                  "textDecorationLine": "underline",
                }
              }
            >
              Forget Password?
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          _disabled={
            Object {
              "bg": "trueGray.300",
              "opacity": "50",
            }
          }
          _loading={
            Object {
              "bg": "warmGray.50",
              "opacity": "50",
            }
          }
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          colorScheme="indigo"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#6366f1",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "marginTop": 8,
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              style={Object {}}
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#FFFFFF",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Sign in
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "center",
              "marginTop": 24,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#4b5563",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            I'm a new user.
             
          </Text>
          <View
            style={Object {}}
          />
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#6366f1",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": "underline",
                }
              }
            >
              Sign Up
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Examples Signup Screen 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "maxWidth": 290,
          "paddingBottom": 32,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 32,
          "width": "90%",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "600",
            "letterSpacing": 0,
            "lineHeight": 30,
            "textDecorationLine": undefined,
          }
        }
      >
        Welcome
      </Text>
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#4b5563",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "500",
            "letterSpacing": 0,
            "lineHeight": 17.5,
            "marginTop": 4,
            "textDecorationLine": undefined,
          }
        }
      >
        Sign up to continue!
      </Text>
      <View
        style={
          Object {
            "marginTop": 20,
          }
        }
      >
        <View
          style={
            Object {
              "width": "100%",
            }
          }
        >
          <View
            feedbackId="field-react-aria-0-2-feedback"
            hasFeedbackText={false}
            hasHelpText={false}
            helpTextId="field-react-aria-0-2-helptext"
            isDisabled={false}
            isInvalid={false}
            isReadOnly={false}
            isRequired={false}
            labelId="field-react-aria-0-2-label"
            nativeID="field-react-aria-0-2-label"
            setHasFeedbackText={[Function]}
            setHasHelpText={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "marginBottom": 8,
                "marginRight": 12,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Email
            </Text>
          </View>
          <TextInput
            _invalid={
              Object {
                "borderColor": "danger.600",
              }
            }
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            editable={true}
            isRequired={false}
            nativeID="field-react-aria-0-2"
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyPress={[Function]}
            placeholderTextColor="#a3a3a3"
            readOnly={false}
            rejectResponderTermination={true}
            required={false}
            secureTextEntry={false}
            selectionColor="#1f2937"
            style={
              Object {
                "backgroundColor": "transparent",
                "borderColor": "#e5e5e5",
                "borderRadius": 4,
                "borderWidth": 1,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "400",
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
                "width": undefined,
              }
            }
            underlineColorAndroid="transparent"
          />
        </View>
        <View
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          style={
            Object {
              "width": "100%",
            }
          }
        >
          <View
            feedbackId="field-react-aria-0-3-feedback"
            hasFeedbackText={false}
            hasHelpText={false}
            helpTextId="field-react-aria-0-3-helptext"
            isDisabled={false}
            isInvalid={false}
            isReadOnly={false}
            isRequired={false}
            labelId="field-react-aria-0-3-label"
            nativeID="field-react-aria-0-3-label"
            setHasFeedbackText={[Function]}
            setHasHelpText={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "marginBottom": 8,
                "marginRight": 12,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Password
            </Text>
          </View>
          <TextInput
            _invalid={
              Object {
                "borderColor": "danger.600",
              }
            }
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            editable={true}
            isRequired={false}
            nativeID="field-react-aria-0-3"
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyPress={[Function]}
            placeholderTextColor="#a3a3a3"
            readOnly={false}
            rejectResponderTermination={true}
            required={false}
            secureTextEntry={true}
            selectionColor="#1f2937"
            style={
              Object {
                "backgroundColor": "transparent",
                "borderColor": "#e5e5e5",
                "borderRadius": 4,
                "borderWidth": 1,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "400",
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
                "width": undefined,
              }
            }
            underlineColorAndroid="transparent"
          />
        </View>
        <View
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          style={
            Object {
              "width": "100%",
            }
          }
        >
          <View
            feedbackId="field-react-aria-0-4-feedback"
            hasFeedbackText={false}
            hasHelpText={false}
            helpTextId="field-react-aria-0-4-helptext"
            isDisabled={false}
            isInvalid={false}
            isReadOnly={false}
            isRequired={false}
            labelId="field-react-aria-0-4-label"
            nativeID="field-react-aria-0-4-label"
            setHasFeedbackText={[Function]}
            setHasHelpText={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "marginBottom": 8,
                "marginRight": 12,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Confirm Password
            </Text>
          </View>
          <TextInput
            _invalid={
              Object {
                "borderColor": "danger.600",
              }
            }
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            editable={true}
            isRequired={false}
            nativeID="field-react-aria-0-4"
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyPress={[Function]}
            placeholderTextColor="#a3a3a3"
            readOnly={false}
            rejectResponderTermination={true}
            required={false}
            secureTextEntry={true}
            selectionColor="#1f2937"
            style={
              Object {
                "backgroundColor": "transparent",
                "borderColor": "#e5e5e5",
                "borderRadius": 4,
                "borderWidth": 1,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "400",
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
                "width": undefined,
              }
            }
            underlineColorAndroid="transparent"
          />
        </View>
        <View
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          _disabled={
            Object {
              "bg": "trueGray.300",
              "opacity": "50",
            }
          }
          _loading={
            Object {
              "bg": "warmGray.50",
              "opacity": "50",
            }
          }
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          colorScheme="indigo"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#6366f1",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "marginTop": 8,
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              style={Object {}}
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#FFFFFF",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Sign up
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Examples Todo App 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginBottom": 20,
            "textDecorationLine": undefined,
          }
        }
      >
        Wednesday
      </Text>
      <View
        style={Object {}}
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <TextInput
            _disabled={
              Object {
                "bg": "muted.100",
                "opacity": "80",
              }
            }
            _invalid={
              Object {
                "borderColor": "danger.600",
              }
            }
            accessible={true}
            allowFontScaling={true}
            editable={true}
            onBlur={[Function]}
            onChangeText={[Function]}
            onFocus={[Function]}
            onKeyPress={[Function]}
            placeholder="Add Task"
            placeholderTextColor="#a3a3a3"
            rejectResponderTermination={true}
            secureTextEntry={false}
            selectionColor="#1f2937"
            style={
              Object {
                "backgroundColor": "transparent",
                "borderColor": "#e5e5e5",
                "borderRadius": 4,
                "borderWidth": 1,
                "color": "#1f2937",
                "flex": 1,
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "400",
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
                "width": undefined,
              }
            }
            underlineColorAndroid="transparent"
            value=""
          />
          <View
            style={
              Object {
                "width": 8,
              }
            }
          />
          <View
            _disabled={
              Object {
                "bg": "trueGray.300",
                "opacity": 0.5,
              }
            }
            _text={
              Object {
                "color": "lightText",
              }
            }
            accessibilityRole="button"
            accessible={true}
            colorScheme="primary"
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#06b6d4",
                "borderRadius": 4,
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Object {
                    "color": "#fafafa",
                    "fontSize": 24,
                    "height": 24,
                    "lineHeight": 24,
                    "width": 24,
                  },
                  Object {
                    "fontFamily": "feather",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          style={Object {}}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "width": "100%",
              }
            }
          >
            <View
              accessibilityRole="checkbox"
              accessibilityState={
                Object {
                  "checked": true,
                  "disabled": undefined,
                }
              }
              accessible={true}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={Object {}}
            >
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "flex-start",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "justifyContent": "center",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "borderRadius": 9999,
                        "height": "100%",
                        "paddingBottom": 20,
                        "paddingLeft": 20,
                        "paddingRight": 20,
                        "paddingTop": 20,
                        "position": "absolute",
                        "width": "100%",
                        "zIndex": -1,
                      }
                    }
                  />
                  <View
                    _focusVisible={
                      Object {
                        "_interactionBox": Object {
                          "bg": "rgba(165, 243, 252, 0.5)",
                        },
                      }
                    }
                    _invalid={
                      Object {
                        "borderColor": "error.600",
                      }
                    }
                    checked={true}
                    colorScheme="primary"
                    defaultIsChecked={false}
                    disabled={false}
                    isChecked={true}
                    onChange={[Function]}
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#0891b2",
                        "borderColor": "#0891b2",
                        "borderRadius": 4,
                        "borderWidth": 2,
                        "display": "flex",
                        "justifyContent": "center",
                      }
                    }
                    value="Code"
                  >
                    <RNSVGSvgView
                      accessibilityRole="image"
                      align="xMidYMid"
                      bbHeight={16}
                      bbWidth={16}
                      color={4294638330}
                      focusable={false}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      stroke=""
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          Object {
                            "color": "#fafafa",
                            "height": 16,
                            "width": 16,
                          },
                          Object {
                            "flex": 0,
                            "height": 16,
                            "width": 16,
                          },
                        ]
                      }
                      tintColor={4294638330}
                      vbHeight={14}
                      vbWidth={14}
                    >
                      <RNSVGGroup
                        propList={
                          Array [
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGGroup>
                          <RNSVGGroup
                            fill={
                              Array [
                                2,
                              ]
                            }
                            propList={
                              Array [
                                "fill",
                                "stroke",
                              ]
                            }
                            stroke={null}
                          >
                            <RNSVGPath
                              d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                            />
                          </RNSVGGroup>
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                </View>
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#a1a1aa",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "marginLeft": 8,
                      "marginRight": 8,
                      "textDecorationLine": "line-through",
                    }
                  }
                >
                  Code
                </Text>
              </View>
            </View>
            <View
              style={Object {}}
            />
            <View
              _disabled={
                Object {
                  "opacity": 0.5,
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="trueGray"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 4,
                  "paddingBottom": 4,
                  "paddingLeft": 4,
                  "paddingRight": 4,
                  "paddingTop": 4,
                }
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Object {
                      "color": "#a3a3a3",
                      "fontSize": 16,
                      "height": 16,
                      "lineHeight": 16,
                      "width": 16,
                    },
                    Object {
                      "fontFamily": "entypo",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 8,
              }
            }
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "width": "100%",
              }
            }
          >
            <View
              accessibilityRole="checkbox"
              accessibilityState={
                Object {
                  "checked": false,
                  "disabled": undefined,
                }
              }
              accessible={true}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={Object {}}
            >
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "flex-start",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "justifyContent": "center",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "borderRadius": 9999,
                        "height": "100%",
                        "paddingBottom": 20,
                        "paddingLeft": 20,
                        "paddingRight": 20,
                        "paddingTop": 20,
                        "position": "absolute",
                        "width": "100%",
                        "zIndex": -1,
                      }
                    }
                  />
                  <View
                    _focusVisible={
                      Object {
                        "_interactionBox": Object {
                          "bg": "rgba(165, 243, 252, 0.5)",
                        },
                      }
                    }
                    _invalid={
                      Object {
                        "borderColor": "error.600",
                      }
                    }
                    checked={false}
                    colorScheme="primary"
                    defaultIsChecked={false}
                    disabled={false}
                    isChecked={false}
                    onChange={[Function]}
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#fafafa",
                        "borderColor": "#d4d4d4",
                        "borderRadius": 4,
                        "borderWidth": 2,
                        "display": "flex",
                        "justifyContent": "center",
                      }
                    }
                    value="Meeting with team at 9"
                  >
                    <View
                      style={
                        Object {
                          "color": "#fafafa",
                          "height": 16,
                          "width": 16,
                        }
                      }
                    />
                  </View>
                </View>
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "marginLeft": 8,
                      "marginRight": 8,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Meeting with team at 9
                </Text>
              </View>
            </View>
            <View
              style={Object {}}
            />
            <View
              _disabled={
                Object {
                  "opacity": 0.5,
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="trueGray"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 4,
                  "paddingBottom": 4,
                  "paddingLeft": 4,
                  "paddingRight": 4,
                  "paddingTop": 4,
                }
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Object {
                      "color": "#a3a3a3",
                      "fontSize": 16,
                      "height": 16,
                      "lineHeight": 16,
                      "width": 16,
                    },
                    Object {
                      "fontFamily": "entypo",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 8,
              }
            }
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "width": "100%",
              }
            }
          >
            <View
              accessibilityRole="checkbox"
              accessibilityState={
                Object {
                  "checked": false,
                  "disabled": undefined,
                }
              }
              accessible={true}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={Object {}}
            >
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "flex-start",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "justifyContent": "center",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "borderRadius": 9999,
                        "height": "100%",
                        "paddingBottom": 20,
                        "paddingLeft": 20,
                        "paddingRight": 20,
                        "paddingTop": 20,
                        "position": "absolute",
                        "width": "100%",
                        "zIndex": -1,
                      }
                    }
                  />
                  <View
                    _focusVisible={
                      Object {
                        "_interactionBox": Object {
                          "bg": "rgba(165, 243, 252, 0.5)",
                        },
                      }
                    }
                    _invalid={
                      Object {
                        "borderColor": "error.600",
                      }
                    }
                    checked={false}
                    colorScheme="primary"
                    defaultIsChecked={false}
                    disabled={false}
                    isChecked={false}
                    onChange={[Function]}
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#fafafa",
                        "borderColor": "#d4d4d4",
                        "borderRadius": 4,
                        "borderWidth": 2,
                        "display": "flex",
                        "justifyContent": "center",
                      }
                    }
                    value="Check Emails"
                  >
                    <View
                      style={
                        Object {
                          "color": "#fafafa",
                          "height": 16,
                          "width": 16,
                        }
                      }
                    />
                  </View>
                </View>
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "marginLeft": 8,
                      "marginRight": 8,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Check Emails
                </Text>
              </View>
            </View>
            <View
              style={Object {}}
            />
            <View
              _disabled={
                Object {
                  "opacity": 0.5,
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="trueGray"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 4,
                  "paddingBottom": 4,
                  "paddingLeft": 4,
                  "paddingRight": 4,
                  "paddingTop": 4,
                }
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Object {
                      "color": "#a3a3a3",
                      "fontSize": 16,
                      "height": 16,
                      "lineHeight": 16,
                      "width": 16,
                    },
                    Object {
                      "fontFamily": "entypo",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 8,
              }
            }
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "width": "100%",
              }
            }
          >
            <View
              accessibilityRole="checkbox"
              accessibilityState={
                Object {
                  "checked": false,
                  "disabled": undefined,
                }
              }
              accessible={true}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={Object {}}
            >
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "flex-start",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "justifyContent": "center",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "borderRadius": 9999,
                        "height": "100%",
                        "paddingBottom": 20,
                        "paddingLeft": 20,
                        "paddingRight": 20,
                        "paddingTop": 20,
                        "position": "absolute",
                        "width": "100%",
                        "zIndex": -1,
                      }
                    }
                  />
                  <View
                    _focusVisible={
                      Object {
                        "_interactionBox": Object {
                          "bg": "rgba(165, 243, 252, 0.5)",
                        },
                      }
                    }
                    _invalid={
                      Object {
                        "borderColor": "error.600",
                      }
                    }
                    checked={false}
                    colorScheme="primary"
                    defaultIsChecked={false}
                    disabled={false}
                    isChecked={false}
                    onChange={[Function]}
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#fafafa",
                        "borderColor": "#d4d4d4",
                        "borderRadius": 4,
                        "borderWidth": 2,
                        "display": "flex",
                        "justifyContent": "center",
                      }
                    }
                    value="Write an article"
                  >
                    <View
                      style={
                        Object {
                          "color": "#fafafa",
                          "height": 16,
                          "width": 16,
                        }
                      }
                    />
                  </View>
                </View>
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "marginLeft": 8,
                      "marginRight": 8,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Write an article
                </Text>
              </View>
            </View>
            <View
              style={Object {}}
            />
            <View
              _disabled={
                Object {
                  "opacity": 0.5,
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="trueGray"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 4,
                  "paddingBottom": 4,
                  "paddingLeft": 4,
                  "paddingRight": 4,
                  "paddingTop": 4,
                }
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Object {
                      "color": "#a3a3a3",
                      "fontSize": 16,
                      "height": 16,
                      "lineHeight": 16,
                      "width": 16,
                    },
                    Object {
                      "fontFamily": "entypo",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Fab Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "height": 100,
          "position": "relative",
          "width": "100%",
        }
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Fab CustomPosition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "height": 200,
          "position": "relative",
          "width": "100%",
        }
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Fab Placement 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "height": 400,
          "width": "100%",
        }
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots FlatList Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 20,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 25,
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
            "textDecorationLine": undefined,
          }
        }
      >
        Inbox
      </Text>
      <RCTScrollView
        data={
          Array [
            Object {
              "avatarUrl": "https://images.pexels.com/photos/220453/pexels-photo-220453.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500",
              "fullName": "Aafreen Khan",
              "id": "bd7acbea-c1b1-46c2-aed5-3ad53abb28ba",
              "recentText": "Good Day!",
              "timeStamp": "12:47 PM",
            },
            Object {
              "avatarUrl": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTyEaZqT3fHeNrPGcnjLLX1v_W4mvBlgpwxnA&usqp=CAU",
              "fullName": "Sujitha Mathur",
              "id": "3ac68afc-c605-48d3-a4f8-fbd91aa97f63",
              "recentText": "Cheer up, there!",
              "timeStamp": "11:11 PM",
            },
            Object {
              "avatarUrl": "https://miro.medium.com/max/1400/0*0fClPmIScV5pTLoE.jpg",
              "fullName": "Anci Barroco",
              "id": "58694a0f-3da1-471f-bd96-145571e29d72",
              "recentText": "Good Day!",
              "timeStamp": "6:22 PM",
            },
            Object {
              "avatarUrl": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSr01zI37DYuR8bMV5exWQBSw28C1v_71CAh8d7GP1mplcmTgQA6Q66Oo--QedAN1B4E1k&usqp=CAU",
              "fullName": "Aniket Kumar",
              "id": "68694a0f-3da1-431f-bd56-142371e29d72",
              "recentText": "All the best",
              "timeStamp": "8:56 PM",
            },
            Object {
              "avatarUrl": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRBwgu1A5zgPSvfE83nurkuzNEoXs9DMNr8Ww&usqp=CAU",
              "fullName": "Kiara",
              "id": "28694a0f-3da1-471f-bd96-142456e29d72",
              "recentText": "I will call today.",
              "timeStamp": "12:47 PM",
            },
          ]
        }
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        style={Object {}}
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                Object {
                  "borderBottomWidth": 1,
                  "borderColor": "#e5e7eb",
                  "paddingBottom": 8,
                  "paddingLeft": 16,
                  "paddingRight": 20,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#a1a1aa",
                      "borderColor": "#27272a",
                      "borderRadius": 9999,
                      "height": 48,
                      "justifyContent": "center",
                      "position": "relative",
                      "width": 48,
                    }
                  }
                >
                  <Image
                    accessibilityLabel="--"
                    alt="--"
                    onError={[Function]}
                    source={
                      Object {
                        "uri": "https://images.pexels.com/photos/220453/pexels-photo-220453.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500",
                      }
                    }
                    style={
                      Array [
                        Object {
                          "borderRadius": 9999,
                          "maxWidth": "100%",
                        },
                        Array [
                          undefined,
                          Object {
                            "height": "100%",
                            "width": "100%",
                          },
                        ],
                      ]
                    }
                  />
                </View>
                <View
                  style={
                    Object {
                      "width": 12,
                    }
                  }
                />
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#1f2937",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "700",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Aafreen Khan
                  </Text>
                  <View
                    style={Object {}}
                  />
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#4b5563",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Good Day!
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "width": 12,
                    }
                  }
                />
                <View
                  style={
                    Object {
                      "flexGrow": 1,
                    }
                  }
                />
                <View
                  style={
                    Object {
                      "width": 12,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "alignSelf": "flex-start",
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 18,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  12:47 PM
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                Object {
                  "borderBottomWidth": 1,
                  "borderColor": "#e5e7eb",
                  "paddingBottom": 8,
                  "paddingLeft": 16,
                  "paddingRight": 20,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#a1a1aa",
                      "borderColor": "#27272a",
                      "borderRadius": 9999,
                      "height": 48,
                      "justifyContent": "center",
                      "position": "relative",
                      "width": 48,
                    }
                  }
                >
                  <Image
                    accessibilityLabel="--"
                    alt="--"
                    onError={[Function]}
                    source={
                      Object {
                        "uri": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTyEaZqT3fHeNrPGcnjLLX1v_W4mvBlgpwxnA&usqp=CAU",
                      }
                    }
                    style={
                      Array [
                        Object {
                          "borderRadius": 9999,
                          "maxWidth": "100%",
                        },
                        Array [
                          undefined,
                          Object {
                            "height": "100%",
                            "width": "100%",
                          },
                        ],
                      ]
                    }
                  />
                </View>
                <View
                  style={
                    Object {
                      "width": 12,
                    }
                  }
                />
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#1f2937",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "700",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Sujitha Mathur
                  </Text>
                  <View
                    style={Object {}}
                  />
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#4b5563",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Cheer up, there!
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "width": 12,
                    }
                  }
                />
                <View
                  style={
                    Object {
                      "flexGrow": 1,
                    }
                  }
                />
                <View
                  style={
                    Object {
                      "width": 12,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "alignSelf": "flex-start",
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 18,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  11:11 PM
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                Object {
                  "borderBottomWidth": 1,
                  "borderColor": "#e5e7eb",
                  "paddingBottom": 8,
                  "paddingLeft": 16,
                  "paddingRight": 20,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#a1a1aa",
                      "borderColor": "#27272a",
                      "borderRadius": 9999,
                      "height": 48,
                      "justifyContent": "center",
                      "position": "relative",
                      "width": 48,
                    }
                  }
                >
                  <Image
                    accessibilityLabel="--"
                    alt="--"
                    onError={[Function]}
                    source={
                      Object {
                        "uri": "https://miro.medium.com/max/1400/0*0fClPmIScV5pTLoE.jpg",
                      }
                    }
                    style={
                      Array [
                        Object {
                          "borderRadius": 9999,
                          "maxWidth": "100%",
                        },
                        Array [
                          undefined,
                          Object {
                            "height": "100%",
                            "width": "100%",
                          },
                        ],
                      ]
                    }
                  />
                </View>
                <View
                  style={
                    Object {
                      "width": 12,
                    }
                  }
                />
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#1f2937",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "700",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Anci Barroco
                  </Text>
                  <View
                    style={Object {}}
                  />
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#4b5563",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Good Day!
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "width": 12,
                    }
                  }
                />
                <View
                  style={
                    Object {
                      "flexGrow": 1,
                    }
                  }
                />
                <View
                  style={
                    Object {
                      "width": 12,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "alignSelf": "flex-start",
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 18,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  6:22 PM
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                Object {
                  "borderBottomWidth": 1,
                  "borderColor": "#e5e7eb",
                  "paddingBottom": 8,
                  "paddingLeft": 16,
                  "paddingRight": 20,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#a1a1aa",
                      "borderColor": "#27272a",
                      "borderRadius": 9999,
                      "height": 48,
                      "justifyContent": "center",
                      "position": "relative",
                      "width": 48,
                    }
                  }
                >
                  <Image
                    accessibilityLabel="--"
                    alt="--"
                    onError={[Function]}
                    source={
                      Object {
                        "uri": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSr01zI37DYuR8bMV5exWQBSw28C1v_71CAh8d7GP1mplcmTgQA6Q66Oo--QedAN1B4E1k&usqp=CAU",
                      }
                    }
                    style={
                      Array [
                        Object {
                          "borderRadius": 9999,
                          "maxWidth": "100%",
                        },
                        Array [
                          undefined,
                          Object {
                            "height": "100%",
                            "width": "100%",
                          },
                        ],
                      ]
                    }
                  />
                </View>
                <View
                  style={
                    Object {
                      "width": 12,
                    }
                  }
                />
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#1f2937",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "700",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Aniket Kumar
                  </Text>
                  <View
                    style={Object {}}
                  />
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#4b5563",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    All the best
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "width": 12,
                    }
                  }
                />
                <View
                  style={
                    Object {
                      "flexGrow": 1,
                    }
                  }
                />
                <View
                  style={
                    Object {
                      "width": 12,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "alignSelf": "flex-start",
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 18,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  8:56 PM
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                Object {
                  "borderBottomWidth": 1,
                  "borderColor": "#e5e7eb",
                  "paddingBottom": 8,
                  "paddingLeft": 16,
                  "paddingRight": 20,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#a1a1aa",
                      "borderColor": "#27272a",
                      "borderRadius": 9999,
                      "height": 48,
                      "justifyContent": "center",
                      "position": "relative",
                      "width": 48,
                    }
                  }
                >
                  <Image
                    accessibilityLabel="--"
                    alt="--"
                    onError={[Function]}
                    source={
                      Object {
                        "uri": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRBwgu1A5zgPSvfE83nurkuzNEoXs9DMNr8Ww&usqp=CAU",
                      }
                    }
                    style={
                      Array [
                        Object {
                          "borderRadius": 9999,
                          "maxWidth": "100%",
                        },
                        Array [
                          undefined,
                          Object {
                            "height": "100%",
                            "width": "100%",
                          },
                        ],
                      ]
                    }
                  />
                </View>
                <View
                  style={
                    Object {
                      "width": 12,
                    }
                  }
                />
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#1f2937",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "700",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Kiara
                  </Text>
                  <View
                    style={Object {}}
                  />
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#4b5563",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    I will call today.
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "width": 12,
                    }
                  }
                />
                <View
                  style={
                    Object {
                      "flexGrow": 1,
                    }
                  }
                />
                <View
                  style={
                    Object {
                      "width": 12,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "alignSelf": "flex-start",
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 18,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  12:47 PM
                </Text>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Flex Basic Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <RCTScrollView
        contentContainerStyle={
          Array [
            Object {},
            Object {},
          ]
        }
        style={Object {}}
      >
        <View>
          <View
            style={
              Object {
                "paddingLeft": 12,
                "paddingRight": 12,
                "width": "100%",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#404040",
                  "fontFamily": undefined,
                  "fontSize": 20,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 25,
                  "textDecorationLine": undefined,
                }
              }
            >
              row
            </Text>
            <View
              style={
                Object {
                  "height": 10,
                }
              }
            />
            <View
              direction="row"
              style={
                Object {
                  "display": "flex",
                  "flexDirection": "row",
                  "marginBottom": 10,
                  "marginTop": 6,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#cffafe",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#000000",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  100
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#a5f3fc",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#000000",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  200
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#67e8f9",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#000000",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  300
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#22d3ee",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#000000",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  400
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "height": 10,
                }
              }
            />
            <View
              aria-orientation="horizontal"
              style={
                Object {
                  "backgroundColor": "#e5e7eb",
                  "height": 1,
                  "width": "100%",
                }
              }
              thickness="1"
            />
            <View
              style={
                Object {
                  "height": 10,
                }
              }
            />
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#404040",
                  "fontFamily": undefined,
                  "fontSize": 20,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 25,
                  "textDecorationLine": undefined,
                }
              }
            >
              column
            </Text>
            <View
              style={
                Object {
                  "height": 10,
                }
              }
            />
            <View
              direction="column"
              style={
                Object {
                  "display": "flex",
                  "flexDirection": "column",
                  "marginBottom": 10,
                  "marginTop": 6,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#cffafe",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#000000",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  100
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#a5f3fc",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#000000",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  200
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#67e8f9",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#000000",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  300
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#22d3ee",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#000000",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  400
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "height": 10,
                }
              }
            />
            <View
              aria-orientation="horizontal"
              style={
                Object {
                  "backgroundColor": "#e5e7eb",
                  "height": 1,
                  "width": "100%",
                }
              }
              thickness="1"
            />
            <View
              style={
                Object {
                  "height": 10,
                }
              }
            />
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#404040",
                  "fontFamily": undefined,
                  "fontSize": 20,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 25,
                  "textDecorationLine": undefined,
                }
              }
            >
              row-reverse
            </Text>
            <View
              style={
                Object {
                  "height": 10,
                }
              }
            />
            <View
              direction="row-reverse"
              style={
                Object {
                  "display": "flex",
                  "flexDirection": "row-reverse",
                  "marginBottom": 10,
                  "marginTop": 6,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#cffafe",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#000000",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  100
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#a5f3fc",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#000000",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  200
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#67e8f9",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#000000",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  300
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#22d3ee",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#000000",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  400
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "height": 10,
                }
              }
            />
            <View
              aria-orientation="horizontal"
              style={
                Object {
                  "backgroundColor": "#e5e7eb",
                  "height": 1,
                  "width": "100%",
                }
              }
              thickness="1"
            />
            <View
              style={
                Object {
                  "height": 10,
                }
              }
            />
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#404040",
                  "fontFamily": undefined,
                  "fontSize": 20,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 25,
                  "textDecorationLine": undefined,
                }
              }
            >
              column-reverse
            </Text>
            <View
              style={
                Object {
                  "height": 10,
                }
              }
            />
            <View
              direction="column-reverse"
              style={
                Object {
                  "display": "flex",
                  "flexDirection": "column-reverse",
                  "marginBottom": 10,
                  "marginTop": 6,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#cffafe",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#000000",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  100
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#a5f3fc",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#000000",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  200
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#67e8f9",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#000000",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  300
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#22d3ee",
                    "display": "flex",
                    "height": 64,
                    "justifyContent": "center",
                    "width": 64,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#000000",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  400
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "height": 10,
                }
              }
            />
            <View
              aria-orientation="horizontal"
              style={
                Object {
                  "backgroundColor": "#e5e7eb",
                  "height": 1,
                  "width": "100%",
                }
              }
              thickness="1"
            />
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Flex Spacer Example 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "display": "flex",
          "flexDirection": "column",
          "height": 160,
          "marginTop": 24,
          "width": 80,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "display": "flex",
            "height": 64,
            "justifyContent": "center",
            "width": 64,
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#fafaf9",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "500",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": undefined,
            }
          }
        >
          Box 1
        </Text>
      </View>
      <View
        style={
          Object {
            "flexGrow": 1,
          }
        }
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#ec4899",
            "borderRadius": 4,
            "display": "flex",
            "height": 64,
            "justifyContent": "center",
            "width": 64,
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#fafaf9",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "500",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": undefined,
            }
          }
        >
          Box 2
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots FormControl CustomStyle 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignSelf": "center",
          "marginTop": 16,
          "paddingLeft": 16,
          "paddingRight": 16,
          "width": "100%",
        }
      }
    >
      <View
        style={Object {}}
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 20,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 30,
              "marginBottom": 16,
              "textDecorationLine": undefined,
            }
          }
        >
          Default
        </Text>
        <View
          style={
            Object {
              "marginBottom": 20,
              "width": "100%",
            }
          }
        >
          <View
            feedbackId="field-react-aria-0-2-feedback"
            hasFeedbackText={false}
            hasHelpText={false}
            helpTextId="field-react-aria-0-2-helptext"
            isDisabled={false}
            isInvalid={false}
            isReadOnly={false}
            isRequired={false}
            labelId="field-react-aria-0-2-label"
            nativeID="field-react-aria-0-2-label"
            setHasFeedbackText={[Function]}
            setHasHelpText={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "marginBottom": 8,
                "marginRight": 12,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Project Title
            </Text>
          </View>
          <TextInput
            _invalid={
              Object {
                "borderColor": "danger.600",
              }
            }
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            editable={true}
            isRequired={false}
            nativeID="field-react-aria-0-2"
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyPress={[Function]}
            placeholderTextColor="#a3a3a3"
            readOnly={false}
            rejectResponderTermination={true}
            required={false}
            secureTextEntry={false}
            selectionColor="#1f2937"
            style={
              Object {
                "backgroundColor": "transparent",
                "borderColor": "#e5e5e5",
                "borderRadius": 4,
                "borderWidth": 1,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "400",
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
                "width": undefined,
              }
            }
            underlineColorAndroid="transparent"
          />
          <View
            feedbackId="field-react-aria-0-2-feedback"
            hasFeedbackText={false}
            hasHelpText={false}
            helpTextId="field-react-aria-0-2-helptext"
            isDisabled={false}
            isInvalid={false}
            isReadOnly={false}
            isRequired={false}
            labelId="field-react-aria-0-2-label"
            nativeID="field-react-aria-0-2-feedback"
            setHasFeedbackText={[Function]}
            setHasHelpText={[Function]}
            style={
              Object {
                "marginTop": 8,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#737373",
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 18,
                  "textDecorationLine": undefined,
                }
              }
            >
              Give your project a title.
            </Text>
          </View>
        </View>
        <View
          aria-orientation="horizontal"
          style={
            Object {
              "backgroundColor": "#e5e7eb",
              "height": 1,
              "width": "100%",
            }
          }
          thickness="1"
        />
      </View>
      <View
        style={
          Object {
            "height": 10,
          }
        }
      />
      <View
        style={Object {}}
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 20,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 30,
              "marginBottom": 16,
              "textDecorationLine": undefined,
            }
          }
        >
          Disabled
        </Text>
        <View
          isDisabled={true}
          style={
            Object {
              "marginBottom": 20,
              "width": "100%",
            }
          }
        >
          <View
            feedbackId="field-react-aria-0-3-feedback"
            hasFeedbackText={false}
            hasHelpText={false}
            helpTextId="field-react-aria-0-3-helptext"
            isDisabled={true}
            isInvalid={false}
            isReadOnly={false}
            isRequired={false}
            labelId="field-react-aria-0-3-label"
            nativeID="field-react-aria-0-3-label"
            setHasFeedbackText={[Function]}
            setHasHelpText={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "marginBottom": 8,
                "marginRight": 12,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#a1a1aa",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Project Title
            </Text>
          </View>
          <TextInput
            _invalid={
              Object {
                "borderColor": "danger.600",
              }
            }
            _text={
              Object {
                "color": "darkText",
              }
            }
            accessible={true}
            allowFontScaling={true}
            disabled={true}
            editable={false}
            isRequired={false}
            nativeID="field-react-aria-0-3"
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyPress={[Function]}
            placeholder="Title"
            placeholderTextColor="#a3a3a3"
            readOnly={false}
            rejectResponderTermination={true}
            required={false}
            secureTextEntry={false}
            selectionColor="#1f2937"
            style={
              Object {
                "backgroundColor": "#f5f5f5",
                "borderColor": "#e5e5e5",
                "borderRadius": 4,
                "borderWidth": 1,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "400",
                "opacity": 0.8,
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
                "width": undefined,
              }
            }
            underlineColorAndroid="transparent"
          />
          <View
            feedbackId="field-react-aria-0-3-feedback"
            hasFeedbackText={false}
            hasHelpText={false}
            helpTextId="field-react-aria-0-3-helptext"
            isDisabled={true}
            isInvalid={false}
            isReadOnly={false}
            isRequired={false}
            labelId="field-react-aria-0-3-label"
            nativeID="field-react-aria-0-3-feedback"
            setHasFeedbackText={[Function]}
            setHasHelpText={[Function]}
            style={
              Object {
                "marginTop": 8,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#737373",
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 18,
                  "textDecorationLine": undefined,
                }
              }
            >
              Give your project a title.
            </Text>
          </View>
        </View>
        <View
          aria-orientation="horizontal"
          style={
            Object {
              "backgroundColor": "#e5e7eb",
              "height": 1,
              "width": "100%",
            }
          }
          thickness="1"
        />
      </View>
      <View
        style={
          Object {
            "height": 10,
          }
        }
      />
      <View
        style={Object {}}
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 20,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 30,
              "marginBottom": 16,
              "textDecorationLine": undefined,
            }
          }
        >
          Invalid
        </Text>
        <View
          isInvalid={true}
          style={
            Object {
              "width": "100%",
            }
          }
        >
          <View
            feedbackId="field-react-aria-0-4-feedback"
            hasFeedbackText={false}
            hasHelpText={false}
            helpTextId="field-react-aria-0-4-helptext"
            isDisabled={false}
            isInvalid={true}
            isReadOnly={false}
            isRequired={false}
            labelId="field-react-aria-0-4-label"
            nativeID="field-react-aria-0-4-label"
            setHasFeedbackText={[Function]}
            setHasHelpText={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "marginBottom": 8,
                "marginRight": 12,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Project Title
            </Text>
          </View>
          <TextInput
            accessibilityInvalid={true}
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            editable={true}
            isInvalid={true}
            isRequired={false}
            nativeID="field-react-aria-0-4"
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyPress={[Function]}
            placeholder="Title"
            placeholderTextColor="#a3a3a3"
            readOnly={false}
            rejectResponderTermination={true}
            required={false}
            secureTextEntry={false}
            selectionColor="#1f2937"
            style={
              Object {
                "backgroundColor": "transparent",
                "borderColor": "#dc2626",
                "borderRadius": 4,
                "borderWidth": 1,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "400",
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
                "width": undefined,
              }
            }
            underlineColorAndroid="transparent"
          />
          <View
            feedbackId="field-react-aria-0-4-feedback"
            hasFeedbackText={false}
            hasHelpText={false}
            helpTextId="field-react-aria-0-4-helptext"
            isDisabled={false}
            isInvalid={true}
            isReadOnly={false}
            isRequired={false}
            labelId="field-react-aria-0-4-label"
            nativeID="field-react-aria-0-4"
            setHasFeedbackText={[Function]}
            setHasHelpText={[Function]}
            style={
              Object {
                "marginTop": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={16}
                bbWidth={16}
                color={4292617766}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#dc2626",
                      "fontSize": 12,
                      "height": 16,
                      "width": 16,
                    },
                    Object {
                      "flex": 0,
                      "height": 16,
                      "width": 16,
                    },
                  ]
                }
                tintColor={4292617766}
                vbHeight={16}
                vbWidth={16}
              >
                <RNSVGGroup
                  font={
                    Object {
                      "fontSize": 12,
                    }
                  }
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M8 16C6.41775 16 4.87103 15.5308 3.55544 14.6518C2.23985 13.7727 1.21447 12.5233 0.608967 11.0615C0.00346627 9.59966 -0.15496 7.99113 0.153721 6.43928C0.462403 4.88743 1.22433 3.46197 2.34315 2.34315C3.46197 1.22433 4.88743 0.462403 6.43928 0.153721C7.99113 -0.15496 9.59966 0.00346627 11.0615 0.608967C12.5233 1.21447 13.7727 2.23985 14.6518 3.55544C15.5308 4.87103 16 6.41775 16 8C16 10.1217 15.1571 12.1566 13.6569 13.6569C12.1566 15.1571 10.1217 16 8 16ZM8 14.4C9.2658 14.4 10.5032 14.0246 11.5556 13.3214C12.6081 12.6182 13.4284 11.6186 13.9128 10.4492C14.3972 9.27973 14.524 7.9929 14.277 6.75142C14.0301 5.50995 13.4205 4.36958 12.5255 3.47452C11.6304 2.57946 10.4901 1.96992 9.24858 1.72298C8.0071 1.47603 6.72028 1.60277 5.55083 2.08717C4.38138 2.57158 3.38184 3.39188 2.6786 4.44435C1.97536 5.49683 1.6 6.7342 1.6 8C1.6 9.69739 2.27429 11.3253 3.47452 12.5255C4.67475 13.7257 6.30262 14.4 8 14.4ZM7.2 10.4H8.8V12H7.2V10.4ZM7.2 4H8.8V8.8H7.2V4Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
              <View
                style={
                  Object {
                    "width": 4,
                  }
                }
              />
              <View
                style={Object {}}
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#dc2626",
                      "fontFamily": undefined,
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 18,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Something is wrong.
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots FormControl Playground 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      isDisabled={false}
      isInvalid={false}
      isReadOnly={false}
      isRequired={true}
      style={
        Object {
          "width": "70%",
        }
      }
    >
      <View
        style={
          Object {
            "marginLeft": 16,
            "marginRight": 16,
          }
        }
      >
        <View
          feedbackId="field-react-aria-0-2-feedback"
          hasFeedbackText={false}
          hasHelpText={false}
          helpTextId="field-react-aria-0-2-helptext"
          isDisabled={false}
          isInvalid={false}
          isReadOnly={false}
          isRequired={true}
          labelId="field-react-aria-0-2-label"
          nativeID="field-react-aria-0-2-label"
          setHasFeedbackText={[Function]}
          setHasHelpText={[Function]}
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "marginBottom": 8,
              "marginRight": 12,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Favorite framework
          </Text>
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#dc2626",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            *
          </Text>
        </View>
        <View
          style={Object {}}
        />
        <TextInput
          _invalid={
            Object {
              "borderColor": "danger.600",
            }
          }
          accessibilityRequired={true}
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          editable={true}
          isRequired={true}
          nativeID="field-react-aria-0-2"
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="Is it react?"
          placeholderTextColor="#a3a3a3"
          readOnly={false}
          rejectResponderTermination={true}
          required={true}
          secureTextEntry={false}
          selectionColor="#1f2937"
          style={
            Object {
              "backgroundColor": "transparent",
              "borderColor": "#e5e5e5",
              "borderRadius": 4,
              "borderWidth": 1,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "400",
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
              "width": undefined,
            }
          }
          underlineColorAndroid="transparent"
        />
        <View
          style={Object {}}
        />
        <View
          feedbackId="field-react-aria-0-2-feedback"
          hasFeedbackText={false}
          hasHelpText={false}
          helpTextId="field-react-aria-0-2-helptext"
          isDisabled={false}
          isInvalid={false}
          isReadOnly={false}
          isRequired={true}
          labelId="field-react-aria-0-2-label"
          nativeID="field-react-aria-0-2-feedback"
          setHasFeedbackText={[Function]}
          setHasHelpText={[Function]}
          style={
            Object {
              "marginTop": 8,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#737373",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 18,
                "textDecorationLine": undefined,
              }
            }
          >
            We'll keep this between us.
          </Text>
        </View>
        <View
          style={Object {}}
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots FormControl Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "width": "90%",
        }
      }
    >
      <View
        isRequired={true}
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "marginLeft": 16,
              "marginRight": 16,
            }
          }
        >
          <View
            feedbackId="field-react-aria-0-2-feedback"
            hasFeedbackText={false}
            hasHelpText={false}
            helpTextId="field-react-aria-0-2-helptext"
            isDisabled={false}
            isInvalid={false}
            isReadOnly={false}
            isRequired={true}
            labelId="field-react-aria-0-2-label"
            nativeID="field-react-aria-0-2-label"
            setHasFeedbackText={[Function]}
            setHasHelpText={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "marginBottom": 8,
                "marginRight": 12,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Password
            </Text>
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#dc2626",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              *
            </Text>
          </View>
          <View
            style={Object {}}
          />
          <TextInput
            _invalid={
              Object {
                "borderColor": "danger.600",
              }
            }
            accessibilityRequired={true}
            accessible={true}
            allowFontScaling={true}
            defaultValue="12345"
            disabled={false}
            editable={true}
            isRequired={true}
            nativeID="field-react-aria-0-2"
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyPress={[Function]}
            placeholder="password"
            placeholderTextColor="#a3a3a3"
            readOnly={false}
            rejectResponderTermination={true}
            required={true}
            secureTextEntry={true}
            selectionColor="#1f2937"
            style={
              Object {
                "backgroundColor": "transparent",
                "borderColor": "#e5e5e5",
                "borderRadius": 4,
                "borderWidth": 1,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "400",
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
                "width": undefined,
              }
            }
            underlineColorAndroid="transparent"
          />
          <View
            style={Object {}}
          />
          <View
            feedbackId="field-react-aria-0-2-feedback"
            hasFeedbackText={false}
            hasHelpText={false}
            helpTextId="field-react-aria-0-2-helptext"
            isDisabled={false}
            isInvalid={false}
            isReadOnly={false}
            isRequired={true}
            labelId="field-react-aria-0-2-label"
            nativeID="field-react-aria-0-2-feedback"
            setHasFeedbackText={[Function]}
            setHasHelpText={[Function]}
            style={
              Object {
                "marginTop": 8,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#737373",
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 18,
                  "textDecorationLine": undefined,
                }
              }
            >
              Must be atleast 6 characters.
            </Text>
          </View>
          <View
            style={Object {}}
          />
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots HStack Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginBottom": 40,
            "textAlign": "center",
            "textDecorationLine": undefined,
          }
        }
      >
        HStack
      </Text>
      <View
        style={
          Object {
            "height": 12,
          }
        }
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "display": "flex",
              "elevation": 4,
              "height": 160,
              "justifyContent": "center",
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.23,
              "shadowRadius": 2.62,
              "width": 80,
            }
          }
        />
        <View
          style={
            Object {
              "width": 12,
            }
          }
        />
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#ec4899",
              "borderRadius": 6,
              "display": "flex",
              "elevation": 4,
              "height": 160,
              "justifyContent": "center",
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.23,
              "shadowRadius": 2.62,
              "width": 80,
            }
          }
        />
        <View
          style={
            Object {
              "width": 12,
            }
          }
        />
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#10b981",
              "borderRadius": 6,
              "display": "flex",
              "elevation": 4,
              "height": 160,
              "justifyContent": "center",
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.23,
              "shadowRadius": 2.62,
              "width": 80,
            }
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Heading Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Text
      style={
        Object {
          "backgroundColor": undefined,
          "color": "#404040",
          "fontFamily": undefined,
          "fontSize": 24,
          "fontStyle": "normal",
          "fontWeight": "700",
          "letterSpacing": 0,
          "lineHeight": 30,
          "textDecorationLine": undefined,
        }
      }
    >
      I'm a Heading
    </Text>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Heading Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 30,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 37.5,
            "marginBottom": 16,
            "textDecorationLine": undefined,
          }
        }
      >
        Heading
      </Text>
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 20,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 30,
            "textDecorationLine": undefined,
          }
        }
      >
        Headings are used for rendering headlines. Heading composes Text so you can use all the style props.
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Heading OverridenStyle 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Text
      style={
        Object {
          "backgroundColor": undefined,
          "color": "#404040",
          "fontFamily": undefined,
          "fontSize": 50,
          "fontStyle": "normal",
          "fontWeight": "700",
          "letterSpacing": 0,
          "lineHeight": 62.5,
          "textDecorationLine": undefined,
        }
      }
    >
      How are you?
    </Text>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Heading Sizes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginBottom": 40,
            "textAlign": "center",
            "textDecorationLine": undefined,
          }
        }
      >
        Sizes
      </Text>
      <View
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 17.5,
            "textDecorationLine": undefined,
          }
        }
      >
        xs
      </Text>
      <View
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 16,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 20,
            "textDecorationLine": undefined,
          }
        }
      >
        sm
      </Text>
      <View
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 20,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 25,
            "textDecorationLine": undefined,
          }
        }
      >
        md
      </Text>
      <View
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "textDecorationLine": undefined,
          }
        }
      >
        lg
      </Text>
      <View
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 30,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 37.5,
            "textDecorationLine": undefined,
          }
        }
      >
        xl
      </Text>
      <View
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 36,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 45,
            "textDecorationLine": undefined,
          }
        }
      >
        2xl
      </Text>
      <View
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 48,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 60,
            "textDecorationLine": undefined,
          }
        }
      >
        3xl
      </Text>
      <View
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 60,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 75,
            "textDecorationLine": undefined,
          }
        }
      >
        4xl
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Heading Truncate 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Text
      numberOfLines={1}
      style={
        Object {
          "backgroundColor": undefined,
          "color": "#404040",
          "fontFamily": undefined,
          "fontSize": 24,
          "fontStyle": "normal",
          "fontWeight": "700",
          "letterSpacing": 0,
          "lineHeight": 30,
          "textDecorationLine": undefined,
        }
      }
    >
      NativeBase is a simple, modular and accessible component library that gives you building blocks to build you React applications.
    </Text>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Hidden Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <View
        style={
          Object {
            "backgroundColor": "#fdba74",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": undefined,
            }
          }
        >
          This text will be always visible.
        </Text>
      </View>
      <View
        style={Object {}}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Hidden HiddenFromAndToBreakpoints 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <View
        style={
          Object {
            "backgroundColor": "#fdba74",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": undefined,
            }
          }
        >
          This text will be always visible.
        </Text>
      </View>
      <View
        style={Object {}}
      />
      <View
        style={Object {}}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Hidden HiddenOnColorModes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="blue"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#3b82f6",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Change mode
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#4ade80",
          "marginTop": 20,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": undefined,
          }
        }
      >
        This text will be hidden on dark mode
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Hidden HiddenOnPlatforms 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <View
        style={
          Object {
            "backgroundColor": "#fdba74",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": undefined,
            }
          }
        >
          This text will be visible on every platform.
        </Text>
      </View>
      <View
        style={Object {}}
      />
      <View
        style={
          Object {
            "backgroundColor": "#f87171",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": undefined,
            }
          }
        >
          This text will be hidden on android and web.
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Hidden HiddenOnlyOnBreakPoints 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <View
        style={
          Object {
            "backgroundColor": "#fdba74",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": undefined,
            }
          }
        >
          This text will be visible on every screen size.
        </Text>
      </View>
      <View
        style={Object {}}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Icon All Icons 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "width": "100%",
        }
      }
    >
      <RCTScrollView
        data={
          Array [
            Object {
              "icon": <Memo
                size="4"
              />,
              "iconName": "add",
            },
            Object {
              "icon": <Memo
                size="4"
              />,
              "iconName": "arrow-back",
            },
            Object {
              "icon": <Memo
                size="4"
              />,
              "iconName": "arrow-forward",
            },
            Object {
              "icon": <Memo
                size="4"
              />,
              "iconName": "arrow-up",
            },
            Object {
              "icon": <Memo
                size="4"
              />,
              "iconName": "arrow-down",
            },
            Object {
              "icon": <Memo
                size="4"
              />,
              "iconName": "check",
            },
            Object {
              "icon": <Memo
                size="4"
              />,
              "iconName": "check-circle",
            },
            Object {
              "icon": <Memo
                size="4"
              />,
              "iconName": "chevron-down",
            },
            Object {
              "icon": <Memo
                size="4"
              />,
              "iconName": "chevron-left",
            },
            Object {
              "icon": <Memo
                size="4"
              />,
              "iconName": "chevron-right",
            },
            Object {
              "icon": <Memo
                size="4"
              />,
              "iconName": "chevron-up",
            },
            Object {
              "icon": <Memo
                size="4"
              />,
              "iconName": "circle",
            },
            Object {
              "icon": <Memo
                size="4"
              />,
              "iconName": "close",
            },
            Object {
              "icon": <Memo
                size="4"
              />,
              "iconName": "menu",
            },
            Object {
              "icon": <Memo
                size="4"
              />,
              "iconName": "info",
            },
            Object {
              "icon": <Memo
                size="4"
              />,
              "iconName": "info-outline",
            },
            Object {
              "icon": <Memo
                size="4"
              />,
              "iconName": "minus",
            },
            Object {
              "icon": <Memo
                size="4"
              />,
              "iconName": "moon",
            },
            Object {
              "icon": <Memo
                size="4"
              />,
              "iconName": "question",
            },
            Object {
              "icon": <Memo
                size="4"
              />,
              "iconName": "question-outline",
            },
            Object {
              "icon": <Memo
                size="4"
              />,
              "iconName": "search",
            },
            Object {
              "icon": <Memo
                size="4"
              />,
              "iconName": "sun",
            },
            Object {
              "icon": <Memo
                size="4"
              />,
              "iconName": "warning-1",
            },
            Object {
              "icon": <Memo
                size="4"
              />,
              "iconName": "warning-2",
            },
          ]
        }
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        style={Object {}}
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4280690214}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#262626",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4280690214}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M0,12a1.5,1.5,0,0,0,1.5,1.5h8.75a.25.25,0,0,1,.25.25V22.5a1.5,1.5,0,0,0,3,0V13.75a.25.25,0,0,1,.25-.25H22.5a1.5,1.5,0,0,0,0-3H13.75a.25.25,0,0,1-.25-.25V1.5a1.5,1.5,0,0,0-3,0v8.75a.25.25,0,0,1-.25.25H1.5A1.5,1.5,0,0,0,0,12Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  add
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4280690214}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#262626",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4280690214}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  arrow-back
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4280690214}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#262626",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4280690214}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  arrow-forward
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4280690214}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#262626",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4280690214}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  arrow-up
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4280690214}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#262626",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4280690214}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  arrow-down
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4280690214}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#262626",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4280690214}
                    vbHeight={14}
                    vbWidth={14}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGGroup
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        >
                          <RNSVGPath
                            d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  check
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4280690214}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#262626",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4280690214}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm6.927,8.2-6.845,9.289a1.011,1.011,0,0,1-1.43.188L5.764,13.769a1,1,0,1,1,1.25-1.562l4.076,3.261,6.227-8.451A1,1,0,1,1,18.927,8.2Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  check-circle
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4280690214}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#262626",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4280690214}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGGroup
                          fill={
                            Array [
                              2,
                            ]
                          }
                          matrix={
                            Array [
                              6.123233995736766e-17,
                              1,
                              -1,
                              6.123233995736766e-17,
                              24,
                              0,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        >
                          <RNSVGPath
                            d="M0,0H24V24H0Z"
                            fill={null}
                            propList={
                              Array [
                                "fill",
                              ]
                            }
                          />
                          <RNSVGPath
                            d="M10,6,8.59,7.41,13.17,12,8.59,16.59,10,18l6-6Z"
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  chevron-down
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4280690214}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#262626",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4280690214}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  chevron-left
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4280690214}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#262626",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4280690214}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  chevron-right
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4280690214}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#262626",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4280690214}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  chevron-up
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4280690214}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#262626",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4280690214}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  circle
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4280690214}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#262626",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4280690214}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  close
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4280690214}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#262626",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4280690214}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M 3 5 A 1.0001 1.0001 0 1 0 3 7 L 21 7 A 1.0001 1.0001 0 1 0 21 5 L 3 5 z M 3 11 A 1.0001 1.0001 0 1 0 3 13 L 21 13 A 1.0001 1.0001 0 1 0 21 11 L 3 11 z M 3 17 A 1.0001 1.0001 0 1 0 3 19 L 21 19 A 1.0001 1.0001 0 1 0 21 17 L 3 17 z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  menu
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4280690214}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#262626",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4280690214}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  info
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4280690214}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#262626",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4280690214}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGGroup
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                              "strokeWidth",
                              "strokeLinecap",
                            ]
                          }
                          stroke={
                            Array [
                              2,
                            ]
                          }
                          strokeLinecap={2}
                          strokeWidth="2"
                        >
                          <RNSVGCircle
                            cx="12"
                            cy="12"
                            fill={null}
                            propList={
                              Array [
                                "fill",
                                "stroke",
                              ]
                            }
                            r="11"
                            stroke={
                              Array [
                                2,
                              ]
                            }
                          />
                          <RNSVGLine
                            fill={null}
                            propList={
                              Array [
                                "fill",
                              ]
                            }
                            x1="11.959"
                            x2="11.959"
                            y1="11"
                            y2="17"
                          />
                          <RNSVGCircle
                            cx="11.959"
                            cy="7"
                            propList={
                              Array [
                                "stroke",
                              ]
                            }
                            r="1"
                            stroke={null}
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  info-outline
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    bbHeight={16}
                    bbWidth={16}
                    color={4280690214}
                    focusable={false}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#262626",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4280690214}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGGroup
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        >
                          <RNSVGRect
                            height="4"
                            width="20"
                            x="2"
                            y="10"
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  minus
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4280690214}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#262626",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4280690214}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  moon
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4280690214}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#262626",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4280690214}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm0,19a1.5,1.5,0,1,1,1.5-1.5A1.5,1.5,0,0,1,12,19Zm1.6-6.08a1,1,0,0,0-.6.917,1,1,0,1,1-2,0,3,3,0,0,1,1.8-2.75A2,2,0,1,0,10,9.255a1,1,0,1,1-2,0,4,4,0,1,1,5.6,3.666Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  question
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4280690214}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#262626",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4280690214}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGGroup
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                              "strokeWidth",
                            ]
                          }
                          stroke={
                            Array [
                              2,
                            ]
                          }
                          strokeWidth="1.5"
                        >
                          <RNSVGPath
                            d="M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25"
                            fill={null}
                            propList={
                              Array [
                                "fill",
                                "strokeLinecap",
                              ]
                            }
                            strokeLinecap={1}
                          />
                          <RNSVGPath
                            d="M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0"
                            fill={null}
                            propList={
                              Array [
                                "fill",
                                "strokeLinecap",
                              ]
                            }
                            strokeLinecap={1}
                          />
                          <RNSVGCircle
                            cx="12"
                            cy="12"
                            fill={null}
                            propList={
                              Array [
                                "fill",
                                "strokeMiterlimit",
                              ]
                            }
                            r="11.25"
                            strokeMiterlimit={10}
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  question-outline
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4280690214}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#262626",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4280690214}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M23.384,21.619,16.855,15.09a9.284,9.284,0,1,0-1.768,1.768l6.529,6.529a1.266,1.266,0,0,0,1.768,0A1.251,1.251,0,0,0,23.384,21.619ZM2.75,9.5a6.75,6.75,0,1,1,6.75,6.75A6.758,6.758,0,0,1,2.75,9.5Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  search
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4280690214}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#262626",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4280690214}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGGroup
                          fill={null}
                          propList={
                            Array [
                              "fill",
                              "stroke",
                              "strokeWidth",
                              "strokeLinecap",
                              "strokeLinejoin",
                            ]
                          }
                          stroke={
                            Array [
                              2,
                            ]
                          }
                          strokeLinecap={1}
                          strokeLinejoin={1}
                          strokeWidth="2"
                        >
                          <RNSVGCircle
                            cx="12"
                            cy="12"
                            r="5"
                          />
                          <RNSVGPath
                            d="M12 1v2"
                          />
                          <RNSVGPath
                            d="M12 21v2"
                          />
                          <RNSVGPath
                            d="M4.22 4.22l1.42 1.42"
                          />
                          <RNSVGPath
                            d="M18.36 18.36l1.42 1.42"
                          />
                          <RNSVGPath
                            d="M1 12h2"
                          />
                          <RNSVGPath
                            d="M21 12h2"
                          />
                          <RNSVGPath
                            d="M4.22 19.78l1.42-1.42"
                          />
                          <RNSVGPath
                            d="M18.36 5.64l1.42-1.42"
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  sun
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4280690214}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#262626",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4280690214}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  warning-1
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "height": 76,
                    "marginBottom": 12,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 12,
                    "paddingBottom": 8,
                    "paddingTop": 8,
                    "width": 76,
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4280690214}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#262626",
                          "height": 16,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4280690214}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M23.119,20,13.772,2.15h0a2,2,0,0,0-3.543,0L.881,20a2,2,0,0,0,1.772,2.928H21.347A2,2,0,0,0,23.119,20ZM11,8.423a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Zm1.05,11.51h-.028a1.528,1.528,0,0,1-1.522-1.47,1.476,1.476,0,0,1,1.448-1.53h.028A1.527,1.527,0,0,1,13.5,18.4,1.475,1.475,0,0,1,12.05,19.933Z"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  style={
                    Object {
                      "height": 8,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textAlign": "center",
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  warning-2
                </Text>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Icon Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={20}
        bbWidth={20}
        color={4279286145}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#10b981",
              "height": 20,
              "marginTop": 2,
              "width": 20,
            },
            Object {
              "flex": 0,
              "height": 20,
              "width": 20,
            },
          ]
        }
        tintColor={4279286145}
        vbHeight={14}
        vbWidth={14}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGGroup
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGPath
                d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
              />
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
      <View
        style={
          Object {
            "width": 8,
          }
        }
      />
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#10b981",
            "fontFamily": undefined,
            "fontSize": 16,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 24,
            "textDecorationLine": undefined,
          }
        }
      >
        Order Placed Successfully
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Icon CreateIcon 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RNSVGSvgView
      accessibilityRole="image"
      align="xMidYMid"
      bbHeight={48}
      bbWidth={48}
      color={4280690214}
      focusable={false}
      meetOrSlice={0}
      minX={0}
      minY={0}
      stroke=""
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "color": "#262626",
            "height": 48,
            "width": 48,
          },
          Object {
            "flex": 0,
            "height": 48,
            "width": 48,
          },
        ]
      }
      tintColor={4280690214}
      vbHeight={36}
      vbWidth={36}
    >
      <RNSVGGroup
        propList={
          Array [
            "stroke",
          ]
        }
        stroke={null}
      >
        <RNSVGGroup>
          <RNSVGCircle
            cx="18"
            cy="18"
            fill={4278630100}
            propList={
              Array [
                "fill",
                "stroke",
              ]
            }
            r="17.5"
            stroke={4279137424}
          />
          <RNSVGCircle
            cx="18"
            cy="18"
            fill={4294967295}
            propList={
              Array [
                "fill",
                "stroke",
              ]
            }
            r="13.5"
            stroke={4279137424}
          />
          <RNSVGCircle
            cx="18"
            cy="18"
            fill={4278630100}
            propList={
              Array [
                "fill",
                "stroke",
              ]
            }
            r="9.5"
            stroke={4279137424}
          />
          <RNSVGCircle
            cx="18"
            cy="18"
            fill={4294967295}
            propList={
              Array [
                "fill",
                "stroke",
              ]
            }
            r="5.5"
            stroke={4279137424}
          />
        </RNSVGGroup>
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Icon CustomIcon 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RNSVGSvgView
      accessibilityRole="image"
      align="xMidYMid"
      bbHeight={32}
      bbWidth={32}
      color={4280690214}
      focusable={false}
      meetOrSlice={0}
      minX={0}
      minY={0}
      stroke=""
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "color": "#262626",
            "height": 32,
            "width": 32,
          },
          Object {
            "flex": 0,
            "height": 32,
            "width": 32,
          },
        ]
      }
      tintColor={4280690214}
      vbHeight={873}
      vbWidth={870}
    >
      <RNSVGGroup
        propList={
          Array [
            "stroke",
          ]
        }
        stroke={null}
      >
        <RNSVGGroup>
          <RNSVGGroup
            fill={null}
            fillRule={1}
            propList={
              Array [
                "fill",
                "fillRule",
                "stroke",
                "strokeWidth",
              ]
            }
            stroke={null}
            strokeWidth={1}
          >
            <RNSVGPath
              d="M435 .1C194.8.1.1 194.8.1 435c0 187.3 118.4 346.9 284.4 408.1 3.3-29.9 15-57.2 32.7-79.6 12.1-15.4 26.9-28.5 43.9-38.4 2.1-5 4.6-10.6 7.1-16.6-50.3-26-84.7-78.1-84.7-138.6 0-51.7 25.3-97.7 64-125.9-10.9-20.6-21.3-40.2-31.8-58.2-18.1-31.5-46.7-59.7-68.4-78.9-21 11.9-47.8 4.7-59.7-16.3-11.9-21-4.7-47.8 16.3-59.7 21-11.9 47.4-4.7 59.7 15.9v.4c7.2 12.7 7.2 27.5 1.8 39.8 22.8 19.5 56.8 52.5 77.8 89 9.8 17 19.5 34.7 29.3 53.5 20.3-9.4 42.7-14.8 66.2-14.8 21.3 0 41.6 4.3 60.1 11.9 9.8-18.5 19.5-36.2 28.9-52.8 21-36.2 54.6-68.7 77.4-88.3-5.4-12.3-5.4-26.8 1.8-39.4v-.4c12.3-20.6 38.7-27.9 59.3-15.9 21 11.9 28.2 38.7 16.3 59.3-11.9 21-38.4 28.2-59.3 16.3-21.7 18.8-49.9 47.4-68 78.5-10.1 17.4-20.3 36.5-30.8 56.4 42 27.9 69.8 75.3 69.8 129.5 0 63-36.9 116.9-90.4 141.5.9 2.7 2 4.9 3 7.2 47 22.3 81.1 67.4 87.9 121.1C755.9 776 869.9 618.8 869.9 435 869.9 194.8 675.2.1 435 .1z"
              fill={4291428352}
              propList={
                Array [
                  "fill",
                ]
              }
            />
            <RNSVGPath
              d="M284.8 843.3h.1-.1zM284.8 843.3c-.1 0-.3-.1-.4-.1.2 0 .3 0 .4.1z"
              fill={4294967295}
              propList={
                Array [
                  "fill",
                ]
              }
            />
            <RNSVGGroup
              fill={4294967295}
              propList={
                Array [
                  "fill",
                  "stroke",
                  "strokeWidth",
                ]
              }
              stroke={4294967295}
              strokeWidth={5}
            >
              <RNSVGPath
                d="M485.2 5.8c-20.6-11.9-47-4.7-59.3 15.9v.4c-7.2 12.7-7.2 27.1-1.8 39.4-22.8 19.5-56.4 52.1-77.4 88.3-9.4 16.6-19.2 34.4-28.9 52.8-18.5-7.6-38.7-11.9-60.1-11.9-23.5 0-45.9 5.4-66.2 14.8-9.8-18.8-19.5-36.5-29.3-53.5-21-36.5-55-69.5-77.8-89 5.4-12.3 5.4-27.1-1.8-39.8v-.4C70.3 2.2 43.9-5.1 22.9 6.9 1.9 18.8-5.3 45.6 6.6 66.6c11.9 21 38.7 28.2 59.7 16.3 21.7 19.2 50.3 47.4 68.4 78.9 10.5 18.1 21 37.6 31.8 58.2-38.7 28.2-64 74.2-64 125.9 0 60.4 34.4 112.5 84.7 138.6-2.5 6.2-5.1 11.9-7.2 17-41.6 24.4-70.8 67.4-76.4 117.6 46.9 17.3 97.6 26.8 150.6 26.8 56.2 0 109.9-10.7 159.2-30.1-7.1-52.8-40.5-97.3-86.8-119.8-1.1-2.9-2.5-5.4-3.6-8.7 53.5-24.6 90.4-78.5 90.4-141.5 0-54.3-27.9-101.7-69.8-129.5 10.5-19.9 20.6-39.1 30.8-56.4 18.1-31.1 46.3-59.7 68-78.5 21 11.9 47.4 4.7 59.3-16.3 11.7-20.5 4.5-47.3-16.5-59.3z"
                matrix={
                  Array [
                    1,
                    0,
                    0,
                    1,
                    181,
                    224,
                  ]
                }
              />
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Icon Integration with Third Party Icons 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Object {
                "color": "#1f2937",
                "fontSize": 32,
                "height": 32,
                "lineHeight": 32,
                "width": 32,
              },
              Object {
                "fontFamily": "anticon",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
        <View
          style={
            Object {
              "width": 12,
            }
          }
        />
        <Text />
        <View
          style={
            Object {
              "width": 12,
            }
          }
        />
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Object {
                "color": "#1f2937",
                "fontSize": 32,
                "height": 32,
                "lineHeight": 32,
                "width": 32,
              },
              Object {
                "fontFamily": "material-community",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          󰖟
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Icon Sizes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginBottom": 40,
            "textDecorationLine": undefined,
          }
        }
      >
        Sizes
      </Text>
      <View
        style={
          Object {
            "justifyContent": "center",
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Object {
                "alignSelf": "center",
                "color": "#262626",
                "fontSize": 40,
                "height": 40,
                "lineHeight": 40,
                "width": 40,
              },
              Object {
                "fontFamily": "ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
        <View
          style={
            Object {
              "height": 16,
            }
          }
        />
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Object {
                "alignSelf": "center",
                "color": "#262626",
                "fontSize": 50,
                "height": 50,
                "lineHeight": 50,
                "width": 50,
              },
              Object {
                "fontFamily": "ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
        <View
          style={
            Object {
              "height": 16,
            }
          }
        />
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Object {
                "alignSelf": "center",
                "color": "#262626",
                "fontSize": 64,
                "height": 64,
                "lineHeight": 64,
                "width": 64,
              },
              Object {
                "fontFamily": "ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots IconButton Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 9999,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
        }
      }
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": undefined,
              "fontSize": 12,
            },
            Object {
              "color": "#f97316",
              "fontSize": 64,
              "height": 64,
              "lineHeight": 64,
              "width": 64,
            },
            Object {
              "fontFamily": "entypo",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots IconButton SVGIcon 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": 0.5,
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          }
        }
      >
        <RNSVGSvgView
          accessibilityRole="image"
          align="xMidYMid"
          bbHeight={40}
          bbWidth={40}
          color={4294638330}
          focusable={false}
          meetOrSlice={0}
          minX={0}
          minY={0}
          stroke=""
          strokeWidth="10"
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "color": "#fafafa",
                "height": 40,
                "width": 40,
              },
              Object {
                "flex": 0,
                "height": 40,
                "width": 40,
              },
            ]
          }
          tintColor={4294638330}
          vbHeight={100}
          vbWidth={100}
        >
          <RNSVGGroup
            propList={
              Array [
                "stroke",
                "strokeWidth",
              ]
            }
            stroke={null}
            strokeWidth="10"
          >
            <RNSVGGroup>
              <RNSVGSvgView
                accessibilityRole="image"
                bbHeight={32}
                bbWidth={32}
                color={4280690214}
                fill="currentColor"
                focusable={false}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#262626",
                      "height": 32,
                      "width": 32,
                    },
                    Object {
                      "flex": 0,
                      "height": 32,
                      "width": 32,
                    },
                  ]
                }
                tintColor={4280690214}
              >
                <RNSVGGroup
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M46.667 90v-.008c-4.922 0-11.021-2.695-13.333-6.66V40c5.521 0 10-4.479 10-10V13.333A3.33 3.33 0 0 1 46.667 10C54.029 10 60 15.97 60 23.333v13.333A3.331 3.331 0 0 0 63.334 40H80c5.52 0 10 4.479 10 10v30h-.004c0 5.52-4.477 9.992-9.996 10H46.667zM10 40h16.666v43.333H10z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": 0.5,
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          }
        }
      >
        <RNSVGSvgView
          accessibilityRole="image"
          align="xMidYMid"
          bbHeight={40}
          bbWidth={40}
          color={4294638330}
          focusable={false}
          meetOrSlice={0}
          minX={0}
          minY={0}
          stroke=""
          strokeWidth="10"
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "color": "#fafafa",
                "height": 40,
                "width": 40,
              },
              Object {
                "flex": 0,
                "height": 40,
                "width": 40,
              },
            ]
          }
          tintColor={4294638330}
          vbHeight={100}
          vbWidth={100}
        >
          <RNSVGGroup
            propList={
              Array [
                "stroke",
                "strokeWidth",
              ]
            }
            stroke={null}
            strokeWidth="10"
          >
            <RNSVGGroup>
              <RNSVGPath
                d="M46.667 90v-.008c-4.922 0-11.021-2.695-13.333-6.66V40c5.521 0 10-4.479 10-10V13.333A3.33 3.33 0 0 1 46.667 10C54.029 10 60 15.97 60 23.333v13.333A3.331 3.331 0 0 0 63.334 40H80c5.52 0 10 4.479 10 10v30h-.004c0 5.52-4.477 9.992-9.996 10H46.667zM10 40h16.666v43.333H10z"
                fill={
                  Array [
                    2,
                  ]
                }
                propList={
                  Array [
                    "fill",
                    "stroke",
                  ]
                }
                stroke={null}
              />
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots IconButton Sizes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginBottom": 40,
            "textDecorationLine": undefined,
          }
        }
      >
        Sizes
      </Text>
      <View
        style={
          Object {
            "alignItems": "center",
          }
        }
      >
        <View
          style={Object {}}
        >
          <View
            _disabled={
              Object {
                "bg": "trueGray.300",
                "opacity": 0.5,
              }
            }
            _text={
              Object {
                "color": "lightText",
              }
            }
            accessibilityRole="button"
            accessible={true}
            colorScheme="primary"
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#06b6d4",
                "borderRadius": 4,
                "paddingBottom": 4,
                "paddingLeft": 4,
                "paddingRight": 4,
                "paddingTop": 4,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Object {
                    "color": "#fafafa",
                    "fontSize": 32,
                    "height": 32,
                    "lineHeight": 32,
                    "width": 32,
                  },
                  Object {
                    "fontFamily": "material",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          style={Object {}}
        >
          <View
            _disabled={
              Object {
                "bg": "trueGray.300",
                "opacity": 0.5,
              }
            }
            _text={
              Object {
                "color": "lightText",
              }
            }
            accessibilityRole="button"
            accessible={true}
            colorScheme="primary"
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#06b6d4",
                "borderRadius": 4,
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Object {
                    "color": "#fafafa",
                    "fontSize": 32,
                    "height": 32,
                    "lineHeight": 32,
                    "width": 32,
                  },
                  Object {
                    "fontFamily": "material",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          style={Object {}}
        >
          <View
            _disabled={
              Object {
                "bg": "trueGray.300",
                "opacity": 0.5,
              }
            }
            _text={
              Object {
                "color": "lightText",
              }
            }
            accessibilityRole="button"
            accessible={true}
            colorScheme="primary"
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#06b6d4",
                "borderRadius": 4,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Object {
                    "color": "#fafafa",
                    "fontSize": 32,
                    "height": 32,
                    "lineHeight": 32,
                    "width": 32,
                  },
                  Object {
                    "fontFamily": "material",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots IconButton Variant 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
          }
        }
      >
        <View
          _disabled={
            Object {
              "opacity": 0.5,
            }
          }
          accessibilityRole="button"
          accessible={true}
          colorScheme="indigo"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "borderColor": "#a5b4fc",
              "borderRadius": 4,
              "borderWidth": 1,
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            }
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Object {
                  "color": "#6366f1",
                  "fontSize": 32,
                  "height": 32,
                  "lineHeight": 32,
                  "width": 32,
                },
                Object {
                  "fontFamily": "anticon",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
        <View
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          _disabled={
            Object {
              "bg": "trueGray.300",
              "opacity": 0.5,
            }
          }
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          colorScheme="indigo"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#6366f1",
              "borderRadius": 4,
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            }
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Object {
                  "color": "#fafafa",
                  "fontSize": 32,
                  "height": 32,
                  "lineHeight": 32,
                  "width": 32,
                },
                Object {
                  "fontFamily": "anticon",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
        <View
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          _disabled={
            Object {
              "opacity": 0.5,
            }
          }
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          colorScheme="indigo"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 4,
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            }
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Object {
                  "color": "#262626",
                  "fontSize": 32,
                  "height": 32,
                  "lineHeight": 32,
                  "width": 32,
                },
                Object {
                  "fontFamily": "anticon",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Image Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Image
      accessibilityLabel="Alternate Text"
      alt="Alternate Text"
      onError={[Function]}
      source={
        Object {
          "uri": "https://wallpaperaccess.com/full/317501.jpg",
        }
      }
      style={
        Object {
          "height": 128,
          "maxWidth": "100%",
          "width": 128,
        }
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Image BorderRadius 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Image
      accessibilityLabel="Alternate Text"
      alt="Alternate Text"
      onError={[Function]}
      resizeMode="contain"
      source={
        Object {
          "uri": "https://wallpaperaccess.com/full/317501.jpg",
        }
      }
      style={
        Object {
          "borderRadius": 100,
          "height": 150,
          "maxWidth": "100%",
          "width": 150,
        }
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Image FallbackElement 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Image
      accessibilityLabel="fallback text"
      alt="fallback text"
      onError={[Function]}
      source={
        Object {
          "uri": "https://cdn.pixaba.com/photo/2015/04/19/08/32/marguerite-729510__340.jpg",
        }
      }
      style={
        Object {
          "borderRadius": 2,
          "height": 150,
          "maxWidth": "100%",
          "width": 150,
        }
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Image FallbackSupport 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Image
      accessibilityLabel="fallback text"
      alt="fallback text"
      onError={[Function]}
      source={
        Object {
          "uri": "https://-page-icon.png",
        }
      }
      style={
        Object {
          "borderRadius": 100,
          "height": 150,
          "maxWidth": "100%",
          "width": 150,
        }
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Image Sizes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RCTScrollView
      contentContainerStyle={
        Array [
          Object {},
          Object {},
        ]
      }
      style={
        Object {
          "paddingLeft": 80,
          "paddingRight": 80,
        }
      }
    >
      <View>
        <View
          style={
            Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
              "marginTop": 12,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#404040",
                "fontFamily": undefined,
                "fontSize": 24,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 30,
                "marginBottom": 40,
                "textDecorationLine": undefined,
              }
            }
          >
            Image Sizes
          </Text>
          <View
            style={
              Object {
                "alignItems": "center",
                "marginBottom": 24,
                "marginTop": 24,
              }
            }
          >
            <Image
              accessibilityLabel="Alternate Text xs"
              alt="Alternate Text xs"
              onError={[Function]}
              resizeMode="cover"
              source={
                Object {
                  "uri": "https://wallpaperaccess.com/full/317501.jpg",
                }
              }
              style={
                Object {
                  "height": 40,
                  "maxWidth": "100%",
                  "width": 40,
                }
              }
            />
            <View
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <Image
              accessibilityLabel="Alternate Text sm"
              alt="Alternate Text sm"
              onError={[Function]}
              resizeMode="cover"
              source={
                Object {
                  "uri": "https://wallpaperaccess.com/full/317501.jpg",
                }
              }
              style={
                Object {
                  "height": 64,
                  "maxWidth": "100%",
                  "width": 64,
                }
              }
            />
            <View
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <Image
              accessibilityLabel="Alternate Text md"
              alt="Alternate Text md"
              onError={[Function]}
              resizeMode="cover"
              source={
                Object {
                  "uri": "https://wallpaperaccess.com/full/317501.jpg",
                }
              }
              style={
                Object {
                  "height": 80,
                  "maxWidth": "100%",
                  "width": 80,
                }
              }
            />
            <View
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <Image
              accessibilityLabel="Alternate Text lg"
              alt="Alternate Text lg"
              onError={[Function]}
              resizeMode="cover"
              source={
                Object {
                  "uri": "https://wallpaperaccess.com/full/317501.jpg",
                }
              }
              style={
                Object {
                  "height": 96,
                  "maxWidth": "100%",
                  "width": 96,
                }
              }
            />
            <View
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <Image
              accessibilityLabel="Alternate Text xl"
              alt="Alternate Text xl"
              onError={[Function]}
              resizeMode="cover"
              source={
                Object {
                  "uri": "https://wallpaperaccess.com/full/317501.jpg",
                }
              }
              style={
                Object {
                  "height": 128,
                  "maxWidth": "100%",
                  "width": 128,
                }
              }
            />
            <View
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <Image
              accessibilityLabel="Alternate Text 2xl"
              alt="Alternate Text 2xl"
              onError={[Function]}
              resizeMode="cover"
              source={
                Object {
                  "uri": "https://wallpaperaccess.com/full/317501.jpg",
                }
              }
              style={
                Object {
                  "height": 256,
                  "maxWidth": "100%",
                  "width": 256,
                }
              }
            />
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Image WithRef 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Image
      accessibilityLabel="Alternate Text"
      alt="Alternate Text"
      onError={[Function]}
      source={
        Object {
          "uri": "https://wallpaperaccess.com/full/317501.jpg",
        }
      }
      style={
        Object {
          "height": 128,
          "maxWidth": "100%",
          "width": 128,
        }
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Input Addons 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        direction="row"
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
            "width": "70%",
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#fafafa",
              "borderBottomLeftRadius": 4,
              "borderBottomRightRadius": 0,
              "borderColor": "#d4d4d8",
              "borderRightWidth": 0,
              "borderTopLeftRadius": 4,
              "borderTopRightRadius": 0,
              "borderWidth": 1,
              "marginRight": 0,
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "marginBottom": "auto",
                "marginLeft": "auto",
                "marginRight": "auto",
                "marginTop": "auto",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#a3a3a3",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              https://
            </Text>
          </View>
        </View>
        <TextInput
          _disabled={
            Object {
              "bg": "muted.100",
              "opacity": "80",
            }
          }
          _invalid={
            Object {
              "borderColor": "danger.600",
            }
          }
          accessible={true}
          allowFontScaling={true}
          editable={true}
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="nativebase"
          placeholderTextColor="#a3a3a3"
          rejectResponderTermination={true}
          secureTextEntry={false}
          selectionColor="#1f2937"
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomLeftRadius": 0,
              "borderBottomRightRadius": 0,
              "borderColor": "#e5e5e5",
              "borderRadius": 4,
              "borderTopLeftRadius": 0,
              "borderTopRightRadius": 0,
              "borderWidth": 1,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "400",
              "marginLeft": 0,
              "marginRight": 0,
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
              "width": "70%",
            }
          }
          underlineColorAndroid="transparent"
        />
        <View
          style={
            Object {
              "backgroundColor": "#fafafa",
              "borderBottomLeftRadius": 0,
              "borderBottomRightRadius": 4,
              "borderColor": "#d4d4d8",
              "borderLeftWidth": 0,
              "borderTopLeftRadius": 0,
              "borderTopRightRadius": 4,
              "borderWidth": 1,
              "marginLeft": 0,
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "marginBottom": "auto",
                "marginLeft": "auto",
                "marginRight": "auto",
                "marginTop": "auto",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#a3a3a3",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              .io
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Input Elements 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#e5e5e5",
            "borderRadius": 4,
            "borderWidth": 1,
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "width": "75%",
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Object {
                "color": "#a3a3a3",
                "fontSize": 20,
                "height": 20,
                "lineHeight": 20,
                "marginLeft": 8,
                "width": 20,
              },
              Object {
                "fontFamily": "material",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
        <TextInput
          _disabled={
            Object {
              "bg": "muted.100",
              "opacity": "80",
            }
          }
          _invalid={
            Object {
              "borderColor": "danger.600",
            }
          }
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessible={true}
          allowFontScaling={true}
          editable={true}
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="Name"
          placeholderTextColor="#a3a3a3"
          rejectResponderTermination={true}
          secureTextEntry={false}
          selectionColor="#1f2937"
          style={
            Object {
              "backgroundColor": "transparent",
              "borderColor": "#e5e5e5",
              "borderRadius": 4,
              "borderWidth": 0,
              "color": "#1f2937",
              "flex": 1,
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "400",
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
              "width": undefined,
            }
          }
          underlineColorAndroid="transparent"
        />
      </View>
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#e5e5e5",
            "borderRadius": 4,
            "borderWidth": 1,
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "width": "75%",
          }
        }
      >
        <TextInput
          _disabled={
            Object {
              "bg": "muted.100",
              "opacity": "80",
            }
          }
          _invalid={
            Object {
              "borderColor": "danger.600",
            }
          }
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessible={true}
          allowFontScaling={true}
          editable={true}
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="Password"
          placeholderTextColor="#a3a3a3"
          rejectResponderTermination={true}
          secureTextEntry={false}
          selectionColor="#1f2937"
          style={
            Object {
              "backgroundColor": "transparent",
              "borderColor": "#e5e5e5",
              "borderRadius": 4,
              "borderWidth": 0,
              "color": "#1f2937",
              "flex": 1,
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "400",
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
              "width": undefined,
            }
          }
          underlineColorAndroid="transparent"
        />
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Object {
                "color": "#a3a3a3",
                "fontSize": 20,
                "height": 20,
                "lineHeight": 20,
                "marginRight": 8,
                "width": 20,
              },
              Object {
                "fontFamily": "material",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Input Form Controlled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      isInvalid={true}
      style={
        Object {
          "width": "75%",
        }
      }
    >
      <View
        feedbackId="field-react-aria-0-2-feedback"
        hasFeedbackText={false}
        hasHelpText={false}
        helpTextId="field-react-aria-0-2-helptext"
        isDisabled={false}
        isInvalid={true}
        isReadOnly={false}
        isRequired={false}
        labelId="field-react-aria-0-2-label"
        nativeID="field-react-aria-0-2-label"
        setHasFeedbackText={[Function]}
        setHasHelpText={[Function]}
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "flex-start",
            "marginBottom": 8,
            "marginRight": 12,
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "500",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": undefined,
            }
          }
        >
          Password
        </Text>
      </View>
      <TextInput
        accessibilityInvalid={true}
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        editable={true}
        isInvalid={true}
        isRequired={false}
        nativeID="field-react-aria-0-2"
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        placeholder="Enter password"
        placeholderTextColor="#a3a3a3"
        readOnly={false}
        rejectResponderTermination={true}
        required={false}
        secureTextEntry={false}
        selectionColor="#1f2937"
        style={
          Object {
            "backgroundColor": "transparent",
            "borderColor": "#dc2626",
            "borderRadius": 4,
            "borderWidth": 1,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 12,
            "fontStyle": "normal",
            "fontWeight": "400",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "width": undefined,
          }
        }
        underlineColorAndroid="transparent"
      />
      <View
        feedbackId="field-react-aria-0-2-feedback"
        hasFeedbackText={false}
        hasHelpText={false}
        helpTextId="field-react-aria-0-2-helptext"
        isDisabled={false}
        isInvalid={true}
        isReadOnly={false}
        isRequired={false}
        labelId="field-react-aria-0-2-label"
        nativeID="field-react-aria-0-2"
        setHasFeedbackText={[Function]}
        setHasHelpText={[Function]}
        style={
          Object {
            "marginTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={16}
            bbWidth={16}
            color={4292617766}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Object {
                  "color": "#dc2626",
                  "fontSize": 12,
                  "height": 16,
                  "width": 16,
                },
                Object {
                  "flex": 0,
                  "height": 16,
                  "width": 16,
                },
              ]
            }
            tintColor={4292617766}
            vbHeight={16}
            vbWidth={16}
          >
            <RNSVGGroup
              font={
                Object {
                  "fontSize": 12,
                }
              }
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M8 16C6.41775 16 4.87103 15.5308 3.55544 14.6518C2.23985 13.7727 1.21447 12.5233 0.608967 11.0615C0.00346627 9.59966 -0.15496 7.99113 0.153721 6.43928C0.462403 4.88743 1.22433 3.46197 2.34315 2.34315C3.46197 1.22433 4.88743 0.462403 6.43928 0.153721C7.99113 -0.15496 9.59966 0.00346627 11.0615 0.608967C12.5233 1.21447 13.7727 2.23985 14.6518 3.55544C15.5308 4.87103 16 6.41775 16 8C16 10.1217 15.1571 12.1566 13.6569 13.6569C12.1566 15.1571 10.1217 16 8 16ZM8 14.4C9.2658 14.4 10.5032 14.0246 11.5556 13.3214C12.6081 12.6182 13.4284 11.6186 13.9128 10.4492C14.3972 9.27973 14.524 7.9929 14.277 6.75142C14.0301 5.50995 13.4205 4.36958 12.5255 3.47452C11.6304 2.57946 10.4901 1.96992 9.24858 1.72298C8.0071 1.47603 6.72028 1.60277 5.55083 2.08717C4.38138 2.57158 3.38184 3.39188 2.6786 4.44435C1.97536 5.49683 1.6 6.7342 1.6 8C1.6 9.69739 2.27429 11.3253 3.47452 12.5255C4.67475 13.7257 6.30262 14.4 8 14.4ZM7.2 10.4H8.8V12H7.2V10.4ZM7.2 4H8.8V8.8H7.2V4Z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
          <View
            style={
              Object {
                "width": 4,
              }
            }
          />
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#dc2626",
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 18,
                  "textDecorationLine": undefined,
                }
              }
            >
              Try different from previous passwords.
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Input Password 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "borderColor": "#e5e5e5",
          "borderRadius": 4,
          "borderWidth": 1,
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "width": "75%",
        }
      }
    >
      <TextInput
        _disabled={
          Object {
            "bg": "muted.100",
            "opacity": "80",
          }
        }
        _invalid={
          Object {
            "borderColor": "danger.600",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessible={true}
        allowFontScaling={true}
        editable={true}
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        placeholder="Password"
        placeholderTextColor="#a3a3a3"
        rejectResponderTermination={true}
        secureTextEntry={true}
        selectionColor="#1f2937"
        style={
          Object {
            "backgroundColor": "transparent",
            "borderColor": "#e5e5e5",
            "borderRadius": 4,
            "borderWidth": 0,
            "color": "#1f2937",
            "flex": 1,
            "fontFamily": undefined,
            "fontSize": 12,
            "fontStyle": "normal",
            "fontWeight": "400",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "width": undefined,
          }
        }
        underlineColorAndroid="transparent"
      />
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 0,
            "flexDirection": "row",
            "height": "100%",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "width": "16.666%",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 10,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 15,
                  "textDecorationLine": undefined,
                }
              }
            >
              Show
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Input Primary 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <TextInput
      _disabled={
        Object {
          "bg": "muted.100",
          "opacity": "80",
        }
      }
      _invalid={
        Object {
          "borderColor": "danger.600",
        }
      }
      accessible={true}
      allowFontScaling={true}
      editable={true}
      onBlur={[Function]}
      onFocus={[Function]}
      onKeyPress={[Function]}
      placeholder="Input"
      placeholderTextColor="#a3a3a3"
      rejectResponderTermination={true}
      secureTextEntry={false}
      selectionColor="#1f2937"
      style={
        Object {
          "backgroundColor": "transparent",
          "borderColor": "#e5e5e5",
          "borderRadius": 4,
          "borderWidth": 1,
          "color": "#1f2937",
          "fontFamily": undefined,
          "fontSize": 12,
          "fontStyle": "normal",
          "fontWeight": "400",
          "marginLeft": 12,
          "marginRight": 12,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "width": "75%",
        }
      }
      underlineColorAndroid="transparent"
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Input Size  1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "marginTop": 12,
          "width": "75%",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "center",
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#404040",
              "fontFamily": undefined,
              "fontSize": 24,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 30,
              "marginBottom": 40,
              "textAlign": "center",
              "textDecorationLine": undefined,
            }
          }
        >
          Input sizes
        </Text>
      </View>
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <TextInput
        _disabled={
          Object {
            "bg": "muted.100",
            "opacity": "80",
          }
        }
        _invalid={
          Object {
            "borderColor": "danger.600",
          }
        }
        accessible={true}
        allowFontScaling={true}
        editable={true}
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        placeholder="xs Input"
        placeholderTextColor="#a3a3a3"
        rejectResponderTermination={true}
        secureTextEntry={false}
        selectionColor="#1f2937"
        style={
          Object {
            "backgroundColor": "transparent",
            "borderColor": "#e5e5e5",
            "borderRadius": 4,
            "borderWidth": 1,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 10,
            "fontStyle": "normal",
            "fontWeight": "400",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "width": undefined,
          }
        }
        underlineColorAndroid="transparent"
      />
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <TextInput
        _disabled={
          Object {
            "bg": "muted.100",
            "opacity": "80",
          }
        }
        _invalid={
          Object {
            "borderColor": "danger.600",
          }
        }
        accessible={true}
        allowFontScaling={true}
        editable={true}
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        placeholder="sm Input"
        placeholderTextColor="#a3a3a3"
        rejectResponderTermination={true}
        secureTextEntry={false}
        selectionColor="#1f2937"
        style={
          Object {
            "backgroundColor": "transparent",
            "borderColor": "#e5e5e5",
            "borderRadius": 4,
            "borderWidth": 1,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 12,
            "fontStyle": "normal",
            "fontWeight": "400",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "width": undefined,
          }
        }
        underlineColorAndroid="transparent"
      />
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <TextInput
        _disabled={
          Object {
            "bg": "muted.100",
            "opacity": "80",
          }
        }
        _invalid={
          Object {
            "borderColor": "danger.600",
          }
        }
        accessible={true}
        allowFontScaling={true}
        editable={true}
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        placeholder="md Input"
        placeholderTextColor="#a3a3a3"
        rejectResponderTermination={true}
        secureTextEntry={false}
        selectionColor="#1f2937"
        style={
          Object {
            "backgroundColor": "transparent",
            "borderColor": "#e5e5e5",
            "borderRadius": 4,
            "borderWidth": 1,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "width": undefined,
          }
        }
        underlineColorAndroid="transparent"
      />
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <TextInput
        _disabled={
          Object {
            "bg": "muted.100",
            "opacity": "80",
          }
        }
        _invalid={
          Object {
            "borderColor": "danger.600",
          }
        }
        accessible={true}
        allowFontScaling={true}
        editable={true}
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        placeholder="lg Input"
        placeholderTextColor="#a3a3a3"
        rejectResponderTermination={true}
        secureTextEntry={false}
        selectionColor="#1f2937"
        style={
          Object {
            "backgroundColor": "transparent",
            "borderColor": "#e5e5e5",
            "borderRadius": 4,
            "borderWidth": 1,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 16,
            "fontStyle": "normal",
            "fontWeight": "400",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "width": undefined,
          }
        }
        underlineColorAndroid="transparent"
      />
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <TextInput
        _disabled={
          Object {
            "bg": "muted.100",
            "opacity": "80",
          }
        }
        _invalid={
          Object {
            "borderColor": "danger.600",
          }
        }
        accessible={true}
        allowFontScaling={true}
        editable={true}
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        placeholder="xl Input"
        placeholderTextColor="#a3a3a3"
        rejectResponderTermination={true}
        secureTextEntry={false}
        selectionColor="#1f2937"
        style={
          Object {
            "backgroundColor": "transparent",
            "borderColor": "#e5e5e5",
            "borderRadius": 4,
            "borderWidth": 1,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 18,
            "fontStyle": "normal",
            "fontWeight": "400",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "width": undefined,
          }
        }
        underlineColorAndroid="transparent"
      />
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <TextInput
        _disabled={
          Object {
            "bg": "muted.100",
            "opacity": "80",
          }
        }
        _invalid={
          Object {
            "borderColor": "danger.600",
          }
        }
        accessible={true}
        allowFontScaling={true}
        editable={true}
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        placeholder="2xl Input"
        placeholderTextColor="#a3a3a3"
        rejectResponderTermination={true}
        secureTextEntry={false}
        selectionColor="#1f2937"
        style={
          Object {
            "backgroundColor": "transparent",
            "borderColor": "#e5e5e5",
            "borderRadius": 4,
            "borderWidth": 1,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 20,
            "fontStyle": "normal",
            "fontWeight": "400",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "width": undefined,
          }
        }
        underlineColorAndroid="transparent"
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Input Value Controlled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <TextInput
      _disabled={
        Object {
          "bg": "muted.100",
          "opacity": "80",
        }
      }
      _invalid={
        Object {
          "borderColor": "danger.600",
        }
      }
      accessible={true}
      allowFontScaling={true}
      editable={true}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyPress={[Function]}
      placeholder="Value Controlled Input"
      placeholderTextColor="#a3a3a3"
      rejectResponderTermination={true}
      secureTextEntry={false}
      selectionColor="#1f2937"
      style={
        Object {
          "backgroundColor": "transparent",
          "borderColor": "#e5e5e5",
          "borderRadius": 4,
          "borderWidth": 1,
          "color": "#1f2937",
          "fontFamily": undefined,
          "fontSize": 12,
          "fontStyle": "normal",
          "fontWeight": "400",
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "width": "75%",
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Input Variants 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "width": "75%",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "center",
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#404040",
              "fontFamily": undefined,
              "fontSize": 24,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 30,
              "marginBottom": 40,
              "textAlign": "center",
              "textDecorationLine": undefined,
            }
          }
        >
          Input Variants
        </Text>
      </View>
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <TextInput
        _disabled={
          Object {
            "bg": "muted.100",
            "opacity": "80",
          }
        }
        _invalid={
          Object {
            "borderColor": "danger.600",
          }
        }
        accessible={true}
        allowFontScaling={true}
        editable={true}
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        placeholder="Outline"
        placeholderTextColor="#a3a3a3"
        rejectResponderTermination={true}
        secureTextEntry={false}
        selectionColor="#1f2937"
        style={
          Object {
            "backgroundColor": "transparent",
            "borderColor": "#e5e5e5",
            "borderRadius": 4,
            "borderWidth": 1,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 12,
            "fontStyle": "normal",
            "fontWeight": "400",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "width": undefined,
          }
        }
        underlineColorAndroid="transparent"
      />
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <TextInput
        _disabled={
          Object {
            "bg": "muted.100",
            "opacity": "80",
          }
        }
        _invalid={
          Object {
            "borderColor": "danger.600",
          }
        }
        _text={
          Object {
            "color": "darkText",
          }
        }
        accessible={true}
        allowFontScaling={true}
        editable={true}
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        placeholder="Filled"
        placeholderTextColor="#a3a3a3"
        rejectResponderTermination={true}
        secureTextEntry={false}
        selectionColor="#1f2937"
        style={
          Object {
            "backgroundColor": "#e5e5e5",
            "borderColor": "transparent",
            "borderRadius": 4,
            "borderWidth": 1,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 12,
            "fontStyle": "normal",
            "fontWeight": "400",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "width": undefined,
          }
        }
        underlineColorAndroid="transparent"
      />
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <TextInput
        _disabled={
          Object {
            "bg": "muted.100",
            "opacity": "80",
          }
        }
        _invalid={
          Object {
            "borderColor": "danger.600",
          }
        }
        accessible={true}
        allowFontScaling={true}
        editable={true}
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        placeholder="Underlined"
        placeholderTextColor="#a3a3a3"
        rejectResponderTermination={true}
        secureTextEntry={false}
        selectionColor="#1f2937"
        style={
          Object {
            "backgroundColor": "transparent",
            "borderBottomWidth": 1,
            "borderColor": "#e5e5e5",
            "borderRadius": 0,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 12,
            "fontStyle": "normal",
            "fontWeight": "400",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "width": undefined,
          }
        }
        underlineColorAndroid="transparent"
      />
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <TextInput
        _disabled={
          Object {
            "bg": "muted.100",
            "opacity": "80",
          }
        }
        _invalid={
          Object {
            "borderColor": "danger.600",
          }
        }
        accessible={true}
        allowFontScaling={true}
        editable={true}
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        placeholder="Unstyled"
        placeholderTextColor="#a3a3a3"
        rejectResponderTermination={true}
        secureTextEntry={false}
        selectionColor="#1f2937"
        style={
          Object {
            "backgroundColor": "transparent",
            "borderColor": "#e5e5e5",
            "borderRadius": 4,
            "borderWidth": 0,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 12,
            "fontStyle": "normal",
            "fontWeight": "400",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "width": undefined,
          }
        }
        underlineColorAndroid="transparent"
      />
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <TextInput
        _disabled={
          Object {
            "bg": "muted.100",
            "opacity": "80",
          }
        }
        _invalid={
          Object {
            "borderColor": "danger.600",
          }
        }
        accessible={true}
        allowFontScaling={true}
        editable={true}
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        placeholder="Round"
        placeholderTextColor="#a3a3a3"
        rejectResponderTermination={true}
        secureTextEntry={false}
        selectionColor="#1f2937"
        style={
          Object {
            "backgroundColor": "transparent",
            "borderColor": "#e5e5e5",
            "borderRadius": 25,
            "borderWidth": 1,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 12,
            "fontStyle": "normal",
            "fontWeight": "400",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "width": undefined,
          }
        }
        underlineColorAndroid="transparent"
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots KeyboardAvoidingView Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      onLayout={[Function]}
      style={
        Array [
          Object {
            "height": 400,
          },
          Object {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <View
        style={
          Object {
            "flex": 1,
            "justifyContent": "flex-end",
            "paddingBottom": 24,
            "paddingLeft": 24,
            "paddingRight": 24,
            "paddingTop": 24,
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#404040",
              "fontFamily": undefined,
              "fontSize": 36,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 45,
              "marginBottom": 12,
              "textDecorationLine": undefined,
            }
          }
        >
          Forgot Password
        </Text>
        <View
          style={Object {}}
        />
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": undefined,
            }
          }
        >
          Not to worry! Enter email address associated with your account and we’ll send a link to reset your password.
        </Text>
        <View
          style={Object {}}
        />
        <TextInput
          _disabled={
            Object {
              "bg": "muted.100",
              "opacity": "80",
            }
          }
          _invalid={
            Object {
              "borderColor": "danger.600",
            }
          }
          accessible={true}
          allowFontScaling={true}
          editable={true}
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="Email Address"
          placeholderTextColor="#a3a3a3"
          rejectResponderTermination={true}
          secureTextEntry={false}
          selectionColor="#1f2937"
          style={
            Object {
              "backgroundColor": "transparent",
              "borderColor": "#e5e5e5",
              "borderRadius": 4,
              "borderWidth": 1,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "400",
              "marginBottom": 16,
              "marginTop": 40,
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
              "width": undefined,
            }
          }
          underlineColorAndroid="transparent"
        />
        <View
          style={Object {}}
        />
        <View
          _disabled={
            Object {
              "bg": "trueGray.300",
              "opacity": "50",
            }
          }
          _loading={
            Object {
              "bg": "warmGray.50",
              "opacity": "50",
            }
          }
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "marginBottom": 16,
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              style={Object {}}
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#FFFFFF",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Proceed
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Link Composite Link Example 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityRole="link"
      accessible={true}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flexDirection": "row",
          "height": "auto",
          "width": "auto",
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#0e7490",
            "borderRadius": 8,
            "flexShrink": 1,
            "paddingBottom": 20,
            "paddingLeft": 20,
            "paddingRight": 20,
            "paddingTop": 20,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "flex-start",
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#ecfeff",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 18,
                "textDecorationLine": undefined,
              }
            }
          >
            Open Source
          </Text>
          <View
            style={Object {}}
          />
          <View
            style={
              Object {
                "flexGrow": 1,
              }
            }
          />
          <View
            style={Object {}}
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#cffafe",
                "fontFamily": undefined,
                "fontSize": 10,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 15,
                "textDecorationLine": undefined,
              }
            }
          >
            1 month ago
          </Text>
        </View>
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#ecfeff",
              "fontFamily": undefined,
              "fontSize": 18,
              "fontStyle": "normal",
              "fontWeight": "500",
              "letterSpacing": 0,
              "lineHeight": 22.5,
              "marginTop": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          NativeBase
        </Text>
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#FFFFFF",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "marginTop": 4,
              "textDecorationLine": undefined,
            }
          }
        >
          NativeBase is a component library that enables devs to build universal design systems.
        </Text>
        <View
          style={
            Object {
              "display": "flex",
              "flexDirection": "column",
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#22d3ee",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 18,
                "marginTop": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            Read More
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Link Custom Function onPress Link 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#6366f1",
          "height": 100,
          "width": 100,
        }
      }
    />
    <View
      accessibilityRole="link"
      accessible={true}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flexDirection": "row",
          "height": "auto",
          "marginTop": 32,
          "width": "auto",
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#22d3ee",
            "borderRadius": 4,
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#FFFFFF",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "500",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": undefined,
            }
          }
        >
          Change Color
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Link Default Link 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityRole="link"
      accessible={true}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flexDirection": "row",
          "height": "auto",
          "marginTop": 16,
          "width": "auto",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": "underline",
          }
        }
      >
        Click here to open documentation.
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Link External Link 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Text
      style={
        Object {
          "backgroundColor": undefined,
          "color": "#1f2937",
          "fontFamily": undefined,
          "fontSize": 14,
          "fontStyle": "normal",
          "fontWeight": "400",
          "letterSpacing": 0,
          "lineHeight": 21,
          "marginLeft": 64,
          "marginRight": 64,
          "textDecorationLine": undefined,
        }
      }
    >
      NativeBase is a component library that enables devs to build universal design systems. It is built on top of React Native, allowing you to develop apps for Android, iOS and the Web.
       
      <View
        accessibilityRole="link"
        accessible={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "flexDirection": "row",
            "height": "auto",
            "marginTop": -2,
            "width": "auto",
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#60a5fa",
              "fontFamily": undefined,
              "fontSize": undefined,
              "fontStyle": undefined,
              "fontWeight": undefined,
              "textDecorationLine": "underline",
            }
          }
        >
          Read More
        </Text>
      </View>
    </Text>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Link Underline Link 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityRole="link"
      accessible={true}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flexDirection": "row",
          "height": "auto",
          "marginTop": 16,
          "width": "auto",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#06b6d4",
            "fontFamily": undefined,
            "fontSize": 20,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 30,
            "textDecorationLine": "underline",
          }
        }
      >
        Click me to open NativeBase website.
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots List Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "width": "80%",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "textDecorationLine": undefined,
          }
        }
      >
        Topics (Plain List)
      </Text>
      <View
        style={
          Object {
            "borderColor": "#d4d4d8",
            "borderWidth": 1,
            "marginBottom": 8,
            "marginTop": 8,
            "paddingBottom": 8,
            "paddingTop": 8,
          }
        }
      >
        <View
          accessibilityLabel="List-Item-1"
          accessibilityRole="text"
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "borderTopWidth": 0,
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Education
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityLabel="List-Item-2"
          accessibilityRole="text"
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Health
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityLabel="List-Item-3"
          accessibilityRole="text"
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Office
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityLabel="List-Item-4"
          accessibilityRole="text"
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Sports
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots List List with Icon 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "borderColor": "#d4d4d8",
          "borderWidth": 1,
          "marginBottom": 8,
          "marginTop": 8,
          "paddingBottom": 8,
          "paddingTop": 8,
        }
      }
    >
      <View
        accessibilityLabel="List-Item-1"
        accessibilityRole="text"
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#d4d4d8",
            "borderTopWidth": 0,
            "flexDirection": "row",
            "paddingBottom": 8,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "paddingLeft": 8,
            }
          }
        />
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Inbox
          </Text>
        </View>
      </View>
      <View
        style={Object {}}
      />
      <View
        accessibilityLabel="List-Item-2"
        accessibilityRole="text"
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#d4d4d8",
            "flexDirection": "row",
            "paddingBottom": 8,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "paddingLeft": 8,
            }
          }
        />
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
            }
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={32}
            bbWidth={32}
            color={4280690214}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#262626",
                    "height": 32,
                    "width": 32,
                  },
                  Object {
                    "color": "#262626",
                    "fontSize": 32,
                    "height": 32,
                    "lineHeight": 32,
                    "marginRight": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 32,
                  "width": 32,
                },
              ]
            }
            tintColor={4280690214}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              font={
                Object {
                  "fontSize": 32,
                }
              }
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup
                propList={
                  Array [
                    "stroke",
                    "strokeWidth",
                  ]
                }
                stroke={
                  Array [
                    2,
                  ]
                }
                strokeWidth="1.5"
              >
                <RNSVGPath
                  d="M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25"
                  fill={null}
                  propList={
                    Array [
                      "fill",
                      "strokeLinecap",
                    ]
                  }
                  strokeLinecap={1}
                />
                <RNSVGPath
                  d="M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0"
                  fill={null}
                  propList={
                    Array [
                      "fill",
                      "strokeLinecap",
                    ]
                  }
                  strokeLinecap={1}
                />
                <RNSVGCircle
                  cx="12"
                  cy="12"
                  fill={null}
                  propList={
                    Array [
                      "fill",
                      "strokeMiterlimit",
                    ]
                  }
                  r="11.25"
                  strokeMiterlimit={10}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Drafts
          </Text>
        </View>
      </View>
      <View
        style={Object {}}
      />
      <View
        accessibilityLabel="List-Item-3"
        accessibilityRole="text"
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#d4d4d8",
            "flexDirection": "row",
            "paddingBottom": 8,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "paddingLeft": 8,
            }
          }
        />
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
            }
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={32}
            bbWidth={32}
            color={4280690214}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#262626",
                    "height": 32,
                    "width": 32,
                  },
                  Object {
                    "color": "#262626",
                    "fontSize": 32,
                    "height": 32,
                    "lineHeight": 32,
                    "marginRight": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 32,
                  "width": 32,
                },
              ]
            }
            tintColor={4280690214}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              font={
                Object {
                  "fontSize": 32,
                }
              }
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup
                propList={
                  Array [
                    "stroke",
                    "strokeWidth",
                  ]
                }
                stroke={
                  Array [
                    2,
                  ]
                }
                strokeWidth="1.5"
              >
                <RNSVGPath
                  d="M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25"
                  fill={null}
                  propList={
                    Array [
                      "fill",
                      "strokeLinecap",
                    ]
                  }
                  strokeLinecap={1}
                />
                <RNSVGPath
                  d="M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0"
                  fill={null}
                  propList={
                    Array [
                      "fill",
                      "strokeLinecap",
                    ]
                  }
                  strokeLinecap={1}
                />
                <RNSVGCircle
                  cx="12"
                  cy="12"
                  fill={null}
                  propList={
                    Array [
                      "fill",
                      "strokeMiterlimit",
                    ]
                  }
                  r="11.25"
                  strokeMiterlimit={10}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Graphs and stats
          </Text>
        </View>
      </View>
      <View
        style={Object {}}
      />
      <View
        accessibilityLabel="List-Item-4"
        accessibilityRole="text"
        style={
          Object {
            "alignItems": "center",
            "borderColor": "#d4d4d8",
            "flexDirection": "row",
            "paddingBottom": 8,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "paddingLeft": 8,
            }
          }
        />
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
            }
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={32}
            bbWidth={32}
            color={4280690214}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#262626",
                    "height": 32,
                    "width": 32,
                  },
                  Object {
                    "color": "#262626",
                    "fontSize": 32,
                    "height": 32,
                    "lineHeight": 32,
                    "marginRight": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 32,
                  "width": 32,
                },
              ]
            }
            tintColor={4280690214}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              font={
                Object {
                  "fontSize": 32,
                }
              }
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup
                propList={
                  Array [
                    "stroke",
                    "strokeWidth",
                  ]
                }
                stroke={
                  Array [
                    2,
                  ]
                }
                strokeWidth="1.5"
              >
                <RNSVGPath
                  d="M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25"
                  fill={null}
                  propList={
                    Array [
                      "fill",
                      "strokeLinecap",
                    ]
                  }
                  strokeLinecap={1}
                />
                <RNSVGPath
                  d="M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0"
                  fill={null}
                  propList={
                    Array [
                      "fill",
                      "strokeLinecap",
                    ]
                  }
                  strokeLinecap={1}
                />
                <RNSVGCircle
                  cx="12"
                  cy="12"
                  fill={null}
                  propList={
                    Array [
                      "fill",
                      "strokeMiterlimit",
                    ]
                  }
                  r="11.25"
                  strokeMiterlimit={10}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Attachments
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots List OrderedList 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "width": "80%",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "textDecorationLine": undefined,
          }
        }
      >
        Bill-#187 (Ordered List)
      </Text>
      <View
        style={
          Object {
            "borderColor": "#d4d4d8",
            "borderWidth": 1,
            "marginBottom": 8,
            "marginTop": 8,
            "paddingBottom": 8,
            "paddingTop": 8,
          }
        }
      >
        <View
          accessibilityLabel="List-Item-1"
          accessibilityRole="text"
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "borderTopWidth": 0,
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "marginRight": 8,
                }
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                1.
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Fruit Juice x 2
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityLabel="List-Item-2"
          accessibilityRole="text"
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "marginRight": 8,
                }
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                2.
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Cheddar cheese - 200g
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityLabel="List-Item-3"
          accessibilityRole="text"
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "marginRight": 8,
                }
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                3.
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Milk 1L x 2
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityLabel="List-Item-4"
          accessibilityRole="text"
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "marginRight": 8,
                }
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                4.
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Brown Bread - 400g
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots List Pressable List Items 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "width": "80%",
        }
      }
    >
      <Text
        _text={
          Object {
            "color": "darkText",
          }
        }
        style={
          Object {
            "backgroundColor": "#22d3ee",
            "color": "#FFFFFF",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "paddingBottom": 16,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 16,
            "textDecorationLine": undefined,
          }
        }
      >
        Default Theme Color (Pressable List Items)
      </Text>
      <View
        style={
          Object {
            "borderColor": "#d4d4d8",
            "borderWidth": 1,
            "marginBottom": 8,
            "marginTop": 8,
            "paddingBottom": 0,
            "paddingTop": 0,
          }
        }
      >
        <View
          _text={
            Object {
              "color": "darkText",
            }
          }
          accessibilityLabel="List-Item-1"
          accessibilityRole="button"
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#22d3ee",
              "borderColor": "#d4d4d8",
              "borderTopWidth": 0,
              "flexDirection": "row",
              "paddingBottom": 16,
              "paddingTop": 16,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              primary.400
            </Text>
          </View>
        </View>
        <View
          style={Object {}}
        />
        <View
          _text={
            Object {
              "color": "darkText",
            }
          }
          accessibilityLabel="List-Item-2"
          accessibilityRole="button"
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#f472b6",
              "borderColor": "#d4d4d8",
              "flexDirection": "row",
              "paddingBottom": 16,
              "paddingTop": 16,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              secondary.400
            </Text>
          </View>
        </View>
        <View
          style={Object {}}
        />
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityLabel="List-Item-3"
          accessibilityRole="button"
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#34d399",
              "borderColor": "#d4d4d8",
              "flexDirection": "row",
              "paddingBottom": 16,
              "paddingTop": 16,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              emerald.400
            </Text>
          </View>
        </View>
        <View
          style={Object {}}
        />
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityLabel="List-Item-4"
          accessibilityRole="button"
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#60a5fa",
              "borderColor": "#d4d4d8",
              "flexDirection": "row",
              "paddingBottom": 16,
              "paddingTop": 16,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              blue.400
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots List StylingList 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "width": "80%",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "textDecorationLine": undefined,
          }
        }
      >
        Styled List
      </Text>
      <View
        style={
          Object {
            "borderColor": "#d4d4d8",
            "borderWidth": 1,
            "marginBottom": 8,
            "marginTop": 8,
            "paddingBottom": 8,
            "paddingTop": 8,
          }
        }
      >
        <View
          accessibilityLabel="List-Item-11"
          accessibilityRole="text"
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "borderTopWidth": 0,
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "marginRight": 8,
                }
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#d97706",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                11.
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#d97706",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Ocean's 
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityLabel="List-Item-12"
          accessibilityRole="text"
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "marginRight": 8,
                }
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fecaca",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                12.
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#fecaca",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Ocean's 
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityLabel="List-Item-13"
          accessibilityRole="text"
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "marginRight": 8,
                }
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#2dd4bf",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                13.
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#2dd4bf",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Ocean's
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots List UnorderedList 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "width": "80%",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "textDecorationLine": undefined,
          }
        }
      >
        My Todos (Unordered List)
      </Text>
      <View
        style={
          Object {
            "borderColor": "#d4d4d8",
            "borderWidth": 1,
            "marginBottom": 8,
            "marginTop": 8,
            "paddingBottom": 8,
            "paddingTop": 8,
          }
        }
      >
        <View
          accessibilityLabel="List-Item-1"
          accessibilityRole="text"
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "borderTopWidth": 0,
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "marginRight": 8,
                  },
                  Object {
                    "transform": Array [
                      Object {
                        "scale": 1.5,
                      },
                    ],
                  },
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                •
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Get groceries by Tomorrow.
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityLabel="List-Item-2"
          accessibilityRole="text"
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "marginRight": 8,
                  },
                  Object {
                    "transform": Array [
                      Object {
                        "scale": 1.5,
                      },
                    ],
                  },
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                •
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Book appointment with the Doc.
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityLabel="List-Item-3"
          accessibilityRole="text"
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "marginRight": 8,
                  },
                  Object {
                    "transform": Array [
                      Object {
                        "scale": 1.5,
                      },
                    ],
                  },
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                •
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Bill payment - Electricity.
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          accessibilityLabel="List-Item-4"
          accessibilityRole="text"
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "marginRight": 8,
                  },
                  Object {
                    "transform": Array [
                      Object {
                        "scale": 1.5,
                      },
                    ],
                  },
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                •
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Pay Telephone Bill
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots List VirtualizedList  1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RCTScrollView
      data={Array []}
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={4}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      windowSize={21}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessibilityLabel="List-Item-NaN"
            accessibilityRole="text"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#a7f3d0",
                "borderColor": "#d4d4d8",
                "borderRadius": 6,
                "borderTopWidth": 0,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 8,
                "marginTop": 8,
                "paddingBottom": 8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 8,
                }
              }
            />
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#000000",
                    "fontFamily": undefined,
                    "fontSize": 24,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 36,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Item 1
              </Text>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessibilityLabel="List-Item-NaN"
            accessibilityRole="text"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#a7f3d0",
                "borderColor": "#d4d4d8",
                "borderRadius": 6,
                "borderTopWidth": 0,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 8,
                "marginTop": 8,
                "paddingBottom": 8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 8,
                }
              }
            />
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#000000",
                    "fontFamily": undefined,
                    "fontSize": 24,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 36,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Item 2
              </Text>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessibilityLabel="List-Item-NaN"
            accessibilityRole="text"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#a7f3d0",
                "borderColor": "#d4d4d8",
                "borderRadius": 6,
                "borderTopWidth": 0,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 8,
                "marginTop": 8,
                "paddingBottom": 8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 8,
                }
              }
            />
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#000000",
                    "fontFamily": undefined,
                    "fontSize": 24,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 36,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Item 3
              </Text>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessibilityLabel="List-Item-NaN"
            accessibilityRole="text"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#a7f3d0",
                "borderColor": "#d4d4d8",
                "borderRadius": 6,
                "borderTopWidth": 0,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 8,
                "marginTop": 8,
                "paddingBottom": 8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 8,
                }
              }
            />
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#000000",
                    "fontFamily": undefined,
                    "fontSize": 24,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 36,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Item 4
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 0,
            }
          }
        />
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Menu Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "height": "80%",
          "width": "90%",
        }
      }
    >
      <View
        accessibilityLabel="More options menu"
        accessible={true}
        aria-haspopup="menu"
        focusable={true}
        nativeID="react-aria-0-2"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onKeyDownCapture={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <RNSVGSvgView
          accessibilityRole="image"
          align="xMidYMid"
          bbHeight={32}
          bbWidth={32}
          color={4280690214}
          focusable={false}
          meetOrSlice={0}
          minX={0}
          minY={0}
          stroke=""
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
              Object {
                "flex": 0,
                "height": 32,
                "width": 32,
              },
            ]
          }
          tintColor={4280690214}
          vbHeight={24}
          vbWidth={24}
        >
          <RNSVGGroup
            propList={
              Array [
                "stroke",
              ]
            }
            stroke={null}
          >
            <RNSVGGroup>
              <RNSVGPath
                d="M 3 5 A 1.0001 1.0001 0 1 0 3 7 L 21 7 A 1.0001 1.0001 0 1 0 21 5 L 3 5 z M 3 11 A 1.0001 1.0001 0 1 0 3 13 L 21 13 A 1.0001 1.0001 0 1 0 21 11 L 3 11 z M 3 17 A 1.0001 1.0001 0 1 0 3 19 L 21 19 A 1.0001 1.0001 0 1 0 21 17 L 3 17 z"
                fill={
                  Array [
                    2,
                  ]
                }
                propList={
                  Array [
                    "fill",
                    "stroke",
                  ]
                }
                stroke={null}
              />
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Menu Group 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "height": "80%",
          "width": "90%",
        }
      }
    >
      <View
        accessible={true}
        aria-haspopup="menu"
        focusable={true}
        nativeID="react-aria-0-2"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onKeyDownCapture={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <RNSVGSvgView
          accessibilityRole="image"
          align="xMidYMid"
          bbHeight={32}
          bbWidth={32}
          color={4280690214}
          focusable={false}
          meetOrSlice={0}
          minX={0}
          minY={0}
          stroke=""
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
              Object {
                "flex": 0,
                "height": 32,
                "width": 32,
              },
            ]
          }
          tintColor={4280690214}
          vbHeight={24}
          vbWidth={24}
        >
          <RNSVGGroup
            propList={
              Array [
                "stroke",
              ]
            }
            stroke={null}
          >
            <RNSVGGroup>
              <RNSVGPath
                d="M 3 5 A 1.0001 1.0001 0 1 0 3 7 L 21 7 A 1.0001 1.0001 0 1 0 21 5 L 3 5 z M 3 11 A 1.0001 1.0001 0 1 0 3 13 L 21 13 A 1.0001 1.0001 0 1 0 21 11 L 3 11 z M 3 17 A 1.0001 1.0001 0 1 0 3 19 L 21 19 A 1.0001 1.0001 0 1 0 21 17 L 3 17 z"
                fill={
                  Array [
                    2,
                  ]
                }
                propList={
                  Array [
                    "fill",
                    "stroke",
                  ]
                }
                stroke={null}
              />
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Menu Menu positions 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignSelf": "flex-start",
          "width": "100%",
        }
      }
    >
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        aria-haspopup="menu"
        colorScheme="primary"
        focusable={true}
        nativeID="react-aria-0-2"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onKeyDownCapture={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Menu
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 24,
          }
        }
      />
      <View
        style={
          Object {
            "borderColor": "transparent",
            "borderRadius": 4,
            "borderWidth": 1,
            "marginLeft": 0,
            "marginRight": 0,
          }
        }
      >
        <View
          accessibilityLabel="Select a position for Menu"
          accessibilityRole="button"
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View
            pointerEvents="none"
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "borderColor": "#e5e5e5",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <TextInput
                _disabled={
                  Object {
                    "bg": "muted.100",
                    "opacity": "80",
                  }
                }
                _invalid={
                  Object {
                    "borderColor": "danger.600",
                  }
                }
                _selectedItem={
                  Object {
                    "bg": "cyan.600",
                    "endIcon": <Memo
                      size={4}
                    />,
                  }
                }
                _text={
                  Object {
                    "color": "lightText",
                  }
                }
                accessibilityLabel="Select a position for Menu"
                accessible={true}
                allowFontScaling={true}
                aria-hidden={true}
                editable={false}
                focusable={false}
                importantForAccessibility="no"
                onBlur={[Function]}
                onFocus={[Function]}
                onKeyPress={[Function]}
                onValueChange={[Function]}
                placeholderTextColor="#a3a3a3"
                rejectResponderTermination={true}
                secureTextEntry={false}
                selectedValue="auto"
                selectionColor="#1f2937"
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "borderColor": "#e5e5e5",
                    "borderRadius": 4,
                    "borderWidth": 0,
                    "color": "#1f2937",
                    "flex": 1,
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "paddingBottom": 8,
                    "paddingLeft": 8,
                    "paddingRight": 8,
                    "paddingTop": 8,
                    "width": undefined,
                  }
                }
                underlineColorAndroid="transparent"
                value="auto"
              />
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                color={4288914339}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#a3a3a3",
                      "height": 24,
                      "paddingBottom": 4,
                      "paddingLeft": 0,
                      "paddingRight": 4,
                      "paddingTop": 4,
                      "width": 24,
                    },
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                tintColor={4288914339}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGGroup
                      fill={
                        Array [
                          2,
                        ]
                      }
                      matrix={
                        Array [
                          6.123233995736766e-17,
                          1,
                          -1,
                          6.123233995736766e-17,
                          24,
                          0,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGPath
                        d="M0,0H24V24H0Z"
                        fill={null}
                        propList={
                          Array [
                            "fill",
                          ]
                        }
                      />
                      <RNSVGPath
                        d="M10,6,8.59,7.41,13.17,12,8.59,16.59,10,18l6-6Z"
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Menu MenuOptionsGroup 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "height": "80%",
          "width": "90%",
        }
      }
    >
      <View
        accessible={true}
        aria-haspopup="menu"
        focusable={true}
        nativeID="react-aria-0-2"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onKeyDownCapture={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={Object {}}
      >
        <RNSVGSvgView
          accessibilityRole="image"
          align="xMidYMid"
          bbHeight={32}
          bbWidth={32}
          color={4280690214}
          focusable={false}
          meetOrSlice={0}
          minX={0}
          minY={0}
          stroke=""
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
              Object {
                "flex": 0,
                "height": 32,
                "width": 32,
              },
            ]
          }
          tintColor={4280690214}
          vbHeight={24}
          vbWidth={24}
        >
          <RNSVGGroup
            propList={
              Array [
                "stroke",
              ]
            }
            stroke={null}
          >
            <RNSVGGroup>
              <RNSVGPath
                d="M 3 5 A 1.0001 1.0001 0 1 0 3 7 L 21 7 A 1.0001 1.0001 0 1 0 21 5 L 3 5 z M 3 11 A 1.0001 1.0001 0 1 0 3 13 L 21 13 A 1.0001 1.0001 0 1 0 21 11 L 3 11 z M 3 17 A 1.0001 1.0001 0 1 0 3 19 L 21 19 A 1.0001 1.0001 0 1 0 21 17 L 3 17 z"
                fill={
                  Array [
                    2,
                  ]
                }
                propList={
                  Array [
                    "fill",
                    "stroke",
                  ]
                }
                stroke={null}
              />
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Modal Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#06b6d4",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Button
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Modal Modal Custom Backdrop 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#06b6d4",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Button
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Modal Modal Placement 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "flexDirection": "column",
        }
      }
    >
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Top
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Bottom
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Center
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Left
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Right
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Modal Modal Ref Examples 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#06b6d4",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Open Modal
          </Text>
        </View>
      </View>
    </View>
    <TextInput
      _disabled={
        Object {
          "bg": "muted.100",
          "opacity": "80",
        }
      }
      _invalid={
        Object {
          "borderColor": "danger.600",
        }
      }
      accessible={true}
      allowFontScaling={true}
      editable={true}
      onBlur={[Function]}
      onFocus={[Function]}
      onKeyPress={[Function]}
      placeholder="Enter the OTP"
      placeholderTextColor="#334155"
      rejectResponderTermination={true}
      secureTextEntry={false}
      selectionColor="#1f2937"
      style={
        Object {
          "backgroundColor": "transparent",
          "borderColor": "#e5e5e5",
          "borderRadius": 4,
          "borderWidth": 1,
          "color": "#1f2937",
          "fontFamily": undefined,
          "fontSize": 12,
          "fontStyle": "normal",
          "fontWeight": "400",
          "marginTop": 16,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "width": "70%",
        }
      }
      underlineColorAndroid="transparent"
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Modal Modal Size Examples 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginBottom": 40,
            "textDecorationLine": undefined,
          }
        }
      >
        Sizes
      </Text>
      <View
        style={Object {}}
      >
        <View
          _disabled={
            Object {
              "bg": "trueGray.300",
              "opacity": "50",
            }
          }
          _loading={
            Object {
              "bg": "warmGray.50",
              "opacity": "50",
            }
          }
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              style={Object {}}
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#FFFFFF",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Open xs Modal
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          _disabled={
            Object {
              "bg": "trueGray.300",
              "opacity": "50",
            }
          }
          _loading={
            Object {
              "bg": "warmGray.50",
              "opacity": "50",
            }
          }
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              style={Object {}}
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#FFFFFF",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Open sm Modal
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          _disabled={
            Object {
              "bg": "trueGray.300",
              "opacity": "50",
            }
          }
          _loading={
            Object {
              "bg": "warmGray.50",
              "opacity": "50",
            }
          }
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              style={Object {}}
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#FFFFFF",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Open md Modal
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          _disabled={
            Object {
              "bg": "trueGray.300",
              "opacity": "50",
            }
          }
          _loading={
            Object {
              "bg": "warmGray.50",
              "opacity": "50",
            }
          }
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              style={Object {}}
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#FFFFFF",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Open lg Modal
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          _disabled={
            Object {
              "bg": "trueGray.300",
              "opacity": "50",
            }
          }
          _loading={
            Object {
              "bg": "warmGray.50",
              "opacity": "50",
            }
          }
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              style={Object {}}
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#FFFFFF",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Open xl Modal
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          _disabled={
            Object {
              "bg": "trueGray.300",
              "opacity": "50",
            }
          }
          _loading={
            Object {
              "bg": "warmGray.50",
              "opacity": "50",
            }
          }
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              style={Object {}}
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#FFFFFF",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Open full Modal
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Modal Modal with Keyboard Avoid view 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
            "width": 104,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Open Modal
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 32,
          }
        }
      />
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textAlign": "center",
            "textDecorationLine": undefined,
          }
        }
      >
        Open modal and focus on the input element to see the effect.
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Modal Multiple modal 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#06b6d4",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Button
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Mode Basic 1`] = `
<View
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  />
</View>
`;

exports[`Storyshots Mode DefaultMode 1`] = `
<View
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  />
</View>
`;

exports[`Storyshots Mode Persistence 1`] = `
<View
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  />
</View>
`;

exports[`Storyshots Popover Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "height": "60%",
          "width": "100%",
        }
      }
    >
      <View
        style={Object {}}
      >
        <View
          _disabled={
            Object {
              "bg": "trueGray.300",
              "opacity": "50",
            }
          }
          _loading={
            Object {
              "bg": "warmGray.50",
              "opacity": "50",
            }
          }
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          aria-expanded={false}
          aria-haspopup={true}
          colorScheme="danger"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#ef4444",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              style={Object {}}
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#FFFFFF",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Delete Customer
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Popover Focus on Open 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "height": "60%",
          "width": "100%",
        }
      }
    >
      <View
        style={Object {}}
      >
        <View
          _disabled={
            Object {
              "bg": "trueGray.300",
              "opacity": "50",
            }
          }
          _loading={
            Object {
              "bg": "warmGray.50",
              "opacity": "50",
            }
          }
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          aria-expanded={false}
          aria-haspopup={true}
          colorScheme="primary"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              style={Object {}}
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#FFFFFF",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Edit Info
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Popover Popover positions 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "height": "60%",
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "alignSelf": "flex-start",
            "width": "100%",
          }
        }
      >
        <View
          style={Object {}}
        >
          <View
            _disabled={
              Object {
                "bg": "trueGray.300",
                "opacity": "50",
              }
            }
            _loading={
              Object {
                "bg": "warmGray.50",
                "opacity": "50",
              }
            }
            _text={
              Object {
                "color": "lightText",
              }
            }
            accessibilityRole="button"
            accessible={true}
            aria-expanded={false}
            aria-haspopup={true}
            colorScheme="danger"
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "center",
                "backgroundColor": "#ef4444",
                "borderRadius": 4,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 8,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={Object {}}
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#FFFFFF",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "500",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Delete Customer
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 24,
            }
          }
        />
        <View
          style={
            Object {
              "borderColor": "transparent",
              "borderRadius": 4,
              "borderWidth": 1,
              "marginLeft": 0,
              "marginRight": 0,
            }
          }
        >
          <View
            accessibilityLabel="Select a position for Popover"
            accessibilityRole="button"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <View
              pointerEvents="none"
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "borderColor": "#e5e5e5",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                  }
                }
              >
                <TextInput
                  _disabled={
                    Object {
                      "bg": "muted.100",
                      "opacity": "80",
                    }
                  }
                  _invalid={
                    Object {
                      "borderColor": "danger.600",
                    }
                  }
                  _selectedItem={
                    Object {
                      "bg": "cyan.600",
                      "endIcon": <Memo
                        size={4}
                      />,
                    }
                  }
                  _text={
                    Object {
                      "color": "lightText",
                    }
                  }
                  accessibilityLabel="Select a position for Popover"
                  accessible={true}
                  allowFontScaling={true}
                  aria-hidden={true}
                  editable={false}
                  focusable={false}
                  importantForAccessibility="no"
                  onBlur={[Function]}
                  onFocus={[Function]}
                  onKeyPress={[Function]}
                  onValueChange={[Function]}
                  placeholderTextColor="#a3a3a3"
                  rejectResponderTermination={true}
                  secureTextEntry={false}
                  selectedValue="auto"
                  selectionColor="#1f2937"
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "borderColor": "#e5e5e5",
                      "borderRadius": 4,
                      "borderWidth": 0,
                      "color": "#1f2937",
                      "flex": 1,
                      "fontFamily": undefined,
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "paddingBottom": 8,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                      "paddingTop": 8,
                      "width": undefined,
                    }
                  }
                  underlineColorAndroid="transparent"
                  value="auto"
                />
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={24}
                  bbWidth={24}
                  color={4288914339}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#a3a3a3",
                        "height": 24,
                        "paddingBottom": 4,
                        "paddingLeft": 0,
                        "paddingRight": 4,
                        "paddingTop": 4,
                        "width": 24,
                      },
                      Object {
                        "flex": 0,
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                  tintColor={4288914339}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGGroup
                        fill={
                          Array [
                            2,
                          ]
                        }
                        matrix={
                          Array [
                            6.123233995736766e-17,
                            1,
                            -1,
                            6.123233995736766e-17,
                            24,
                            0,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGPath
                          d="M0,0H24V24H0Z"
                          fill={null}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                        />
                        <RNSVGPath
                          d="M10,6,8.59,7.41,13.17,12,8.59,16.59,10,18l6-6Z"
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Pressable Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessible={true}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={Object {}}
    >
      <View
        style={
          Object {
            "backgroundColor": "#0e7490",
            "borderRadius": 8,
            "paddingBottom": 20,
            "paddingLeft": 20,
            "paddingRight": 20,
            "paddingTop": 20,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "flex-start",
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#ecfeff",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 18,
                "textDecorationLine": undefined,
              }
            }
          >
            Business
          </Text>
          <View
            style={Object {}}
          />
          <View
            style={
              Object {
                "flexGrow": 1,
              }
            }
          />
          <View
            style={Object {}}
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#cffafe",
                "fontFamily": undefined,
                "fontSize": 10,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 15,
                "textDecorationLine": undefined,
              }
            }
          >
            1 month ago
          </Text>
        </View>
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#ecfeff",
              "fontFamily": undefined,
              "fontSize": 20,
              "fontStyle": "normal",
              "fontWeight": "500",
              "letterSpacing": 0,
              "lineHeight": 30,
              "marginTop": 12,
              "textDecorationLine": undefined,
            }
          }
        >
          Marketing License
        </Text>
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#cffafe",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "marginTop": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          Unlock powerfull time-saving tools for creating email delivery and collecting marketing data
        </Text>
        <View
          style={
            Object {
              "display": "flex",
              "flexDirection": "column",
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#22d3ee",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 18,
                "marginTop": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            Read More
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Pressable Events 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessible={true}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={Object {}}
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#0e7490",
              "borderRadius": 8,
              "paddingBottom": 20,
              "paddingLeft": 20,
              "paddingRight": 20,
              "paddingTop": 20,
            },
            Object {
              "transform": Array [
                Object {
                  "scale": 1,
                },
              ],
            },
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "flex-start",
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#ecfeff",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 18,
                "textDecorationLine": undefined,
              }
            }
          >
            Business
          </Text>
          <View
            style={Object {}}
          />
          <View
            style={
              Object {
                "flexGrow": 1,
              }
            }
          />
          <View
            style={Object {}}
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#cffafe",
                "fontFamily": undefined,
                "fontSize": 10,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 15,
                "textDecorationLine": undefined,
              }
            }
          >
            1 month ago
          </Text>
        </View>
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#ecfeff",
              "fontFamily": undefined,
              "fontSize": 20,
              "fontStyle": "normal",
              "fontWeight": "500",
              "letterSpacing": 0,
              "lineHeight": 30,
              "marginTop": 12,
              "textDecorationLine": undefined,
            }
          }
        >
          Marketing License
        </Text>
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#cffafe",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "marginTop": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          Unlock powerfull time-saving tools for creating email delivery and collecting marketing data
        </Text>
        <View
          style={
            Object {
              "display": "flex",
              "flexDirection": "column",
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#22d3ee",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 18,
                "marginTop": 8,
                "textDecorationLine": undefined,
              }
            }
          >
            Read More
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Progress ColorSchemes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "width": "90%",
        }
      }
    >
      <View
        style={Object {}}
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#404040",
              "fontFamily": undefined,
              "fontSize": 20,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 25,
              "marginBottom": 40,
              "textAlign": "center",
              "textDecorationLine": undefined,
            }
          }
        >
          Progress Color Scheme
        </Text>
        <View
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          style={
            Object {
              "marginLeft": 16,
              "marginRight": 16,
            }
          }
        >
          <View
            accessibilityRole="progressbar"
            accessibilityValue={
              Object {
                "max": 100,
                "min": 0,
                "now": 35,
              }
            }
            accessible={true}
            colorScheme="primary"
            isIndeterminate={false}
            style={
              Object {
                "backgroundColor": "#a5f3fc",
                "borderRadius": 9999,
                "height": 8,
                "overflow": "hidden",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0891b2",
                  "display": "flex",
                  "elevation": 1,
                  "height": "100%",
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": 0,
                  },
                  "shadowOpacity": 0.18,
                  "shadowRadius": 1,
                  "width": "35%",
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            accessibilityRole="progressbar"
            accessibilityValue={
              Object {
                "max": 100,
                "min": 0,
                "now": 45,
              }
            }
            accessible={true}
            colorScheme="secondary"
            isIndeterminate={false}
            style={
              Object {
                "backgroundColor": "#fbcfe8",
                "borderRadius": 9999,
                "height": 8,
                "overflow": "hidden",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#db2777",
                  "display": "flex",
                  "elevation": 1,
                  "height": "100%",
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": 0,
                  },
                  "shadowOpacity": 0.18,
                  "shadowRadius": 1,
                  "width": "45%",
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            accessibilityRole="progressbar"
            accessibilityValue={
              Object {
                "max": 100,
                "min": 0,
                "now": 55.00000000000001,
              }
            }
            accessible={true}
            colorScheme="emerald"
            isIndeterminate={false}
            style={
              Object {
                "backgroundColor": "#a7f3d0",
                "borderRadius": 9999,
                "height": 8,
                "overflow": "hidden",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#059669",
                  "display": "flex",
                  "elevation": 1,
                  "height": "100%",
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": 0,
                  },
                  "shadowOpacity": 0.18,
                  "shadowRadius": 1,
                  "width": "55.00000000000001%",
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            accessibilityRole="progressbar"
            accessibilityValue={
              Object {
                "max": 100,
                "min": 0,
                "now": 65,
              }
            }
            accessible={true}
            colorScheme="warning"
            isIndeterminate={false}
            style={
              Object {
                "backgroundColor": "#fed7aa",
                "borderRadius": 9999,
                "height": 8,
                "overflow": "hidden",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ea580c",
                  "display": "flex",
                  "elevation": 1,
                  "height": "100%",
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": 0,
                  },
                  "shadowOpacity": 0.18,
                  "shadowRadius": 1,
                  "width": "65%",
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            accessibilityRole="progressbar"
            accessibilityValue={
              Object {
                "max": 100,
                "min": 0,
                "now": 75,
              }
            }
            accessible={true}
            colorScheme="light"
            isIndeterminate={false}
            style={
              Object {
                "backgroundColor": "#e7e5e4",
                "borderRadius": 9999,
                "height": 8,
                "overflow": "hidden",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#57534e",
                  "display": "flex",
                  "elevation": 1,
                  "height": "100%",
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": 0,
                  },
                  "shadowOpacity": 0.18,
                  "shadowRadius": 1,
                  "width": "75%",
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Progress Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "width": "90%",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "center",
            "marginBottom": 40,
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#404040",
              "fontFamily": undefined,
              "fontSize": 20,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 25,
              "textDecorationLine": undefined,
            }
          }
        >
          Progress Composition
        </Text>
      </View>
      <View
        accessibilityRole="progressbar"
        accessibilityValue={
          Object {
            "max": 100,
            "min": 0,
            "now": 45,
          }
        }
        accessible={true}
        colorScheme="primary"
        isIndeterminate={false}
        style={
          Object {
            "backgroundColor": "#a5f3fc",
            "borderRadius": 9999,
            "height": 20,
            "marginBottom": 16,
            "overflow": "hidden",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#0891b2",
              "display": "flex",
              "elevation": 1,
              "height": "100%",
              "justifyContent": "center",
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.18,
              "shadowRadius": 1,
              "width": "45%",
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            45%
          </Text>
        </View>
      </View>
      <View
        direction="row"
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
          }
        }
      >
        <View
          accessibilityRole="progressbar"
          accessibilityValue={
            Object {
              "max": 100,
              "min": 0,
              "now": 75,
            }
          }
          accessible={true}
          colorScheme="primary"
          isIndeterminate={false}
          style={
            Object {
              "backgroundColor": "#a5f3fc",
              "borderRadius": 9999,
              "flex": 1,
              "height": 20,
              "marginBottom": 16,
              "overflow": "hidden",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#0891b2",
                "display": "flex",
                "elevation": 1,
                "height": "100%",
                "justifyContent": "center",
                "shadowColor": "#000000",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.18,
                "shadowRadius": 1,
                "width": "75%",
              }
            }
          />
        </View>
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 21,
              "marginLeft": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          75%
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Progress CustomBgColor 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "width": "90%",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "center",
            "marginBottom": 40,
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#404040",
              "fontFamily": undefined,
              "fontSize": 20,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 25,
              "textDecorationLine": undefined,
            }
          }
        >
          Custom Track Color
        </Text>
      </View>
      <View
        accessibilityRole="progressbar"
        accessibilityValue={
          Object {
            "max": 100,
            "min": 0,
            "now": 75,
          }
        }
        accessible={true}
        colorScheme="primary"
        isIndeterminate={false}
        style={
          Object {
            "backgroundColor": "#a5f3fc",
            "borderRadius": 9999,
            "height": 8,
            "marginBottom": 16,
            "marginLeft": 16,
            "marginRight": 16,
            "overflow": "hidden",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#0891b2",
              "display": "flex",
              "elevation": 1,
              "height": "100%",
              "justifyContent": "center",
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.18,
              "shadowRadius": 1,
              "width": "75%",
            }
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Progress Default Progress Bar 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "width": "90%",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "center",
            "marginBottom": 40,
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#404040",
              "fontFamily": undefined,
              "fontSize": 20,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 25,
              "textDecorationLine": undefined,
            }
          }
        >
           Simple Progress Bar
        </Text>
      </View>
      <View
        accessibilityRole="progressbar"
        accessibilityValue={
          Object {
            "max": 100,
            "min": 0,
            "now": 45,
          }
        }
        accessible={true}
        colorScheme="primary"
        isIndeterminate={false}
        style={
          Object {
            "backgroundColor": "#a5f3fc",
            "borderRadius": 9999,
            "height": 8,
            "marginLeft": 16,
            "marginRight": 16,
            "overflow": "hidden",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#0891b2",
              "display": "flex",
              "elevation": 1,
              "height": "100%",
              "justifyContent": "center",
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.18,
              "shadowRadius": 1,
              "width": "45%",
            }
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Progress Flat 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "width": "90%",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "center",
            "marginBottom": 40,
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#404040",
              "fontFamily": undefined,
              "fontSize": 20,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 25,
              "textDecorationLine": undefined,
            }
          }
        >
          Flat Progress
        </Text>
      </View>
      <View
        accessibilityRole="progressbar"
        accessibilityValue={
          Object {
            "max": 100,
            "min": 0,
            "now": 65,
          }
        }
        accessible={true}
        colorScheme="primary"
        isIndeterminate={false}
        style={
          Object {
            "backgroundColor": "#a5f3fc",
            "borderRadius": 0,
            "height": 8,
            "marginLeft": 16,
            "marginRight": 16,
            "overflow": "hidden",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#0891b2",
              "display": "flex",
              "elevation": 1,
              "height": "100%",
              "justifyContent": "center",
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.18,
              "shadowRadius": 1,
              "width": "65%",
            }
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Progress Sizes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "width": "90%",
        }
      }
    >
      <View
        style={Object {}}
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#404040",
              "fontFamily": undefined,
              "fontSize": 20,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 25,
              "marginBottom": 40,
              "textAlign": "center",
              "textDecorationLine": undefined,
            }
          }
        >
          Progress Sizes
        </Text>
        <View
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          style={
            Object {
              "marginLeft": 16,
              "marginRight": 16,
            }
          }
        >
          <View
            accessibilityRole="progressbar"
            accessibilityValue={
              Object {
                "max": 100,
                "min": 0,
                "now": 25,
              }
            }
            accessible={true}
            colorScheme="primary"
            isIndeterminate={false}
            style={
              Object {
                "backgroundColor": "#a5f3fc",
                "borderRadius": 9999,
                "height": 4,
                "marginBottom": 16,
                "overflow": "hidden",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0891b2",
                  "display": "flex",
                  "elevation": 1,
                  "height": "100%",
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": 0,
                  },
                  "shadowOpacity": 0.18,
                  "shadowRadius": 1,
                  "width": "25%",
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            accessibilityRole="progressbar"
            accessibilityValue={
              Object {
                "max": 100,
                "min": 0,
                "now": 35,
              }
            }
            accessible={true}
            colorScheme="primary"
            isIndeterminate={false}
            style={
              Object {
                "backgroundColor": "#a5f3fc",
                "borderRadius": 9999,
                "height": 8,
                "marginBottom": 16,
                "overflow": "hidden",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0891b2",
                  "display": "flex",
                  "elevation": 1,
                  "height": "100%",
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": 0,
                  },
                  "shadowOpacity": 0.18,
                  "shadowRadius": 1,
                  "width": "35%",
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            accessibilityRole="progressbar"
            accessibilityValue={
              Object {
                "max": 100,
                "min": 0,
                "now": 45,
              }
            }
            accessible={true}
            colorScheme="primary"
            isIndeterminate={false}
            style={
              Object {
                "backgroundColor": "#a5f3fc",
                "borderRadius": 9999,
                "height": 12,
                "marginBottom": 16,
                "overflow": "hidden",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0891b2",
                  "display": "flex",
                  "elevation": 1,
                  "height": "100%",
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": 0,
                  },
                  "shadowOpacity": 0.18,
                  "shadowRadius": 1,
                  "width": "45%",
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            accessibilityRole="progressbar"
            accessibilityValue={
              Object {
                "max": 100,
                "min": 0,
                "now": 55.00000000000001,
              }
            }
            accessible={true}
            colorScheme="primary"
            isIndeterminate={false}
            style={
              Object {
                "backgroundColor": "#a5f3fc",
                "borderRadius": 9999,
                "height": 16,
                "marginBottom": 16,
                "overflow": "hidden",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0891b2",
                  "display": "flex",
                  "elevation": 1,
                  "height": "100%",
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": 0,
                  },
                  "shadowOpacity": 0.18,
                  "shadowRadius": 1,
                  "width": "55.00000000000001%",
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            accessibilityRole="progressbar"
            accessibilityValue={
              Object {
                "max": 100,
                "min": 0,
                "now": 65,
              }
            }
            accessible={true}
            colorScheme="primary"
            isIndeterminate={false}
            style={
              Object {
                "backgroundColor": "#a5f3fc",
                "borderRadius": 9999,
                "height": 20,
                "marginBottom": 16,
                "overflow": "hidden",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0891b2",
                  "display": "flex",
                  "elevation": 1,
                  "height": "100%",
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": 0,
                  },
                  "shadowOpacity": 0.18,
                  "shadowRadius": 1,
                  "width": "65%",
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            accessibilityRole="progressbar"
            accessibilityValue={
              Object {
                "max": 100,
                "min": 0,
                "now": 75,
              }
            }
            accessible={true}
            colorScheme="primary"
            isIndeterminate={false}
            style={
              Object {
                "backgroundColor": "#a5f3fc",
                "borderRadius": 9999,
                "height": 24,
                "marginBottom": 16,
                "overflow": "hidden",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0891b2",
                  "display": "flex",
                  "elevation": 1,
                  "height": "100%",
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": 0,
                  },
                  "shadowOpacity": 0.18,
                  "shadowRadius": 1,
                  "width": "75%",
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Radio Controlled Radio 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <View
        accessibilityLabel="favorite number"
        accessibilityRole="radiogroup"
        accessibilityState={
          Object {
            "disabled": undefined,
          }
        }
        name="myRadioGroup"
        onChange={[Function]}
        style={
          Object {
            "alignItems": "flex-start",
          }
        }
        value="one"
      >
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": true,
              "disabled": false,
            }
          }
          accessible={true}
          checked={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          state={
            Object {
              "lastFocusedValue": null,
              "name": "myRadioGroup",
              "selectedValue": "one",
              "setLastFocusedValue": [Function],
              "setSelectedValue": [Function],
            }
          }
          style={
            Object {
              "marginBottom": 4,
              "marginTop": 4,
            }
          }
          value="one"
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  Object {
                    "borderColor": "#0891b2",
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  }
                }
              />
              <View
                _focusVisible={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(165, 243, 252, 0.5)",
                    },
                  }
                }
                _invalid={
                  Object {
                    "borderColor": "error.600",
                  }
                }
                colorScheme="primary"
                defaultIsChecked={false}
                state={
                  Object {
                    "lastFocusedValue": null,
                    "name": "myRadioGroup",
                    "selectedValue": "one",
                    "setLastFocusedValue": [Function],
                    "setSelectedValue": [Function],
                  }
                }
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#fafafa",
                    "borderColor": "#0891b2",
                    "borderRadius": 9999,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "paddingBottom": 2,
                    "paddingLeft": 2,
                    "paddingRight": 2,
                    "paddingTop": 2,
                  }
                }
                value="one"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4278751666}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#0891b2",
                        "height": 12,
                        "opacity": 1,
                        "width": 12,
                      },
                      Object {
                        "flex": 0,
                        "height": 12,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4278751666}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={1}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              One
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": false,
            }
          }
          accessible={true}
          checked={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          state={
            Object {
              "lastFocusedValue": null,
              "name": "myRadioGroup",
              "selectedValue": "one",
              "setLastFocusedValue": [Function],
              "setSelectedValue": [Function],
            }
          }
          style={
            Object {
              "marginBottom": 4,
              "marginTop": 4,
            }
          }
          value="two"
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  }
                }
              />
              <View
                _focusVisible={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(165, 243, 252, 0.5)",
                    },
                  }
                }
                _invalid={
                  Object {
                    "borderColor": "error.600",
                  }
                }
                colorScheme="primary"
                defaultIsChecked={false}
                state={
                  Object {
                    "lastFocusedValue": null,
                    "name": "myRadioGroup",
                    "selectedValue": "one",
                    "setLastFocusedValue": [Function],
                    "setSelectedValue": [Function],
                  }
                }
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#fafafa",
                    "borderColor": "#d4d4d4",
                    "borderRadius": 9999,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "paddingBottom": 2,
                    "paddingLeft": 2,
                    "paddingRight": 2,
                    "paddingTop": 2,
                  }
                }
                value="two"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4278751666}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#0891b2",
                        "height": 12,
                        "opacity": 0,
                        "width": 12,
                      },
                      Object {
                        "flex": 0,
                        "height": 12,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4278751666}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              Two
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Radio Custom Color 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <View
        accessibilityLabel="favorite colorscheme"
        accessibilityRole="radiogroup"
        accessibilityState={
          Object {
            "disabled": undefined,
          }
        }
        defaultValue="1"
        name="exampleGroup"
        style={
          Object {
            "alignItems": "flex-start",
          }
        }
      >
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": true,
              "disabled": false,
            }
          }
          accessible={true}
          checked={true}
          colorScheme="emerald"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          state={
            Object {
              "lastFocusedValue": null,
              "name": "exampleGroup",
              "selectedValue": "1",
              "setLastFocusedValue": [Function],
              "setSelectedValue": [Function],
            }
          }
          style={
            Object {
              "marginBottom": 4,
              "marginTop": 4,
            }
          }
          value="1"
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  Object {
                    "borderColor": "#059669",
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  }
                }
              />
              <View
                _focusVisible={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(167, 243, 208, 0.5)",
                    },
                  }
                }
                _invalid={
                  Object {
                    "borderColor": "error.600",
                  }
                }
                colorScheme="emerald"
                defaultIsChecked={false}
                state={
                  Object {
                    "lastFocusedValue": null,
                    "name": "exampleGroup",
                    "selectedValue": "1",
                    "setLastFocusedValue": [Function],
                    "setSelectedValue": [Function],
                  }
                }
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#fafafa",
                    "borderColor": "#059669",
                    "borderRadius": 9999,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "paddingBottom": 2,
                    "paddingLeft": 2,
                    "paddingRight": 2,
                    "paddingTop": 2,
                  }
                }
                value="1"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4278556265}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#059669",
                        "height": 12,
                        "opacity": 1,
                        "width": 12,
                      },
                      Object {
                        "flex": 0,
                        "height": 12,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4278556265}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={1}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              emerald
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": false,
            }
          }
          accessible={true}
          checked={false}
          colorScheme="secondary"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          state={
            Object {
              "lastFocusedValue": null,
              "name": "exampleGroup",
              "selectedValue": "1",
              "setLastFocusedValue": [Function],
              "setSelectedValue": [Function],
            }
          }
          style={
            Object {
              "marginBottom": 4,
              "marginTop": 4,
            }
          }
          value="2"
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  }
                }
              />
              <View
                _focusVisible={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(251, 207, 232, 0.5)",
                    },
                  }
                }
                _invalid={
                  Object {
                    "borderColor": "error.600",
                  }
                }
                colorScheme="secondary"
                defaultIsChecked={false}
                state={
                  Object {
                    "lastFocusedValue": null,
                    "name": "exampleGroup",
                    "selectedValue": "1",
                    "setLastFocusedValue": [Function],
                    "setSelectedValue": [Function],
                  }
                }
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#fafafa",
                    "borderColor": "#d4d4d4",
                    "borderRadius": 9999,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "paddingBottom": 2,
                    "paddingLeft": 2,
                    "paddingRight": 2,
                    "paddingTop": 2,
                  }
                }
                value="2"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4292552567}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#db2777",
                        "height": 12,
                        "opacity": 0,
                        "width": 12,
                      },
                      Object {
                        "flex": 0,
                        "height": 12,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4292552567}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              secondary
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": false,
            }
          }
          accessible={true}
          checked={false}
          colorScheme="warning"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          state={
            Object {
              "lastFocusedValue": null,
              "name": "exampleGroup",
              "selectedValue": "1",
              "setLastFocusedValue": [Function],
              "setSelectedValue": [Function],
            }
          }
          style={
            Object {
              "marginBottom": 4,
              "marginTop": 4,
            }
          }
          value="3"
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  }
                }
              />
              <View
                _focusVisible={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(254, 215, 170, 0.5)",
                    },
                  }
                }
                _invalid={
                  Object {
                    "borderColor": "error.600",
                  }
                }
                colorScheme="warning"
                defaultIsChecked={false}
                state={
                  Object {
                    "lastFocusedValue": null,
                    "name": "exampleGroup",
                    "selectedValue": "1",
                    "setLastFocusedValue": [Function],
                    "setSelectedValue": [Function],
                  }
                }
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#fafafa",
                    "borderColor": "#d4d4d4",
                    "borderRadius": 9999,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "paddingBottom": 2,
                    "paddingLeft": 2,
                    "paddingRight": 2,
                    "paddingTop": 2,
                  }
                }
                value="3"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4293548044}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#ea580c",
                        "height": 12,
                        "opacity": 0,
                        "width": 12,
                      },
                      Object {
                        "flex": 0,
                        "height": 12,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4293548044}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              warning
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Radio Custom Icon 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <View
        accessibilityLabel="pick a choice"
        accessibilityRole="radiogroup"
        accessibilityState={
          Object {
            "disabled": undefined,
          }
        }
        defaultValue="1"
        name="exampleGroup"
        style={
          Object {
            "alignItems": "flex-start",
          }
        }
      >
        <View
          _text={
            Object {
              "mx": 2,
            }
          }
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": true,
              "disabled": false,
            }
          }
          accessible={true}
          checked={true}
          colorScheme="green"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          state={
            Object {
              "lastFocusedValue": null,
              "name": "exampleGroup",
              "selectedValue": "1",
              "setLastFocusedValue": [Function],
              "setSelectedValue": [Function],
            }
          }
          style={
            Object {
              "height": 512,
              "marginBottom": 4,
              "marginTop": 4,
              "width": 512,
            }
          }
          value="1"
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  Object {
                    "borderColor": "#16a34a",
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  }
                }
              />
              <View
                _focusVisible={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(187, 247, 208, 0.5)",
                    },
                  }
                }
                _invalid={
                  Object {
                    "borderColor": "error.600",
                  }
                }
                colorScheme="green"
                defaultIsChecked={false}
                state={
                  Object {
                    "lastFocusedValue": null,
                    "name": "exampleGroup",
                    "selectedValue": "1",
                    "setLastFocusedValue": [Function],
                    "setSelectedValue": [Function],
                  }
                }
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#fafafa",
                    "borderColor": "#16a34a",
                    "borderRadius": 9999,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "paddingBottom": 2,
                    "paddingLeft": 2,
                    "paddingRight": 2,
                    "paddingTop": 2,
                  }
                }
                value="1"
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "color": undefined,
                        "fontSize": 12,
                      },
                      Object {
                        "color": "#16a34a",
                        "fontSize": 12,
                        "height": 12,
                        "lineHeight": 12,
                        "width": 12,
                      },
                      Object {
                        "fontFamily": "material-community",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  󰢚
                </Text>
              </View>
            </View>
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "marginLeft": 8,
                  "marginRight": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              Alien
            </Text>
          </View>
        </View>
        <View
          _text={
            Object {
              "mx": 2,
            }
          }
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": false,
            }
          }
          accessible={true}
          checked={false}
          colorScheme="red"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          state={
            Object {
              "lastFocusedValue": null,
              "name": "exampleGroup",
              "selectedValue": "1",
              "setLastFocusedValue": [Function],
              "setSelectedValue": [Function],
            }
          }
          style={
            Object {
              "height": 512,
              "marginBottom": 4,
              "marginTop": 4,
              "width": 512,
            }
          }
          value="2"
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  }
                }
              />
              <View
                _focusVisible={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(254, 202, 202, 0.5)",
                    },
                  }
                }
                _invalid={
                  Object {
                    "borderColor": "error.600",
                  }
                }
                colorScheme="red"
                defaultIsChecked={false}
                state={
                  Object {
                    "lastFocusedValue": null,
                    "name": "exampleGroup",
                    "selectedValue": "1",
                    "setLastFocusedValue": [Function],
                    "setSelectedValue": [Function],
                  }
                }
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#fafafa",
                    "borderColor": "#d4d4d4",
                    "borderRadius": 9999,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "paddingBottom": 2,
                    "paddingLeft": 2,
                    "paddingRight": 2,
                    "paddingTop": 2,
                  }
                }
                value="2"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4292617766}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#dc2626",
                        "height": 12,
                        "opacity": 0,
                        "width": 12,
                      },
                      Object {
                        "flex": 0,
                        "height": 12,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4292617766}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "marginLeft": 8,
                  "marginRight": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              Fire
            </Text>
          </View>
        </View>
        <View
          _text={
            Object {
              "mx": 2,
            }
          }
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": false,
            }
          }
          accessible={true}
          checked={false}
          colorScheme="warning"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          state={
            Object {
              "lastFocusedValue": null,
              "name": "exampleGroup",
              "selectedValue": "1",
              "setLastFocusedValue": [Function],
              "setSelectedValue": [Function],
            }
          }
          style={
            Object {
              "height": 512,
              "marginBottom": 4,
              "marginTop": 4,
              "width": 512,
            }
          }
          value="3"
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  }
                }
              />
              <View
                _focusVisible={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(254, 215, 170, 0.5)",
                    },
                  }
                }
                _invalid={
                  Object {
                    "borderColor": "error.600",
                  }
                }
                colorScheme="warning"
                defaultIsChecked={false}
                state={
                  Object {
                    "lastFocusedValue": null,
                    "name": "exampleGroup",
                    "selectedValue": "1",
                    "setLastFocusedValue": [Function],
                    "setSelectedValue": [Function],
                  }
                }
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#fafafa",
                    "borderColor": "#d4d4d4",
                    "borderRadius": 9999,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "paddingBottom": 2,
                    "paddingLeft": 2,
                    "paddingRight": 2,
                    "paddingTop": 2,
                  }
                }
                value="3"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4293548044}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#ea580c",
                        "height": 12,
                        "opacity": 0,
                        "width": 12,
                      },
                      Object {
                        "flex": 0,
                        "height": 12,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4293548044}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "marginLeft": 8,
                  "marginRight": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              Warning
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Radio Disabled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <View
        accessibilityLabel="select prize"
        accessibilityRole="radiogroup"
        accessibilityState={
          Object {
            "disabled": undefined,
          }
        }
        defaultValue="2"
        name="exampleGroup"
        style={
          Object {
            "alignItems": "flex-start",
          }
        }
      >
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": true,
            }
          }
          accessible={true}
          checked={false}
          focusable={true}
          isDisabled={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          state={
            Object {
              "lastFocusedValue": null,
              "name": "exampleGroup",
              "selectedValue": "2",
              "setLastFocusedValue": [Function],
              "setSelectedValue": [Function],
            }
          }
          style={
            Object {
              "marginBottom": 4,
              "marginTop": 4,
            }
          }
          value="1"
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  }
                }
              />
              <View
                _focusVisible={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(165, 243, 252, 0.5)",
                    },
                  }
                }
                _invalid={
                  Object {
                    "borderColor": "error.600",
                  }
                }
                colorScheme="primary"
                defaultIsChecked={false}
                isDisabled={true}
                state={
                  Object {
                    "lastFocusedValue": null,
                    "name": "exampleGroup",
                    "selectedValue": "2",
                    "setLastFocusedValue": [Function],
                    "setSelectedValue": [Function],
                  }
                }
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#fafafa",
                    "borderColor": "#d4d4d4",
                    "borderRadius": 9999,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "opacity": 0.4,
                    "paddingBottom": 2,
                    "paddingLeft": 2,
                    "paddingRight": 2,
                    "paddingTop": 2,
                  }
                }
                value="1"
              >
                <RNSVGSvgView
                  _text={
                    Object {
                      "color": "lightText",
                    }
                  }
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4278751666}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "backgroundColor": "transparent",
                        "color": "#0891b2",
                        "height": 12,
                        "opacity": 0,
                        "width": 12,
                      },
                      Object {
                        "flex": 0,
                        "height": 12,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4278751666}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              First
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": true,
              "disabled": false,
            }
          }
          accessible={true}
          checked={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          state={
            Object {
              "lastFocusedValue": null,
              "name": "exampleGroup",
              "selectedValue": "2",
              "setLastFocusedValue": [Function],
              "setSelectedValue": [Function],
            }
          }
          style={
            Object {
              "marginBottom": 4,
              "marginTop": 4,
            }
          }
          value="2"
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  Object {
                    "borderColor": "#0891b2",
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  }
                }
              />
              <View
                _focusVisible={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(165, 243, 252, 0.5)",
                    },
                  }
                }
                _invalid={
                  Object {
                    "borderColor": "error.600",
                  }
                }
                colorScheme="primary"
                defaultIsChecked={false}
                state={
                  Object {
                    "lastFocusedValue": null,
                    "name": "exampleGroup",
                    "selectedValue": "2",
                    "setLastFocusedValue": [Function],
                    "setSelectedValue": [Function],
                  }
                }
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#fafafa",
                    "borderColor": "#0891b2",
                    "borderRadius": 9999,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "paddingBottom": 2,
                    "paddingLeft": 2,
                    "paddingRight": 2,
                    "paddingTop": 2,
                  }
                }
                value="2"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4278751666}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#0891b2",
                        "height": 12,
                        "opacity": 1,
                        "width": 12,
                      },
                      Object {
                        "flex": 0,
                        "height": 12,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4278751666}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={1}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              Second
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": false,
            }
          }
          accessible={true}
          checked={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          state={
            Object {
              "lastFocusedValue": null,
              "name": "exampleGroup",
              "selectedValue": "2",
              "setLastFocusedValue": [Function],
              "setSelectedValue": [Function],
            }
          }
          style={
            Object {
              "marginBottom": 4,
              "marginTop": 4,
            }
          }
          value="3"
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  }
                }
              />
              <View
                _focusVisible={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(165, 243, 252, 0.5)",
                    },
                  }
                }
                _invalid={
                  Object {
                    "borderColor": "error.600",
                  }
                }
                colorScheme="primary"
                defaultIsChecked={false}
                state={
                  Object {
                    "lastFocusedValue": null,
                    "name": "exampleGroup",
                    "selectedValue": "2",
                    "setLastFocusedValue": [Function],
                    "setSelectedValue": [Function],
                  }
                }
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#fafafa",
                    "borderColor": "#d4d4d4",
                    "borderRadius": 9999,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "paddingBottom": 2,
                    "paddingLeft": 2,
                    "paddingRight": 2,
                    "paddingTop": 2,
                  }
                }
                value="3"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4278751666}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#0891b2",
                        "height": 12,
                        "opacity": 0,
                        "width": 12,
                      },
                      Object {
                        "flex": 0,
                        "height": 12,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4278751666}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              Third
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Radio Form Controlled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "maxWidth": "80%",
        }
      }
    >
      <View
        isInvalid={true}
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <View
          feedbackId="field-react-aria-0-2-feedback"
          hasFeedbackText={false}
          hasHelpText={false}
          helpTextId="field-react-aria-0-2-helptext"
          isDisabled={false}
          isInvalid={true}
          isReadOnly={false}
          isRequired={false}
          labelId="field-react-aria-0-2-label"
          nativeID="field-react-aria-0-2-label"
          setHasFeedbackText={[Function]}
          setHasHelpText={[Function]}
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "marginBottom": 8,
              "marginRight": 12,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 18,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 27,
                "textDecorationLine": undefined,
              }
            }
          >
            Select Prize
          </Text>
        </View>
        <View
          style={Object {}}
        >
          <View
            accessibilityLabel="select prize"
            accessibilityRole="radiogroup"
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            defaultValue="1"
            name="exampleGroup"
            onChange={[Function]}
            style={
              Object {
                "alignItems": "flex-start",
              }
            }
          >
            <View
              accessibilityRole="radio"
              accessibilityState={
                Object {
                  "checked": true,
                  "disabled": false,
                }
              }
              accessible={true}
              checked={true}
              feedbackId="field-react-aria-0-2-feedback"
              focusable={true}
              hasFeedbackText={false}
              hasHelpText={false}
              helpTextId="field-react-aria-0-2-helptext"
              isDisabled={false}
              isInvalid={true}
              isReadOnly={false}
              isRequired={false}
              labelId="field-react-aria-0-2-label"
              nativeID="field-react-aria-0-2"
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              setHasFeedbackText={[Function]}
              setHasHelpText={[Function]}
              state={
                Object {
                  "lastFocusedValue": null,
                  "name": "exampleGroup",
                  "selectedValue": "1",
                  "setLastFocusedValue": [Function],
                  "setSelectedValue": [Function],
                }
              }
              style={
                Object {
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
              value="1"
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "borderRadius": 9999,
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "marginBottom": 4,
                    "marginTop": 4,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "justifyContent": "center",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "borderColor": "#0891b2",
                        "borderRadius": 9999,
                        "height": "100%",
                        "paddingBottom": 20,
                        "paddingLeft": 20,
                        "paddingRight": 20,
                        "paddingTop": 20,
                        "position": "absolute",
                        "width": "100%",
                        "zIndex": -1,
                      }
                    }
                  />
                  <View
                    _focusVisible={
                      Object {
                        "_interactionBox": Object {
                          "bg": "rgba(165, 243, 252, 0.5)",
                        },
                      }
                    }
                    colorScheme="primary"
                    defaultIsChecked={false}
                    feedbackId="field-react-aria-0-2-feedback"
                    hasFeedbackText={false}
                    hasHelpText={false}
                    helpTextId="field-react-aria-0-2-helptext"
                    isDisabled={false}
                    isInvalid={true}
                    isReadOnly={false}
                    isRequired={false}
                    labelId="field-react-aria-0-2-label"
                    nativeID="field-react-aria-0-2"
                    setHasFeedbackText={[Function]}
                    setHasHelpText={[Function]}
                    state={
                      Object {
                        "lastFocusedValue": null,
                        "name": "exampleGroup",
                        "selectedValue": "1",
                        "setLastFocusedValue": [Function],
                        "setSelectedValue": [Function],
                      }
                    }
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#fafafa",
                        "borderColor": "#e11d48",
                        "borderRadius": 9999,
                        "borderWidth": 2,
                        "display": "flex",
                        "justifyContent": "center",
                        "paddingBottom": 2,
                        "paddingLeft": 2,
                        "paddingRight": 2,
                        "paddingTop": 2,
                      }
                    }
                    value="1"
                  >
                    <RNSVGSvgView
                      accessibilityRole="image"
                      align="xMidYMid"
                      bbHeight={12}
                      bbWidth={12}
                      color={4278751666}
                      focusable={false}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      stroke=""
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          Object {
                            "color": "#0891b2",
                            "height": 12,
                            "opacity": 1,
                            "width": 12,
                          },
                          Object {
                            "flex": 0,
                            "height": 12,
                            "width": 12,
                          },
                        ]
                      }
                      tintColor={4278751666}
                      vbHeight={24}
                      vbWidth={24}
                    >
                      <RNSVGGroup
                        opacity={1}
                        propList={
                          Array [
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGGroup>
                          <RNSVGPath
                            d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                            fill={
                              Array [
                                2,
                              ]
                            }
                            propList={
                              Array [
                                "fill",
                                "stroke",
                              ]
                            }
                            stroke={null}
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                </View>
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#000000",
                      "fontFamily": undefined,
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 24,
                      "marginLeft": 8,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  First
                </Text>
              </View>
            </View>
            <View
              accessibilityRole="radio"
              accessibilityState={
                Object {
                  "checked": false,
                  "disabled": false,
                }
              }
              accessible={true}
              checked={false}
              feedbackId="field-react-aria-0-2-feedback"
              focusable={true}
              hasFeedbackText={false}
              hasHelpText={false}
              helpTextId="field-react-aria-0-2-helptext"
              isDisabled={false}
              isInvalid={true}
              isReadOnly={false}
              isRequired={false}
              labelId="field-react-aria-0-2-label"
              nativeID="field-react-aria-0-2"
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              setHasFeedbackText={[Function]}
              setHasHelpText={[Function]}
              state={
                Object {
                  "lastFocusedValue": null,
                  "name": "exampleGroup",
                  "selectedValue": "1",
                  "setLastFocusedValue": [Function],
                  "setSelectedValue": [Function],
                }
              }
              style={
                Object {
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
              value="2"
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "borderRadius": 9999,
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "marginBottom": 4,
                    "marginTop": 4,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "justifyContent": "center",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "borderRadius": 9999,
                        "height": "100%",
                        "paddingBottom": 20,
                        "paddingLeft": 20,
                        "paddingRight": 20,
                        "paddingTop": 20,
                        "position": "absolute",
                        "width": "100%",
                        "zIndex": -1,
                      }
                    }
                  />
                  <View
                    _focusVisible={
                      Object {
                        "_interactionBox": Object {
                          "bg": "rgba(165, 243, 252, 0.5)",
                        },
                      }
                    }
                    colorScheme="primary"
                    defaultIsChecked={false}
                    feedbackId="field-react-aria-0-2-feedback"
                    hasFeedbackText={false}
                    hasHelpText={false}
                    helpTextId="field-react-aria-0-2-helptext"
                    isDisabled={false}
                    isInvalid={true}
                    isReadOnly={false}
                    isRequired={false}
                    labelId="field-react-aria-0-2-label"
                    nativeID="field-react-aria-0-2"
                    setHasFeedbackText={[Function]}
                    setHasHelpText={[Function]}
                    state={
                      Object {
                        "lastFocusedValue": null,
                        "name": "exampleGroup",
                        "selectedValue": "1",
                        "setLastFocusedValue": [Function],
                        "setSelectedValue": [Function],
                      }
                    }
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#fafafa",
                        "borderColor": "#e11d48",
                        "borderRadius": 9999,
                        "borderWidth": 2,
                        "display": "flex",
                        "justifyContent": "center",
                        "paddingBottom": 2,
                        "paddingLeft": 2,
                        "paddingRight": 2,
                        "paddingTop": 2,
                      }
                    }
                    value="2"
                  >
                    <RNSVGSvgView
                      accessibilityRole="image"
                      align="xMidYMid"
                      bbHeight={12}
                      bbWidth={12}
                      color={4278751666}
                      focusable={false}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      stroke=""
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          Object {
                            "color": "#0891b2",
                            "height": 12,
                            "opacity": 0,
                            "width": 12,
                          },
                          Object {
                            "flex": 0,
                            "height": 12,
                            "width": 12,
                          },
                        ]
                      }
                      tintColor={4278751666}
                      vbHeight={24}
                      vbWidth={24}
                    >
                      <RNSVGGroup
                        opacity={0}
                        propList={
                          Array [
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGGroup>
                          <RNSVGPath
                            d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                            fill={
                              Array [
                                2,
                              ]
                            }
                            propList={
                              Array [
                                "fill",
                                "stroke",
                              ]
                            }
                            stroke={null}
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                </View>
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#000000",
                      "fontFamily": undefined,
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 24,
                      "marginLeft": 8,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Second
                </Text>
              </View>
            </View>
            <View
              accessibilityRole="radio"
              accessibilityState={
                Object {
                  "checked": false,
                  "disabled": false,
                }
              }
              accessible={true}
              checked={false}
              feedbackId="field-react-aria-0-2-feedback"
              focusable={true}
              hasFeedbackText={false}
              hasHelpText={false}
              helpTextId="field-react-aria-0-2-helptext"
              isDisabled={false}
              isInvalid={true}
              isReadOnly={false}
              isRequired={false}
              labelId="field-react-aria-0-2-label"
              nativeID="field-react-aria-0-2"
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              setHasFeedbackText={[Function]}
              setHasHelpText={[Function]}
              state={
                Object {
                  "lastFocusedValue": null,
                  "name": "exampleGroup",
                  "selectedValue": "1",
                  "setLastFocusedValue": [Function],
                  "setSelectedValue": [Function],
                }
              }
              style={
                Object {
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
              value="3"
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "borderRadius": 9999,
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "marginBottom": 4,
                    "marginTop": 4,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "justifyContent": "center",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "borderRadius": 9999,
                        "height": "100%",
                        "paddingBottom": 20,
                        "paddingLeft": 20,
                        "paddingRight": 20,
                        "paddingTop": 20,
                        "position": "absolute",
                        "width": "100%",
                        "zIndex": -1,
                      }
                    }
                  />
                  <View
                    _focusVisible={
                      Object {
                        "_interactionBox": Object {
                          "bg": "rgba(165, 243, 252, 0.5)",
                        },
                      }
                    }
                    colorScheme="primary"
                    defaultIsChecked={false}
                    feedbackId="field-react-aria-0-2-feedback"
                    hasFeedbackText={false}
                    hasHelpText={false}
                    helpTextId="field-react-aria-0-2-helptext"
                    isDisabled={false}
                    isInvalid={true}
                    isReadOnly={false}
                    isRequired={false}
                    labelId="field-react-aria-0-2-label"
                    nativeID="field-react-aria-0-2"
                    setHasFeedbackText={[Function]}
                    setHasHelpText={[Function]}
                    state={
                      Object {
                        "lastFocusedValue": null,
                        "name": "exampleGroup",
                        "selectedValue": "1",
                        "setLastFocusedValue": [Function],
                        "setSelectedValue": [Function],
                      }
                    }
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#fafafa",
                        "borderColor": "#e11d48",
                        "borderRadius": 9999,
                        "borderWidth": 2,
                        "display": "flex",
                        "justifyContent": "center",
                        "paddingBottom": 2,
                        "paddingLeft": 2,
                        "paddingRight": 2,
                        "paddingTop": 2,
                      }
                    }
                    value="3"
                  >
                    <RNSVGSvgView
                      accessibilityRole="image"
                      align="xMidYMid"
                      bbHeight={12}
                      bbWidth={12}
                      color={4278751666}
                      focusable={false}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      stroke=""
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          Object {
                            "color": "#0891b2",
                            "height": 12,
                            "opacity": 0,
                            "width": 12,
                          },
                          Object {
                            "flex": 0,
                            "height": 12,
                            "width": 12,
                          },
                        ]
                      }
                      tintColor={4278751666}
                      vbHeight={24}
                      vbWidth={24}
                    >
                      <RNSVGGroup
                        opacity={0}
                        propList={
                          Array [
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGGroup>
                          <RNSVGPath
                            d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                            fill={
                              Array [
                                2,
                              ]
                            }
                            propList={
                              Array [
                                "fill",
                                "stroke",
                              ]
                            }
                            stroke={null}
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                </View>
                <Text
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#000000",
                      "fontFamily": undefined,
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 24,
                      "marginLeft": 8,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Third
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          feedbackId="field-react-aria-0-2-feedback"
          hasFeedbackText={false}
          hasHelpText={false}
          helpTextId="field-react-aria-0-2-helptext"
          isDisabled={false}
          isInvalid={true}
          isReadOnly={false}
          isRequired={false}
          labelId="field-react-aria-0-2-label"
          nativeID="field-react-aria-0-2"
          setHasFeedbackText={[Function]}
          setHasHelpText={[Function]}
          style={
            Object {
              "marginTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <RNSVGSvgView
              accessibilityRole="image"
              align="xMidYMid"
              bbHeight={16}
              bbWidth={16}
              color={4292617766}
              focusable={false}
              meetOrSlice={0}
              minX={0}
              minY={0}
              stroke=""
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Object {
                    "color": "#dc2626",
                    "fontSize": 12,
                    "height": 16,
                    "width": 16,
                  },
                  Object {
                    "flex": 0,
                    "height": 16,
                    "width": 16,
                  },
                ]
              }
              tintColor={4292617766}
              vbHeight={16}
              vbWidth={16}
            >
              <RNSVGGroup
                font={
                  Object {
                    "fontSize": 12,
                  }
                }
                propList={
                  Array [
                    "stroke",
                  ]
                }
                stroke={null}
              >
                <RNSVGGroup>
                  <RNSVGPath
                    d="M8 16C6.41775 16 4.87103 15.5308 3.55544 14.6518C2.23985 13.7727 1.21447 12.5233 0.608967 11.0615C0.00346627 9.59966 -0.15496 7.99113 0.153721 6.43928C0.462403 4.88743 1.22433 3.46197 2.34315 2.34315C3.46197 1.22433 4.88743 0.462403 6.43928 0.153721C7.99113 -0.15496 9.59966 0.00346627 11.0615 0.608967C12.5233 1.21447 13.7727 2.23985 14.6518 3.55544C15.5308 4.87103 16 6.41775 16 8C16 10.1217 15.1571 12.1566 13.6569 13.6569C12.1566 15.1571 10.1217 16 8 16ZM8 14.4C9.2658 14.4 10.5032 14.0246 11.5556 13.3214C12.6081 12.6182 13.4284 11.6186 13.9128 10.4492C14.3972 9.27973 14.524 7.9929 14.277 6.75142C14.0301 5.50995 13.4205 4.36958 12.5255 3.47452C11.6304 2.57946 10.4901 1.96992 9.24858 1.72298C8.0071 1.47603 6.72028 1.60277 5.55083 2.08717C4.38138 2.57158 3.38184 3.39188 2.6786 4.44435C1.97536 5.49683 1.6 6.7342 1.6 8C1.6 9.69739 2.27429 11.3253 3.47452 12.5255C4.67475 13.7257 6.30262 14.4 8 14.4ZM7.2 10.4H8.8V12H7.2V10.4ZM7.2 4H8.8V8.8H7.2V4Z"
                    fill={
                      Array [
                        2,
                      ]
                    }
                    propList={
                      Array [
                        "fill",
                        "stroke",
                      ]
                    }
                    stroke={null}
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGSvgView>
            <View
              style={
                Object {
                  "width": 4,
                }
              }
            />
            <View
              style={Object {}}
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#dc2626",
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 18,
                    "textDecorationLine": undefined,
                  }
                }
              >
                You must select a Prize.
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Radio Invalid 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <View
        accessibilityLabel="select an option"
        accessibilityRole="radiogroup"
        accessibilityState={
          Object {
            "disabled": undefined,
          }
        }
        name="exampleGroup"
        style={
          Object {
            "alignItems": "flex-start",
          }
        }
      >
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": false,
            }
          }
          accessible={true}
          checked={false}
          focusable={true}
          isInvalid={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          state={
            Object {
              "lastFocusedValue": null,
              "name": "exampleGroup",
              "selectedValue": undefined,
              "setLastFocusedValue": [Function],
              "setSelectedValue": [Function],
            }
          }
          style={Object {}}
          value="test"
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  }
                }
              />
              <View
                _focusVisible={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(165, 243, 252, 0.5)",
                    },
                  }
                }
                colorScheme="primary"
                defaultIsChecked={false}
                isInvalid={true}
                state={
                  Object {
                    "lastFocusedValue": null,
                    "name": "exampleGroup",
                    "selectedValue": undefined,
                    "setLastFocusedValue": [Function],
                    "setSelectedValue": [Function],
                  }
                }
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#fafafa",
                    "borderColor": "#e11d48",
                    "borderRadius": 9999,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "paddingBottom": 2,
                    "paddingLeft": 2,
                    "paddingRight": 2,
                    "paddingTop": 2,
                  }
                }
                value="test"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4278751666}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#0891b2",
                        "height": 12,
                        "opacity": 0,
                        "width": 12,
                      },
                      Object {
                        "flex": 0,
                        "height": 12,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4278751666}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              Others
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Radio Playground 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "space-between",
        }
      }
    >
      <View
        style={Object {}}
      >
        <View
          accessibilityLabel="pick an option from below"
          accessibilityRole="radiogroup"
          accessibilityState={
            Object {
              "disabled": undefined,
            }
          }
          name="exampleGroup"
          onChange={[Function]}
          style={
            Object {
              "alignItems": "flex-start",
            }
          }
          value=""
        >
          <View
            accessibilityRole="radio"
            accessibilityState={
              Object {
                "checked": false,
                "disabled": false,
              }
            }
            accessible={true}
            checked={false}
            colorScheme="primary"
            focusable={true}
            isDisabled={false}
            isInvalid={false}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            state={
              Object {
                "lastFocusedValue": null,
                "name": "exampleGroup",
                "selectedValue": "",
                "setLastFocusedValue": [Function],
                "setSelectedValue": [Function],
              }
            }
            style={
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
            value="cool"
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    }
                  }
                />
                <View
                  _focusVisible={
                    Object {
                      "_interactionBox": Object {
                        "bg": "rgba(165, 243, 252, 0.5)",
                      },
                    }
                  }
                  colorScheme="primary"
                  defaultIsChecked={false}
                  isDisabled={false}
                  isInvalid={false}
                  state={
                    Object {
                      "lastFocusedValue": null,
                      "name": "exampleGroup",
                      "selectedValue": "",
                      "setLastFocusedValue": [Function],
                      "setSelectedValue": [Function],
                    }
                  }
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#d4d4d4",
                      "borderRadius": 9999,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "paddingBottom": 2,
                      "paddingLeft": 2,
                      "paddingRight": 2,
                      "paddingTop": 2,
                    }
                  }
                  value="cool"
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={12}
                    bbWidth={12}
                    color={4278751666}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#0891b2",
                          "height": 12,
                          "opacity": 0,
                          "width": 12,
                        },
                        Object {
                          "flex": 0,
                          "height": 12,
                          "width": 12,
                        },
                      ]
                    }
                    tintColor={4278751666}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      opacity={0}
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#000000",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "marginLeft": 8,
                    "textDecorationLine": undefined,
                  }
                }
              >
                UX Research
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="radio"
            accessibilityState={
              Object {
                "checked": false,
                "disabled": false,
              }
            }
            accessible={true}
            checked={false}
            colorScheme="primary"
            focusable={true}
            isDisabled={false}
            isInvalid={false}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            state={
              Object {
                "lastFocusedValue": null,
                "name": "exampleGroup",
                "selectedValue": "",
                "setLastFocusedValue": [Function],
                "setSelectedValue": [Function],
              }
            }
            style={
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
            value="awesome"
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    }
                  }
                />
                <View
                  _focusVisible={
                    Object {
                      "_interactionBox": Object {
                        "bg": "rgba(165, 243, 252, 0.5)",
                      },
                    }
                  }
                  colorScheme="primary"
                  defaultIsChecked={false}
                  isDisabled={false}
                  isInvalid={false}
                  state={
                    Object {
                      "lastFocusedValue": null,
                      "name": "exampleGroup",
                      "selectedValue": "",
                      "setLastFocusedValue": [Function],
                      "setSelectedValue": [Function],
                    }
                  }
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#d4d4d4",
                      "borderRadius": 9999,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "paddingBottom": 2,
                      "paddingLeft": 2,
                      "paddingRight": 2,
                      "paddingTop": 2,
                    }
                  }
                  value="awesome"
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={12}
                    bbWidth={12}
                    color={4278751666}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#0891b2",
                          "height": 12,
                          "opacity": 0,
                          "width": 12,
                        },
                        Object {
                          "flex": 0,
                          "height": 12,
                          "width": 12,
                        },
                      ]
                    }
                    tintColor={4278751666}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      opacity={0}
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#000000",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "marginLeft": 8,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Software Development
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Radio Size 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 20,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 25,
            "marginBottom": 40,
            "textDecorationLine": undefined,
          }
        }
      >
        Sizes
      </Text>
      <View
        style={Object {}}
      >
        <View
          accessibilityLabel="pick a size"
          accessibilityRole="radiogroup"
          accessibilityState={
            Object {
              "disabled": undefined,
            }
          }
          defaultValue="1"
          name="exampleGroup"
          style={
            Object {
              "alignItems": "flex-start",
            }
          }
        >
          <View
            accessibilityRole="radio"
            accessibilityState={
              Object {
                "checked": true,
                "disabled": false,
              }
            }
            accessible={true}
            checked={true}
            colorScheme="red"
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            state={
              Object {
                "lastFocusedValue": null,
                "name": "exampleGroup",
                "selectedValue": "1",
                "setLastFocusedValue": [Function],
                "setSelectedValue": [Function],
              }
            }
            style={
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
            value="1"
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "borderColor": "#dc2626",
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    }
                  }
                />
                <View
                  _focusVisible={
                    Object {
                      "_interactionBox": Object {
                        "bg": "rgba(254, 202, 202, 0.5)",
                      },
                    }
                  }
                  _invalid={
                    Object {
                      "borderColor": "error.600",
                    }
                  }
                  colorScheme="red"
                  defaultIsChecked={false}
                  state={
                    Object {
                      "lastFocusedValue": null,
                      "name": "exampleGroup",
                      "selectedValue": "1",
                      "setLastFocusedValue": [Function],
                      "setSelectedValue": [Function],
                    }
                  }
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#dc2626",
                      "borderRadius": 9999,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "paddingBottom": 2,
                      "paddingLeft": 2,
                      "paddingRight": 2,
                      "paddingTop": 2,
                    }
                  }
                  value="1"
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={8}
                    bbWidth={8}
                    color={4292617766}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#dc2626",
                          "height": 8,
                          "opacity": 1,
                          "width": 8,
                        },
                        Object {
                          "flex": 0,
                          "height": 8,
                          "width": 8,
                        },
                      ]
                    }
                    tintColor={4292617766}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      opacity={1}
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#000000",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "marginLeft": 8,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Small
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="radio"
            accessibilityState={
              Object {
                "checked": false,
                "disabled": false,
              }
            }
            accessible={true}
            checked={false}
            colorScheme="green"
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            state={
              Object {
                "lastFocusedValue": null,
                "name": "exampleGroup",
                "selectedValue": "1",
                "setLastFocusedValue": [Function],
                "setSelectedValue": [Function],
              }
            }
            style={
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
            value="2"
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    }
                  }
                />
                <View
                  _focusVisible={
                    Object {
                      "_interactionBox": Object {
                        "bg": "rgba(187, 247, 208, 0.5)",
                      },
                    }
                  }
                  _invalid={
                    Object {
                      "borderColor": "error.600",
                    }
                  }
                  colorScheme="green"
                  defaultIsChecked={false}
                  state={
                    Object {
                      "lastFocusedValue": null,
                      "name": "exampleGroup",
                      "selectedValue": "1",
                      "setLastFocusedValue": [Function],
                      "setSelectedValue": [Function],
                    }
                  }
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#d4d4d4",
                      "borderRadius": 9999,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "paddingBottom": 2,
                      "paddingLeft": 2,
                      "paddingRight": 2,
                      "paddingTop": 2,
                    }
                  }
                  value="2"
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={12}
                    bbWidth={12}
                    color={4279673674}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#16a34a",
                          "height": 12,
                          "opacity": 0,
                          "width": 12,
                        },
                        Object {
                          "flex": 0,
                          "height": 12,
                          "width": 12,
                        },
                      ]
                    }
                    tintColor={4279673674}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      opacity={0}
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#000000",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "marginLeft": 8,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Medium
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="radio"
            accessibilityState={
              Object {
                "checked": false,
                "disabled": false,
              }
            }
            accessible={true}
            checked={false}
            colorScheme="yellow"
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            state={
              Object {
                "lastFocusedValue": null,
                "name": "exampleGroup",
                "selectedValue": "1",
                "setLastFocusedValue": [Function],
                "setSelectedValue": [Function],
              }
            }
            style={
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
            value="3"
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    }
                  }
                />
                <View
                  _focusVisible={
                    Object {
                      "_interactionBox": Object {
                        "bg": "rgba(254, 240, 138, 0.5)",
                      },
                    }
                  }
                  _invalid={
                    Object {
                      "borderColor": "error.600",
                    }
                  }
                  colorScheme="yellow"
                  defaultIsChecked={false}
                  state={
                    Object {
                      "lastFocusedValue": null,
                      "name": "exampleGroup",
                      "selectedValue": "1",
                      "setLastFocusedValue": [Function],
                      "setSelectedValue": [Function],
                    }
                  }
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#d4d4d4",
                      "borderRadius": 9999,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "paddingBottom": 2,
                      "paddingLeft": 2,
                      "paddingRight": 2,
                      "paddingTop": 2,
                    }
                  }
                  value="3"
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4291463684}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#ca8a04",
                          "height": 16,
                          "opacity": 0,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4291463684}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      opacity={0}
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#000000",
                    "fontFamily": undefined,
                    "fontSize": 18,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 27,
                    "marginLeft": 8,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Large
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Radio Uncontrolled Radio 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <View
        accessibilityLabel="Pick your favorite number"
        accessibilityRole="radiogroup"
        accessibilityState={
          Object {
            "disabled": undefined,
          }
        }
        defaultValue="1"
        name="myRadioGroup"
        style={
          Object {
            "alignItems": "flex-start",
          }
        }
      >
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": true,
              "disabled": false,
            }
          }
          accessible={true}
          checked={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          state={
            Object {
              "lastFocusedValue": null,
              "name": "myRadioGroup",
              "selectedValue": "1",
              "setLastFocusedValue": [Function],
              "setSelectedValue": [Function],
            }
          }
          style={
            Object {
              "marginBottom": 4,
              "marginTop": 4,
            }
          }
          value="1"
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  Object {
                    "borderColor": "#0891b2",
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  }
                }
              />
              <View
                _focusVisible={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(165, 243, 252, 0.5)",
                    },
                  }
                }
                _invalid={
                  Object {
                    "borderColor": "error.600",
                  }
                }
                colorScheme="primary"
                defaultIsChecked={false}
                state={
                  Object {
                    "lastFocusedValue": null,
                    "name": "myRadioGroup",
                    "selectedValue": "1",
                    "setLastFocusedValue": [Function],
                    "setSelectedValue": [Function],
                  }
                }
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#fafafa",
                    "borderColor": "#0891b2",
                    "borderRadius": 9999,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "paddingBottom": 2,
                    "paddingLeft": 2,
                    "paddingRight": 2,
                    "paddingTop": 2,
                  }
                }
                value="1"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4278751666}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#0891b2",
                        "height": 12,
                        "opacity": 1,
                        "width": 12,
                      },
                      Object {
                        "flex": 0,
                        "height": 12,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4278751666}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={1}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              First
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": false,
            }
          }
          accessible={true}
          checked={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          state={
            Object {
              "lastFocusedValue": null,
              "name": "myRadioGroup",
              "selectedValue": "1",
              "setLastFocusedValue": [Function],
              "setSelectedValue": [Function],
            }
          }
          style={
            Object {
              "marginBottom": 4,
              "marginTop": 4,
            }
          }
          value="2"
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  }
                }
              />
              <View
                _focusVisible={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(165, 243, 252, 0.5)",
                    },
                  }
                }
                _invalid={
                  Object {
                    "borderColor": "error.600",
                  }
                }
                colorScheme="primary"
                defaultIsChecked={false}
                state={
                  Object {
                    "lastFocusedValue": null,
                    "name": "myRadioGroup",
                    "selectedValue": "1",
                    "setLastFocusedValue": [Function],
                    "setSelectedValue": [Function],
                  }
                }
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#fafafa",
                    "borderColor": "#d4d4d4",
                    "borderRadius": 9999,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "paddingBottom": 2,
                    "paddingLeft": 2,
                    "paddingRight": 2,
                    "paddingTop": 2,
                  }
                }
                value="2"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4278751666}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#0891b2",
                        "height": 12,
                        "opacity": 0,
                        "width": 12,
                      },
                      Object {
                        "flex": 0,
                        "height": 12,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4278751666}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              Second
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": false,
            }
          }
          accessible={true}
          checked={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          state={
            Object {
              "lastFocusedValue": null,
              "name": "myRadioGroup",
              "selectedValue": "1",
              "setLastFocusedValue": [Function],
              "setSelectedValue": [Function],
            }
          }
          style={
            Object {
              "marginBottom": 4,
              "marginTop": 4,
            }
          }
          value="3"
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  }
                }
              />
              <View
                _focusVisible={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(165, 243, 252, 0.5)",
                    },
                  }
                }
                _invalid={
                  Object {
                    "borderColor": "error.600",
                  }
                }
                colorScheme="primary"
                defaultIsChecked={false}
                state={
                  Object {
                    "lastFocusedValue": null,
                    "name": "myRadioGroup",
                    "selectedValue": "1",
                    "setLastFocusedValue": [Function],
                    "setSelectedValue": [Function],
                  }
                }
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#fafafa",
                    "borderColor": "#d4d4d4",
                    "borderRadius": 9999,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "paddingBottom": 2,
                    "paddingLeft": 2,
                    "paddingRight": 2,
                    "paddingTop": 2,
                  }
                }
                value="3"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4278751666}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#0891b2",
                        "height": 12,
                        "opacity": 0,
                        "width": 12,
                      },
                      Object {
                        "flex": 0,
                        "height": 12,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4278751666}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              Third
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Radio With Ref 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <View
        accessibilityLabel="pick an option"
        accessibilityRole="radiogroup"
        accessibilityState={
          Object {
            "disabled": undefined,
          }
        }
        name="exampleGroup"
        onChange={[Function]}
        style={
          Object {
            "alignItems": "flex-start",
          }
        }
      >
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": false,
            }
          }
          accessible={true}
          checked={false}
          colorScheme="success"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          state={
            Object {
              "lastFocusedValue": null,
              "name": "exampleGroup",
              "selectedValue": undefined,
              "setLastFocusedValue": [Function],
              "setSelectedValue": [Function],
            }
          }
          style={
            Object {
              "marginBottom": 4,
              "marginTop": 4,
            }
          }
          value="1"
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  }
                }
              />
              <View
                _focusVisible={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(167, 243, 208, 0.5)",
                    },
                  }
                }
                _invalid={
                  Object {
                    "borderColor": "error.600",
                  }
                }
                colorScheme="success"
                defaultIsChecked={false}
                state={
                  Object {
                    "lastFocusedValue": null,
                    "name": "exampleGroup",
                    "selectedValue": undefined,
                    "setLastFocusedValue": [Function],
                    "setSelectedValue": [Function],
                  }
                }
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#fafafa",
                    "borderColor": "#d4d4d4",
                    "borderRadius": 9999,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "paddingBottom": 2,
                    "paddingLeft": 2,
                    "paddingRight": 2,
                    "paddingTop": 2,
                  }
                }
                value="1"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4278556265}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#059669",
                        "height": 12,
                        "opacity": 0,
                        "width": 12,
                      },
                      Object {
                        "flex": 0,
                        "height": 12,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4278556265}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              Wrong
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": false,
            }
          }
          accessible={true}
          checked={false}
          colorScheme="success"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          state={
            Object {
              "lastFocusedValue": null,
              "name": "exampleGroup",
              "selectedValue": undefined,
              "setLastFocusedValue": [Function],
              "setSelectedValue": [Function],
            }
          }
          style={
            Object {
              "marginBottom": 4,
              "marginTop": 4,
            }
          }
          value="2"
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  }
                }
              />
              <View
                _focusVisible={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(167, 243, 208, 0.5)",
                    },
                  }
                }
                _invalid={
                  Object {
                    "borderColor": "error.600",
                  }
                }
                colorScheme="success"
                defaultIsChecked={false}
                state={
                  Object {
                    "lastFocusedValue": null,
                    "name": "exampleGroup",
                    "selectedValue": undefined,
                    "setLastFocusedValue": [Function],
                    "setSelectedValue": [Function],
                  }
                }
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#fafafa",
                    "borderColor": "#d4d4d4",
                    "borderRadius": 9999,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "paddingBottom": 2,
                    "paddingLeft": 2,
                    "paddingRight": 2,
                    "paddingTop": 2,
                  }
                }
                value="2"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4278556265}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#059669",
                        "height": 12,
                        "opacity": 0,
                        "width": 12,
                      },
                      Object {
                        "flex": 0,
                        "height": 12,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4278556265}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 24,
                  "marginLeft": 8,
                  "textDecorationLine": undefined,
                }
              }
            >
              Right
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Responsive Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#fecaca",
          "width": 400,
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#000000",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": undefined,
          }
        }
      >
        This is a box
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Responsive Demo 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#fafafa",
          "borderColor": "#e5e7eb",
          "borderRadius": 8,
          "borderWidth": 1,
          "flexDirection": "column",
          "overflow": "hidden",
          "width": 288,
        }
      }
    >
      <View
        style={Object {}}
      >
        <Image
          accessibilityLabel="image"
          alt="image"
          onError={[Function]}
          source={
            Object {
              "uri": "https://www.holidify.com/images/cmsuploads/compressed/Bangalore_citycover_20190613234056.jpg",
            }
          }
          style={
            Object {
              "height": 160,
              "maxWidth": "100%",
              "width": "100%",
            }
          }
        />
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#8b5cf6",
              "bottom": 0,
              "display": "flex",
              "justifyContent": "center",
              "paddingBottom": 6,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 6,
              "position": "absolute",
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 18,
                "textDecorationLine": undefined,
              }
            }
          >
            PHOTOS
          </Text>
        </View>
      </View>
      <View
        style={Object {}}
      />
      <View
        style={
          Object {
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#404040",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "marginLeft": -4,
                "textDecorationLine": undefined,
              }
            }
          >
            The Garden City
          </Text>
          <View
            style={
              Object {
                "height": 8,
              }
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#8b5cf6",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 18,
                "marginLeft": -2,
                "marginTop": -4,
                "textDecorationLine": undefined,
              }
            }
          >
            The Silicon Valley of India.
          </Text>
        </View>
        <View
          style={
            Object {
              "height": 12,
            }
          }
        />
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": undefined,
            }
          }
        >
          Bengaluru (also called Bangalore) is the center of India's high-tech industry. The city is also known for its parks and nightlife.
        </Text>
        <View
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "space-between",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#4b5563",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              6 mins ago
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Responsive Direction 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "column",
          "justifyContent": "space-between",
          "paddingBottom": 16,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 16,
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#a1a1aa",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "borderWidth": 1,
            "height": 96,
            "justifyContent": "center",
            "marginBottom": 8,
            "marginLeft": 8,
            "marginRight": 8,
            "marginTop": 8,
            "position": "relative",
            "width": 96,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/1188747996843761665/8CiUdKZW_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Array [
                undefined,
                Object {
                  "height": "100%",
                  "width": "100%",
                },
              ],
            ]
          }
        />
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#a1a1aa",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "borderWidth": 1,
            "height": 96,
            "justifyContent": "center",
            "marginBottom": 8,
            "marginLeft": 8,
            "marginRight": 8,
            "marginTop": 8,
            "position": "relative",
            "width": 96,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/1177303899243343872/B0sUJIH0_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Array [
                undefined,
                Object {
                  "height": "100%",
                  "width": "100%",
                },
              ],
            ]
          }
        />
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#a1a1aa",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "borderWidth": 1,
            "height": 96,
            "justifyContent": "center",
            "marginBottom": 8,
            "marginLeft": 8,
            "marginRight": 8,
            "marginTop": 8,
            "position": "relative",
            "width": 96,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/1260766060401188864/ySJfMIbZ_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Array [
                undefined,
                Object {
                  "height": "100%",
                  "width": "100%",
                },
              ],
            ]
          }
        />
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#a1a1aa",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "borderWidth": 1,
            "height": 96,
            "justifyContent": "center",
            "marginBottom": 8,
            "marginLeft": 8,
            "marginRight": 8,
            "marginTop": 8,
            "position": "relative",
            "width": 96,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/1309797238651060226/18cm6VhQ_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Array [
                undefined,
                Object {
                  "height": "100%",
                  "width": "100%",
                },
              ],
            ]
          }
        />
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#a1a1aa",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "borderWidth": 1,
            "height": 96,
            "justifyContent": "center",
            "marginBottom": 8,
            "marginLeft": 8,
            "marginRight": 8,
            "marginTop": 8,
            "position": "relative",
            "width": 96,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/983582580372004864/h9ccP0Ea_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Array [
                undefined,
                Object {
                  "height": "100%",
                  "width": "100%",
                },
              ],
            ]
          }
        />
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#a1a1aa",
            "borderColor": "#27272a",
            "borderRadius": 9999,
            "borderWidth": 1,
            "height": 96,
            "justifyContent": "center",
            "marginBottom": 8,
            "marginLeft": 8,
            "marginRight": 8,
            "marginTop": 8,
            "position": "relative",
            "width": 96,
          }
        }
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/1320985200663293952/lE_Kg6vr_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              Array [
                undefined,
                Object {
                  "height": "100%",
                  "width": "100%",
                },
              ],
            ]
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Responsive FontSize 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Text
      style={
        Object {
          "backgroundColor": undefined,
          "color": "#1f2937",
          "fontFamily": undefined,
          "fontSize": 24,
          "fontStyle": "normal",
          "fontWeight": "400",
          "letterSpacing": 0,
          "lineHeight": 36,
          "textDecorationLine": undefined,
        }
      }
    >
      This is responsive text
    </Text>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Responsive More 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#2dd4bf",
          "height": "75%",
          "width": "50%",
        }
      }
    />
    <View
      style={
        Object {
          "fontSize": 16,
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": undefined,
          }
        }
      >
        Font Size
      </Text>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#4ade80",
          "height": 24,
          "marginTop": 16,
          "width": "100%",
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "#fecaca",
          "paddingBottom": 16,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 16,
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#000000",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": undefined,
          }
        }
      >
        Padding
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Row Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#22d3ee",
            "borderRadius": 6,
            "display": "flex",
            "elevation": 4,
            "height": 64,
            "justifyContent": "center",
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.23,
            "shadowRadius": 2.62,
            "width": 64,
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#FFFFFF",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": undefined,
            }
          }
        >
          Box 1
        </Text>
      </View>
      <View
        style={
          Object {
            "width": 8,
          }
        }
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#f472b6",
            "borderRadius": 6,
            "display": "flex",
            "elevation": 4,
            "height": 64,
            "justifyContent": "center",
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.23,
            "shadowRadius": 2.62,
            "width": 64,
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#FFFFFF",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": undefined,
            }
          }
        >
          Box 2
        </Text>
      </View>
      <View
        style={
          Object {
            "width": 8,
          }
        }
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#34d399",
            "borderRadius": 6,
            "display": "flex",
            "elevation": 4,
            "height": 64,
            "justifyContent": "center",
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.23,
            "shadowRadius": 2.62,
            "width": 64,
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#FFFFFF",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "textDecorationLine": undefined,
            }
          }
        >
          Box 3
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots ScrollView Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RCTScrollView
      contentContainerStyle={
        Array [
          Object {
            "marginBottom": 16,
            "minWidth": 288,
            "paddingLeft": 20,
            "paddingRight": 20,
          },
          Object {},
        ]
      }
      style={Object {}}
    >
      <View>
        <View
          style={
            Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
              "marginBottom": 16,
              "marginTop": 12,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#404040",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Cyan
          </Text>
        </View>
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#cffafe",
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              100
            </Text>
          </View>
          <View
            style={Object {}}
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#a5f3fc",
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              200
            </Text>
          </View>
          <View
            style={Object {}}
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#67e8f9",
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              300
            </Text>
          </View>
          <View
            style={Object {}}
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#22d3ee",
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              400
            </Text>
          </View>
          <View
            style={Object {}}
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#06b6d4",
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              500
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
              "marginBottom": 16,
              "marginTop": 32,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#404040",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            Yellow
          </Text>
        </View>
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#fef9c3",
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              100
            </Text>
          </View>
          <View
            style={Object {}}
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#fef08a",
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              200
            </Text>
          </View>
          <View
            style={Object {}}
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#fde047",
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              300
            </Text>
          </View>
          <View
            style={Object {}}
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#facc15",
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              400
            </Text>
          </View>
          <View
            style={Object {}}
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#eab308",
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              500
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
              "marginBottom": 16,
              "marginTop": 32,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#404040",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
             Violet
          </Text>
        </View>
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#ede9fe",
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              100
            </Text>
          </View>
          <View
            style={Object {}}
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#ddd6fe",
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              200
            </Text>
          </View>
          <View
            style={Object {}}
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#c4b5fd",
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              300
            </Text>
          </View>
          <View
            style={Object {}}
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#a78bfa",
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              400
            </Text>
          </View>
          <View
            style={Object {}}
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#8b5cf6",
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              500
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots SectionList Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RCTScrollView
      data={
        Array [
          Object {
            "data": Array [
              "cyan.100",
              "cyan.200",
              "cyan.300",
              "cyan.400",
              "cyan.500",
            ],
            "title": "Cyan",
          },
          Object {
            "data": Array [
              "yellow.100",
              "yellow.200",
              "yellow.300",
              "yellow.400",
              "yellow.500",
            ],
            "title": "Yellow",
          },
          Object {
            "data": Array [
              "violet.100",
              "violet.200",
              "violet.300",
              "violet.400",
              "violet.500",
            ],
            "title": "Violet",
          },
        ]
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={
        Array [
          0,
          7,
        ]
      }
      style={
        Object {
          "marginBottom": 16,
          "paddingLeft": 48,
          "paddingRight": 48,
        }
      }
      updateCellsBatchingPeriod={50}
      windowSize={21}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#404040",
                  "fontFamily": undefined,
                  "fontSize": 20,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 25,
                  "marginTop": 32,
                  "paddingBottom": 16,
                  "textDecorationLine": undefined,
                }
              }
            >
              Cyan
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#cffafe",
                "display": "flex",
                "justifyContent": "center",
                "minWidth": 256,
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              100
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#a5f3fc",
                "display": "flex",
                "justifyContent": "center",
                "minWidth": 256,
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              200
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#67e8f9",
                "display": "flex",
                "justifyContent": "center",
                "minWidth": 256,
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              300
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#22d3ee",
                "display": "flex",
                "justifyContent": "center",
                "minWidth": 256,
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              400
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#06b6d4",
                "display": "flex",
                "justifyContent": "center",
                "minWidth": 256,
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              500
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        />
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#404040",
                  "fontFamily": undefined,
                  "fontSize": 20,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 25,
                  "marginTop": 32,
                  "paddingBottom": 16,
                  "textDecorationLine": undefined,
                }
              }
            >
              Yellow
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#fef9c3",
                "display": "flex",
                "justifyContent": "center",
                "minWidth": 256,
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              100
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#fef08a",
                "display": "flex",
                "justifyContent": "center",
                "minWidth": 256,
                "paddingBottom": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              200
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 0,
            }
          }
        />
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Select Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        style={
          Object {
            "borderColor": "transparent",
            "borderRadius": 4,
            "borderWidth": 1,
            "marginTop": 4,
            "minWidth": 200,
          }
        }
      >
        <View
          accessibilityLabel="Choose Service"
          accessibilityRole="button"
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View
            pointerEvents="none"
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "borderColor": "#e5e5e5",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <TextInput
                _disabled={
                  Object {
                    "bg": "muted.100",
                    "opacity": "80",
                  }
                }
                _invalid={
                  Object {
                    "borderColor": "danger.600",
                  }
                }
                _selectedItem={
                  Object {
                    "bg": "teal.600",
                    "endIcon": <Memo
                      size="5"
                    />,
                  }
                }
                _text={
                  Object {
                    "color": "lightText",
                  }
                }
                accessibilityLabel="Choose Service"
                accessible={true}
                allowFontScaling={true}
                aria-hidden={true}
                editable={false}
                focusable={false}
                importantForAccessibility="no"
                onBlur={[Function]}
                onFocus={[Function]}
                onKeyPress={[Function]}
                onValueChange={[Function]}
                placeholder="Choose Service"
                placeholderTextColor="#a3a3a3"
                rejectResponderTermination={true}
                secureTextEntry={false}
                selectedValue=""
                selectionColor="#1f2937"
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "borderColor": "#e5e5e5",
                    "borderRadius": 4,
                    "borderWidth": 0,
                    "color": "#1f2937",
                    "flex": 1,
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "paddingBottom": 8,
                    "paddingLeft": 8,
                    "paddingRight": 8,
                    "paddingTop": 8,
                    "width": undefined,
                  }
                }
                underlineColorAndroid="transparent"
              />
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                color={4288914339}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#a3a3a3",
                      "height": 24,
                      "paddingBottom": 4,
                      "paddingLeft": 0,
                      "paddingRight": 4,
                      "paddingTop": 4,
                      "width": 24,
                    },
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                tintColor={4288914339}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGGroup
                      fill={
                        Array [
                          2,
                        ]
                      }
                      matrix={
                        Array [
                          6.123233995736766e-17,
                          1,
                          -1,
                          6.123233995736766e-17,
                          24,
                          0,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGPath
                        d="M0,0H24V24H0Z"
                        fill={null}
                        propList={
                          Array [
                            "fill",
                          ]
                        }
                      />
                      <RNSVGPath
                        d="M10,6,8.59,7.41,13.17,12,8.59,16.59,10,18l6-6Z"
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Select FormControlled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "maxWidth": "80%",
        }
      }
    >
      <View
        isInvalid={true}
        isRequired={true}
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <View
          feedbackId="field-react-aria-0-2-feedback"
          hasFeedbackText={false}
          hasHelpText={false}
          helpTextId="field-react-aria-0-2-helptext"
          isDisabled={false}
          isInvalid={true}
          isReadOnly={false}
          isRequired={true}
          labelId="field-react-aria-0-2-label"
          nativeID="field-react-aria-0-2-label"
          setHasFeedbackText={[Function]}
          setHasHelpText={[Function]}
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "marginBottom": 8,
              "marginRight": 12,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Choose service
          </Text>
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#dc2626",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            *
          </Text>
        </View>
        <View
          style={
            Object {
              "borderColor": "transparent",
              "borderRadius": 4,
              "borderWidth": 1,
              "marginTop": 4,
              "minWidth": 200,
            }
          }
        >
          <View
            accessibilityLabel="Choose Service"
            accessibilityRole="button"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <View
              pointerEvents="none"
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "borderColor": "#dc2626",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                  }
                }
              >
                <TextInput
                  _selectedItem={
                    Object {
                      "bg": "teal.600",
                      "endIcon": <Memo
                        size={5}
                      />,
                    }
                  }
                  _text={
                    Object {
                      "color": "lightText",
                    }
                  }
                  accessibilityInvalid={true}
                  accessibilityLabel="Choose Service"
                  accessibilityRequired={true}
                  accessible={true}
                  allowFontScaling={true}
                  aria-hidden={true}
                  disabled={false}
                  editable={false}
                  focusable={false}
                  importantForAccessibility="no"
                  isInvalid={true}
                  isRequired={true}
                  nativeID="field-react-aria-0-2"
                  onBlur={[Function]}
                  onFocus={[Function]}
                  onKeyPress={[Function]}
                  placeholder="Choose Service"
                  placeholderTextColor="#a3a3a3"
                  readOnly={false}
                  rejectResponderTermination={true}
                  required={true}
                  secureTextEntry={false}
                  selectionColor="#1f2937"
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "borderColor": "#dc2626",
                      "borderRadius": 4,
                      "borderWidth": 0,
                      "color": "#1f2937",
                      "flex": 1,
                      "fontFamily": undefined,
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "paddingBottom": 8,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                      "paddingTop": 8,
                      "width": undefined,
                    }
                  }
                  underlineColorAndroid="transparent"
                />
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={24}
                  bbWidth={24}
                  color={4288914339}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#a3a3a3",
                        "height": 24,
                        "paddingBottom": 4,
                        "paddingLeft": 0,
                        "paddingRight": 4,
                        "paddingTop": 4,
                        "width": 24,
                      },
                      Object {
                        "flex": 0,
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                  tintColor={4288914339}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGGroup
                        fill={
                          Array [
                            2,
                          ]
                        }
                        matrix={
                          Array [
                            6.123233995736766e-17,
                            1,
                            -1,
                            6.123233995736766e-17,
                            24,
                            0,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGPath
                          d="M0,0H24V24H0Z"
                          fill={null}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                        />
                        <RNSVGPath
                          d="M10,6,8.59,7.41,13.17,12,8.59,16.59,10,18l6-6Z"
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
          </View>
        </View>
        <View
          feedbackId="field-react-aria-0-2-feedback"
          hasFeedbackText={false}
          hasHelpText={false}
          helpTextId="field-react-aria-0-2-helptext"
          isDisabled={false}
          isInvalid={true}
          isReadOnly={false}
          isRequired={true}
          labelId="field-react-aria-0-2-label"
          nativeID="field-react-aria-0-2"
          setHasFeedbackText={[Function]}
          setHasHelpText={[Function]}
          style={
            Object {
              "marginTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <RNSVGSvgView
              accessibilityRole="image"
              align="xMidYMid"
              bbHeight={16}
              bbWidth={16}
              color={4292617766}
              focusable={false}
              meetOrSlice={0}
              minX={0}
              minY={0}
              stroke=""
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Object {
                    "color": "#dc2626",
                    "fontSize": 12,
                    "height": 16,
                    "width": 16,
                  },
                  Object {
                    "flex": 0,
                    "height": 16,
                    "width": 16,
                  },
                ]
              }
              tintColor={4292617766}
              vbHeight={16}
              vbWidth={16}
            >
              <RNSVGGroup
                font={
                  Object {
                    "fontSize": 12,
                  }
                }
                propList={
                  Array [
                    "stroke",
                  ]
                }
                stroke={null}
              >
                <RNSVGGroup>
                  <RNSVGPath
                    d="M8 16C6.41775 16 4.87103 15.5308 3.55544 14.6518C2.23985 13.7727 1.21447 12.5233 0.608967 11.0615C0.00346627 9.59966 -0.15496 7.99113 0.153721 6.43928C0.462403 4.88743 1.22433 3.46197 2.34315 2.34315C3.46197 1.22433 4.88743 0.462403 6.43928 0.153721C7.99113 -0.15496 9.59966 0.00346627 11.0615 0.608967C12.5233 1.21447 13.7727 2.23985 14.6518 3.55544C15.5308 4.87103 16 6.41775 16 8C16 10.1217 15.1571 12.1566 13.6569 13.6569C12.1566 15.1571 10.1217 16 8 16ZM8 14.4C9.2658 14.4 10.5032 14.0246 11.5556 13.3214C12.6081 12.6182 13.4284 11.6186 13.9128 10.4492C14.3972 9.27973 14.524 7.9929 14.277 6.75142C14.0301 5.50995 13.4205 4.36958 12.5255 3.47452C11.6304 2.57946 10.4901 1.96992 9.24858 1.72298C8.0071 1.47603 6.72028 1.60277 5.55083 2.08717C4.38138 2.57158 3.38184 3.39188 2.6786 4.44435C1.97536 5.49683 1.6 6.7342 1.6 8C1.6 9.69739 2.27429 11.3253 3.47452 12.5255C4.67475 13.7257 6.30262 14.4 8 14.4ZM7.2 10.4H8.8V12H7.2V10.4ZM7.2 4H8.8V8.8H7.2V4Z"
                    fill={
                      Array [
                        2,
                      ]
                    }
                    propList={
                      Array [
                        "fill",
                        "stroke",
                      ]
                    }
                    stroke={null}
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGSvgView>
            <View
              style={
                Object {
                  "width": 4,
                }
              }
            />
            <View
              style={Object {}}
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#dc2626",
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 18,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Please make a selection!
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Select Select Long list 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "maxWidth": "80%",
        }
      }
    >
      <View
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <View
          feedbackId="field-react-aria-0-2-feedback"
          hasFeedbackText={false}
          hasHelpText={false}
          helpTextId="field-react-aria-0-2-helptext"
          isDisabled={false}
          isInvalid={false}
          isReadOnly={false}
          isRequired={false}
          labelId="field-react-aria-0-2-label"
          nativeID="field-react-aria-0-2-label"
          setHasFeedbackText={[Function]}
          setHasHelpText={[Function]}
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "marginBottom": 8,
              "marginRight": 12,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Select Color
          </Text>
        </View>
        <View
          style={
            Object {
              "borderColor": "transparent",
              "borderRadius": 4,
              "borderWidth": 1,
              "marginTop": 4,
              "minWidth": 200,
            }
          }
        >
          <View
            accessibilityLabel="Select a Color"
            accessibilityRole="button"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <View
              pointerEvents="none"
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "borderColor": "#e5e5e5",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                  }
                }
              >
                <TextInput
                  _invalid={
                    Object {
                      "borderColor": "danger.600",
                    }
                  }
                  _selectedItem={
                    Object {
                      "bg": "teal.600",
                      "endIcon": <Memo
                        size={5}
                      />,
                    }
                  }
                  _text={
                    Object {
                      "color": "lightText",
                    }
                  }
                  accessibilityLabel="Select a Color"
                  accessible={true}
                  allowFontScaling={true}
                  aria-hidden={true}
                  disabled={false}
                  editable={false}
                  focusable={false}
                  importantForAccessibility="no"
                  isRequired={false}
                  nativeID="field-react-aria-0-2"
                  onBlur={[Function]}
                  onFocus={[Function]}
                  onKeyPress={[Function]}
                  onValueChange={[Function]}
                  placeholder="Select a Color"
                  placeholderTextColor="#a3a3a3"
                  readOnly={false}
                  rejectResponderTermination={true}
                  required={false}
                  secureTextEntry={false}
                  selectedValue=""
                  selectionColor="#1f2937"
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "borderColor": "#e5e5e5",
                      "borderRadius": 4,
                      "borderWidth": 0,
                      "color": "#1f2937",
                      "flex": 1,
                      "fontFamily": undefined,
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "paddingBottom": 8,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                      "paddingTop": 8,
                      "width": undefined,
                    }
                  }
                  underlineColorAndroid="transparent"
                />
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={24}
                  bbWidth={24}
                  color={4288914339}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#a3a3a3",
                        "height": 24,
                        "paddingBottom": 4,
                        "paddingLeft": 0,
                        "paddingRight": 4,
                        "paddingTop": 4,
                        "width": 24,
                      },
                      Object {
                        "flex": 0,
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                  tintColor={4288914339}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGGroup
                        fill={
                          Array [
                            2,
                          ]
                        }
                        matrix={
                          Array [
                            6.123233995736766e-17,
                            1,
                            -1,
                            6.123233995736766e-17,
                            24,
                            0,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGPath
                          d="M0,0H24V24H0Z"
                          fill={null}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                        />
                        <RNSVGPath
                          d="M10,6,8.59,7.41,13.17,12,8.59,16.59,10,18l6-6Z"
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Skeleton Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "borderColor": "#e5e7eb",
          "borderRadius": 6,
          "borderWidth": 1,
          "overflow": "hidden",
          "width": 400,
        }
      }
    >
      <View
        fadeDuration={0.1}
        speed={1}
        style={
          Object {
            "backgroundColor": "transparent",
            "height": 160,
            "overflow": "hidden",
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#e5e5e5",
              "height": "100%",
              "opacity": 0,
              "width": "100%",
            }
          }
        />
      </View>
      <View
        style={
          Object {
            "height": 32,
          }
        }
      />
      <View
        fadeDuration={0.1}
        speed={1}
        style={
          Object {
            "paddingLeft": 16,
            "paddingRight": 16,
            "width": "100%",
          }
        }
      >
        <View
          fadeDuration={0.1}
          speed={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 9999,
              "height": 12,
              "overflow": "hidden",
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#e5e5e5",
                "height": "100%",
                "opacity": 0,
                "width": "100%",
              }
            }
          />
        </View>
        <View
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          fadeDuration={0.1}
          speed={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 9999,
              "height": 12,
              "overflow": "hidden",
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#e5e5e5",
                "height": "100%",
                "opacity": 0,
                "width": "100%",
              }
            }
          />
        </View>
        <View
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          fadeDuration={0.1}
          speed={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 9999,
              "height": 12,
              "overflow": "hidden",
              "width": "75%",
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#e5e5e5",
                "height": "100%",
                "opacity": 0,
                "width": "100%",
              }
            }
          />
        </View>
      </View>
      <View
        style={
          Object {
            "height": 32,
          }
        }
      />
      <View
        fadeDuration={0.1}
        speed={1}
        style={
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "height": 40,
            "marginBottom": 16,
            "marginLeft": 16,
            "marginRight": 16,
            "marginTop": 16,
            "overflow": "hidden",
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#cffafe",
              "height": "100%",
              "opacity": 0,
              "width": "100%",
            }
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Skeleton Color 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "borderColor": "#e5e7eb",
          "borderRadius": 6,
          "borderWidth": 1,
          "flexDirection": "row",
          "paddingBottom": 16,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 16,
          "width": "80%",
        }
      }
    >
      <View
        fadeDuration={0.1}
        speed={1}
        style={
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "flex": 1,
            "height": "100%",
            "overflow": "hidden",
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#e5e5e5",
              "height": "100%",
              "opacity": 0,
              "width": "100%",
            }
          }
        />
      </View>
      <View
        style={
          Object {
            "width": 32,
          }
        }
      />
      <View
        style={
          Object {
            "flex": 3,
          }
        }
      >
        <View
          fadeDuration={0.1}
          speed={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "height": 40,
              "overflow": "hidden",
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#e5e5e5",
                "height": "100%",
                "opacity": 0,
                "width": "100%",
              }
            }
          />
        </View>
        <View
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          fadeDuration={0.1}
          speed={1}
          style={
            Object {
              "width": "100%",
            }
          }
        >
          <View
            fadeDuration={0.1}
            speed={1}
            style={
              Object {
                "backgroundColor": "transparent",
                "borderRadius": 9999,
                "height": 12,
                "overflow": "hidden",
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "height": "100%",
                  "opacity": 0,
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            fadeDuration={0.1}
            speed={1}
            style={
              Object {
                "backgroundColor": "transparent",
                "borderRadius": 9999,
                "height": 12,
                "overflow": "hidden",
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "height": "100%",
                  "opacity": 0,
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            fadeDuration={0.1}
            speed={1}
            style={
              Object {
                "backgroundColor": "transparent",
                "borderRadius": 9999,
                "height": 12,
                "overflow": "hidden",
                "width": "75%",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "height": "100%",
                  "opacity": 0,
                  "width": "100%",
                }
              }
            />
          </View>
        </View>
        <View
          style={
            Object {
              "height": 16,
            }
          }
        />
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            fadeDuration={0.1}
            speed={1}
            style={
              Object {
                "backgroundColor": "transparent",
                "borderRadius": 9999,
                "height": 20,
                "overflow": "hidden",
                "width": 20,
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "height": "100%",
                  "opacity": 0,
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "width": 8,
              }
            }
          />
          <View
            fadeDuration={0.1}
            speed={1}
            style={
              Object {
                "backgroundColor": "transparent",
                "borderRadius": 9999,
                "flex": 2,
                "height": 12,
                "overflow": "hidden",
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "height": "100%",
                  "opacity": 0,
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "width": 8,
              }
            }
          />
          <View
            fadeDuration={0.1}
            speed={1}
            style={
              Object {
                "backgroundColor": "transparent",
                "borderRadius": 9999,
                "flex": 1,
                "height": 12,
                "overflow": "hidden",
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "height": "100%",
                  "opacity": 0,
                  "width": "100%",
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Skeleton Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "borderColor": "#e5e7eb",
          "borderRadius": 6,
          "borderWidth": 1,
          "width": 400,
        }
      }
    >
      <View
        fadeDuration={0.1}
        speed={1}
        style={
          Object {
            "backgroundColor": "transparent",
            "height": 160,
            "overflow": "hidden",
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#e5e5e5",
              "height": "100%",
              "opacity": 0,
              "width": "100%",
            }
          }
        />
      </View>
      <View
        style={
          Object {
            "height": 24,
          }
        }
      />
      <View
        fadeDuration={0.1}
        speed={1}
        style={
          Object {
            "backgroundColor": "#fafaf9",
            "borderColor": "#e5e7eb",
            "borderRadius": 9999,
            "borderWidth": 1,
            "height": 80,
            "marginTop": -70,
            "overflow": "hidden",
            "width": 80,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#e5e5e5",
              "height": "100%",
              "opacity": 0,
              "width": "100%",
            }
          }
        />
      </View>
      <View
        style={
          Object {
            "height": 24,
          }
        }
      />
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <View
          fadeDuration={0.1}
          speed={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 9999,
              "height": 20,
              "overflow": "hidden",
              "width": 20,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#e5e5e5",
                "height": "100%",
                "opacity": 0,
                "width": "100%",
              }
            }
          />
        </View>
        <View
          style={
            Object {
              "width": 8,
            }
          }
        />
        <View
          fadeDuration={0.1}
          speed={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 9999,
              "height": 20,
              "overflow": "hidden",
              "width": 20,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#e5e5e5",
                "height": "100%",
                "opacity": 0,
                "width": "100%",
              }
            }
          />
        </View>
        <View
          style={
            Object {
              "width": 8,
            }
          }
        />
        <View
          fadeDuration={0.1}
          speed={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 9999,
              "height": 20,
              "overflow": "hidden",
              "width": 20,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#e5e5e5",
                "height": "100%",
                "opacity": 0,
                "width": "100%",
              }
            }
          />
        </View>
        <View
          style={
            Object {
              "width": 8,
            }
          }
        />
        <View
          fadeDuration={0.1}
          speed={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 9999,
              "height": 20,
              "overflow": "hidden",
              "width": 20,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#e5e5e5",
                "height": "100%",
                "opacity": 0,
                "width": "100%",
              }
            }
          />
        </View>
        <View
          style={
            Object {
              "width": 8,
            }
          }
        />
        <View
          fadeDuration={0.1}
          speed={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 9999,
              "height": 20,
              "overflow": "hidden",
              "width": 20,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#e5e5e5",
                "height": "100%",
                "opacity": 0,
                "width": "100%",
              }
            }
          />
        </View>
      </View>
      <View
        style={
          Object {
            "height": 24,
          }
        }
      />
      <View
        fadeDuration={0.1}
        speed={1}
        style={
          Object {
            "alignItems": "center",
            "paddingLeft": 48,
            "paddingRight": 48,
            "width": "100%",
          }
        }
      >
        <View
          fadeDuration={0.1}
          speed={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 9999,
              "height": 12,
              "overflow": "hidden",
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#e5e5e5",
                "height": "100%",
                "opacity": 0,
                "width": "100%",
              }
            }
          />
        </View>
        <View
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          fadeDuration={0.1}
          speed={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 9999,
              "height": 12,
              "overflow": "hidden",
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#e5e5e5",
                "height": "100%",
                "opacity": 0,
                "width": "100%",
              }
            }
          />
        </View>
        <View
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          fadeDuration={0.1}
          speed={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 9999,
              "height": 12,
              "overflow": "hidden",
              "width": "75%",
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#e5e5e5",
                "height": "100%",
                "opacity": 0,
                "width": "100%",
              }
            }
          />
        </View>
      </View>
      <View
        style={
          Object {
            "height": 24,
          }
        }
      />
      <View
        fadeDuration={0.1}
        speed={1}
        style={
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 20,
            "height": 40,
            "marginBottom": 12,
            "overflow": "hidden",
            "width": 160,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#e5e5e5",
              "height": "100%",
              "opacity": 0,
              "width": "100%",
            }
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Skeleton FadeDuration 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "width": "50%",
        }
      }
    >
      <View
        fadeDuration={0.9}
        speed={10}
        style={
          Object {
            "backgroundColor": "#22c55e",
            "height": 80,
            "overflow": "hidden",
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#db2777",
              "height": "100%",
              "opacity": 0,
              "width": "100%",
            }
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Skeleton isLoaded 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "width": "80%",
        }
      }
    >
      <View
        fadeDuration={0.1}
        isLoaded={false}
        speed={1}
        style={
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 9999,
            "height": 64,
            "overflow": "hidden",
            "width": 64,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#e5e5e5",
              "height": "100%",
              "opacity": 0,
              "width": "100%",
            }
          }
        />
      </View>
      <View
        fadeDuration={0.1}
        speed={1}
        style={
          Object {
            "height": 120,
            "lineHeight": 12,
            "marginTop": 20,
            "width": "100%",
          }
        }
      >
        <View
          fadeDuration={0.1}
          speed={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 9999,
              "height": 12,
              "overflow": "hidden",
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#e5e5e5",
                "height": "100%",
                "opacity": 0,
                "width": "100%",
              }
            }
          />
        </View>
        <View
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          fadeDuration={0.1}
          speed={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 9999,
              "height": 12,
              "overflow": "hidden",
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#e5e5e5",
                "height": "100%",
                "opacity": 0,
                "width": "100%",
              }
            }
          />
        </View>
        <View
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          fadeDuration={0.1}
          speed={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 9999,
              "height": 12,
              "overflow": "hidden",
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#e5e5e5",
                "height": "100%",
                "opacity": 0,
                "width": "100%",
              }
            }
          />
        </View>
        <View
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          fadeDuration={0.1}
          speed={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 9999,
              "height": 12,
              "overflow": "hidden",
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#e5e5e5",
                "height": "100%",
                "opacity": 0,
                "width": "100%",
              }
            }
          />
        </View>
        <View
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          fadeDuration={0.1}
          speed={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 9999,
              "height": 12,
              "overflow": "hidden",
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#e5e5e5",
                "height": "100%",
                "opacity": 0,
                "width": "100%",
              }
            }
          />
        </View>
        <View
          style={
            Object {
              "height": 8,
            }
          }
        />
        <View
          fadeDuration={0.1}
          speed={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 9999,
              "height": 12,
              "overflow": "hidden",
              "width": "75%",
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#e5e5e5",
                "height": "100%",
                "opacity": 0,
                "width": "100%",
              }
            }
          />
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Slider Color 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "width": "80%",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginBottom": 40,
            "textAlign": "center",
            "textDecorationLine": undefined,
          }
        }
      >
        Color Schemes
      </Text>
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        aria-label="Slider"
        colorScheme="orange"
        defaultValue={
          Array [
            70,
          ]
        }
        sliderSize={4}
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "width": "100%",
          }
        }
        thumbSize={4}
      >
        <View
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 16,
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingTop": 12,
              "width": "100%",
            }
          }
        >
          <View
            colorScheme="orange"
            style={
              Array [
                Object {
                  "backgroundColor": "#ffedd5",
                  "borderRadius": 8,
                  "height": 16,
                  "overflow": "hidden",
                  "width": 16,
                },
                Object {
                  "height": 4,
                  "width": "100%",
                },
              ]
            }
          >
            <View
              colorScheme="orange"
              style={
                Array [
                  Object {
                    "backgroundColor": "#ea580c",
                    "height": 16,
                    "left": 0,
                    "position": "absolute",
                    "width": 16,
                  },
                  Array [
                    undefined,
                    Object {
                      "height": 4,
                      "width": "70%",
                    },
                  ],
                ]
              }
            />
          </View>
        </View>
        <View
          colorScheme="orange"
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          scaleOnPressed={1.2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#ea580c",
                "borderRadius": 99999,
                "height": 16,
                "justifyContent": "center",
                "position": "absolute",
                "width": 16,
                "zIndex": 999,
              },
              Array [
                Object {
                  "bottom": undefined,
                  "left": "70%",
                  "transform": Array [
                    Object {
                      "translateX": -8,
                    },
                    Object {
                      "scale": 1,
                    },
                  ],
                },
                undefined,
              ],
            ]
          }
        />
      </View>
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        aria-label="Slider"
        colorScheme="emerald"
        defaultValue={
          Array [
            70,
          ]
        }
        sliderSize={4}
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "width": "100%",
          }
        }
        thumbSize={4}
      >
        <View
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 16,
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingTop": 12,
              "width": "100%",
            }
          }
        >
          <View
            colorScheme="emerald"
            style={
              Array [
                Object {
                  "backgroundColor": "#d1fae5",
                  "borderRadius": 8,
                  "height": 16,
                  "overflow": "hidden",
                  "width": 16,
                },
                Object {
                  "height": 4,
                  "width": "100%",
                },
              ]
            }
          >
            <View
              colorScheme="emerald"
              style={
                Array [
                  Object {
                    "backgroundColor": "#059669",
                    "height": 16,
                    "left": 0,
                    "position": "absolute",
                    "width": 16,
                  },
                  Array [
                    undefined,
                    Object {
                      "height": 4,
                      "width": "70%",
                    },
                  ],
                ]
              }
            />
          </View>
        </View>
        <View
          colorScheme="emerald"
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          scaleOnPressed={1.2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#059669",
                "borderRadius": 99999,
                "height": 16,
                "justifyContent": "center",
                "position": "absolute",
                "width": 16,
                "zIndex": 999,
              },
              Array [
                Object {
                  "bottom": undefined,
                  "left": "70%",
                  "transform": Array [
                    Object {
                      "translateX": -8,
                    },
                    Object {
                      "scale": 1,
                    },
                  ],
                },
                undefined,
              ],
            ]
          }
        />
      </View>
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        aria-label="Slider"
        colorScheme="indigo"
        defaultValue={
          Array [
            70,
          ]
        }
        sliderSize={4}
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "width": "100%",
          }
        }
        thumbSize={4}
      >
        <View
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 16,
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingTop": 12,
              "width": "100%",
            }
          }
        >
          <View
            colorScheme="indigo"
            style={
              Array [
                Object {
                  "backgroundColor": "#e0e7ff",
                  "borderRadius": 8,
                  "height": 16,
                  "overflow": "hidden",
                  "width": 16,
                },
                Object {
                  "height": 4,
                  "width": "100%",
                },
              ]
            }
          >
            <View
              colorScheme="indigo"
              style={
                Array [
                  Object {
                    "backgroundColor": "#4f46e5",
                    "height": 16,
                    "left": 0,
                    "position": "absolute",
                    "width": 16,
                  },
                  Array [
                    undefined,
                    Object {
                      "height": 4,
                      "width": "70%",
                    },
                  ],
                ]
              }
            />
          </View>
        </View>
        <View
          colorScheme="indigo"
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          scaleOnPressed={1.2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#4f46e5",
                "borderRadius": 99999,
                "height": 16,
                "justifyContent": "center",
                "position": "absolute",
                "width": 16,
                "zIndex": 999,
              },
              Array [
                Object {
                  "bottom": undefined,
                  "left": "70%",
                  "transform": Array [
                    Object {
                      "translateX": -8,
                    },
                    Object {
                      "scale": 1,
                    },
                  ],
                },
                undefined,
              ],
            ]
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Slider Customized 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "marginLeft": 20,
          "marginRight": 20,
          "width": "80%",
        }
      }
    >
      <View
        aria-label="Slider"
        colorScheme="green"
        defaultValue={
          Array [
            70,
          ]
        }
        sliderSize={4}
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "width": "100%",
          }
        }
        thumbSize={4}
      >
        <View
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 16,
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingTop": 12,
              "width": "100%",
            }
          }
        >
          <View
            colorScheme="green"
            style={
              Array [
                Object {
                  "backgroundColor": "#dcfce7",
                  "borderRadius": 8,
                  "height": 16,
                  "overflow": "hidden",
                  "width": 16,
                },
                Object {
                  "height": 4,
                  "width": "100%",
                },
              ]
            }
          >
            <View
              colorScheme="green"
              style={
                Array [
                  Object {
                    "backgroundColor": "#16a34a",
                    "height": 16,
                    "left": 0,
                    "position": "absolute",
                    "width": 16,
                  },
                  Array [
                    undefined,
                    Object {
                      "height": 4,
                      "width": "70%",
                    },
                  ],
                ]
              }
            />
          </View>
        </View>
        <View
          colorScheme="green"
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          scaleOnPressed={1.2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderRadius": 99999,
                "borderWidth": 0,
                "height": 16,
                "justifyContent": "center",
                "position": "absolute",
                "width": 16,
                "zIndex": 999,
              },
              Array [
                Object {
                  "bottom": undefined,
                  "left": "70%",
                  "transform": Array [
                    Object {
                      "translateX": -8,
                    },
                    Object {
                      "scale": 1,
                    },
                  ],
                },
                undefined,
              ],
            ]
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Object {
                  "color": "#16a34a",
                  "fontSize": 24,
                  "height": 24,
                  "lineHeight": 24,
                  "width": 24,
                },
                Object {
                  "fontFamily": "material",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Slider Disabled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "marginLeft": 20,
          "marginRight": 20,
          "width": "80%",
        }
      }
    >
      <View
        aria-label="Slider"
        colorScheme="indigo"
        defaultValue={
          Array [
            50,
          ]
        }
        maxValue={100}
        minValue={0}
        sliderSize={4}
        step={1}
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "opacity": 0.6,
            "width": "100%",
          }
        }
        thumbSize={4}
      >
        <View
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 16,
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingTop": 12,
              "width": "100%",
            }
          }
        >
          <View
            colorScheme="indigo"
            style={
              Array [
                Object {
                  "backgroundColor": "#e0e7ff",
                  "borderRadius": 8,
                  "height": 16,
                  "overflow": "hidden",
                  "width": 16,
                },
                Object {
                  "height": 4,
                  "width": "100%",
                },
              ]
            }
          >
            <View
              colorScheme="indigo"
              style={
                Array [
                  Object {
                    "backgroundColor": "#4f46e5",
                    "height": 16,
                    "left": 0,
                    "position": "absolute",
                    "width": 16,
                  },
                  Array [
                    undefined,
                    Object {
                      "height": 4,
                      "width": "50%",
                    },
                  ],
                ]
              }
            />
          </View>
        </View>
        <View
          colorScheme="indigo"
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          scaleOnPressed={1.2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#4f46e5",
                "borderRadius": 99999,
                "height": 16,
                "justifyContent": "center",
                "position": "absolute",
                "width": 16,
                "zIndex": 999,
              },
              Array [
                Object {
                  "bottom": undefined,
                  "left": "50%",
                  "transform": Array [
                    Object {
                      "translateX": -8,
                    },
                    Object {
                      "scale": 1,
                    },
                  ],
                },
                undefined,
              ],
            ]
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Slider Form Controlled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "marginLeft": 40,
          "marginRight": 40,
          "width": "80%",
        }
      }
    >
      <View
        isInvalid={true}
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <View
          feedbackId="field-react-aria-0-2-feedback"
          hasFeedbackText={false}
          hasHelpText={false}
          helpTextId="field-react-aria-0-2-helptext"
          isDisabled={false}
          isInvalid={true}
          isReadOnly={false}
          isRequired={false}
          labelId="field-react-aria-0-2-label"
          nativeID="field-react-aria-0-2-label"
          setHasFeedbackText={[Function]}
          setHasHelpText={[Function]}
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "marginBottom": 8,
              "marginRight": 12,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Set your budget
          </Text>
        </View>
        <View
          aria-label="Slider"
          defaultValue={
            Array [
              50,
            ]
          }
          sliderSize={4}
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "width": "100%",
            }
          }
          thumbSize={4}
        >
          <View
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 16,
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingTop": 12,
                "width": "100%",
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#cffafe",
                    "borderRadius": 8,
                    "height": 16,
                    "overflow": "hidden",
                    "width": 16,
                  },
                  Object {
                    "height": 4,
                    "width": "100%",
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#0891b2",
                      "height": 16,
                      "left": 0,
                      "position": "absolute",
                      "width": 16,
                    },
                    Array [
                      undefined,
                      Object {
                        "height": 4,
                        "width": "50%",
                      },
                    ],
                  ]
                }
              />
            </View>
          </View>
          <View
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            scaleOnPressed={1.2}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0891b2",
                  "borderRadius": 99999,
                  "height": 16,
                  "justifyContent": "center",
                  "position": "absolute",
                  "width": 16,
                  "zIndex": 999,
                },
                Array [
                  Object {
                    "bottom": undefined,
                    "left": "50%",
                    "transform": Array [
                      Object {
                        "translateX": -8,
                      },
                      Object {
                        "scale": 1,
                      },
                    ],
                  },
                  undefined,
                ],
              ]
            }
          />
        </View>
        <View
          feedbackId="field-react-aria-0-2-feedback"
          hasFeedbackText={false}
          hasHelpText={false}
          helpTextId="field-react-aria-0-2-helptext"
          isDisabled={false}
          isInvalid={true}
          isReadOnly={false}
          isRequired={false}
          labelId="field-react-aria-0-2-label"
          nativeID="field-react-aria-0-2"
          setHasFeedbackText={[Function]}
          setHasHelpText={[Function]}
          style={
            Object {
              "marginTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <RNSVGSvgView
              accessibilityRole="image"
              align="xMidYMid"
              bbHeight={16}
              bbWidth={16}
              color={4292617766}
              focusable={false}
              meetOrSlice={0}
              minX={0}
              minY={0}
              stroke=""
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Object {
                    "color": "#dc2626",
                    "fontSize": 12,
                    "height": 16,
                    "width": 16,
                  },
                  Object {
                    "flex": 0,
                    "height": 16,
                    "width": 16,
                  },
                ]
              }
              tintColor={4292617766}
              vbHeight={16}
              vbWidth={16}
            >
              <RNSVGGroup
                font={
                  Object {
                    "fontSize": 12,
                  }
                }
                propList={
                  Array [
                    "stroke",
                  ]
                }
                stroke={null}
              >
                <RNSVGGroup>
                  <RNSVGPath
                    d="M8 16C6.41775 16 4.87103 15.5308 3.55544 14.6518C2.23985 13.7727 1.21447 12.5233 0.608967 11.0615C0.00346627 9.59966 -0.15496 7.99113 0.153721 6.43928C0.462403 4.88743 1.22433 3.46197 2.34315 2.34315C3.46197 1.22433 4.88743 0.462403 6.43928 0.153721C7.99113 -0.15496 9.59966 0.00346627 11.0615 0.608967C12.5233 1.21447 13.7727 2.23985 14.6518 3.55544C15.5308 4.87103 16 6.41775 16 8C16 10.1217 15.1571 12.1566 13.6569 13.6569C12.1566 15.1571 10.1217 16 8 16ZM8 14.4C9.2658 14.4 10.5032 14.0246 11.5556 13.3214C12.6081 12.6182 13.4284 11.6186 13.9128 10.4492C14.3972 9.27973 14.524 7.9929 14.277 6.75142C14.0301 5.50995 13.4205 4.36958 12.5255 3.47452C11.6304 2.57946 10.4901 1.96992 9.24858 1.72298C8.0071 1.47603 6.72028 1.60277 5.55083 2.08717C4.38138 2.57158 3.38184 3.39188 2.6786 4.44435C1.97536 5.49683 1.6 6.7342 1.6 8C1.6 9.69739 2.27429 11.3253 3.47452 12.5255C4.67475 13.7257 6.30262 14.4 8 14.4ZM7.2 10.4H8.8V12H7.2V10.4ZM7.2 4H8.8V8.8H7.2V4Z"
                    fill={
                      Array [
                        2,
                      ]
                    }
                    propList={
                      Array [
                        "fill",
                        "stroke",
                      ]
                    }
                    stroke={null}
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGSvgView>
            <View
              style={
                Object {
                  "width": 4,
                }
              }
            />
            <View
              style={Object {}}
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#dc2626",
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 18,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Something is wrong.
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Slider Playground 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "marginLeft": 20,
          "marginRight": 20,
          "width": "80%",
        }
      }
    >
      <View
        aria-label="Slider"
        defaultValue={
          Array [
            50,
          ]
        }
        maxValue={100}
        minValue={0}
        sliderSize={4}
        step={1}
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "width": "100%",
          }
        }
        thumbSize={4}
      >
        <View
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 16,
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingTop": 12,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#cffafe",
                  "borderRadius": 8,
                  "height": 16,
                  "overflow": "hidden",
                  "width": 16,
                },
                Object {
                  "height": 4,
                  "width": "100%",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#0891b2",
                    "height": 16,
                    "left": 0,
                    "position": "absolute",
                    "width": 16,
                  },
                  Array [
                    undefined,
                    Object {
                      "height": 4,
                      "width": "50%",
                    },
                  ],
                ]
              }
            />
          </View>
        </View>
        <View
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          scaleOnPressed={1.2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#0891b2",
                "borderRadius": 99999,
                "height": 16,
                "justifyContent": "center",
                "position": "absolute",
                "width": 16,
                "zIndex": 999,
              },
              Array [
                Object {
                  "bottom": undefined,
                  "left": "50%",
                  "transform": Array [
                    Object {
                      "translateX": -8,
                    },
                    Object {
                      "scale": 1,
                    },
                  ],
                },
                undefined,
              ],
            ]
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Slider ReadOnly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "marginLeft": 20,
          "marginRight": 20,
          "width": "80%",
        }
      }
    >
      <View
        aria-label="Slider"
        defaultValue={
          Array [
            50,
          ]
        }
        maxValue={100}
        minValue={0}
        sliderSize={4}
        step={1}
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "width": "100%",
          }
        }
        thumbSize={4}
      >
        <View
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 16,
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingTop": 12,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#e0e7ff",
                  "borderRadius": 8,
                  "height": 16,
                  "overflow": "hidden",
                  "width": 16,
                },
                Object {
                  "height": 4,
                  "width": "100%",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#4f46e5",
                    "height": 16,
                    "left": 0,
                    "position": "absolute",
                    "width": 16,
                  },
                  Array [
                    undefined,
                    Object {
                      "height": 4,
                      "width": "50%",
                    },
                  ],
                ]
              }
            />
          </View>
        </View>
        <View
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          scaleOnPressed={1.2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#4f46e5",
                "borderRadius": 99999,
                "height": 16,
                "justifyContent": "center",
                "position": "absolute",
                "width": 16,
                "zIndex": 999,
              },
              Array [
                Object {
                  "bottom": undefined,
                  "left": "50%",
                  "transform": Array [
                    Object {
                      "translateX": -8,
                    },
                    Object {
                      "scale": 1,
                    },
                  ],
                },
                undefined,
              ],
            ]
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Slider Size 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "width": "80%",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginBottom": 40,
            "textAlign": "center",
            "textDecorationLine": undefined,
          }
        }
      >
        Sizes
      </Text>
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        aria-label="Slider"
        defaultValue={
          Array [
            40,
          ]
        }
        sliderSize={4}
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "width": "100%",
          }
        }
        thumbSize={4}
      >
        <View
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 16,
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingTop": 12,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#cffafe",
                  "borderRadius": 8,
                  "height": 16,
                  "overflow": "hidden",
                  "width": 16,
                },
                Object {
                  "height": 4,
                  "width": "100%",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#0891b2",
                    "height": 16,
                    "left": 0,
                    "position": "absolute",
                    "width": 16,
                  },
                  Array [
                    undefined,
                    Object {
                      "height": 4,
                      "width": "40%",
                    },
                  ],
                ]
              }
            />
          </View>
        </View>
        <View
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          scaleOnPressed={1.2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#0891b2",
                "borderRadius": 99999,
                "height": 16,
                "justifyContent": "center",
                "position": "absolute",
                "width": 16,
                "zIndex": 999,
              },
              Array [
                Object {
                  "bottom": undefined,
                  "left": "40%",
                  "transform": Array [
                    Object {
                      "translateX": -8,
                    },
                    Object {
                      "scale": 1,
                    },
                  ],
                },
                undefined,
              ],
            ]
          }
        />
      </View>
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        aria-label="Slider"
        defaultValue={
          Array [
            60,
          ]
        }
        sliderSize={5}
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "width": "100%",
          }
        }
        thumbSize={5}
      >
        <View
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 20,
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingTop": 12,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#cffafe",
                  "borderRadius": 8,
                  "height": 20,
                  "overflow": "hidden",
                  "width": 20,
                },
                Object {
                  "height": 5,
                  "width": "100%",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#0891b2",
                    "height": 20,
                    "left": 0,
                    "position": "absolute",
                    "width": 20,
                  },
                  Array [
                    undefined,
                    Object {
                      "height": 5,
                      "width": "60%",
                    },
                  ],
                ]
              }
            />
          </View>
        </View>
        <View
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          scaleOnPressed={1.2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#0891b2",
                "borderRadius": 99999,
                "height": 20,
                "justifyContent": "center",
                "position": "absolute",
                "width": 20,
                "zIndex": 999,
              },
              Array [
                Object {
                  "bottom": undefined,
                  "left": "60%",
                  "transform": Array [
                    Object {
                      "translateX": -10,
                    },
                    Object {
                      "scale": 1,
                    },
                  ],
                },
                undefined,
              ],
            ]
          }
        />
      </View>
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        aria-label="Slider"
        defaultValue={
          Array [
            80,
          ]
        }
        sliderSize={6}
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "width": "100%",
          }
        }
        thumbSize={6}
      >
        <View
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 24,
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingTop": 12,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#cffafe",
                  "borderRadius": 8,
                  "height": 24,
                  "overflow": "hidden",
                  "width": 24,
                },
                Object {
                  "height": 6,
                  "width": "100%",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#0891b2",
                    "height": 24,
                    "left": 0,
                    "position": "absolute",
                    "width": 24,
                  },
                  Array [
                    undefined,
                    Object {
                      "height": 6,
                      "width": "80%",
                    },
                  ],
                ]
              }
            />
          </View>
        </View>
        <View
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          scaleOnPressed={1.2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#0891b2",
                "borderRadius": 99999,
                "height": 24,
                "justifyContent": "center",
                "position": "absolute",
                "width": 24,
                "zIndex": 999,
              },
              Array [
                Object {
                  "bottom": undefined,
                  "left": "80%",
                  "transform": Array [
                    Object {
                      "translateX": -12,
                    },
                    Object {
                      "scale": 1,
                    },
                  ],
                },
                undefined,
              ],
            ]
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Slider Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "marginLeft": 20,
          "marginRight": 20,
          "width": "80%",
        }
      }
    >
      <View
        accessibilityLabel="hello world"
        aria-label="hello world"
        defaultValue={
          Array [
            70,
          ]
        }
        maxValue={100}
        minValue={0}
        sliderSize={4}
        step={10}
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "width": "100%",
          }
        }
        thumbSize={4}
      >
        <View
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 16,
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingTop": 12,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#cffafe",
                  "borderRadius": 8,
                  "height": 16,
                  "overflow": "hidden",
                  "width": 16,
                },
                Object {
                  "height": 4,
                  "width": "100%",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#0891b2",
                    "height": 16,
                    "left": 0,
                    "position": "absolute",
                    "width": 16,
                  },
                  Array [
                    undefined,
                    Object {
                      "height": 4,
                      "width": "70%",
                    },
                  ],
                ]
              }
            />
          </View>
        </View>
        <View
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          scaleOnPressed={1.2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#0891b2",
                "borderRadius": 99999,
                "height": 16,
                "justifyContent": "center",
                "position": "absolute",
                "width": 16,
                "zIndex": 999,
              },
              Array [
                Object {
                  "bottom": undefined,
                  "left": "70%",
                  "transform": Array [
                    Object {
                      "translateX": -8,
                    },
                    Object {
                      "scale": 1,
                    },
                  ],
                },
                undefined,
              ],
            ]
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Slider Value 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "marginLeft": 20,
          "marginRight": 20,
          "width": "80%",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textAlign": "center",
            "textDecorationLine": undefined,
          }
        }
      >
        onChangeValue - 
        70
      </Text>
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textAlign": "center",
            "textDecorationLine": undefined,
          }
        }
      >
        onChangeEndValue - 
        70
      </Text>
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        style={
          Object {
            "marginLeft": 20,
            "marginRight": 20,
            "width": "80%",
          }
        }
      >
        <View
          aria-label="Slider"
          colorScheme="cyan"
          defaultValue={
            Array [
              70,
            ]
          }
          onChange={[Function]}
          onChangeEnd={[Function]}
          sliderSize={4}
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "width": "100%",
            }
          }
          thumbSize={4}
        >
          <View
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "height": 16,
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingTop": 12,
                "width": "100%",
              }
            }
          >
            <View
              colorScheme="cyan"
              style={
                Array [
                  Object {
                    "backgroundColor": "#cffafe",
                    "borderRadius": 8,
                    "height": 16,
                    "overflow": "hidden",
                    "width": 16,
                  },
                  Object {
                    "height": 4,
                    "width": "100%",
                  },
                ]
              }
            >
              <View
                colorScheme="cyan"
                style={
                  Array [
                    Object {
                      "backgroundColor": "#0891b2",
                      "height": 16,
                      "left": 0,
                      "position": "absolute",
                      "width": 16,
                    },
                    Array [
                      undefined,
                      Object {
                        "height": 4,
                        "width": "70%",
                      },
                    ],
                  ]
                }
              />
            </View>
          </View>
          <View
            colorScheme="cyan"
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            scaleOnPressed={1.2}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0891b2",
                  "borderRadius": 99999,
                  "height": 16,
                  "justifyContent": "center",
                  "position": "absolute",
                  "width": 16,
                  "zIndex": 999,
                },
                Array [
                  Object {
                    "bottom": undefined,
                    "left": "70%",
                    "transform": Array [
                      Object {
                        "translateX": -8,
                      },
                      Object {
                        "scale": 1,
                      },
                    ],
                  },
                  undefined,
                ],
              ]
            }
          />
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Slider Vertical 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "marginLeft": 20,
          "marginRight": 20,
          "width": "80%",
        }
      }
    >
      <View
        aria-label="Slider"
        colorScheme="teal"
        defaultValue={
          Array [
            70,
          ]
        }
        orientation="vertical"
        sliderSize={4}
        style={
          Object {
            "alignItems": "center",
            "height": 192,
            "justifyContent": "center",
          }
        }
        thumbSize={4}
      >
        <View
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": "100%",
              "justifyContent": "center",
              "paddingLeft": 12,
              "paddingRight": 12,
              "width": 16,
            }
          }
        >
          <View
            colorScheme="teal"
            style={
              Array [
                Object {
                  "backgroundColor": "#ccfbf1",
                  "borderRadius": 8,
                  "height": 16,
                  "overflow": "hidden",
                  "width": 16,
                },
                Object {
                  "height": "100%",
                  "width": 4,
                },
              ]
            }
          >
            <View
              colorScheme="teal"
              style={
                Array [
                  Object {
                    "backgroundColor": "#0d9488",
                    "bottom": 0,
                    "height": 16,
                    "position": "absolute",
                    "width": 16,
                  },
                  Array [
                    undefined,
                    Object {
                      "height": "70%",
                      "width": 4,
                    },
                  ],
                ]
              }
            />
          </View>
        </View>
        <View
          colorScheme="teal"
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          scaleOnPressed={1.2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#0d9488",
                "borderRadius": 99999,
                "height": 16,
                "justifyContent": "center",
                "position": "absolute",
                "width": 16,
                "zIndex": 999,
              },
              Array [
                Object {
                  "bottom": "70%",
                  "left": undefined,
                  "transform": Array [
                    Object {
                      "translateY": 8,
                    },
                    Object {
                      "scale": 1,
                    },
                  ],
                },
                undefined,
              ],
            ]
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Spinner Color 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginBottom": 40,
            "textAlign": "center",
            "textDecorationLine": undefined,
          }
        }
      >
        Color Scheme
      </Text>
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <ActivityIndicator
        accessibilityLabel="loading"
        accessible={true}
        animating={true}
        color="#10b981"
        hidesWhenStopped={true}
        size="small"
      />
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <ActivityIndicator
        accessibilityLabel="loading"
        accessible={true}
        animating={true}
        color="#f97316"
        hidesWhenStopped={true}
        size="small"
      />
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <ActivityIndicator
        accessibilityLabel="loading"
        accessible={true}
        animating={true}
        color="#6366f1"
        hidesWhenStopped={true}
        size="small"
      />
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <ActivityIndicator
        accessibilityLabel="loading"
        accessible={true}
        animating={true}
        color="#06b6d4"
        hidesWhenStopped={true}
        size="small"
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Spinner Playground 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "space-between",
        }
      }
    >
      <ActivityIndicator
        accessibilityLabel="loading"
        accessible={true}
        animating={true}
        color="#67e8f9"
        hidesWhenStopped={true}
        size="large"
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Spinner Size 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginBottom": 40,
            "textAlign": "center",
            "textDecorationLine": undefined,
          }
        }
      >
        Sizes
      </Text>
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <ActivityIndicator
        accessibilityLabel="loading"
        accessible={true}
        animating={true}
        color="#06b6d4"
        hidesWhenStopped={true}
        size="small"
      />
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <ActivityIndicator
        accessibilityLabel="loading"
        accessible={true}
        animating={true}
        color="#06b6d4"
        hidesWhenStopped={true}
        size="large"
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Spinner Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        }
      }
    >
      <ActivityIndicator
        accessibilityLabel="Loading posts"
        accessible={true}
        animating={true}
        color="#06b6d4"
        hidesWhenStopped={true}
        size="small"
      />
      <View
        style={
          Object {
            "width": 8,
          }
        }
      />
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#06b6d4",
            "fontFamily": undefined,
            "fontSize": 16,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 20,
            "textDecorationLine": undefined,
          }
        }
      >
        Loading
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Stack Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RCTScrollView
      contentContainerStyle={
        Array [
          Object {},
          Object {},
        ]
      }
      style={Object {}}
    >
      <View>
        <View
          style={
            Object {
              "marginTop": 16,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#404040",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            row
          </Text>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            style={
              Object {
                "flexDirection": "row",
                "marginBottom": 10,
                "marginTop": 6,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#06b6d4",
                  "borderRadius": 4,
                  "display": "flex",
                  "elevation": 4,
                  "height": 64,
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.23,
                  "shadowRadius": 2.62,
                  "width": 64,
                }
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafaf9",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Box 1
              </Text>
            </View>
            <View
              style={
                Object {
                  "width": 12,
                }
              }
            />
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ec4899",
                  "borderRadius": 4,
                  "display": "flex",
                  "elevation": 4,
                  "height": 64,
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.23,
                  "shadowRadius": 2.62,
                  "width": 64,
                }
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafaf9",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Box 2
              </Text>
            </View>
            <View
              style={
                Object {
                  "width": 12,
                }
              }
            />
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#10b981",
                  "borderRadius": 4,
                  "display": "flex",
                  "elevation": 4,
                  "height": 64,
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.23,
                  "shadowRadius": 2.62,
                  "width": 64,
                }
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafaf9",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Box 3
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            style={
              Object {
                "backgroundColor": "#e5e7eb",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#404040",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            column
          </Text>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            style={
              Object {
                "flexDirection": "column",
                "marginBottom": 10,
                "marginTop": 6,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#06b6d4",
                  "borderRadius": 4,
                  "display": "flex",
                  "elevation": 4,
                  "height": 64,
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.23,
                  "shadowRadius": 2.62,
                  "width": 64,
                }
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafaf9",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Box 1
              </Text>
            </View>
            <View
              style={
                Object {
                  "height": 12,
                }
              }
            />
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ec4899",
                  "borderRadius": 4,
                  "display": "flex",
                  "elevation": 4,
                  "height": 64,
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.23,
                  "shadowRadius": 2.62,
                  "width": 64,
                }
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafaf9",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Box 2
              </Text>
            </View>
            <View
              style={
                Object {
                  "height": 12,
                }
              }
            />
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#10b981",
                  "borderRadius": 4,
                  "display": "flex",
                  "elevation": 4,
                  "height": 64,
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.23,
                  "shadowRadius": 2.62,
                  "width": 64,
                }
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafaf9",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Box 3
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            style={
              Object {
                "backgroundColor": "#e5e7eb",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#404040",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            row-reverse
          </Text>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            style={
              Object {
                "flexDirection": "row",
                "marginBottom": 10,
                "marginTop": 6,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#10b981",
                  "borderRadius": 4,
                  "display": "flex",
                  "elevation": 4,
                  "height": 64,
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.23,
                  "shadowRadius": 2.62,
                  "width": 64,
                }
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafaf9",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Box 3
              </Text>
            </View>
            <View
              style={
                Object {
                  "width": 12,
                }
              }
            />
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ec4899",
                  "borderRadius": 4,
                  "display": "flex",
                  "elevation": 4,
                  "height": 64,
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.23,
                  "shadowRadius": 2.62,
                  "width": 64,
                }
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafaf9",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Box 2
              </Text>
            </View>
            <View
              style={
                Object {
                  "width": 12,
                }
              }
            />
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#06b6d4",
                  "borderRadius": 4,
                  "display": "flex",
                  "elevation": 4,
                  "height": 64,
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.23,
                  "shadowRadius": 2.62,
                  "width": 64,
                }
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafaf9",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Box 1
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            style={
              Object {
                "backgroundColor": "#e5e7eb",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#404040",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 25,
                "textDecorationLine": undefined,
              }
            }
          >
            column-reverse
          </Text>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            style={
              Object {
                "flexDirection": "column-reverse",
                "marginBottom": 10,
                "marginTop": 6,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#06b6d4",
                  "borderRadius": 4,
                  "display": "flex",
                  "elevation": 4,
                  "height": 64,
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.23,
                  "shadowRadius": 2.62,
                  "width": 64,
                }
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafaf9",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Box 1
              </Text>
            </View>
            <View
              style={
                Object {
                  "height": 12,
                }
              }
            />
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ec4899",
                  "borderRadius": 4,
                  "display": "flex",
                  "elevation": 4,
                  "height": 64,
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.23,
                  "shadowRadius": 2.62,
                  "width": 64,
                }
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafaf9",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Box 2
              </Text>
            </View>
            <View
              style={
                Object {
                  "height": 12,
                }
              }
            />
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#10b981",
                  "borderRadius": 4,
                  "display": "flex",
                  "elevation": 4,
                  "height": 64,
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.23,
                  "shadowRadius": 2.62,
                  "width": 64,
                }
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#fafaf9",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Box 3
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            aria-orientation="horizontal"
            style={
              Object {
                "backgroundColor": "#e5e7eb",
                "height": 1,
                "width": "100%",
              }
            }
            thickness="1"
          />
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Stack Divider 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <View
        style={Object {}}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "marginBottom": 12,
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Simple
            </Text>
          </View>
          <View
            aria-orientation="vertical"
            style={
              Object {
                "backgroundColor": "#e5e7eb",
                "height": "100%",
                "marginLeft": 8,
                "marginRight": 8,
                "width": 2,
              }
            }
            thickness="2"
          />
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Easy
            </Text>
          </View>
          <View
            aria-orientation="vertical"
            style={
              Object {
                "backgroundColor": "#e5e7eb",
                "height": "100%",
                "marginLeft": 8,
                "marginRight": 8,
                "width": 2,
              }
            }
            thickness="2"
          />
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Beautiful
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots StatusBar Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Switch Accessibility 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 18,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 27,
            "textDecorationLine": undefined,
          }
        }
      >
        Accessibility
      </Text>
      <View
        style={
          Object {
            "width": 32,
          }
        }
      />
      <RCTSwitch
        accessibilityHint="turn on or off"
        accessibilityLabel="switch-accessible"
        accessibilityRole="switch"
        activeThumbColor="#FFFFFF"
        colorScheme="primary"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#06b6d4"
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Array [
                Object {
                  "opacity": 1,
                },
                Object {},
              ],
              Object {
                "backgroundColor": "#e4e4e7",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#FFFFFF"
        tintColor="#e4e4e7"
        value={false}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Switch Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": undefined,
          }
        }
      >
        Bluetooth
      </Text>
      <View
        style={
          Object {
            "width": 16,
          }
        }
      />
      <RCTSwitch
        accessibilityRole="switch"
        activeThumbColor="#FFFFFF"
        colorScheme="primary"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#06b6d4"
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Array [
                Object {
                  "opacity": 1,
                },
                Object {
                  "transform": Array [
                    Object {
                      "scale": 0.75,
                    },
                  ],
                },
              ],
              Object {
                "backgroundColor": "#e4e4e7",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#FFFFFF"
        tintColor="#e4e4e7"
        value={false}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Switch ColorSchemes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginBottom": 40,
            "textAlign": "center",
            "textDecorationLine": undefined,
          }
        }
      >
        Color Scheme
      </Text>
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <RCTSwitch
        accessibilityRole="switch"
        activeThumbColor="#FFFFFF"
        colorScheme="primary"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#06b6d4"
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Array [
                Object {
                  "opacity": 1,
                },
                Object {},
              ],
              Object {
                "backgroundColor": "#e4e4e7",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#FFFFFF"
        tintColor="#e4e4e7"
        value={true}
      />
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <RCTSwitch
        accessibilityRole="switch"
        activeThumbColor="#FFFFFF"
        colorScheme="secondary"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#ec4899"
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Array [
                Object {
                  "opacity": 1,
                },
                Object {},
              ],
              Object {
                "backgroundColor": "#e4e4e7",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#FFFFFF"
        tintColor="#e4e4e7"
        value={true}
      />
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <RCTSwitch
        accessibilityRole="switch"
        activeThumbColor="#FFFFFF"
        colorScheme="emerald"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#10b981"
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Array [
                Object {
                  "opacity": 1,
                },
                Object {},
              ],
              Object {
                "backgroundColor": "#e4e4e7",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#FFFFFF"
        tintColor="#e4e4e7"
        value={true}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Switch Sizes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginBottom": 40,
            "textDecorationLine": undefined,
          }
        }
      >
        Sizes
      </Text>
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <RCTSwitch
        accessibilityRole="switch"
        activeThumbColor="#FFFFFF"
        colorScheme="primary"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#06b6d4"
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Array [
                Object {
                  "opacity": 1,
                },
                Object {
                  "transform": Array [
                    Object {
                      "scale": 0.75,
                    },
                  ],
                },
              ],
              Object {
                "backgroundColor": "#e4e4e7",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#FFFFFF"
        tintColor="#e4e4e7"
        value={false}
      />
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <RCTSwitch
        accessibilityRole="switch"
        activeThumbColor="#FFFFFF"
        colorScheme="primary"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#06b6d4"
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Array [
                Object {
                  "opacity": 1,
                },
                Object {},
              ],
              Object {
                "backgroundColor": "#e4e4e7",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#FFFFFF"
        tintColor="#e4e4e7"
        value={false}
      />
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <RCTSwitch
        accessibilityRole="switch"
        activeThumbColor="#FFFFFF"
        colorScheme="primary"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#06b6d4"
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Array [
                Object {
                  "marginBottom": 4,
                  "marginLeft": 4,
                  "marginRight": 4,
                  "marginTop": 4,
                  "opacity": 1,
                },
                Object {
                  "transform": Array [
                    Object {
                      "scale": 1.25,
                    },
                  ],
                },
              ],
              Object {
                "backgroundColor": "#e4e4e7",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#FFFFFF"
        tintColor="#e4e4e7"
        value={false}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Switch Switch bgColor 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginBottom": 40,
            "textAlign": "center",
            "textDecorationLine": undefined,
          }
        }
      >
        Track & Thumb color
      </Text>
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <RCTSwitch
        accessibilityRole="switch"
        activeThumbColor="#FFFFFF"
        colorScheme="primary"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#06b6d4"
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Array [
                Object {
                  "opacity": 1,
                },
                Object {},
              ],
              Object {
                "backgroundColor": "#e4e4e7",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#FFFFFF"
        tintColor="#e4e4e7"
        value={false}
      />
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <RCTSwitch
        accessibilityRole="switch"
        activeThumbColor="#f97316"
        colorScheme="primary"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#fed7aa"
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Array [
                Object {
                  "opacity": 1,
                },
                Object {},
              ],
              Object {
                "backgroundColor": "#ffedd5",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#fff7ed"
        tintColor="#ffedd5"
        value={false}
      />
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <RCTSwitch
        accessibilityRole="switch"
        activeThumbColor="#6366f1"
        colorScheme="primary"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#c7d2fe"
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Array [
                Object {
                  "opacity": 1,
                },
                Object {},
              ],
              Object {
                "backgroundColor": "#e0e7ff",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#eef2ff"
        tintColor="#e0e7ff"
        value={false}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Tabs Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "width": "100%",
        }
      }
    >
      <View
        accessibilityRole="tablist"
        style={
          Object {
            "borderBottomWidth": 2,
            "borderColor": "#e5e5e5",
            "flexDirection": "row",
            "justifyContent": "flex-start",
            "width": "100%",
          }
        }
      >
        <View
          accessibilityRole="tab"
          accessibilityState={
            Object {
              "selected": false,
            }
          }
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "marginBottom": -2,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderBottomWidth": 2,
                  "borderColor": "transparent",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 12,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 12,
                },
                Array [
                  undefined,
                  false,
                  undefined,
                ],
              ]
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#71717a",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              TAB ONE
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="tab"
          accessibilityState={
            Object {
              "selected": false,
            }
          }
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "marginBottom": -2,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderBottomWidth": 2,
                  "borderColor": "transparent",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 12,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 12,
                },
                Array [
                  undefined,
                  false,
                  undefined,
                ],
              ]
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#71717a",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              TAB TWO
            </Text>
          </View>
        </View>
      </View>
      <View
        style={Object {}}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Tabs Colors 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "width": "100%",
        }
      }
    >
      <View
        colorScheme="primary"
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <View
          accessibilityRole="tablist"
          style={
            Object {
              "borderBottomWidth": 2,
              "borderColor": "#e5e5e5",
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "width": "100%",
            }
          }
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Three
              </Text>
            </View>
          </View>
        </View>
        <View
          style={Object {}}
        />
      </View>
      <View
        style={
          Object {
            "height": 28,
          }
        }
      />
      <View
        colorScheme="secondary"
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <View
          accessibilityRole="tablist"
          style={
            Object {
              "borderBottomWidth": 2,
              "borderColor": "#e5e5e5",
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "width": "100%",
            }
          }
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Three
              </Text>
            </View>
          </View>
        </View>
        <View
          style={Object {}}
        />
      </View>
      <View
        style={
          Object {
            "height": 28,
          }
        }
      />
      <View
        colorScheme="emerald"
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <View
          accessibilityRole="tablist"
          style={
            Object {
              "borderBottomWidth": 2,
              "borderColor": "#e5e5e5",
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "width": "100%",
            }
          }
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Three
              </Text>
            </View>
          </View>
        </View>
        <View
          style={Object {}}
        />
      </View>
      <View
        style={
          Object {
            "height": 28,
          }
        }
      />
      <View
        colorScheme="orange"
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <View
          accessibilityRole="tablist"
          style={
            Object {
              "borderBottomWidth": 2,
              "borderColor": "#e5e5e5",
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "width": "100%",
            }
          }
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Three
              </Text>
            </View>
          </View>
        </View>
        <View
          style={Object {}}
        />
      </View>
      <View
        style={
          Object {
            "height": 28,
          }
        }
      />
      <View
        colorScheme="info"
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <View
          accessibilityRole="tablist"
          style={
            Object {
              "borderBottomWidth": 2,
              "borderColor": "#e5e5e5",
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "width": "100%",
            }
          }
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Three
              </Text>
            </View>
          </View>
        </View>
        <View
          style={Object {}}
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Tabs Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <View
          accessibilityRole="tablist"
          style={
            Object {
              "borderBottomWidth": 2,
              "borderColor": "#e5e5e5",
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "width": "100%",
            }
          }
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Three
              </Text>
            </View>
          </View>
        </View>
        <View
          style={Object {}}
        />
      </View>
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": undefined,
          }
        }
      >
        To show how tabs behaves around other components.
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Tabs Controlled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      index={0}
      style={
        Object {
          "width": "100%",
        }
      }
    >
      <View
        accessibilityRole="tablist"
        style={
          Object {
            "borderBottomWidth": 2,
            "borderColor": "#e5e5e5",
            "flexDirection": "row",
            "justifyContent": "flex-start",
            "width": "100%",
          }
        }
      >
        <View
          accessibilityRole="tab"
          accessibilityState={
            Object {
              "selected": true,
            }
          }
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "marginBottom": -2,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderBottomWidth": 2,
                  "borderColor": "#22d3ee",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 12,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 12,
                },
                Array [
                  undefined,
                  undefined,
                  undefined,
                ],
              ]
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#0891b2",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              One
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="tab"
          accessibilityState={
            Object {
              "selected": false,
            }
          }
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "marginBottom": -2,
            }
          }
        >
          <View
            accessibilityLabel="two"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderBottomWidth": 2,
                  "borderColor": "transparent",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 12,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 12,
                },
                Array [
                  undefined,
                  false,
                  undefined,
                ],
              ]
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#ef4444",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Two
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="tab"
          accessibilityState={
            Object {
              "selected": false,
            }
          }
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "marginBottom": -2,
            }
          }
        >
          <View
            accessibilityLabel="three"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderBottomWidth": 2,
                  "borderColor": "transparent",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 12,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 12,
                },
                Array [
                  undefined,
                  false,
                  undefined,
                ],
              ]
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#71717a",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Three
            </Text>
          </View>
        </View>
      </View>
      <View
        style={Object {}}
      >
        <View
          style={
            Object {
              "paddingBottom": 12,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 12,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            One
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Tabs Fitted Tab 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "width": "90%",
        }
      }
    >
      <View
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <View
          accessibilityRole="tablist"
          style={
            Object {
              "borderBottomWidth": 2,
              "borderColor": "#e5e5e5",
              "flexDirection": "row",
              "justifyContent": "space-between",
              "width": "100%",
            }
          }
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flex": 1,
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flex": 1,
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flex": 1,
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Three
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flex": 1,
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Four
              </Text>
            </View>
          </View>
        </View>
        <View
          style={Object {}}
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Tabs IconTabs 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <View
          accessibilityRole="tablist"
          style={
            Object {
              "borderBottomWidth": 2,
              "borderColor": "#e5e5e5",
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "width": "100%",
            }
          }
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <RNSVGSvgView
                accessibilityRole="image"
                bbHeight={32}
                bbWidth={32}
                color={4280690214}
                focusable={false}
                name="home"
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#262626",
                      "height": 32,
                      "marginLeft": 8,
                      "marginRight": 8,
                      "width": 32,
                    },
                    Object {
                      "flex": 0,
                      "height": 32,
                      "width": 32,
                    },
                  ]
                }
                tintColor={4280690214}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                        "strokeWidth",
                      ]
                    }
                    stroke={
                      Array [
                        2,
                      ]
                    }
                    strokeWidth="1.5"
                  >
                    <RNSVGPath
                      d="M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25"
                      fill={null}
                      propList={
                        Array [
                          "fill",
                          "strokeLinecap",
                        ]
                      }
                      strokeLinecap={1}
                    />
                    <RNSVGPath
                      d="M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0"
                      fill={null}
                      propList={
                        Array [
                          "fill",
                          "strokeLinecap",
                        ]
                      }
                      strokeLinecap={1}
                    />
                    <RNSVGCircle
                      cx="12"
                      cy="12"
                      fill={null}
                      propList={
                        Array [
                          "fill",
                          "strokeMiterlimit",
                        ]
                      }
                      r="11.25"
                      strokeMiterlimit={10}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Home
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <RNSVGSvgView
                accessibilityRole="image"
                bbHeight={32}
                bbWidth={32}
                color={4280690214}
                focusable={false}
                name="book"
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#262626",
                      "height": 32,
                      "marginLeft": 8,
                      "marginRight": 8,
                      "width": 32,
                    },
                    Object {
                      "flex": 0,
                      "height": 32,
                      "width": 32,
                    },
                  ]
                }
                tintColor={4280690214}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                        "strokeWidth",
                      ]
                    }
                    stroke={
                      Array [
                        2,
                      ]
                    }
                    strokeWidth="1.5"
                  >
                    <RNSVGPath
                      d="M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25"
                      fill={null}
                      propList={
                        Array [
                          "fill",
                          "strokeLinecap",
                        ]
                      }
                      strokeLinecap={1}
                    />
                    <RNSVGPath
                      d="M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0"
                      fill={null}
                      propList={
                        Array [
                          "fill",
                          "strokeLinecap",
                        ]
                      }
                      strokeLinecap={1}
                    />
                    <RNSVGCircle
                      cx="12"
                      cy="12"
                      fill={null}
                      propList={
                        Array [
                          "fill",
                          "strokeMiterlimit",
                        ]
                      }
                      r="11.25"
                      strokeMiterlimit={10}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Bookmarks
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <RNSVGSvgView
                accessibilityRole="image"
                bbHeight={32}
                bbWidth={32}
                color={4280690214}
                focusable={false}
                name="camera"
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#262626",
                      "height": 32,
                      "marginLeft": 8,
                      "marginRight": 8,
                      "width": 32,
                    },
                    Object {
                      "flex": 0,
                      "height": 32,
                      "width": 32,
                    },
                  ]
                }
                tintColor={4280690214}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                        "strokeWidth",
                      ]
                    }
                    stroke={
                      Array [
                        2,
                      ]
                    }
                    strokeWidth="1.5"
                  >
                    <RNSVGPath
                      d="M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25"
                      fill={null}
                      propList={
                        Array [
                          "fill",
                          "strokeLinecap",
                        ]
                      }
                      strokeLinecap={1}
                    />
                    <RNSVGPath
                      d="M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0"
                      fill={null}
                      propList={
                        Array [
                          "fill",
                          "strokeLinecap",
                        ]
                      }
                      strokeLinecap={1}
                    />
                    <RNSVGCircle
                      cx="12"
                      cy="12"
                      fill={null}
                      propList={
                        Array [
                          "fill",
                          "strokeMiterlimit",
                        ]
                      }
                      r="11.25"
                      strokeMiterlimit={10}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Camera
              </Text>
            </View>
          </View>
        </View>
        <View
          style={Object {}}
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Tabs Size 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <View
          accessibilityRole="tablist"
          style={
            Object {
              "borderBottomWidth": 2,
              "borderColor": "#e5e5e5",
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "width": "100%",
            }
          }
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 8,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 8,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 8,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 8,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 8,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 8,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Three
              </Text>
            </View>
          </View>
        </View>
        <View
          style={Object {}}
        />
      </View>
      <View
        style={
          Object {
            "height": 28,
          }
        }
      />
      <View
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <View
          accessibilityRole="tablist"
          style={
            Object {
              "borderBottomWidth": 2,
              "borderColor": "#e5e5e5",
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "width": "100%",
            }
          }
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "textDecorationLine": undefined,
                  }
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Three
              </Text>
            </View>
          </View>
        </View>
        <View
          style={Object {}}
        />
      </View>
      <View
        style={
          Object {
            "height": 28,
          }
        }
      />
      <View
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <View
          accessibilityRole="tablist"
          style={
            Object {
              "borderBottomWidth": 2,
              "borderColor": "#e5e5e5",
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "width": "100%",
            }
          }
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 16,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 16,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 18,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 27,
                    "textDecorationLine": undefined,
                  }
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 16,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 16,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 18,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 27,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 16,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 16,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 18,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 27,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Three
              </Text>
            </View>
          </View>
        </View>
        <View
          style={Object {}}
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Tabs Tab Alignment 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <View
          accessibilityRole="tablist"
          style={
            Object {
              "borderBottomWidth": 2,
              "borderColor": "#e5e5e5",
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "width": "100%",
            }
          }
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Three
              </Text>
            </View>
          </View>
        </View>
        <View
          style={Object {}}
        />
      </View>
      <View
        style={
          Object {
            "height": 28,
          }
        }
      />
      <View
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <View
          accessibilityRole="tablist"
          style={
            Object {
              "borderBottomWidth": 2,
              "borderColor": "#e5e5e5",
              "flexDirection": "row",
              "justifyContent": "center",
              "width": "100%",
            }
          }
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Three
              </Text>
            </View>
          </View>
        </View>
        <View
          style={Object {}}
        />
      </View>
      <View
        style={
          Object {
            "height": 28,
          }
        }
      />
      <View
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <View
          accessibilityRole="tablist"
          style={
            Object {
              "borderBottomWidth": 2,
              "borderColor": "#e5e5e5",
              "flexDirection": "row",
              "justifyContent": "flex-end",
              "width": "100%",
            }
          }
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Three
              </Text>
            </View>
          </View>
        </View>
        <View
          style={Object {}}
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Tabs TabBarOnly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "width": "100%",
        }
      }
    >
      <View
        accessibilityRole="tablist"
        style={
          Object {
            "borderBottomWidth": 2,
            "borderColor": "#e5e5e5",
            "flexDirection": "row",
            "justifyContent": "flex-start",
            "width": "100%",
          }
        }
      >
        <View
          accessibilityRole="tab"
          accessibilityState={
            Object {
              "selected": false,
            }
          }
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "marginBottom": -2,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderBottomWidth": 2,
                  "borderColor": "transparent",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 12,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 12,
                },
                Array [
                  undefined,
                  false,
                  undefined,
                ],
              ]
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#71717a",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              One
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="tab"
          accessibilityState={
            Object {
              "selected": false,
            }
          }
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "marginBottom": -2,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderBottomWidth": 2,
                  "borderColor": "transparent",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 12,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 12,
                },
                Array [
                  undefined,
                  false,
                  undefined,
                ],
              ]
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#71717a",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Two
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="tab"
          accessibilityState={
            Object {
              "selected": false,
            }
          }
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "marginBottom": -2,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderBottomWidth": 2,
                  "borderColor": "transparent",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 12,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 12,
                },
                Array [
                  undefined,
                  false,
                  undefined,
                ],
              ]
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#71717a",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Three
            </Text>
          </View>
        </View>
      </View>
      <View
        style={Object {}}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Tabs Variants 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "width": "100%",
          }
        }
        variant="outline"
      >
        <View
          accessibilityRole="tablist"
          style={
            Object {
              "borderBottomWidth": 2,
              "borderColor": "#e5e5e5",
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "width": "100%",
            }
          }
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Three
              </Text>
            </View>
          </View>
        </View>
        <View
          style={Object {}}
        />
      </View>
      <View
        style={
          Object {
            "height": 28,
          }
        }
      />
      <View
        style={
          Object {
            "width": "100%",
          }
        }
        variant="filled"
      >
        <View
          accessibilityRole="tablist"
          style={
            Object {
              "borderBottomWidth": 2,
              "borderColor": "#e5e5e5",
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "width": "100%",
            }
          }
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Three
              </Text>
            </View>
          </View>
        </View>
        <View
          style={Object {}}
        />
      </View>
      <View
        style={
          Object {
            "height": 28,
          }
        }
      />
      <View
        style={
          Object {
            "width": "100%",
          }
        }
        variant="filled-outline"
      >
        <View
          accessibilityRole="tablist"
          style={
            Object {
              "backgroundColor": "#cffafe",
              "borderBottomWidth": 2,
              "borderColor": "#e5e5e5",
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "width": "100%",
            }
          }
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginBottom": -2,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  Array [
                    undefined,
                    false,
                    undefined,
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Three
              </Text>
            </View>
          </View>
        </View>
        <View
          style={Object {}}
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Text Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Text
      style={
        Object {
          "backgroundColor": undefined,
          "color": "#1f2937",
          "fontFamily": undefined,
          "fontSize": 14,
          "fontStyle": "normal",
          "fontWeight": "400",
          "letterSpacing": 0,
          "lineHeight": 21,
          "textDecorationLine": undefined,
        }
      }
    >
      This is Text.
    </Text>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Text Changing Font Size 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "marginTop": 12,
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginBottom": 40,
            "textAlign": "center",
            "textDecorationLine": undefined,
          }
        }
      >
        Sizes
      </Text>
      <View
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 12,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 18,
            "textDecorationLine": undefined,
          }
        }
      >
        xs
      </Text>
      <View
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": undefined,
          }
        }
      >
        sm
      </Text>
      <View
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 16,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 24,
            "textDecorationLine": undefined,
          }
        }
      >
        md
      </Text>
      <View
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 18,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 27,
            "textDecorationLine": undefined,
          }
        }
      >
        lg
      </Text>
      <View
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 20,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 30,
            "textDecorationLine": undefined,
          }
        }
      >
        xl
      </Text>
      <View
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 36,
            "textDecorationLine": undefined,
          }
        }
      >
        2xl
      </Text>
      <View
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 30,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 45,
            "textDecorationLine": undefined,
          }
        }
      >
        3xl
      </Text>
      <View
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 36,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 54,
            "textDecorationLine": undefined,
          }
        }
      >
        4xl
      </Text>
      <View
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 48,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 72,
            "textDecorationLine": undefined,
          }
        }
      >
        5xl
      </Text>
      <View
        style={
          Object {
            "height": 4,
          }
        }
      />
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 60,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 90,
            "textDecorationLine": undefined,
          }
        }
      >
        6xl
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Text Nested 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Text
      style={
        Object {
          "backgroundColor": undefined,
          "color": "#1f2937",
          "fontFamily": undefined,
          "fontSize": 14,
          "fontStyle": "italic",
          "fontWeight": "400",
          "letterSpacing": 0,
          "lineHeight": 21,
          "textDecorationLine": undefined,
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "fontFamily": undefined,
            "fontSize": undefined,
            "fontStyle": undefined,
            "fontWeight": "700",
            "textDecorationLine": undefined,
          }
        }
      >
        Taj Mahal
      </Text>
       is in Agra.
    </Text>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Text Overriden 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": undefined,
          }
        }
      >
        Bold
      </Text>
      <View
        style={
          Object {
            "height": 8,
          }
        }
      />
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "italic",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": undefined,
          }
        }
      >
        Italic
      </Text>
      <View
        style={
          Object {
            "height": 8,
          }
        }
      />
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": "underline",
          }
        }
      >
        Underline
      </Text>
      <View
        style={
          Object {
            "height": 8,
          }
        }
      />
      <Text
        style={
          Object {
            "backgroundColor": "#fdba74",
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": undefined,
          }
        }
      >
        Highlighted
      </Text>
      <View
        style={
          Object {
            "height": 8,
          }
        }
      />
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": undefined,
          }
        }
      >
        H
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "fontFamily": undefined,
              "fontSize": 10,
              "fontStyle": undefined,
              "fontWeight": undefined,
              "textDecorationLine": undefined,
            }
          }
        >
          2
        </Text>
        O
      </Text>
      <View
        style={
          Object {
            "height": 8,
          }
        }
      />
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": "underline",
          }
        }
      >
        Underline
      </Text>
      <View
        style={
          Object {
            "height": 8,
          }
        }
      />
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "400",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": "line-through",
          }
        }
      >
        StrikeThrough
      </Text>
      <View
        style={
          Object {
            "height": 8,
          }
        }
      />
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "italic",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 21,
            "textDecorationLine": "underline",
          }
        }
      >
        Bold, Italic & Underline
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Text Truncated 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Text
      numberOfLines={1}
      style={
        Object {
          "backgroundColor": undefined,
          "color": "#1f2937",
          "fontFamily": undefined,
          "fontSize": 14,
          "fontStyle": "normal",
          "fontWeight": "400",
          "letterSpacing": 0,
          "lineHeight": 21,
          "maxWidth": 300,
          "textDecorationLine": undefined,
          "width": "80%",
        }
      }
    >
      NativeBase gives you a contrasting color based on your theme. You can also customise it using the useAccessibleColors hook.
    </Text>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots TextArea Default 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <TextInput
      _disabled={
        Object {
          "bg": "muted.100",
          "opacity": "80",
        }
      }
      _invalid={
        Object {
          "borderColor": "danger.600",
        }
      }
      accessible={true}
      allowFontScaling={true}
      editable={true}
      multiline={true}
      numberOfLines={4}
      onBlur={[Function]}
      onFocus={[Function]}
      onKeyPress={[Function]}
      placeholder="Text Area Placeholder"
      placeholderTextColor="#a3a3a3"
      rejectResponderTermination={true}
      secureTextEntry={false}
      selectionColor="#1f2937"
      style={
        Object {
          "backgroundColor": "transparent",
          "borderColor": "#e5e5e5",
          "borderRadius": 4,
          "borderWidth": 1,
          "color": "#1f2937",
          "fontFamily": undefined,
          "fontSize": 12,
          "fontStyle": "normal",
          "fontWeight": "400",
          "height": 80,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "width": "70%",
        }
      }
      textAlignVertical="top"
      underlineColorAndroid="transparent"
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots TextArea InValid and Disabled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "width": "70%",
        }
      }
    >
      <View
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 18,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 27,
              "marginBottom": 16,
              "textDecorationLine": undefined,
            }
          }
        >
          Invalid TextArea
        </Text>
        <TextInput
          _disabled={
            Object {
              "bg": "muted.100",
              "opacity": "80",
            }
          }
          accessibilityInvalid={true}
          accessible={true}
          allowFontScaling={true}
          aria-label="t1"
          editable={true}
          isInvalid={true}
          multiline={true}
          numberOfLines={4}
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="Invalid TextArea"
          placeholderTextColor="#a3a3a3"
          rejectResponderTermination={true}
          secureTextEntry={false}
          selectionColor="#1f2937"
          style={
            Object {
              "backgroundColor": "transparent",
              "borderColor": "#dc2626",
              "borderRadius": 4,
              "borderWidth": 1,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "400",
              "height": 80,
              "marginBottom": 20,
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
              "width": undefined,
            }
          }
          textAlignVertical="top"
          underlineColorAndroid="transparent"
        />
        <View
          aria-orientation="horizontal"
          style={
            Object {
              "backgroundColor": "#e5e7eb",
              "height": 1,
              "width": "100%",
            }
          }
          thickness="1"
        />
      </View>
      <View
        style={
          Object {
            "height": 10,
          }
        }
      />
      <View
        style={Object {}}
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 18,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 27,
              "marginBottom": 16,
              "textDecorationLine": undefined,
            }
          }
        >
          Disabled TextArea
        </Text>
        <TextInput
          _invalid={
            Object {
              "borderColor": "danger.600",
            }
          }
          _text={
            Object {
              "color": "darkText",
            }
          }
          accessible={true}
          allowFontScaling={true}
          aria-label="t1Disabled"
          disabled={true}
          editable={false}
          multiline={true}
          numberOfLines={4}
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="Disabled TextArea"
          placeholderTextColor="#a3a3a3"
          rejectResponderTermination={true}
          secureTextEntry={false}
          selectionColor="#1f2937"
          style={
            Object {
              "backgroundColor": "#f5f5f5",
              "borderColor": "#e5e5e5",
              "borderRadius": 4,
              "borderWidth": 1,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "400",
              "height": 80,
              "opacity": 0.8,
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
              "width": undefined,
            }
          }
          textAlignVertical="top"
          underlineColorAndroid="transparent"
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots TextArea Sizes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RCTScrollView
      contentContainerStyle={
        Array [
          Object {},
          Object {},
        ]
      }
      style={
        Object {
          "width": "70%",
        }
      }
    >
      <View>
        <View
          style={
            Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
              "marginTop": 16,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#404040",
                "fontFamily": undefined,
                "fontSize": 24,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 30,
                "marginBottom": 40,
                "textAlign": "center",
                "textDecorationLine": undefined,
              }
            }
          >
            Sizes
          </Text>
          <View
            style={
              Object {
                "width": "90%",
              }
            }
          >
            <TextInput
              _disabled={
                Object {
                  "bg": "muted.100",
                  "opacity": "80",
                }
              }
              _invalid={
                Object {
                  "borderColor": "danger.600",
                }
              }
              accessible={true}
              allowFontScaling={true}
              aria-label="t2"
              editable={true}
              multiline={true}
              numberOfLines={4}
              onBlur={[Function]}
              onFocus={[Function]}
              onKeyPress={[Function]}
              placeholder="xs"
              placeholderTextColor="#a3a3a3"
              rejectResponderTermination={true}
              secureTextEntry={false}
              selectionColor="#1f2937"
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderColor": "#e5e5e5",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 10,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": 80,
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                  "width": undefined,
                }
              }
              textAlignVertical="top"
              underlineColorAndroid="transparent"
            />
            <View
              style={
                Object {
                  "height": 16,
                }
              }
            />
            <TextInput
              _disabled={
                Object {
                  "bg": "muted.100",
                  "opacity": "80",
                }
              }
              _invalid={
                Object {
                  "borderColor": "danger.600",
                }
              }
              accessible={true}
              allowFontScaling={true}
              aria-label="t2"
              editable={true}
              multiline={true}
              numberOfLines={4}
              onBlur={[Function]}
              onFocus={[Function]}
              onKeyPress={[Function]}
              placeholder="sm"
              placeholderTextColor="#a3a3a3"
              rejectResponderTermination={true}
              secureTextEntry={false}
              selectionColor="#1f2937"
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderColor": "#e5e5e5",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": 80,
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                  "width": undefined,
                }
              }
              textAlignVertical="top"
              underlineColorAndroid="transparent"
            />
            <View
              style={
                Object {
                  "height": 16,
                }
              }
            />
            <TextInput
              _disabled={
                Object {
                  "bg": "muted.100",
                  "opacity": "80",
                }
              }
              _invalid={
                Object {
                  "borderColor": "danger.600",
                }
              }
              accessible={true}
              allowFontScaling={true}
              aria-label="t2"
              editable={true}
              multiline={true}
              numberOfLines={4}
              onBlur={[Function]}
              onFocus={[Function]}
              onKeyPress={[Function]}
              placeholder="md"
              placeholderTextColor="#a3a3a3"
              rejectResponderTermination={true}
              secureTextEntry={false}
              selectionColor="#1f2937"
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderColor": "#e5e5e5",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": 80,
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                  "width": undefined,
                }
              }
              textAlignVertical="top"
              underlineColorAndroid="transparent"
            />
            <View
              style={
                Object {
                  "height": 16,
                }
              }
            />
            <TextInput
              _disabled={
                Object {
                  "bg": "muted.100",
                  "opacity": "80",
                }
              }
              _invalid={
                Object {
                  "borderColor": "danger.600",
                }
              }
              accessible={true}
              allowFontScaling={true}
              aria-label="t2"
              editable={true}
              multiline={true}
              numberOfLines={4}
              onBlur={[Function]}
              onFocus={[Function]}
              onKeyPress={[Function]}
              placeholder="lg"
              placeholderTextColor="#a3a3a3"
              rejectResponderTermination={true}
              secureTextEntry={false}
              selectionColor="#1f2937"
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderColor": "#e5e5e5",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": 80,
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                  "width": undefined,
                }
              }
              textAlignVertical="top"
              underlineColorAndroid="transparent"
            />
            <View
              style={
                Object {
                  "height": 16,
                }
              }
            />
            <TextInput
              _disabled={
                Object {
                  "bg": "muted.100",
                  "opacity": "80",
                }
              }
              _invalid={
                Object {
                  "borderColor": "danger.600",
                }
              }
              accessible={true}
              allowFontScaling={true}
              aria-label="t2"
              editable={true}
              multiline={true}
              numberOfLines={4}
              onBlur={[Function]}
              onFocus={[Function]}
              onKeyPress={[Function]}
              placeholder="xl"
              placeholderTextColor="#a3a3a3"
              rejectResponderTermination={true}
              secureTextEntry={false}
              selectionColor="#1f2937"
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderColor": "#e5e5e5",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 18,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": 80,
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                  "width": undefined,
                }
              }
              textAlignVertical="top"
              underlineColorAndroid="transparent"
            />
            <View
              style={
                Object {
                  "height": 16,
                }
              }
            />
            <TextInput
              _disabled={
                Object {
                  "bg": "muted.100",
                  "opacity": "80",
                }
              }
              _invalid={
                Object {
                  "borderColor": "danger.600",
                }
              }
              accessible={true}
              allowFontScaling={true}
              aria-label="t2"
              editable={true}
              multiline={true}
              numberOfLines={4}
              onBlur={[Function]}
              onFocus={[Function]}
              onKeyPress={[Function]}
              placeholder="2xl"
              placeholderTextColor="#a3a3a3"
              rejectResponderTermination={true}
              secureTextEntry={false}
              selectionColor="#1f2937"
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderColor": "#e5e5e5",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 20,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": 80,
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                  "width": undefined,
                }
              }
              textAlignVertical="top"
              underlineColorAndroid="transparent"
            />
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots TextArea Value Controlled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <TextInput
      _disabled={
        Object {
          "bg": "muted.100",
          "opacity": "80",
        }
      }
      _invalid={
        Object {
          "borderColor": "danger.600",
        }
      }
      accessible={true}
      allowFontScaling={true}
      editable={true}
      multiline={true}
      numberOfLines={4}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyPress={[Function]}
      placeholderTextColor="#a3a3a3"
      rejectResponderTermination={true}
      secureTextEntry={false}
      selectionColor="#1f2937"
      style={
        Object {
          "backgroundColor": "transparent",
          "borderColor": "#e5e5e5",
          "borderRadius": 4,
          "borderWidth": 1,
          "color": "#1f2937",
          "fontFamily": undefined,
          "fontSize": 12,
          "fontStyle": "normal",
          "fontWeight": "400",
          "height": 80,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "width": "70%",
        }
      }
      textAlignVertical="top"
      underlineColorAndroid="transparent"
      value="Value Controlled"
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Toast Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#06b6d4",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Bottom
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Toast CloseToast 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "flexDirection": "column",
        }
      }
    >
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Toast
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        _disabled={
          Object {
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "opacity": "80",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderColor": "#67e8f9",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#06b6d4",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Close last toast
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        _disabled={
          Object {
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "opacity": "80",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderColor": "#67e8f9",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#06b6d4",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Close all toasts
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Toast Custom Component 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#06b6d4",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Custom Toast
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Toast Custom Component with custom Id 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#06b6d4",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Custom Toast
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Toast Prevent Duplicate 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#06b6d4",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Click me!
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Toast Status 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Success
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Error
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Info
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Warning
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Toast Toast Positions 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Bottom
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Top
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Top left
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Top right
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Bottom left
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Bottom right
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Toast Toast Ref 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#06b6d4",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Bottom
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Toast Toast Variants 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "display": "flex",
          "flexDirection": "column",
          "flexWrap": "wrap",
        }
      }
      wrap="wrap"
    >
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 8,
            "marginRight": 8,
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Show solid toast
            </Text>
          </View>
        </View>
      </View>
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 8,
            "marginRight": 8,
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Show subtle toast
            </Text>
          </View>
        </View>
      </View>
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 8,
            "marginRight": 8,
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Show left-accent toast
            </Text>
          </View>
        </View>
      </View>
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 8,
            "marginRight": 8,
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Show top-accent toast
            </Text>
          </View>
        </View>
      </View>
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 8,
            "marginRight": 8,
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Show outline toast
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Tooltip Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#06b6d4",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            More
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Tooltip Customizing 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#06b6d4",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            More
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Tooltip Tooltip Positions 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignSelf": "flex-start",
          "width": "100%",
        }
      }
    >
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              ToolTip
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 24,
          }
        }
      />
      <View
        style={
          Object {
            "borderColor": "transparent",
            "borderRadius": 4,
            "borderWidth": 1,
            "marginLeft": 0,
            "marginRight": 0,
          }
        }
      >
        <View
          accessibilityLabel="Select a position for Tooltip"
          accessibilityRole="button"
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View
            pointerEvents="none"
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "borderColor": "#e5e5e5",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <TextInput
                _disabled={
                  Object {
                    "bg": "muted.100",
                    "opacity": "80",
                  }
                }
                _invalid={
                  Object {
                    "borderColor": "danger.600",
                  }
                }
                _selectedItem={
                  Object {
                    "bg": "cyan.600",
                    "endIcon": <Memo
                      size={4}
                    />,
                  }
                }
                _text={
                  Object {
                    "color": "lightText",
                  }
                }
                accessibilityLabel="Select a position for Tooltip"
                accessible={true}
                allowFontScaling={true}
                aria-hidden={true}
                editable={false}
                focusable={false}
                importantForAccessibility="no"
                onBlur={[Function]}
                onFocus={[Function]}
                onKeyPress={[Function]}
                onValueChange={[Function]}
                placeholderTextColor="#a3a3a3"
                rejectResponderTermination={true}
                secureTextEntry={false}
                selectedValue="top left"
                selectionColor="#1f2937"
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "borderColor": "#e5e5e5",
                    "borderRadius": 4,
                    "borderWidth": 0,
                    "color": "#1f2937",
                    "flex": 1,
                    "fontFamily": undefined,
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "paddingBottom": 8,
                    "paddingLeft": 8,
                    "paddingRight": 8,
                    "paddingTop": 8,
                    "width": undefined,
                  }
                }
                underlineColorAndroid="transparent"
                value="Top Left"
              />
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                color={4288914339}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "color": "#a3a3a3",
                      "height": 24,
                      "paddingBottom": 4,
                      "paddingLeft": 0,
                      "paddingRight": 4,
                      "paddingTop": 4,
                      "width": 24,
                    },
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                tintColor={4288914339}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGGroup
                      fill={
                        Array [
                          2,
                        ]
                      }
                      matrix={
                        Array [
                          6.123233995736766e-17,
                          1,
                          -1,
                          6.123233995736766e-17,
                          24,
                          0,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGPath
                        d="M0,0H24V24H0Z"
                        fill={null}
                        propList={
                          Array [
                            "fill",
                          ]
                        }
                      />
                      <RNSVGPath
                        d="M10,6,8.59,7.41,13.17,12,8.59,16.59,10,18l6-6Z"
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Transitions Fade 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#06b6d4",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Show
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Transitions ScaleFade 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#06b6d4",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Show
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Transitions Slide 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "width": "50%",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "center",
            "width": "100%",
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#404040",
              "fontFamily": undefined,
              "fontSize": 20,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 25,
              "marginBottom": 16,
              "textAlign": "center",
              "textDecorationLine": undefined,
            }
          }
        >
          Top
        </Text>
        <View
          _disabled={
            Object {
              "bg": "trueGray.300",
              "opacity": "50",
            }
          }
          _loading={
            Object {
              "bg": "warmGray.50",
              "opacity": "50",
            }
          }
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "marginBottom": 20,
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
              "width": 100,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              style={Object {}}
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#FFFFFF",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Show
              </Text>
            </View>
          </View>
        </View>
        <View
          aria-orientation="horizontal"
          style={
            Object {
              "backgroundColor": "#e5e7eb",
              "height": 1,
              "width": "100%",
            }
          }
          thickness="1"
        />
      </View>
      <View
        style={
          Object {
            "height": 10,
          }
        }
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "center",
            "width": "100%",
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#404040",
              "fontFamily": undefined,
              "fontSize": 20,
              "fontStyle": "normal",
              "fontWeight": "700",
              "letterSpacing": 0,
              "lineHeight": 25,
              "marginBottom": 16,
              "textAlign": "center",
              "textDecorationLine": undefined,
            }
          }
        >
          Bottom
        </Text>
        <View
          _disabled={
            Object {
              "bg": "trueGray.300",
              "opacity": "50",
            }
          }
          _loading={
            Object {
              "bg": "warmGray.50",
              "opacity": "50",
            }
          }
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
              "width": 100,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              style={Object {}}
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#FFFFFF",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Show
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Transitions Slide wrapped inside parent 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "height": "100%",
          "justifyContent": "center",
          "width": "75%",
        }
      }
    >
      <View
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "flex-end",
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#404040",
                "fontFamily": undefined,
                "fontSize": 24,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 30,
                "textDecorationLine": undefined,
              }
            }
          >
            Order
          </Text>
        </View>
        <View
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "space-between",
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Sub Total
          </Text>
          <View
            style={Object {}}
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#94a3b8",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            $298.77
          </Text>
        </View>
        <View
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "space-between",
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Tax
          </Text>
          <View
            style={Object {}}
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#94a3b8",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            $38.84
          </Text>
        </View>
        <View
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "space-between",
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Total Amount
          </Text>
          <View
            style={Object {}}
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#059669",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            $337.61
          </Text>
        </View>
        <View
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          style={
            Object {
              "marginTop": 8,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Promo Code
          </Text>
          <View
            style={
              Object {
                "height": 8,
              }
            }
          />
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <TextInput
              _disabled={
                Object {
                  "bg": "muted.100",
                  "opacity": "80",
                }
              }
              _invalid={
                Object {
                  "borderColor": "danger.600",
                }
              }
              accessible={true}
              allowFontScaling={true}
              editable={true}
              onBlur={[Function]}
              onFocus={[Function]}
              onKeyPress={[Function]}
              placeholderTextColor="#a3a3a3"
              rejectResponderTermination={true}
              secureTextEntry={false}
              selectionColor="#1f2937"
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderColor": "#e5e5e5",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "color": "#1f2937",
                  "flex": 1,
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                  "width": undefined,
                }
              }
              underlineColorAndroid="transparent"
            />
            <View
              style={
                Object {
                  "width": 12,
                }
              }
            />
            <View
              _disabled={
                Object {
                  "opacity": "50",
                }
              }
              _loading={
                Object {
                  "opacity": "80",
                }
              }
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityRole="button"
              accessible={true}
              colorScheme="primary"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderColor": "#67e8f9",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#06b6d4",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Apply
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          _disabled={
            Object {
              "bg": "trueGray.300",
              "opacity": "50",
            }
          }
          _loading={
            Object {
              "bg": "warmGray.50",
              "opacity": "50",
            }
          }
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "marginBottom": 8,
              "marginTop": 8,
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              style={Object {}}
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#FFFFFF",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Place Order
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Transitions SlideFade 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <View
        _disabled={
          Object {
            "bg": "trueGray.300",
            "opacity": "50",
          }
        }
        _loading={
          Object {
            "bg": "warmGray.50",
            "opacity": "50",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Show
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Transitions Stagger 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "minHeight": 220,
          }
        }
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          _disabled={
            Object {
              "bg": "trueGray.300",
              "opacity": 0.5,
            }
          }
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#22d3ee",
              "borderRadius": 9999,
              "paddingBottom": 12,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 12,
            }
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Object {
                  "color": "#fafafa",
                  "fontSize": 24,
                  "height": 24,
                  "lineHeight": 24,
                  "width": 24,
                },
                Object {
                  "fontFamily": "material-community",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            󰇘
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots VStack Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "marginBottom": 40,
            "textAlign": "center",
            "textDecorationLine": undefined,
          }
        }
      >
        VStack
      </Text>
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 6,
            "display": "flex",
            "elevation": 4,
            "height": 80,
            "justifyContent": "center",
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.23,
            "shadowRadius": 2.62,
            "width": 256,
          }
        }
      />
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#ec4899",
            "borderRadius": 6,
            "display": "flex",
            "elevation": 4,
            "height": 80,
            "justifyContent": "center",
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.23,
            "shadowRadius": 2.62,
            "width": 256,
          }
        }
      />
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#10b981",
            "borderRadius": 6,
            "display": "flex",
            "elevation": 4,
            "height": 80,
            "justifyContent": "center",
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.23,
            "shadowRadius": 2.62,
            "width": 256,
          }
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots View Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "textDecorationLine": undefined,
          }
        }
      >
        A component library for the
        <Text
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#10b981",
              "fontFamily": "heading",
              "fontSize": 24,
              "fontStyle": undefined,
              "fontWeight": "700",
              "lineHeight": 30,
              "textDecorationLine": undefined,
            }
          }
        >
           React Ecosystem
        </Text>
      </Text>
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "500",
            "letterSpacing": 0,
            "lineHeight": 21,
            "marginTop": 12,
            "textDecorationLine": undefined,
          }
        }
      >
        NativeBase is a simple, modular and accessible component library that gives you building blocks to build you React applications.
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots ZStack Basic ZStack 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Text
      style={
        Object {
          "backgroundColor": undefined,
          "color": "#404040",
          "fontFamily": undefined,
          "fontSize": 24,
          "fontStyle": "normal",
          "fontWeight": "700",
          "letterSpacing": 0,
          "lineHeight": 30,
          "marginBottom": 40,
          "textDecorationLine": undefined,
        }
      }
    >
      ZStack
    </Text>
    <View
      style={
        Object {
          "height": 160,
        }
      }
    >
      <View
        style={
          Object {
            "marginLeft": -50,
            "marginTop": 12,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#06b6d4",
              "borderRadius": 8,
              "elevation": 4,
              "height": 80,
              "position": "absolute",
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.23,
              "shadowRadius": 2.62,
              "width": 80,
            }
          }
        />
        <View
          style={
            Object {
              "backgroundColor": "#ec4899",
              "borderRadius": 8,
              "elevation": 6,
              "height": 80,
              "marginLeft": 20,
              "marginTop": 20,
              "position": "absolute",
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 3,
                "width": 0,
              },
              "shadowOpacity": 0.27,
              "shadowRadius": 4.65,
              "width": 80,
            }
          }
        />
        <View
          style={
            Object {
              "backgroundColor": "#10b981",
              "borderRadius": 8,
              "elevation": 8,
              "height": 80,
              "marginLeft": 40,
              "marginTop": 40,
              "position": "absolute",
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 4,
                "width": 0,
              },
              "shadowOpacity": 0.3,
              "shadowRadius": 4.65,
              "width": 80,
            }
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots ZStack ZStack items centered 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#06b6d4",
            "borderRadius": 8,
            "height": 256,
            "position": "absolute",
            "width": 256,
          }
        }
      />
      <View
        style={
          Object {
            "backgroundColor": "#ec4899",
            "borderRadius": 8,
            "elevation": 9,
            "height": 192,
            "position": "absolute",
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 4,
              "width": 0,
            },
            "shadowOpacity": 0.32,
            "shadowRadius": 5.46,
            "width": 192,
          }
        }
      />
      <View
        style={
          Object {
            "backgroundColor": "#10b981",
            "borderRadius": 8,
            "elevation": 9,
            "height": 128,
            "position": "absolute",
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 4,
              "width": 0,
            },
            "shadowOpacity": 0.32,
            "shadowRadius": 5.46,
            "width": 128,
          }
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots useAccessibleColors Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "darkText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="yellow"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#fde047",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 4,
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Save Changes
          </Text>
        </View>
      </View>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "darkText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="yellow"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#facc15",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 4,
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Save Changes
          </Text>
        </View>
      </View>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "darkText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="yellow"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#eab308",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 4,
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Save Changes
          </Text>
        </View>
      </View>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "darkText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="yellow"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#ca8a04",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 4,
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Save Changes
          </Text>
        </View>
      </View>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "darkText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="yellow"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#a16207",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 4,
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Save Changes
          </Text>
        </View>
      </View>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="yellow"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#854d0e",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 4,
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Save Changes
          </Text>
        </View>
      </View>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#06b6d4",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginTop": 40,
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Toggle Accessible Colors
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots useBreakpointValue Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RCTScrollView
      contentContainerStyle={
        Array [
          Object {},
          Object {},
        ]
      }
      showsVerticalScrollIndicator={false}
      style={Object {}}
    >
      <View>
        <View
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "paddingBottom": 32,
              "paddingTop": 32,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#404040",
                "fontFamily": undefined,
                "fontSize": 24,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 30,
                "textDecorationLine": undefined,
              }
            }
          >
            Why us?
          </Text>
          <View
            style={
              Object {
                "height": 32,
              }
            }
          />
          <View
            style={
              Object {
                "flexDirection": "column",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#a5f3fc",
                  "borderRadius": 12,
                  "justifyContent": "center",
                  "marginBottom": 12,
                  "marginLeft": 12,
                  "marginRight": 12,
                  "marginTop": 12,
                  "paddingBottom": 12,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 12,
                  "width": 140,
                }
              }
            >
              <Text />
              <View
                style={
                  Object {
                    "height": 8,
                  }
                }
              />
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "fontFamily": undefined,
                    "fontSize": 18,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 27,
                    "textAlign": "center",
                    "textDecorationLine": undefined,
                  }
                }
              >
                Secure Checkout
              </Text>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#a5f3fc",
                  "borderRadius": 12,
                  "justifyContent": "center",
                  "marginBottom": 12,
                  "marginLeft": 12,
                  "marginRight": 12,
                  "marginTop": 12,
                  "paddingBottom": 12,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 12,
                  "width": 140,
                }
              }
            >
              <Text />
              <View
                style={
                  Object {
                    "height": 8,
                  }
                }
              />
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "fontFamily": undefined,
                    "fontSize": 18,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 27,
                    "textAlign": "center",
                    "textDecorationLine": undefined,
                  }
                }
              >
                Secure Checkout
              </Text>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#a5f3fc",
                  "borderRadius": 12,
                  "justifyContent": "center",
                  "marginBottom": 12,
                  "marginLeft": 12,
                  "marginRight": 12,
                  "marginTop": 12,
                  "paddingBottom": 12,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 12,
                  "width": 140,
                }
              }
            >
              <Text />
              <View
                style={
                  Object {
                    "height": 8,
                  }
                }
              />
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "fontFamily": undefined,
                    "fontSize": 18,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 27,
                    "textAlign": "center",
                    "textDecorationLine": undefined,
                  }
                }
              >
                Fast Turn Around
              </Text>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots useClipboard Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <TextInput
          _disabled={
            Object {
              "bg": "muted.100",
              "opacity": "80",
            }
          }
          _invalid={
            Object {
              "borderColor": "danger.600",
            }
          }
          accessible={true}
          allowFontScaling={true}
          editable={true}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="Copy From"
          placeholderTextColor="#a3a3a3"
          rejectResponderTermination={true}
          secureTextEntry={false}
          selectionColor="#1f2937"
          style={
            Object {
              "backgroundColor": "transparent",
              "borderColor": "#e5e5e5",
              "borderRadius": 4,
              "borderWidth": 1,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "400",
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
              "width": "60%",
            }
          }
          underlineColorAndroid="transparent"
          value="Hello"
        />
        <View
          style={
            Object {
              "width": 12,
            }
          }
        />
        <View
          _disabled={
            Object {
              "bg": "trueGray.300",
              "opacity": "50",
            }
          }
          _loading={
            Object {
              "bg": "warmGray.50",
              "opacity": "50",
            }
          }
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              style={Object {}}
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#FFFFFF",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Copy
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 8,
          }
        }
      />
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <TextInput
          _disabled={
            Object {
              "bg": "muted.100",
              "opacity": "80",
            }
          }
          _invalid={
            Object {
              "borderColor": "danger.600",
            }
          }
          accessible={true}
          allowFontScaling={true}
          editable={true}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="Paste Here"
          placeholderTextColor="#a3a3a3"
          rejectResponderTermination={true}
          secureTextEntry={false}
          selectionColor="#1f2937"
          style={
            Object {
              "backgroundColor": "transparent",
              "borderColor": "#e5e5e5",
              "borderRadius": 4,
              "borderWidth": 1,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "400",
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
              "width": "60%",
            }
          }
          underlineColorAndroid="transparent"
          value=""
        />
        <View
          style={
            Object {
              "width": 12,
            }
          }
        />
        <View
          _disabled={
            Object {
              "bg": "trueGray.300",
              "opacity": "50",
            }
          }
          _loading={
            Object {
              "bg": "warmGray.50",
              "opacity": "50",
            }
          }
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          colorScheme="primary"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              style={Object {}}
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#FFFFFF",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Paste
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots useColorMode Basic 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  />
</View>
`;

exports[`Storyshots useColorModeValue Basic 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  />
</View>
`;

exports[`Storyshots useContrastText Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#18181b",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 24,
          "marginTop": 24,
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "darkText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots useContrastText Variations 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "darkText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#ecfeff",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 4,
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "darkText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#cffafe",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 4,
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "darkText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#a5f3fc",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 4,
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#000000",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "darkText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#67e8f9",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 4,
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "darkText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#22d3ee",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 4,
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#06b6d4",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 4,
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#0891b2",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 4,
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#0e7490",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 4,
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#155e75",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 4,
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#164e63",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 4,
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="indigo"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#6366f1",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginTop": 8,
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Toggle Accessible Colors
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots useDisclose Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _disabled={
        Object {
          "bg": "trueGray.300",
          "opacity": "50",
        }
      }
      _loading={
        Object {
          "bg": "warmGray.50",
          "opacity": "50",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#06b6d4",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Open Modal
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots useMediaQuery MaxHeight 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <View
        style={
          Object {
            "backgroundColor": "#fafafa",
            "borderColor": "#e5e7eb",
            "borderRadius": 8,
            "borderWidth": 1,
            "elevation": 2,
            "overflow": "hidden",
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 1,
              "width": 0,
            },
            "shadowOpacity": 0.2,
            "shadowRadius": 1.41,
          }
        }
      >
        <View
          style={Object {}}
        >
          <View
            style={
              Array [
                Object {},
                Object {
                  "aspectRatio": 1.7777777777777777,
                },
              ]
            }
          >
            <Image
              accessibilityLabel="image"
              alt="image"
              onError={[Function]}
              source={
                Object {
                  "uri": "https://www.holidify.com/images/cmsuploads/compressed/Bangalore_citycover_20190613234056.jpg",
                }
              }
              style={
                Array [
                  Object {
                    "maxWidth": "100%",
                  },
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                ]
              }
            />
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#8b5cf6",
                "bottom": 0,
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 6,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 6,
                "position": "absolute",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 18,
                  "textDecorationLine": undefined,
                }
              }
            >
              PHOTOS
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "paddingBottom": 16,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 16,
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#404040",
                  "fontFamily": undefined,
                  "fontSize": 20,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 25,
                  "marginLeft": -4,
                  "textDecorationLine": undefined,
                }
              }
            >
              The Garden City
            </Text>
            <View
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#8b5cf6",
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 18,
                  "marginLeft": -2,
                  "marginTop": -4,
                  "textDecorationLine": undefined,
                }
              }
            >
              The Silicon Valley of India.
            </Text>
          </View>
          <View
            style={
              Object {
                "height": 12,
              }
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Bengaluru (also called Bangalore) is the center of India's high-tech industry. The city is also known for its parks and nightlife.
          </Text>
          <View
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                6 mins ago
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots useMediaQuery MinWidth 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <View
        style={
          Object {
            "backgroundColor": "#fafafa",
            "borderColor": "#e5e7eb",
            "borderRadius": 8,
            "borderWidth": 1,
            "overflow": "hidden",
          }
        }
      >
        <View
          style={Object {}}
        >
          <View
            style={
              Array [
                Object {},
                Object {
                  "aspectRatio": 1.7777777777777777,
                },
              ]
            }
          >
            <Image
              accessibilityLabel="image"
              alt="image"
              onError={[Function]}
              source={
                Object {
                  "uri": "https://www.holidify.com/images/cmsuploads/compressed/Bangalore_citycover_20190613234056.jpg",
                }
              }
              style={
                Array [
                  Object {
                    "maxWidth": "100%",
                  },
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                ]
              }
            />
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#8b5cf6",
                "bottom": 0,
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 6,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 6,
                "position": "absolute",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 18,
                  "textDecorationLine": undefined,
                }
              }
            >
              PHOTOS
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "paddingBottom": 16,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 16,
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#404040",
                  "fontFamily": undefined,
                  "fontSize": 20,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 25,
                  "marginLeft": -4,
                  "textDecorationLine": undefined,
                }
              }
            >
              The Garden City
            </Text>
            <View
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#8b5cf6",
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 18,
                  "marginLeft": -2,
                  "marginTop": -4,
                  "textDecorationLine": undefined,
                }
              }
            >
              The Silicon Valley of India.
            </Text>
          </View>
          <View
            style={
              Object {
                "height": 12,
              }
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Bengaluru (also called Bangalore) is the center of India's high-tech industry. The city is also known for its parks and nightlife.
          </Text>
          <View
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                6 mins ago
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots useMediaQuery Orientation 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 4,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
          "zIndex": 4,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <View
        style={
          Object {
            "backgroundColor": "#fafafa",
            "borderColor": "#e5e7eb",
            "borderRadius": 8,
            "borderWidth": 1,
            "elevation": 2,
            "overflow": "hidden",
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 1,
              "width": 0,
            },
            "shadowOpacity": 0.2,
            "shadowRadius": 1.41,
          }
        }
      >
        <View
          style={Object {}}
        >
          <View
            style={
              Array [
                Object {},
                Object {
                  "aspectRatio": 1.7777777777777777,
                },
              ]
            }
          >
            <Image
              accessibilityLabel="image"
              alt="image"
              onError={[Function]}
              source={
                Object {
                  "uri": "https://www.holidify.com/images/cmsuploads/compressed/Bangalore_citycover_20190613234056.jpg",
                }
              }
              style={
                Array [
                  Object {
                    "maxWidth": "100%",
                  },
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                ]
              }
            />
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#8b5cf6",
                "bottom": 0,
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 6,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 6,
                "position": "absolute",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 18,
                  "textDecorationLine": undefined,
                }
              }
            >
              PHOTOS
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "paddingBottom": 16,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 16,
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#404040",
                  "fontFamily": undefined,
                  "fontSize": 20,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 25,
                  "marginLeft": -4,
                  "textDecorationLine": undefined,
                }
              }
            >
              The Garden City
            </Text>
            <View
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#8b5cf6",
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 18,
                  "marginLeft": -2,
                  "marginTop": -4,
                  "textDecorationLine": undefined,
                }
              }
            >
              The Silicon Valley of India.
            </Text>
          </View>
          <View
            style={
              Object {
                "height": 12,
              }
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            Bengaluru (also called Bangalore) is the center of India's high-tech industry. The city is also known for its parks and nightlife.
          </Text>
          <View
            style={
              Object {
                "height": 12,
              }
            }
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#71717a",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                6 mins ago
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots useSafeArea Fixed 1`] = `
<View>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  />
</View>
`;

exports[`Storyshots useSafeArea Flexible 1`] = `
<View>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  />
</View>
`;

exports[`Storyshots useSafeArea Hook 1`] = `
<View>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  />
</View>
`;
