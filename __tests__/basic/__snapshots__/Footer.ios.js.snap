// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders Footer with Badge 1`] = `
<View
  style={Object {}}
>
  <View
    onLayout={[Function]}
  >
    <View
      style={Object {}}
    />
  </View>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Array [
        Object {
          "padding": undefined,
        },
        undefined,
      ]
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    resetScrollToCoords={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={Object {}}
    viewIsInsideTabBar={false}
  >
    <View />
  </RCTScrollView>
  <View
    style={Object {}}
  >
    <View
      style={Object {}}
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "borderRadius": 2,
            "opacity": 1,
          }
        }
      >
        <View
          style={Object {}}
        >
          <Text
            style={Object {}}
            uppercase={false}
          >
            2
          </Text>
        </View>
        <Text
          active={true}
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Array [
                Object {},
                Object {},
              ],
              Object {
                "fontFamily": "Ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
        <Text
          style={Object {}}
          uppercase={false}
        >
          Apps
        </Text>
      </View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "borderRadius": 2,
            "opacity": 1,
          }
        }
      >
        <Text
          active={false}
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Array [
                Object {},
                Object {},
              ],
              Object {
                "fontFamily": "Ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
        <Text
          style={Object {}}
          uppercase={false}
        >
          Camera
        </Text>
      </View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "borderRadius": 2,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
              Object {
                "backgroundColor": "green",
              },
            ]
          }
        >
          <Text
            style={Object {}}
            uppercase={false}
          >
            51
          </Text>
        </View>
        <Text
          active={false}
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Array [
                Object {},
                Object {},
              ],
              Object {
                "fontFamily": "Ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
        <Text
          style={Object {}}
          uppercase={false}
        >
          Compass
        </Text>
      </View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "borderRadius": 2,
            "opacity": 1,
          }
        }
      >
        <Text
          active={false}
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Array [
                Object {},
                Object {},
              ],
              Object {
                "fontFamily": "Ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
        <Text
          style={Object {}}
          uppercase={false}
        >
          Contact
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders Footer with Icon and Text 1`] = `
<View
  style={Object {}}
>
  <View
    onLayout={[Function]}
  >
    <View
      style={Object {}}
    />
  </View>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Array [
        Object {
          "padding": undefined,
        },
        undefined,
      ]
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    resetScrollToCoords={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={Object {}}
    viewIsInsideTabBar={false}
  >
    <View />
  </RCTScrollView>
  <View
    style={Object {}}
  >
    <View
      style={Object {}}
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "borderRadius": 2,
            "opacity": 1,
          }
        }
      >
        <Text
          active={true}
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Array [
                Object {},
                Object {},
              ],
              Object {
                "fontFamily": "Ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
        <Text
          style={Object {}}
          uppercase={false}
        >
          Apps
        </Text>
      </View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "borderRadius": 2,
            "opacity": 1,
          }
        }
      >
        <Text
          active={false}
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Array [
                Object {},
                Object {},
              ],
              Object {
                "fontFamily": "Ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
        <Text
          style={Object {}}
          uppercase={false}
        >
          Camera
        </Text>
      </View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "borderRadius": 2,
            "opacity": 1,
          }
        }
      >
        <Text
          active={false}
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Array [
                Object {},
                Object {},
              ],
              Object {
                "fontFamily": "Ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
        <Text
          style={Object {}}
          uppercase={false}
        >
          Compass
        </Text>
      </View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "borderRadius": 2,
            "opacity": 1,
          }
        }
      >
        <Text
          active={false}
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Array [
                Object {},
                Object {},
              ],
              Object {
                "fontFamily": "Ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
        <Text
          style={Object {}}
          uppercase={false}
        >
          Contact
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders Footer with Icons 1`] = `
<View
  style={Object {}}
>
  <View
    onLayout={[Function]}
  >
    <View
      style={Object {}}
    />
  </View>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Array [
        Object {
          "padding": undefined,
        },
        undefined,
      ]
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    resetScrollToCoords={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={Object {}}
    viewIsInsideTabBar={false}
  >
    <View />
  </RCTScrollView>
  <View
    style={Object {}}
  >
    <View
      style={Object {}}
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "borderRadius": 2,
            "opacity": 1,
          }
        }
      >
        <Text
          active={true}
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Array [
                Object {},
                Object {},
              ],
              Object {
                "fontFamily": "Ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
      </View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "borderRadius": 2,
            "opacity": 1,
          }
        }
      >
        <Text
          active={false}
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Array [
                Object {},
                Object {},
              ],
              Object {
                "fontFamily": "Ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
      </View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "borderRadius": 2,
            "opacity": 1,
          }
        }
      >
        <Text
          active={false}
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Array [
                Object {},
                Object {},
              ],
              Object {
                "fontFamily": "Ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
      </View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "borderRadius": 2,
            "opacity": 1,
          }
        }
      >
        <Text
          active={false}
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Array [
                Object {},
                Object {},
              ],
              Object {
                "fontFamily": "Ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders basic Footer 1`] = `
<View
  style={Object {}}
>
  <View
    onLayout={[Function]}
  >
    <View
      style={Object {}}
    />
  </View>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Array [
        Object {
          "padding": undefined,
        },
        undefined,
      ]
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    resetScrollToCoords={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={Object {}}
    viewIsInsideTabBar={false}
  >
    <View />
  </RCTScrollView>
  <View
    style={Object {}}
  >
    <View
      style={Object {}}
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "borderRadius": 2,
            "opacity": 1,
          }
        }
      >
        <Text
          style={Object {}}
          uppercase={false}
        >
          Apps
        </Text>
      </View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "borderRadius": 2,
            "opacity": 1,
          }
        }
      >
        <Text
          style={Object {}}
          uppercase={false}
        >
          Camera
        </Text>
      </View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "borderRadius": 2,
            "opacity": 1,
          }
        }
      >
        <Text
          style={Object {}}
          uppercase={false}
        >
          Navigate
        </Text>
      </View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "borderRadius": 2,
            "opacity": 1,
          }
        }
      >
        <Text
          style={Object {}}
          uppercase={false}
        >
          Contact
        </Text>
      </View>
    </View>
  </View>
</View>
`;
