exports[`test renders correctly 1`] = `
<View
  style={Object {}}
  virtual={undefined} />
`;

exports[`test renders header with a null button 1`] = `
<View
  style={Object {}}
  virtual={undefined}>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={Object {}}
    virtual={undefined}>
    Header
  </Text>
</View>
`;

exports[`test renders header with buttons 1`] = `
<View
  style={Object {}}
  virtual={undefined}>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "borderRadius": 2,
        "opacity": 1,
      }
    }
    testID={undefined}>
    <View
      style={
        Object {
          "alignSelf": "center",
        }
      } />
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 12,
          },
          Object {},
          Object {
            "fontFamily": "Ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
        ]
      }
      virtual={undefined}>
      
    </Text>
  </View>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={Object {}}
    virtual={undefined}>
    Header
  </Text>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "borderRadius": 2,
        "opacity": 1,
      }
    }
    testID={undefined}>
    <View
      style={
        Object {
          "alignSelf": "center",
        }
      } />
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 12,
          },
          Object {},
          Object {
            "fontFamily": "Ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
        ]
      }
      virtual={undefined}>
      
    </Text>
  </View>
</View>
`;

exports[`test renders header with buttons and subtitle 1`] = `
<View
  style={Object {}}
  virtual={undefined}>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "borderRadius": 2,
        "opacity": 1,
      }
    }
    testID={undefined}>
    <View
      style={
        Object {
          "alignSelf": "center",
        }
      } />
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 12,
          },
          Object {},
          Object {
            "fontFamily": "Ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
        ]
      }
      virtual={undefined}>
      
    </Text>
  </View>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={Object {}}
    virtual={undefined}>
    Header
  </Text>
  <View>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "alignSelf": "flex-start",
          "color": "#8e8e93",
          "fontSize": 14,
        }
      }>
      Subtitle
    </Text>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "borderRadius": 2,
        "opacity": 1,
      }
    }
    testID={undefined}>
    <View
      style={
        Object {
          "alignSelf": "center",
        }
      } />
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 12,
          },
          Object {},
          Object {
            "fontFamily": "Ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
        ]
      }
      virtual={undefined}>
      
    </Text>
  </View>
</View>
`;

exports[`test renders header with just one button 1`] = `
<View
  style={Object {}}
  virtual={undefined}>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "borderRadius": 2,
        "opacity": 1,
      }
    }
    testID={undefined}>
    <View
      style={
        Object {
          "alignSelf": "center",
        }
      } />
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 12,
          },
          Object {},
          Object {
            "fontFamily": "Ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
        ]
      }
      virtual={undefined}>
      
    </Text>
  </View>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={Object {}}
    virtual={undefined}>
    Header
  </Text>
</View>
`;

exports[`test renders header with just one button and iconRight 1`] = `
<View
  iconRight={true}
  style={Object {}}
  virtual={undefined}>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "borderRadius": 2,
        "opacity": 1,
      }
    }
    testID={undefined}>
    <View
      style={
        Object {
          "alignSelf": "center",
        }
      } />
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 12,
          },
          Object {},
          Object {
            "fontFamily": "Ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
        ]
      }
      virtual={undefined}>
      
    </Text>
  </View>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={Object {}}
    virtual={undefined}>
    Header
  </Text>
</View>
`;

exports[`test renders header with just one button and subtitle 1`] = `
<View
  style={Object {}}
  virtual={undefined}>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "borderRadius": 2,
        "opacity": 1,
      }
    }
    testID={undefined}>
    <View
      style={
        Object {
          "alignSelf": "center",
        }
      } />
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 12,
          },
          Object {},
          Object {
            "fontFamily": "Ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
        ]
      }
      virtual={undefined}>
      
    </Text>
  </View>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={Object {}}
    virtual={undefined}>
    Header
  </Text>
  <View>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "alignSelf": "flex-start",
          "color": "#8e8e93",
          "fontSize": 14,
        }
      }>
      Subtitle
    </Text>
  </View>
</View>
`;

exports[`test renders header with just one button, iconRight and a subtitle 1`] = `
<View
  iconRight={true}
  style={Object {}}
  virtual={undefined}>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "borderRadius": 2,
        "opacity": 1,
      }
    }
    testID={undefined}>
    <View
      style={
        Object {
          "alignSelf": "center",
        }
      } />
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 12,
          },
          Object {},
          Object {
            "fontFamily": "Ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
        ]
      }
      virtual={undefined}>
      
    </Text>
  </View>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={Object {}}
    virtual={undefined}>
    Header
  </Text>
  <View>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "alignSelf": "flex-start",
          "color": "#8e8e93",
          "fontSize": 14,
        }
      }>
      SubTitle
    </Text>
  </View>
</View>
`;
