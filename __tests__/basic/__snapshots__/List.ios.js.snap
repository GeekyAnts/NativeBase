// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders Basic List 1`] = `
<RCTScrollView
  closeOnRowBeginSwipe={false}
  closeOnRowPress={true}
  closeOnScroll={true}
  dataArray={
    Array [
      "Simon Mignolet",
      "Nathaniel Clyne",
      "Dejan Lovren",
      "Mama Sakho",
      "Alberto Moreno",
      "Emre Can",
      "Joe Allen",
      "Phil Coutinho",
    ]
  }
  dataSource={
    ListViewDataSource {
      "items": 8,
    }
  }
  directionalDistanceChangeThreshold={2}
  disableLeftSwipe={false}
  disableRightSwipe={false}
  enableEmptySections={true}
  leftOpenValue={0}
  previewFirstRow={false}
  recalculateHiddenLayout={false}
  renderRow={[Function]}
  renderScrollComponent={[Function]}
  rightOpenValue={0}
  style={Object {}}
  swipeToOpenPercent={50}
>
  <View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={null}
    >
      <View
        style={Object {}}
      >
        <View
          style={Object {}}
        >
          <Text
            style={Object {}}
            uppercase={false}
          >
            Simon Mignolet
          </Text>
        </View>
        <View
          style={Object {}}
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Array [
                  Object {},
                  Object {},
                ],
                Object {
                  "fontFamily": "Ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={null}
    >
      <View
        style={Object {}}
      >
        <View
          style={Object {}}
        >
          <Text
            style={Object {}}
            uppercase={false}
          >
            Nathaniel Clyne
          </Text>
        </View>
        <View
          style={Object {}}
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Array [
                  Object {},
                  Object {},
                ],
                Object {
                  "fontFamily": "Ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={null}
    >
      <View
        style={Object {}}
      >
        <View
          style={Object {}}
        >
          <Text
            style={Object {}}
            uppercase={false}
          >
            Dejan Lovren
          </Text>
        </View>
        <View
          style={Object {}}
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Array [
                  Object {},
                  Object {},
                ],
                Object {
                  "fontFamily": "Ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={null}
    >
      <View
        style={Object {}}
      >
        <View
          style={Object {}}
        >
          <Text
            style={Object {}}
            uppercase={false}
          >
            Mama Sakho
          </Text>
        </View>
        <View
          style={Object {}}
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Array [
                  Object {},
                  Object {},
                ],
                Object {
                  "fontFamily": "Ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={null}
    >
      <View
        style={Object {}}
      >
        <View
          style={Object {}}
        >
          <Text
            style={Object {}}
            uppercase={false}
          >
            Alberto Moreno
          </Text>
        </View>
        <View
          style={Object {}}
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Array [
                  Object {},
                  Object {},
                ],
                Object {
                  "fontFamily": "Ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={null}
    >
      <View
        style={Object {}}
      >
        <View
          style={Object {}}
        >
          <Text
            style={Object {}}
            uppercase={false}
          >
            Emre Can
          </Text>
        </View>
        <View
          style={Object {}}
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Array [
                  Object {},
                  Object {},
                ],
                Object {
                  "fontFamily": "Ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={null}
    >
      <View
        style={Object {}}
      >
        <View
          style={Object {}}
        >
          <Text
            style={Object {}}
            uppercase={false}
          >
            Joe Allen
          </Text>
        </View>
        <View
          style={Object {}}
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Array [
                  Object {},
                  Object {},
                ],
                Object {
                  "fontFamily": "Ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={null}
    >
      <View
        style={Object {}}
      >
        <View
          style={Object {}}
        >
          <Text
            style={Object {}}
            uppercase={false}
          >
            Phil Coutinho
          </Text>
        </View>
        <View
          style={Object {}}
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Array [
                  Object {},
                  Object {},
                ],
                Object {
                  "fontFamily": "Ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`renders ListItem avatar 1`] = `
<RCTScrollView
  closeOnRowBeginSwipe={false}
  closeOnRowPress={true}
  closeOnScroll={true}
  dataArray={
    Array [
      Object {
        "img": Object {
          "testUri": "../../../__tests__/assets/pratik.png",
        },
        "note": "Its time to build a difference . .",
        "text": "Kumar Pratik",
      },
      Object {
        "img": Object {
          "testUri": "../../../__tests__/assets/sanket.png",
        },
        "note": "One needs courage to be happy and smiling all time . . ",
        "text": "Kumar Sanket",
      },
    ]
  }
  dataSource={
    ListViewDataSource {
      "items": 2,
    }
  }
  directionalDistanceChangeThreshold={2}
  disableLeftSwipe={false}
  disableRightSwipe={false}
  enableEmptySections={true}
  leftOpenValue={0}
  previewFirstRow={false}
  recalculateHiddenLayout={false}
  renderRow={[Function]}
  renderScrollComponent={[Function]}
  rightOpenValue={0}
  style={Object {}}
  swipeToOpenPercent={50}
>
  <View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={null}
    >
      <View
        style={Object {}}
        thumbnail={true}
      >
        <View
          style={Object {}}
        >
          <Image
            size={55}
            source={
              Object {
                "testUri": "../../../__tests__/assets/pratik.png",
              }
            }
            square={true}
            style={Object {}}
          />
        </View>
        <View
          style={Object {}}
        >
          <Text
            style={Object {}}
            uppercase={false}
          >
            Kumar Pratik
          </Text>
          <Text
            note={true}
            numberOfLines={1}
            style={Object {}}
            uppercase={false}
          >
            Its time to build a difference . .
          </Text>
        </View>
        <View
          style={Object {}}
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "borderRadius": 2,
                "opacity": 1,
              }
            }
          >
            <Text
              style={Object {}}
              uppercase={false}
            >
              View
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={null}
    >
      <View
        style={Object {}}
        thumbnail={true}
      >
        <View
          style={Object {}}
        >
          <Image
            size={55}
            source={
              Object {
                "testUri": "../../../__tests__/assets/sanket.png",
              }
            }
            square={true}
            style={Object {}}
          />
        </View>
        <View
          style={Object {}}
        >
          <Text
            style={Object {}}
            uppercase={false}
          >
            Kumar Sanket
          </Text>
          <Text
            note={true}
            numberOfLines={1}
            style={Object {}}
            uppercase={false}
          >
            One needs courage to be happy and smiling all time . . 
          </Text>
        </View>
        <View
          style={Object {}}
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "borderRadius": 2,
                "opacity": 1,
              }
            }
          >
            <Text
              style={Object {}}
              uppercase={false}
            >
              View
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`renders ListItem icon 1`] = `
<View
  closeOnRowBeginSwipe={false}
  closeOnRowPress={true}
  closeOnScroll={true}
  directionalDistanceChangeThreshold={2}
  disableLeftSwipe={false}
  disableRightSwipe={false}
  leftOpenValue={0}
  previewFirstRow={false}
  recalculateHiddenLayout={false}
  rightOpenValue={0}
  style={Object {}}
  swipeToOpenPercent={50}
>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      icon={true}
      style={Object {}}
    >
      <View
        style={Object {}}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#FF9501",
              "borderRadius": 2,
              "opacity": 1,
            }
          }
        >
          <Text
            active={true}
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Array [
                  Object {},
                  Object {},
                ],
                Object {
                  "fontFamily": "Ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
      <View
        style={Object {}}
      >
        <Text
          style={Object {}}
          uppercase={false}
        >
          Airplane Mode
        </Text>
      </View>
      <View
        style={Object {}}
      >
        <RCTSwitch
          disabled={false}
          onChange={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onTintColor="#50B948"
          style={
            Array [
              Object {
                "height": 31,
                "width": 51,
              },
              Object {},
            ]
          }
          value={false}
        />
      </View>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      icon={true}
      style={Object {}}
    >
      <View
        style={Object {}}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#007AFF",
              "borderRadius": 2,
              "opacity": 1,
            }
          }
        >
          <Text
            active={true}
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Array [
                  Object {},
                  Object {},
                ],
                Object {
                  "fontFamily": "Ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
      <View
        style={Object {}}
      >
        <Text
          style={Object {}}
          uppercase={false}
        >
          Bluetooth
        </Text>
      </View>
      <View
        style={Object {}}
      >
        <Text
          style={Object {}}
          uppercase={false}
        >
          On
        </Text>
        <Text
          active={true}
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Array [
                Object {},
                Object {},
              ],
              Object {
                "fontFamily": "Ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      icon={true}
      style={Object {}}
    >
      <View
        style={Object {}}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#4CDA64",
              "borderRadius": 2,
              "opacity": 1,
            }
          }
        >
          <Text
            active={true}
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Array [
                  Object {},
                  Object {},
                ],
                Object {
                  "fontFamily": "Ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
      <View
        style={Object {}}
      >
        <Text
          style={Object {}}
          uppercase={false}
        >
          Mobile Data
        </Text>
      </View>
      <View
        style={Object {}}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Object {
                  "color": "#007aff",
                  "fontSize": 25,
                  "height": 20,
                  "lineHeight": 25,
                },
                Object {
                  "fontFamily": "Ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      icon={true}
      style={Object {}}
    >
      <View
        style={Object {}}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#FD3C2D",
              "borderRadius": 2,
              "opacity": 1,
            }
          }
        >
          <Text
            active={true}
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Array [
                  Object {},
                  Object {},
                ],
                Object {
                  "fontFamily": "Ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
      <View
        style={Object {}}
      >
        <Text
          style={Object {}}
          uppercase={false}
        >
          Notifications
        </Text>
      </View>
      <View
        style={Object {}}
      >
        <Text
          active={true}
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Array [
                Object {},
                Object {},
              ],
              Object {
                "fontFamily": "Ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      icon={true}
      last={true}
      style={Object {}}
    >
      <View
        style={Object {}}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#5855D6",
              "borderRadius": 2,
              "opacity": 1,
            }
          }
        >
          <Text
            active={true}
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Array [
                  Object {},
                  Object {},
                ],
                Object {
                  "fontFamily": "Ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
      <View
        style={Object {}}
      >
        <Text
          style={Object {}}
          uppercase={false}
        >
          Do Not Disturb
        </Text>
      </View>
      <View
        style={Object {}}
      >
        <Text
          style={Object {}}
          uppercase={false}
        >
          Yes
        </Text>
      </View>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      icon={true}
      last={true}
      style={Object {}}
    >
      <View
        style={Object {}}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#8F8E93",
              "borderRadius": 2,
              "opacity": 1,
            }
          }
        >
          <Text
            active={true}
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Array [
                  Object {},
                  Object {},
                ],
                Object {
                  "fontFamily": "Ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
      <View
        style={Object {}}
      >
        <Text
          style={Object {}}
          uppercase={false}
        >
          Software Update
        </Text>
      </View>
      <View
        style={Object {}}
      >
        <View
          style={
            Array [
              Object {},
              Object {
                "backgroundColor": "#FD3C2D",
              },
            ]
          }
        >
          <Text
            style={Object {}}
            uppercase={false}
          >
            2
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders ListItem itemDivider 1`] = `
<View
  closeOnRowBeginSwipe={false}
  closeOnRowPress={true}
  closeOnScroll={true}
  directionalDistanceChangeThreshold={2}
  disableLeftSwipe={false}
  disableRightSwipe={false}
  leftOpenValue={0}
  previewFirstRow={false}
  recalculateHiddenLayout={false}
  rightOpenValue={0}
  style={Object {}}
  swipeToOpenPercent={50}
>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      itemDivider={true}
      style={Object {}}
    >
      <Text
        style={Object {}}
        uppercase={false}
      >
        A
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      style={Object {}}
    >
      <Text
        style={Object {}}
        uppercase={false}
      >
        Aaron Bennet
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      style={Object {}}
    >
      <Text
        style={Object {}}
        uppercase={false}
      >
        Ali Connors
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      last={true}
      style={Object {}}
    >
      <Text
        style={Object {}}
        uppercase={false}
      >
        Angana Ghosh
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      itemDivider={true}
      style={Object {}}
    >
      <Text
        style={Object {}}
        uppercase={false}
      >
        B
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      style={Object {}}
    >
      <Text
        style={Object {}}
        uppercase={false}
      >
        Bradley Horowitz
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      style={Object {}}
    >
      <Text
        style={Object {}}
        uppercase={false}
      >
        Brian Swetland
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      last={true}
      style={Object {}}
    >
      <Text
        style={Object {}}
        uppercase={false}
      >
        Brittany Kelso
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders ListItem itemHeader 1`] = `
<View
  closeOnRowBeginSwipe={false}
  closeOnRowPress={true}
  closeOnScroll={true}
  directionalDistanceChangeThreshold={2}
  disableLeftSwipe={false}
  disableRightSwipe={false}
  leftOpenValue={0}
  previewFirstRow={false}
  recalculateHiddenLayout={false}
  rightOpenValue={0}
  style={Object {}}
  swipeToOpenPercent={50}
>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      first={true}
      itemHeader={true}
      style={Object {}}
    >
      <Text
        style={Object {}}
        uppercase={false}
      >
        COMEDY
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      style={Object {}}
    >
      <Text
        style={Object {}}
        uppercase={false}
      >
        Hangover
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      style={Object {}}
    >
      <Text
        style={Object {}}
        uppercase={false}
      >
        Horrible Bosses
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      last={true}
      style={Object {}}
    >
      <Text
        style={Object {}}
        uppercase={false}
      >
        Cop Out
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      itemHeader={true}
      style={Object {}}
    >
      <Text
        style={Object {}}
        uppercase={false}
      >
        HORROR
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      style={Object {}}
    >
      <Text
        style={Object {}}
        uppercase={false}
      >
        The Evil Dead
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      style={Object {}}
    >
      <Text
        style={Object {}}
        uppercase={false}
      >
        Residential Evil
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      last={true}
      style={Object {}}
    >
      <Text
        style={Object {}}
        uppercase={false}
      >
        Conjuring
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders ListItem noIndent 1`] = `
<View
  closeOnRowBeginSwipe={false}
  closeOnRowPress={true}
  closeOnScroll={true}
  directionalDistanceChangeThreshold={2}
  disableLeftSwipe={false}
  disableRightSwipe={false}
  leftOpenValue={0}
  previewFirstRow={false}
  recalculateHiddenLayout={false}
  rightOpenValue={0}
  style={Object {}}
  swipeToOpenPercent={50}
>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      noIndent={true}
      style={
        Array [
          Object {},
          Object {
            "backgroundColor": "#cde1f9",
          },
        ]
      }
    >
      <Text
        style={Object {}}
        uppercase={false}
      >
        Caroline Aaron
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      style={Object {}}
    >
      <Text
        style={Object {}}
        uppercase={false}
      >
        Urbino Cendre
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      style={Object {}}
    >
      <Text
        style={Object {}}
        uppercase={false}
      >
        Lee Allen
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders ListItem selected 1`] = `
<View
  closeOnRowBeginSwipe={false}
  closeOnRowPress={true}
  closeOnScroll={true}
  directionalDistanceChangeThreshold={2}
  disableLeftSwipe={false}
  disableRightSwipe={false}
  leftOpenValue={0}
  previewFirstRow={false}
  recalculateHiddenLayout={false}
  rightOpenValue={0}
  style={Object {}}
  swipeToOpenPercent={50}
>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      selected={true}
      style={Object {}}
    >
      <Text
        style={Object {}}
        uppercase={false}
      >
        Caroline Aaron
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      style={Object {}}
    >
      <Text
        style={Object {}}
        uppercase={false}
      >
        Urbino Cendre
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      style={Object {}}
    >
      <Text
        style={Object {}}
        uppercase={false}
      >
        Lee Allen
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders ListItem separator 1`] = `
<View
  closeOnRowBeginSwipe={false}
  closeOnRowPress={true}
  closeOnScroll={true}
  directionalDistanceChangeThreshold={2}
  disableLeftSwipe={false}
  disableRightSwipe={false}
  leftOpenValue={0}
  previewFirstRow={false}
  recalculateHiddenLayout={false}
  rightOpenValue={0}
  style={Object {}}
  swipeToOpenPercent={50}
>
  <View
    bordered={true}
    style={Object {}}
  >
    <Text
      style={Object {}}
      uppercase={false}
    >
      MIDFIELD
    </Text>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      style={Object {}}
    >
      <Text
        style={Object {}}
        uppercase={false}
      >
        Caroline Aaron
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      style={Object {}}
    >
      <Text
        style={Object {}}
        uppercase={false}
      >
        Urbino Cendre
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      last={true}
      style={Object {}}
    >
      <Text
        style={Object {}}
        uppercase={false}
      >
        Lee Allen
      </Text>
    </View>
  </View>
  <View
    bordered={true}
    style={Object {}}
  >
    <Text
      style={Object {}}
      uppercase={false}
    >
      MIDFIELD
    </Text>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      style={Object {}}
    >
      <Text
        style={Object {}}
        uppercase={false}
      >
        Caroline Aaron
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      style={Object {}}
    >
      <Text
        style={Object {}}
        uppercase={false}
      >
        Urbino Cendre
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={null}
  >
    <View
      last={true}
      style={Object {}}
    >
      <Text
        style={Object {}}
        uppercase={false}
      >
        Lee Allen
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders ListItem thumbnail 1`] = `
<RCTScrollView
  closeOnRowBeginSwipe={false}
  closeOnRowPress={true}
  closeOnScroll={true}
  dataArray={
    Array [
      Object {
        "img": Object {
          "testUri": "../../../__tests__/assets/pratik.png",
        },
        "note": "Its time to build a difference . .",
        "text": "Kumar Pratik",
      },
      Object {
        "img": Object {
          "testUri": "../../../__tests__/assets/sanket.png",
        },
        "note": "One needs courage to be happy and smiling all time . . ",
        "text": "Kumar Sanket",
      },
    ]
  }
  dataSource={
    ListViewDataSource {
      "items": 2,
    }
  }
  directionalDistanceChangeThreshold={2}
  disableLeftSwipe={false}
  disableRightSwipe={false}
  enableEmptySections={true}
  leftOpenValue={0}
  previewFirstRow={false}
  recalculateHiddenLayout={false}
  renderRow={[Function]}
  renderScrollComponent={[Function]}
  rightOpenValue={0}
  style={Object {}}
  swipeToOpenPercent={50}
>
  <View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={null}
    >
      <View
        style={Object {}}
        thumbnail={true}
      >
        <View
          style={Object {}}
        >
          <Image
            size={55}
            source={
              Object {
                "testUri": "../../../__tests__/assets/pratik.png",
              }
            }
            square={true}
            style={Object {}}
          />
        </View>
        <View
          style={Object {}}
        >
          <Text
            style={Object {}}
            uppercase={false}
          >
            Kumar Pratik
          </Text>
          <Text
            note={true}
            numberOfLines={1}
            style={Object {}}
            uppercase={false}
          >
            Its time to build a difference . .
          </Text>
        </View>
        <View
          style={Object {}}
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "borderRadius": 2,
                "opacity": 1,
              }
            }
          >
            <Text
              style={Object {}}
              uppercase={false}
            >
              View
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={null}
    >
      <View
        style={Object {}}
        thumbnail={true}
      >
        <View
          style={Object {}}
        >
          <Image
            size={55}
            source={
              Object {
                "testUri": "../../../__tests__/assets/sanket.png",
              }
            }
            square={true}
            style={Object {}}
          />
        </View>
        <View
          style={Object {}}
        >
          <Text
            style={Object {}}
            uppercase={false}
          >
            Kumar Sanket
          </Text>
          <Text
            note={true}
            numberOfLines={1}
            style={Object {}}
            uppercase={false}
          >
            One needs courage to be happy and smiling all time . . 
          </Text>
        </View>
        <View
          style={Object {}}
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "borderRadius": 2,
                "opacity": 1,
              }
            }
          >
            <Text
              style={Object {}}
              uppercase={false}
            >
              View
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
